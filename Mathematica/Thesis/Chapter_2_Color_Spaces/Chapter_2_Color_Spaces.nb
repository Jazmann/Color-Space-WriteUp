(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    553316,      13947]
NotebookOptionsPosition[    537945,      13530]
NotebookOutlinePosition[    541793,      13640]
CellTagsIndexPosition[    540844,      13613]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Color Spaces and Information Storage for Computer Vision Processing \
\>", "Chapter",
 CellChangeTimes->{3.633112870092998*^9}],

Cell[CellGroupData[{

Cell["Constructing a New Color Space  ", "Section",
 CellChangeTimes->{3.633112883268569*^9},
 CellTags->"sec:ConstructingANewColorSpace"],

Cell["\<\
In order to construct a new color space, we need to consider the coordinate \
system of the new color space, the orientation of the new color space, and \
the fidelity of the discrete representation of the axes. \
\>", "Text"],

Cell["\<\
The first consideration is most easily decided; because there\
\[CloseCurlyQuote]s little obvious advantage otherwise, we choose a Cartesean \
coordinate system as this allows for a straightforward transformation \
involving only rotation, translation and scaling. Because \
we\[CloseCurlyQuote]re interested in the color information in the image, it\
\[CloseCurlyQuote]s useful to design the color space so there is a luminosity \
axis. This choice determines two of three rotational degrees of freedom, as \
will be discussed below. \
\>", "Text"],

Cell["\<\
As for the discrete representation of the axes, it\[CloseCurlyQuote]s desired \
that all the information captured pertaining to a hand should be preserved; \
all other information is irrelevant. However, here we\[CloseCurlyQuote]ll \
consider only the effect of a rotation and scaling on the discrete \
representation. \
\>", "Text"],

Cell[CellGroupData[{

Cell["Camera RGB and Normalization for Discrete Range  ", "Subsection",
 CellChangeTimes->{3.633112898434314*^9},
 CellTags->"sec:CameraRGB"],

Cell["\<\
Due to the iPhone hardware being locked down at the application level, we do \
not have access to the raw camera feed. We do, however, have access to the \
post\[Hyphen]processing (color\[Hyphen]rebalanced and white\[Hyphen]point\
\[Hyphen]corrected) 8\[Hyphen]bit RGB image data. \
\>", "Text"],

Cell["\<\
Because we\[CloseCurlyQuote]re searching for particular points in the real \
color space \[LongDash] which, being a continuous function, is infinite \
dimensional \[LongDash] there is a possibility in the future that larger \
multi\[Hyphen]channel color spaces will be much more common, such as the 8\
\[Hyphen]channel color spaces currently in development. Though most such \
cameras are primarily designed for post\[Hyphen]production editing for still \
pictures and film (e.g. changing the lighting independent of the scene), as \
well as visual effects, the possibilities for computer vision are exciting. \
However, computer vision tasks are computationally intensive, and more often \
than not require operation in real time, so there is a natural inclination to \
shy away from large data sets in practical computer vision applications; many \
tasks are done in grayscale or single\[Hyphen]channel processing to expedite \
the process. \
\>", "Text"],

Cell["\<\
As such, there is a need to develop techniques which keep the relevant \
information while quickly and efficiently discarding the irrelevant \
information. This is true for the RGB space at the moment, and the aim of \
this first part of the work. \
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotation Matrix ", "Subsection",
 CellChangeTimes->{{3.6331194175907183`*^9, 3.633119433418542*^9}}],

Cell["\<\
 Any rotation about an axis can be represented by a 3x3 square matrix in a 3D \
space. Since they are invertible, they\[CloseCurlyQuote]re guaranteed to be \
non\[Hyphen]singular. However, as there are many ways in which to rotate an \
object from one position to another, or use a combination of different \
rotations to get to the same point, they aren\[CloseCurlyQuote]t necessarily \
unique. For this application, we require rotation about three different axes, \
which can be expressed thus: \
\>", "Text",
 CellChangeTimes->{{3.633119408988227*^9, 3.633119438088511*^9}},
 CellTags->"sec:RotationMatrix"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ShowFun", "[", 
  RowBox[{"RotationMatrixX", "[", "\[Alpha]", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowFun", "[", 
  RowBox[{"RotationMatrixY", "[", "\[Beta]", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowFun", "[", 
  RowBox[{"RotationMatrixZ", "[", "\[Gamma]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.633165707385957*^9, 3.6331657370194387`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(X\\)]\\)\"", TraditionalForm], 
         TraditionalForm, Editable -> True], TraditionalForm], "(", 
       "\"\[Alpha]\"", ")"}], TraditionalForm], TraditionalForm, Editable -> 
    True],"\" = \"",TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{"1", "0", "0"}, {"0", 
          RowBox[{"cos", "(", "\[Alpha]", ")"}], 
          RowBox[{"sin", "(", "\[Alpha]", ")"}]}, {"0", 
          RowBox[{"-", 
            RowBox[{"sin", "(", "\[Alpha]", ")"}]}], 
          RowBox[{"cos", "(", "\[Alpha]", ")"}]}}, RowSpacings -> 1, 
        ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
        Center], "\[NoBreak]", ")"}], TraditionalForm], TraditionalForm, 
    Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.633165776232999*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(Y\\)]\\)\"", TraditionalForm], 
         TraditionalForm, Editable -> True], TraditionalForm], "(", 
       "\"\[Beta]\"", ")"}], TraditionalForm], TraditionalForm, Editable -> 
    True],"\" = \"",TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{
          RowBox[{"cos", "(", "\[Beta]", ")"}], "0", 
          RowBox[{"-", 
            RowBox[{"sin", "(", "\[Beta]", ")"}]}]}, {"0", "1", "0"}, {
          RowBox[{"sin", "(", "\[Beta]", ")"}], "0", 
          RowBox[{"cos", "(", "\[Beta]", ")"}]}}, RowSpacings -> 1, 
        ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
        Center], "\[NoBreak]", ")"}], TraditionalForm], TraditionalForm, 
    Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.6331657762401333`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(Z\\)]\\)\"", TraditionalForm], 
         TraditionalForm, Editable -> True], TraditionalForm], "(", 
       "\"\[Gamma]\"", ")"}], TraditionalForm], TraditionalForm, Editable -> 
    True],"\" = \"",TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{
          RowBox[{"cos", "(", "\[Gamma]", ")"}], 
          RowBox[{"sin", "(", "\[Gamma]", ")"}], "0"}, {
          RowBox[{"-", 
            RowBox[{"sin", "(", "\[Gamma]", ")"}]}], 
          RowBox[{"cos", "(", "\[Gamma]", ")"}], "0"}, {"0", "0", "1"}}, 
        RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
        ColumnAlignments -> Center], "\[NoBreak]", ")"}], TraditionalForm], 
    TraditionalForm, Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.633165776247243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RotationMatrixX", "[", "\[Alpha]", "]"}], "]"}], ",", 
    "\"\<.\>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RotationMatrixZ", "[", "\[Gamma]", "]"}], "]"}], ",", 
    "\"\<.\>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RotationMatrixY", "[", "\[Beta]", "]"}], "]"}], ",", 
    "\"\< =\>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RotationMatrixXYZ", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", " ", "\[Gamma]"}], "]"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.618921340458684*^9, 3.61892142155789*^9}, {
  3.618921451969487*^9, 3.618921462417124*^9}, {3.633165764271452*^9, 
  3.6331657911139383`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"1", "0", "0"}, {"0", 
         RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}, {"0", 
         RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], 
         RowBox[{"Cos", "[", "\[Alpha]", "]"}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\".\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"Cos", "[", "\[Gamma]", "]"}], 
         RowBox[{"Sin", "[", "\[Gamma]", "]"}], "0"}, {
         RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], 
         RowBox[{"Cos", "[", "\[Gamma]", "]"}], "0"}, {"0", "0", "1"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\".\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "0", 
         RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}, {"0", "1", "0"}, {
         RowBox[{"Sin", "[", "\[Beta]", "]"}], "0", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" =\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Beta]", "-", "\[Gamma]"}], "]"}], "+", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Beta]", "+", "\[Gamma]"}], "]"}]}], ")"}]}], 
         RowBox[{"Sin", "[", "\[Gamma]", "]"}], 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Beta]", "-", "\[Gamma]"}], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Beta]", "+", "\[Gamma]"}], "]"}]}], ")"}]}]}, {
         RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "-", 
               RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "+", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], 
                 "]"}]}], ")"}]}], 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Gamma]"}], "]"}], "+", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Gamma]"}], "]"}]}], ")"}]}], 
         RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], 
                   "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "+", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "+", 
               RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}, {
         RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "+", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Cos", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Gamma]"}], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Gamma]"}], "]"}]}], ")"}]}], 
         RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                   RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}],
                "-", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}],
                "+", 
               RowBox[{"Sin", "[", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], 
                 "]"}]}], ")"}]}]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.618921366781292*^9, 3.618921465255805*^9, {3.633165779519891*^9, 
   3.63316579190654*^9}}]
}, Open  ]],

Cell[TextData[{
 "Any rotation which orients the RGB color space such that one of the new \
axes lies along the luminosity direction is sufficient; a rotation which \
aligns the L axis along the luminosity direction is produced by a rotation of \
",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "4"], TraditionalForm]], "InlineFormula"],
 " about the red (",
 StyleBox["R", "TB"],
 ") axis, followed by a rotation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"arctan", 
    FractionBox["1", 
     SqrtBox["2"]]}], TraditionalForm]], "InlineFormula"],
 " about the green (",
 StyleBox["G", "TB"],
 ") axis. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"},
 CellChangeTimes->{{3.6331659019589243`*^9, 3.633165909877741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "=", "10"}], ",", 
     RowBox[{"\[Theta]", "=", "0"}], ",", "cube", ",", 
     RowBox[{"m", "=", "24"}], ",", "steps", ",", 
     RowBox[{"imgSize", "=", "500"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"cube", "=", 
      RowBox[{"RGBCubeFinite3D", "[", "n", "]"}]}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cube", "=", 
     RowBox[{"RGBCube3D", "[", 
      RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"steps", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"cube", ",", "g", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
                "0", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "0", 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
            "GraphicsCubeOpts"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "0", ",", 
            RowBox[{"Pi", "/", "4"}], ",", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"4", "m"}], ")"}]}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"cube", ",", 
                  RowBox[{"Pi", "/", "4"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
                "b", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "0", 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
            "GraphicsCubeOpts"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"1", "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "/", "m"}]}], 
           "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"cube", ",", 
                  RowBox[{"Pi", "/", "4"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"ArcTan", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "r", 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
            "GraphicsCubeOpts"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", 
            RowBox[{"Pi", "/", "4"}], ",", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"4", "m"}], ")"}]}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ListAnimate", "[", 
     RowBox[{"steps", ",", 
      RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
      RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
      RowBox[{"AnimationRate", "\[Rule]", "m"}], ",", 
      RowBox[{"AnimationDirection", "\[Rule]", "ForwardBackward"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.633161362734909*^9, 3.6331613725150003`*^9}, {
   3.6331614122827044`*^9, 3.633161426218854*^9}, {3.633161509648715*^9, 
   3.6331615669962673`*^9}, {3.633161619534438*^9, 3.63316195794207*^9}, {
   3.633162029368828*^9, 3.633162114015497*^9}, 3.6331621711302223`*^9, {
   3.633162216709898*^9, 3.6331622301564703`*^9}, {3.63316226863892*^9, 
   3.6331622733385477`*^9}, 3.6331624934654827`*^9, {3.6331625525424223`*^9, 
   3.633162580826185*^9}, {3.633162686690793*^9, 3.63316270740419*^9}, {
   3.633162762693798*^9, 3.633162787429525*^9}, {3.633162867867844*^9, 
   3.633162909888164*^9}, {3.633163115841625*^9, 3.633163140091138*^9}, {
   3.633163197221921*^9, 3.63316323823735*^9}, {3.633163276188347*^9, 
   3.633163295337884*^9}, {3.633163343295014*^9, 3.633163343632513*^9}, {
   3.6331634285456142`*^9, 3.63316347655087*^9}, {3.6331638118262463`*^9, 
   3.63316384442432*^9}, {3.633163878642356*^9, 3.6331638819837027`*^9}, {
   3.633164003725729*^9, 3.633164120019224*^9}, {3.633164196892627*^9, 
   3.6331641970683193`*^9}, {3.633165029723269*^9, 3.63316503714401*^9}, {
   3.633167390349032*^9, 3.633167405091435*^9}, {3.63316782016682*^9, 
   3.633167870031127*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i1847$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i1847$$], 1, ""}, 1, 75, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i1847$94907$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i1847$$], {1, 75, 1},
                  AnimationDirection->ForwardBackward,
                  AnimationRate->24,
                  AnimationRepetitions->1,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True,
                  PausedTime->0.]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
                    1}}], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 
                  1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 2->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 96] Pi], 0, Sin[Rational[1, 96] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[1, 96] Pi], 0, Cos[
                    Rational[1, 96] Pi]}}, {{
                    0.9994645874763657, 0, 0.03271908282177614}, {0, 1, 
                    0}, {-0.03271908282177614, 0, 0.9994645874763657}}]], {{1,
                    0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 3->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 48] Pi], 0, Sin[Rational[1, 48] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[1, 48] Pi], 0, Cos[
                    Rational[1, 48] Pi]}}, {{
                    0.9978589232386035, 0, 0.06540312923014306}, {0, 1, 
                    0}, {-0.06540312923014306, 0, 0.9978589232386035}}]], {{1,
                    0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 4->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 32] Pi], 0, Sin[Rational[1, 32] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[1, 32] Pi], 0, Cos[
                    Rational[1, 32] Pi]}}, {{
                    0.9951847266721969, 0, 0.0980171403295606}, {0, 1, 
                    0}, {-0.0980171403295606, 0, 0.9951847266721969}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 5->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 24] Pi], 0, Sin[Rational[1, 24] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[1, 24] Pi], 0, Cos[
                    Rational[1, 24] Pi]}}, {{
                    0.9914448613738104, 0, 0.13052619222005157`}, {0, 1, 
                    0}, {-0.13052619222005157`, 0, 0.9914448613738104}}]], {{
                   1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {
                  0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 6->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[5, 96] Pi], 0, Sin[Rational[5, 96] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[5, 96] Pi], 0, Cos[
                    Rational[5, 96] Pi]}}, {{
                    0.986643332084879, 0, 0.16289547339458874`}, {0, 1, 
                    0}, {-0.16289547339458874`, 0, 0.986643332084879}}]], {{1,
                    0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 7->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 16] Pi], 0, Sin[Rational[1, 16] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[1, 16] Pi], 0, Cos[
                    Rational[1, 16] Pi]}}, {{
                    0.9807852804032304, 0, 0.19509032201612825`}, {0, 1, 
                    0}, {-0.19509032201612825`, 0, 0.9807852804032304}}]], {{
                   1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {
                  0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 8->
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[7, 96] Pi], 0, Sin[Rational[7, 96] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[7, 96] Pi], 0, Cos[
                    Rational[7, 96] Pi]}}, {{
                    0.9738769792773336, 0, 0.22707626303437323`}, {0, 1, 
                    0}, {-0.22707626303437323`, 0, 0.9738769792773336}}]], {{
                   1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {
                  0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 9->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Rational[1, 2] 2^Rational[-1, 2] (1 + 3^Rational[1, 2]), 
                    0, Rational[1, 2] 
                    2^Rational[-1, 2] (-1 + 3^Rational[1, 2])}, {0, 1, 0}, {
                    Rational[-1, 2] 2^Rational[-1, 2] (-1 + 3^Rational[1, 2]),
                     0, Rational[1, 2] 
                    2^Rational[-1, 2] (1 + 3^Rational[1, 2])}}, {{
                    0.9659258262890682, 0, 0.2588190451025207}, {0, 1, 
                    0}, {-0.2588190451025207, 0, 0.9659258262890682}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 10->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[3, 32] Pi], 0, Sin[Rational[3, 32] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[3, 32] Pi], 0, Cos[
                    Rational[3, 32] Pi]}}, {{
                    0.9569403357322088, 0, 0.29028467725446233`}, {0, 1, 
                    0}, {-0.29028467725446233`, 0, 0.9569403357322088}}]], {{
                   1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {
                  0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 11->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[5, 48] Pi], 0, Sin[Rational[5, 48] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[5, 48] Pi], 0, Cos[
                    Rational[5, 48] Pi]}}, {{
                    0.9469301294951057, 0, 0.3214394653031616}, {0, 1, 
                    0}, {-0.3214394653031616, 0, 0.9469301294951057}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 12->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[11, 96] Pi], 0, Sin[Rational[11, 96] Pi]}, {
                    0, 1, 0}, {-Sin[Rational[11, 96] Pi], 0, Cos[
                    Rational[11, 96] Pi]}}, {{
                    0.9359059267573258, 0, 0.3522500479212335}, {0, 1, 
                    0}, {-0.3522500479212335, 0, 0.9359059267573258}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 13->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[1, 8] Pi], 0, Sin[Rational[1, 8] Pi]}, {0, 1,
                     0}, {-Sin[Rational[1, 8] Pi], 0, Cos[
                    Rational[1, 8] Pi]}}, {{
                    0.9238795325112867, 0, 0.3826834323650898}, {0, 1, 
                    0}, {-0.3826834323650898, 0, 0.9238795325112867}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 14->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[13, 96] Pi], 0, Sin[Rational[13, 96] Pi]}, {
                    0, 1, 0}, {-Sin[Rational[13, 96] Pi], 0, Cos[
                    Rational[13, 96] Pi]}}, {{
                    0.9108638249211758, 0, 0.41270702980439467`}, {0, 1, 
                    0}, {-0.41270702980439467`, 0, 0.9108638249211758}}]], {{
                   1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {
                  0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 15->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[7, 48] Pi], 0, Sin[Rational[7, 48] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[7, 48] Pi], 0, Cos[
                    Rational[7, 48] Pi]}}, {{
                    0.8968727415326883, 0, 0.4422886902190013}, {0, 1, 
                    0}, {-0.4422886902190013, 0, 0.8968727415326883}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 16->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[5, 32] Pi], 0, Sin[Rational[5, 32] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[5, 32] Pi], 0, Cos[
                    Rational[5, 32] Pi]}}, {{
                    0.881921264348355, 0, 0.47139673682599764`}, {0, 1, 
                    0}, {-0.47139673682599764`, 0, 0.881921264348355}}]], {{1,
                    0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 17->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Rational[1, 2] 3^Rational[1, 2], 0, Rational[1, 2]}, {0, 
                    1, 0}, {
                    Rational[-1, 2], 0, Rational[1, 2] 3^Rational[1, 2]}}, {{
                    0.8660254037844386, 0, 0.5}, {0, 1, 
                    0}, {-0.5, 0, 0.8660254037844386}}]], {{1, 0, 0}, {0, 1, 
                   0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 18->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[17, 96] Pi], 0, Sin[Rational[17, 96] Pi]}, {
                    0, 1, 0}, {-Sin[Rational[17, 96] Pi], 0, Cos[
                    Rational[17, 96] Pi]}}, {{
                    0.8492021815265789, 0, 0.528067850650368}, {0, 1, 
                    0}, {-0.528067850650368, 0, 0.8492021815265789}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 19->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[3, 16] Pi], 0, Sin[Rational[3, 16] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[3, 16] Pi], 0, Cos[
                    Rational[3, 16] Pi]}}, {{
                    0.8314696123025452, 0, 0.5555702330196022}, {0, 1, 
                    0}, {-0.5555702330196022, 0, 0.8314696123025452}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 20->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[19, 96] Pi], 0, Sin[Rational[19, 96] Pi]}, {
                    0, 1, 0}, {-Sin[Rational[19, 96] Pi], 0, Cos[
                    Rational[19, 96] Pi]}}, {{
                    0.8128466845916152, 0, 0.5824776968678022}, {0, 1, 
                    0}, {-0.5824776968678022, 0, 0.8128466845916152}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 21->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[5, 24] Pi], 0, Sin[Rational[5, 24] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[5, 24] Pi], 0, Cos[
                    Rational[5, 24] Pi]}}, {{
                    0.7933533402912352, 0, 0.6087614290087207}, {0, 1, 
                    0}, {-0.6087614290087207, 0, 0.7933533402912352}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 22->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[7, 32] Pi], 0, Sin[Rational[7, 32] Pi]}, {0, 
                    1, 0}, {-Sin[Rational[7, 32] Pi], 0, Cos[
                    Rational[7, 32] Pi]}}, {{
                    0.773010453362737, 0, 0.6343932841636455}, {0, 1, 
                    0}, {-0.6343932841636455, 0, 0.773010453362737}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 23->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[11, 48] Pi], 0, Sin[Rational[11, 48] Pi]}, {
                    0, 1, 0}, {-Sin[Rational[11, 48] Pi], 0, Cos[
                    Rational[11, 48] Pi]}}, {{
                    0.7518398074789774, 0, 0.6593458151000688}, {0, 1, 
                    0}, {-0.6593458151000688, 0, 0.7518398074789774}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 24->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{
                    Cos[Rational[23, 96] Pi], 0, Sin[Rational[23, 96] Pi]}, {
                    0, 1, 
                    0}, {-Sin[Rational[23, 96] Pi], 0, Cos[
                    Rational[23, 96] Pi]}}, {{
                    0.7298640726978356, 0, 0.6835923020228712}, {0, 1, 
                    0}, {-0.6835923020228712, 0, 0.7298640726978356}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 25->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 26->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], {{1, 
                   0, 0}, {0, 1, 0}, {0, 0, 1}}], {{1, 0, 0}, {0, 1, 0}, {0, 
                  0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 27->
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9996711853202269, 0.025642176983488342`, 
                    0}, {-0.025642176983488342`, 0.9996711853202269, 0}, {0, 
                    0, 1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 28->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 12] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 12] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 12] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 12] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9986849575190949, 0.05126749091854966, 
                    0}, {-0.05126749091854966, 0.9986849575190949, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 29->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 8] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 8] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 8] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 8] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9970419651689613, 0.07685908984639268, 
                    0}, {-0.07685908984639268, 0.9970419651689613, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 30->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 6] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 6] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 6] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 6] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9947432887498329, 0.10240014398020471`, 
                    0}, {-0.10240014398020471`, 0.9947432887498329, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 31->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[5, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[5, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[5, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[5, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9917904399388111, 0.1278738567729136, 
                    0}, {-0.1278738567729136, 0.9917904399388111, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 32->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 4] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 4] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 4] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 4] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9881853606159683, 0.15326347596309023`, 
                    0}, {-0.15326347596309023`, 0.9881853606159683, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 33->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[7, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[7, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[7, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[7, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9839304215873107, 0.17855230459172744`, 
                    0}, {-0.17855230459172744`, 0.9839304215873107, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 34->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 3] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 3] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 3] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 3] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9790284210256667, 0.20372371198265046`, 
                    0}, {-0.20372371198265046`, 0.9790284210256667, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 35->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[3, 8] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[3, 8] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[3, 8] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[3, 8] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9734825826305261, 0.22876114467933797`, 
                    0}, {-0.22876114467933797`, 0.9734825826305261, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 36->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[5, 12] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[5, 12] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[5, 12] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[5, 12] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9672965535080408, 0.25364813733096103`, 
                    0}, {-0.25364813733096103`, 0.9672965535080408, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 37->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[11, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[11, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[11, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[11, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9604744017725807, 0.27836832352048096`, 
                    0}, {-0.27836832352048096`, 0.9604744017725807, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 38->
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[1, 2] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[1, 2] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[1, 2] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[1, 2] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9530206138714226, 0.3029054465276862, 
                    0}, {-0.3029054465276862, 0.9530206138714226, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 39->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[13, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[13, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[13, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[13, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9449400916343298, 0.32724337002008835`, 
                    0}, {-0.32724337002008835`, 0.9449400916343298, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 40->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[7, 12] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[7, 12] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[7, 12] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[7, 12] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9362381490499659, 0.3513660886646486, 
                    0}, {-0.3513660886646486, 0.9362381490499659, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 41->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[5, 8] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[5, 8] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[5, 8] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[5, 8] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9269205087712598, 0.37525773865335393`, 
                    0}, {-0.37525773865335393`, 0.9269205087712598, 0}, {0, 0,
                     1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 42->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[2, 3] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[2, 3] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[2, 3] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[2, 3] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9169932983520201, 0.3989026081357239, 
                    0}, {-0.3989026081357239, 0.9169932983520201, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 43->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[17, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[17, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[17, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[17, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.9064630462172771, 0.4222851475513844, 
                    0}, {-0.4222851475513844, 0.9064630462172771, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 44->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[3, 4] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[3, 4] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[3, 4] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[3, 4] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.895336677369998, 0.4453899798559147, 
                    0}, {-0.4453899798559147, 0.895336677369998, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 45->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[19, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[19, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[19, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[19, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.8836215088370019, 0.4682019106332441, 
                    0}, {-0.4682019106332441, 0.8836215088370019, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 46->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[5, 6] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[5, 6] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[5, 6] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[5, 6] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.8713252448570679, 0.4907059380879456, 
                    0}, {-0.4907059380879456, 0.8713252448570679, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 47->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[7, 8] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[7, 8] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[7, 8] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[7, 8] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.8584559718144023, 0.5128872629108567, 
                    0}, {-0.5128872629108567, 0.8584559718144023, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 48->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[11, 12] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[11, 12] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[11, 12] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[11, 12] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.8450221529207937, 0.5347312980115403, 
                    0}, {-0.5347312980115403, 0.8450221529207937, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 49->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Cos[Rational[23, 24] ArcTan[2^Rational[-1, 2]]], Sin[
                    Rational[23, 24] ArcTan[2^Rational[-1, 2]]], 0}, {-
                    Sin[Rational[23, 24] ArcTan[2^Rational[-1, 2]]], Cos[
                    Rational[23, 24] ArcTan[2^Rational[-1, 2]]], 0}, {0, 0, 
                    1}}, {{0.8310326226499575, 0.5562236781111833, 
                    0}, {-0.5562236781111833, 0.8310326226499575, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 50->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 51->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 52->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 96] Pi], -Sin[Rational[1, 96] Pi]}, {
                    0, Sin[Rational[1, 96] Pi], Cos[Rational[1, 96] Pi]}}, {{
                    1, 0, 0}, {0, 0.9994645874763657, -0.03271908282177614}, {
                    0, 0.03271908282177614, 0.9994645874763657}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 53->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 48] Pi], -Sin[Rational[1, 48] Pi]}, {
                    0, Sin[Rational[1, 48] Pi], Cos[Rational[1, 48] Pi]}}, {{
                    1, 0, 0}, {0, 0.9978589232386035, -0.06540312923014306}, {
                    0, 0.06540312923014306, 0.9978589232386035}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 54->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 32] Pi], -Sin[Rational[1, 32] Pi]}, {
                    0, Sin[Rational[1, 32] Pi], Cos[Rational[1, 32] Pi]}}, {{
                    1, 0, 0}, {0, 0.9951847266721969, -0.0980171403295606}, {
                    0, 0.0980171403295606, 0.9951847266721969}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 55->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 24] Pi], -Sin[Rational[1, 24] Pi]}, {
                    0, Sin[Rational[1, 24] Pi], Cos[Rational[1, 24] Pi]}}, {{
                    1, 0, 0}, {
                    0, 0.9914448613738104, -0.13052619222005157`}, {
                    0, 0.13052619222005157`, 0.9914448613738104}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 56->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[5, 96] Pi], -Sin[Rational[5, 96] Pi]}, {
                    0, Sin[Rational[5, 96] Pi], Cos[Rational[5, 96] Pi]}}, {{
                    1, 0, 0}, {0, 0.986643332084879, -0.16289547339458874`}, {
                    0, 0.16289547339458874`, 0.986643332084879}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 57->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 16] Pi], -Sin[Rational[1, 16] Pi]}, {
                    0, Sin[Rational[1, 16] Pi], Cos[Rational[1, 16] Pi]}}, {{
                    1, 0, 0}, {
                    0, 0.9807852804032304, -0.19509032201612825`}, {
                    0, 0.19509032201612825`, 0.9807852804032304}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 58->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[7, 96] Pi], -Sin[Rational[7, 96] Pi]}, {
                    0, Sin[Rational[7, 96] Pi], Cos[Rational[7, 96] Pi]}}, {{
                    1, 0, 0}, {
                    0, 0.9738769792773336, -0.22707626303437323`}, {
                    0, 0.22707626303437323`, 0.9738769792773336}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 59->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Rational[1, 2] 
                    2^Rational[-1, 2] (1 + 3^Rational[1, 2]), Rational[-1, 2] 
                    2^Rational[-1, 2] (-1 + 3^Rational[1, 2])}, {
                    0, Rational[1, 2] 
                    2^Rational[-1, 2] (-1 + 3^Rational[1, 2]), Rational[1, 2] 
                    2^Rational[-1, 2] (1 + 3^Rational[1, 2])}}, {{1, 0, 0}, {
                    0, 0.9659258262890682, -0.2588190451025207}, {
                    0, 0.2588190451025207, 0.9659258262890682}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 60->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[3, 32] Pi], -Sin[Rational[3, 32] Pi]}, {
                    0, Sin[Rational[3, 32] Pi], Cos[Rational[3, 32] Pi]}}, {{
                    1, 0, 0}, {
                    0, 0.9569403357322088, -0.29028467725446233`}, {
                    0, 0.29028467725446233`, 0.9569403357322088}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 61->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[5, 48] Pi], -Sin[Rational[5, 48] Pi]}, {
                    0, Sin[Rational[5, 48] Pi], Cos[Rational[5, 48] Pi]}}, {{
                    1, 0, 0}, {0, 0.9469301294951057, -0.3214394653031616}, {
                    0, 0.3214394653031616, 0.9469301294951057}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 62->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[11, 96] Pi], -Sin[Rational[11, 96] Pi]}, {
                    0, Sin[Rational[11, 96] Pi], Cos[
                    Rational[11, 96] Pi]}}, {{1, 0, 0}, {
                    0, 0.9359059267573258, -0.3522500479212335}, {
                    0, 0.3522500479212335, 0.9359059267573258}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 63->
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {
                    0, Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}}, {{1, 
                    0, 0}, {0, 0.9238795325112867, -0.3826834323650898}, {
                    0, 0.3826834323650898, 0.9238795325112867}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 64->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[13, 96] Pi], -Sin[Rational[13, 96] Pi]}, {
                    0, Sin[Rational[13, 96] Pi], Cos[
                    Rational[13, 96] Pi]}}, {{1, 0, 0}, {
                    0, 0.9108638249211758, -0.41270702980439467`}, {
                    0, 0.41270702980439467`, 0.9108638249211758}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 65->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[7, 48] Pi], -Sin[Rational[7, 48] Pi]}, {
                    0, Sin[Rational[7, 48] Pi], Cos[Rational[7, 48] Pi]}}, {{
                    1, 0, 0}, {0, 0.8968727415326883, -0.4422886902190013}, {
                    0, 0.4422886902190013, 0.8968727415326883}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 66->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[5, 32] Pi], -Sin[Rational[5, 32] Pi]}, {
                    0, Sin[Rational[5, 32] Pi], Cos[Rational[5, 32] Pi]}}, {{
                    1, 0, 0}, {0, 0.881921264348355, -0.47139673682599764`}, {
                    0, 0.47139673682599764`, 0.881921264348355}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 67->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
                    0, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{1,
                     0, 0}, {0, 0.8660254037844386, -0.5}, {
                    0, 0.5, 0.8660254037844386}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 68->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[17, 96] Pi], -Sin[Rational[17, 96] Pi]}, {
                    0, Sin[Rational[17, 96] Pi], Cos[
                    Rational[17, 96] Pi]}}, {{1, 0, 0}, {
                    0, 0.8492021815265789, -0.528067850650368}, {
                    0, 0.528067850650368, 0.8492021815265789}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 69->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[3, 16] Pi], -Sin[Rational[3, 16] Pi]}, {
                    0, Sin[Rational[3, 16] Pi], Cos[Rational[3, 16] Pi]}}, {{
                    1, 0, 0}, {0, 0.8314696123025452, -0.5555702330196022}, {
                    0, 0.5555702330196022, 0.8314696123025452}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 70->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[19, 96] Pi], -Sin[Rational[19, 96] Pi]}, {
                    0, Sin[Rational[19, 96] Pi], Cos[
                    Rational[19, 96] Pi]}}, {{1, 0, 0}, {
                    0, 0.8128466845916152, -0.5824776968678022}, {
                    0, 0.5824776968678022, 0.8128466845916152}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 71->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[5, 24] Pi], -Sin[Rational[5, 24] Pi]}, {
                    0, Sin[Rational[5, 24] Pi], Cos[Rational[5, 24] Pi]}}, {{
                    1, 0, 0}, {0, 0.7933533402912352, -0.6087614290087207}, {
                    0, 0.6087614290087207, 0.7933533402912352}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 72->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[7, 32] Pi], -Sin[Rational[7, 32] Pi]}, {
                    0, Sin[Rational[7, 32] Pi], Cos[Rational[7, 32] Pi]}}, {{
                    1, 0, 0}, {0, 0.773010453362737, -0.6343932841636455}, {
                    0, 0.6343932841636455, 0.773010453362737}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 73->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[11, 48] Pi], -Sin[Rational[11, 48] Pi]}, {
                    0, Sin[Rational[11, 48] Pi], Cos[
                    Rational[11, 48] Pi]}}, {{1, 0, 0}, {
                    0, 0.7518398074789774, -0.6593458151000688}, {
                    0, 0.6593458151000688, 0.7518398074789774}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 74->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, Cos[Rational[23, 96] Pi], -Sin[Rational[23, 96] Pi]}, {
                    0, Sin[Rational[23, 96] Pi], Cos[
                    Rational[23, 96] Pi]}}, {{1, 0, 0}, {
                    0, 0.7298640726978356, -0.6835923020228712}, {
                    0, 0.6835923020228712, 0.7298640726978356}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}], 75->
                
                Graphics3DBox[
                 GeometricTransformation3DBox[
                  GeometricTransformation3DBox[
                   GeometricTransformation3DBox[{
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0]}], 
                    Polygon3DBox[{{0, 1, 1}, {0, 0, 1}, {1, 0, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1], 
                    RGBColor[1, 0, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 1], 
                    RGBColor[0, 0, 1]}], 
                    Polygon3DBox[{{1, 0, 0}, {1, 1, 0}, {1, 1, 1}, {1, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 1, 0], 
                    RGBColor[1, 1, 1], 
                    RGBColor[1, 0, 1]}], 
                    Polygon3DBox[{{1, 1, 0}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}},
                    
                    VertexColors->{
                    RGBColor[1, 1, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[1, 1, 1]}], 
                    Polygon3DBox[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}},
                    
                    VertexColors->{
                    RGBColor[0, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 1, 1], 
                    RGBColor[0, 0, 1]}]}, 
                    NCache[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {0, 1, 
                    0}, {-2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{
                    0.7071067811865475, 0, 0.7071067811865475}, {0, 1, 
                    0}, {-0.7071067811865475, 0, 0.7071067811865475}}]], 
                   NCache[{{
                    Rational[2, 3]^Rational[1, 2], 3^Rational[-1, 2], 
                    0}, {-3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2], 
                    0}, {0, 0, 1}}, {{
                    0.816496580927726, 0.5773502691896258, 
                    0}, {-0.5773502691896258, 0.816496580927726, 0}, {0, 0, 
                    1}}]], NCache[{{1, 0, 0}, {
                    0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0}, {
                    0, 0.7071067811865475, -0.7071067811865475}, {
                    0, 0.7071067811865475, 0.7071067811865475}}]],
                 Axes->True,
                 AxesLabel->{
                   FormBox["\"Luminosity\"", TraditionalForm], 
                   FormBox["\"Chrom a\"", TraditionalForm], 
                   FormBox["\"Chrom b\"", TraditionalForm]},
                 ImageSize->500,
                 Lighting->"Neutral",
                 
                 PlotRange->
                  NCache[{{0, 3^Rational[1, 2]}, {-1, 1}, {-1, 1}}, {{
                    0, 1.7320508075688772`}, {-1, 1}, {-1, 1}}],
                 ViewVertical->{1, 0, 0}]}, Dynamic[$CellContext`i1847$$],
                Alignment->Automatic,
                ImageSize->All],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        CurrentValue["SelectionOver"], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i1847$$, \
$CellContext`i1847$94907$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 75, 1}, 75, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{533., {239.384033203125, 245.115966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.633163241986704*^9, {3.6331632824274883`*^9, 3.633163298850753*^9}, 
   3.633163348085375*^9, 3.6331634810848513`*^9, 3.633163854099971*^9, 
   3.6331638864540577`*^9, 3.633164064389372*^9, 3.6331641419346857`*^9, 
   3.6331650430322447`*^9, 3.633167409075786*^9, 3.633167772529633*^9, 
   3.633167872517857*^9}]
}, Open  ]],

Cell["\<\
This leaves one free rotational degree of freedom about the L axis. The \
resulting rotation matrix is given by:  \
\>", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"},
 CellChangeTimes->{{3.6331659019589243`*^9, 3.6331659165710917`*^9}}],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowFun", "[", 
  RowBox[{"RotationMatrixLCaCb", "[", "\[Theta]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.633165947446987*^9, 3.633165952343926*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox[
         "\"\\!\\(\\*\\nStyleBox[\\\"R\\\",\\nFontWeight->\\\"Bold\\\"]\\)\"",
           TraditionalForm], TraditionalForm, Editable -> True], 
        TraditionalForm], "(", "\"\[Theta]\"", ")"}], TraditionalForm], 
    TraditionalForm, Editable -> True],"\" = \"",TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{
          FractionBox["1", 
           SqrtBox["3"]], 
          FractionBox["1", 
           SqrtBox["3"]], 
          FractionBox["1", 
           SqrtBox["3"]]}, {
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"sin", "(", 
              RowBox[{"\[Theta]", "+", 
                FractionBox["\[Pi]", "6"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], 
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"sin", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], ")"}]}]}, {
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"cos", "(", 
              RowBox[{"\[Theta]", "+", 
                FractionBox["\[Pi]", "6"]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"sin", "(", "\[Theta]", ")"}]}], 
          RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"cos", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], ")"}]}]}}, 
        RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
        ColumnAlignments -> Center], "\[NoBreak]", ")"}], TraditionalForm], 
    TraditionalForm, Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.63316595378712*^9}]
}, Open  ]],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " is the remaining rotational degree of freedom. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "Using the standard rotation matrices, we get a luminosity axis which spans \
the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", 
    SqrtBox["3"]}], TraditionalForm]], "InlineFormula"],
 ". However, the length of the two remaining axes are dependent on the value \
of ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " used. This is a problem because, ultimately, we want the axes to fit in a \
range of an appropriate data type. It would be more useful to have a matrix \
which provided the specified rotation and scaled the axis to known lengths. \
In the case of the luminosity, this is straightforward; simply divide by ",
 Cell[BoxData[
  FormBox[
   SqrtBox["3"], TraditionalForm]], "InlineFormula"],
 ". In the case of the other two axes, we need an explicit form for the \
lengths of the axis resulting from the rotation. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "Because the absolute values of the axes in the color space have no meaning, \
we\[CloseCurlyQuote]re only interested in the position along the axis \
relative to its start and end, equivalent to talking about the position in \
the axis relative to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "1"}], TraditionalForm]], "InlineFormula"],
 ", compared to about ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "255"}], TraditionalForm]], "InlineFormula"],
 " in unsigned, 8\[Hyphen]bit integers. The upside is that if we\
\[CloseCurlyQuote]re rotating the cube about its corner, \
we\[CloseCurlyQuote]re interested in the minimum and maximum values possible \
along the new axis direction, which will correspond to a corner of the RGB \
cube. With the L axis aligned along the luminosity direction, the range of \
the L axis is 0 to ",
 Cell[BoxData[
  FormBox[
   SqrtBox["3"], TraditionalForm]], "InlineFormula"],
 ". The x and y axes are symmetrical, spanning a range centered on 0. The \
range of their values is dependent upon the remaining degree of freedom. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "We need to know, in each of the axes, how far out each point is. Because we\
\[CloseCurlyQuote]re effectively rotating a hexagon, whatever the answer is, \
we know the function is going to be periodic, repeating every ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "3"], TraditionalForm]], "InlineFormula"],
 " radians, so we only have to solve it in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", 
    FractionBox["\[Pi]", "3"]}], TraditionalForm]], "InlineFormula"],
 " region and then generalize. First we take the coordinates of the RGB cube \
and perform the rotation to find the values in the new color space. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"LCaCb", "[", "\[Theta]", "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", "RGBCube", "]"}]}], ",", "\"\<=\>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"TrigFactor", ",", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigFactor", "[", 
         RowBox[{
          RowBox[{"LCaCb", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], 
         "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"iLCaCb", "[", "\[Theta]", "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{
      RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", "]"}], 
     "]"}]}], ",", "\"\<=\>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"TrigFactor", ",", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigFactor", "[", 
         RowBox[{
          RowBox[{"iLCaCb", "[", "\[Theta]", "]"}], ".", " ", 
          RowBox[{
           RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", 
           "]"}]}], "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596031389628778*^9, 3.596031398491406*^9}, {
   3.596031810629077*^9, 3.596031882107218*^9}, {3.5973413196459875`*^9, 
   3.5973413235732117`*^9}, {3.5982596858886547`*^9, 3.598259692780513*^9}, {
   3.5982611313576813`*^9, 3.5982611711710033`*^9}, {3.606116117906073*^9, 
   3.6061161276026278`*^9}, {3.606116178667548*^9, 3.60611618568995*^9}, {
   3.6061166608111258`*^9, 3.606116663050254*^9}, {3.6061169512347364`*^9, 
   3.606116965682563*^9}, {3.6061170335954475`*^9, 3.6061170379946995`*^9}, {
   3.6061170879635572`*^9, 3.6061170925868216`*^9}, 3.6061171741874886`*^9, {
   3.6074170012582407`*^9, 3.6074170105624247`*^9}, {3.617454244196381*^9, 
   3.6174542505144444`*^9}, {3.618932583583475*^9, 3.6189325836831903`*^9}, {
   3.632830501770235*^9, 3.632830505211205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1", "1", "0", "0", "0", "1", "1"},
        {"0", "0", "1", "1", "1", "0", "0", "1"},
        {"0", "0", "0", "0", "1", "1", "1", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        SqrtBox["3"]},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$, 1]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], 3^Rational[-1, 2], 3^
       Rational[-1, 2]}, {(-Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[$CellContext`\[Theta]], (-Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]]}, {(-
        Rational[2, 3]^Rational[1, 2]) 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) Sin[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]]}}], 
    MatrixForm[{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, 1, 1, 1, 0, 0, 1}, {0, 0, 0, 
     0, 1, 1, 1, 1}}]], "=", 
   MatrixForm[{{
     0, 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^Rational[-1, 2], 2 
      3^Rational[-1, 2], 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^
      Rational[1, 2]}, {
     0, (-Rational[2, 3]^Rational[1, 2]) 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
       Rational[2, 3]^Rational[1, 2]) 
      Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], (-
       Rational[2, 3]^Rational[1, 2]) Cos[$CellContext`\[Theta]], 0}, {
     0, (-Rational[2, 3]^Rational[1, 2]) 
      Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
       Rational[2, 3]^Rational[1, 2]) 
      Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], (-
       Rational[2, 3]^Rational[1, 2]) Sin[$CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 0}}, 1]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.596031883014731*^9, 3.5962156989828453`*^9, 3.5962170412168503`*^9, 
   3.5967656249304237`*^9, 3.5971350868418283`*^9, 3.5973158513472843`*^9, 
   3.598099812502405*^9, 3.59814455154566*^9, {3.59826114412899*^9, 
   3.598261172187111*^9}, 3.6061161288156967`*^9, 3.6061161875480566`*^9, 
   3.606116543460413*^9, 3.6061165809045553`*^9, 3.6061166644503336`*^9, 
   3.606116966924634*^9, 3.606117042221941*^9, 3.6061170934868727`*^9, 
   3.6061171752135477`*^9, 3.6074164676790648`*^9, 3.6074170133592873`*^9, 
   3.60741902680997*^9, {3.607419059341173*^9, 3.6074190801041317`*^9}, 
   3.607419526424658*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         SqrtBox["3"]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "1", "0", "0", "0", "1", "1"},
       {"0", "0", "1", "1", "1", "0", "0", "1"},
       {"0", "0", "0", "0", "1", "1", "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$, 1]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], (-Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]]}, {
      3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2] 
       Cos[$CellContext`\[Theta]], (-Rational[2, 3]^Rational[1, 2]) 
       Sin[$CellContext`\[Theta]]}, {
      3^Rational[-1, 2], (-Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]]}}], 
    MatrixForm[{{
      0, 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^Rational[-1, 2], 2 
       3^Rational[-1, 2], 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^
       Rational[1, 2]}, {
      0, (-Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) Cos[$CellContext`\[Theta]], 0}, {
      0, (-Rational[2, 3]^Rational[1, 2]) 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], (-
        Rational[2, 3]^Rational[1, 2]) Sin[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 0}}]], "=", 
   MatrixForm[{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, 1, 1, 1, 0, 0, 1}, {0, 0, 0, 
    0, 1, 1, 1, 1}}, 1]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.596031883014731*^9, 3.5962156989828453`*^9, 3.5962170412168503`*^9, 
   3.5967656249304237`*^9, 3.5971350868418283`*^9, 3.5973158513472843`*^9, 
   3.598099812502405*^9, 3.59814455154566*^9, {3.59826114412899*^9, 
   3.598261172187111*^9}, 3.6061161288156967`*^9, 3.6061161875480566`*^9, 
   3.606116543460413*^9, 3.6061165809045553`*^9, 3.6061166644503336`*^9, 
   3.606116966924634*^9, 3.606117042221941*^9, 3.6061170934868727`*^9, 
   3.6061171752135477`*^9, 3.6074164676790648`*^9, 3.6074170133592873`*^9, 
   3.60741902680997*^9, {3.607419059341173*^9, 3.6074190801041317`*^9}, 
   3.607419526479027*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<RGBCube\>\"", "[", "\"\<RGB\>\"", "]"}], ",", "\"\< = \>\"", 
    ",", " ", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], ",", "\"\<    \>\"",
     ",", 
    RowBox[{
     RowBox[{"\"\<RGBCube\>\"", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", 
     "]"}], ",", "\"\< = \>\"", ",", " ", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{
      RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", "]"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.618933126032289*^9, 3.61893314375873*^9}, {
   3.6189332324313993`*^9, 3.6189332601743193`*^9}, 3.618933335548029*^9, {
   3.632830508057745*^9, 3.63283050998282*^9}, {3.6328605855126743`*^9, 
   3.632860591920041*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"RGBCube\"", "[", "\"RGB\"", "]"}],"\" = \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", "1", "1", "0", "0", "0", "1", "1"}, {
        "0", "0", "1", "1", "1", "0", "0", "1"}, {
        "0", "0", "0", "0", "1", "1", "1", "1"}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"    \"",RowBox[{
     RowBox[{"\"RGBCube\"", "[", "\"LCaCb\"", "]"}], "[", "\[Theta]", "]"}],
   "\" = \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         SqrtBox["3"]}, {"0", 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"}, {"0", 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
           RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.633168970782858*^9}],

Cell[TextData[{
 "The extent of the new axis is found by taking the maximum and minimum \
values of each row, i.e. the extreme corner positions relative to each new \
axis. An additional symmetry of the hexagonal projection of the RGB cube \
allows us to say that \[LongDash] whatever functional form is taken by one of \
the ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " dependant ranges \[LongDash] the other can be found by a simple phase \
shift. So, recognizing that the minimum value is simply ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]], "InlineFormula"],
 " times the maximum, we have simplified the problem to solving: "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[
  RowBox[{"max", 
   RowBox[{"(", 
    RowBox[{"\[PlusMinus]", 
     FractionBox[
      RowBox[{"sin", "(", "\[Theta]", ")"}], 
      SqrtBox["6"]], "\[PlusMinus]", 
     FractionBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}], 
      SqrtBox["2"]], ",", "\[PlusMinus]", 
     SqrtBox[
      FractionBox["2", "3"]], "sin", 
     RowBox[{"(", "\[Theta]", ")"}]}], ")"}], "  ", "Where", "  ", "0", 
   "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
   FractionBox["\[Pi]", "3"]}], TraditionalForm]], "NumberedEquation",
 TaggingRules:>{"Tex Macro Name" -> "matrix"},
 CellTags->"eq:AxisRangeMinMax"],

Cell[TextData[{
 "A graphical representation of the problem can be seen in Figure\
\[NonBreakingSpace]",
 
 CounterBox["Section", "eq:YabCube"],
 " . "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxRanges", ",", " ", "ranges", ",", " ", "cube", ",", " ", "centersB",
        ",", " ", "centersA", ",", " ", "cols", ",", " ", "imgScale", ",", 
       " ", "ticks", ",", "CbWidth", ",", "CbHeight", ",", "Cb", ",", 
       "CaWidth", ",", "CaHeight", ",", "Ca", ",", "opt", ",", "cube3D"}], 
      "}"}], ",", " ", "\n", "   ", 
     RowBox[{
      RowBox[{"MaxTheta", " ", "=", " ", 
       RowBox[{
        RowBox[{"Pi", "/", "2"}], "+", "0.2"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxRanges", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "/", "3"}], "]"}]}], ",", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"2", "/", "3"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "/", "3"}], "]"}]}], ",", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"2", "/", "3"}], "]"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"imgScale", " ", "=", " ", "200"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"ranges", " ", "=", " ", 
       RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}]}], ";", " ", "\n", 
      "  ", 
      RowBox[{"cube", " ", "=", " ", 
       RowBox[{"Cuboid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
        "]"}]}], ";", " ", "\n", "  ", 
      RowBox[{"centersB", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", 
         "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"centersA", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "\[Theta]", 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"cols", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"RGBColor", ",", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "]"}]}], 
        "]"}]}], ";", " ", "\n", "  ", 
      RowBox[{"ticks", " ", "=", 
       RowBox[{"Prepend", "[", " ", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"i", "*", 
               RowBox[{"(", 
                RowBox[{"Pi", "/", "6"}], ")"}]}], "]"}], ",", " ", 
             RowBox[{"i", "*", 
              RowBox[{"(", 
               RowBox[{"Pi", "/", "6"}], ")"}]}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "0", ",", " ", 
             RowBox[{"6", "*", 
              RowBox[{"(", 
               RowBox[{"MaxTheta", "/", "Pi"}], ")"}]}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", "\[Theta]", "]"}], ",", "\"\<\[Theta]\>\""}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"CbWidth", "  ", "=", " ", 
       RowBox[{
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
        "MaxTheta"}]}], ";", " ", "\n", "  ", 
      RowBox[{"CbHeight", " ", "=", " ", 
       RowBox[{
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cb", " ", "=", " ", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "theta", 
            "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"theta", ",", " ", "0", ",", " ", "MaxTheta"}], "}"}], ",", 
         " ", "\n", "         ", 
         RowBox[{"PlotStyle", " ", "->", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", " ", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "]"}]}], 
           "]"}]}], ",", " ", "\[IndentingNewLine]", "     ", 
         RowBox[{"FrameTicks", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"None", ",", "ticks"}], "}"}]}], "}"}]}], ",", " ", "\n",
          "         ", 
         RowBox[{"FrameLabel", " ", "->", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<RGB Cube corner position in Cb\>\"", ",", "None"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
         "\[IndentingNewLine]", "     ", 
         RowBox[{"PlotRange", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"MaxTheta", " ", "-", " ", 
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", " ", 
            RowBox[{"maxRanges", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", " ", "\n", 
         "         ", 
         RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
         "\[IndentingNewLine]", "     ", 
         RowBox[{"Epilog", " ", "->", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"-", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"2", "/", "3"}], "]"}]}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"2", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", "    ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.8", "]"}], ",", "  ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"cols", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"centersB", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
                    "0.04"}], "]"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], 
                "]"}]}], "}"}], ",", " ", "\n", "           ", 
             RowBox[{"{", 
              RowBox[{"Black", ",", " ", 
               RowBox[{"Translate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{"Sequence", " ", "@@", " ", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"MaxTheta", " ", "-", " ", 
                    RowBox[{"maxRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", " ", "0"}], 
                  "}"}]}], "]"}], ",", " ", "\n", "            ", "Blue", ",",
                " ", 
               RowBox[{
               "Translate", "[", "\[IndentingNewLine]", "          ", 
                RowBox[{
                 RowBox[{"Polygon", "[", 
                  RowBox[{
                   RowBox[{"LCaCbPolygon", "[", "\[Theta]", "]"}], ",", " ", 
                   RowBox[{"VertexColors", " ", "->", " ", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"RGBColor", ",", " ", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "[", 
                    
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
                    " ", "6", ",", " ", "7"}], "}"}], "]"}], "]"}], "]"}]}], 
                    "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 "          ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"MaxTheta", " ", "-", " ", 
                    RowBox[{"maxRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", " ", "0"}], 
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "   ", "}"}]}], 
            "}"}], "]"}]}], ",", " ", "\[IndentingNewLine]", "  ", 
         RowBox[{"AspectRatio", " ", "->", " ", 
          RowBox[{"CbHeight", "/", "CbWidth"}]}], ",", " ", "\n", "      ", 
         RowBox[{"ImageSize", " ", "->", " ", 
          RowBox[{"Floor", "[", 
           RowBox[{"imgScale", "*", 
            RowBox[{"{", 
             RowBox[{"CbWidth", ",", " ", "CaHeight"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"CaWidth", " ", "=", " ", 
       RowBox[{
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
        "MaxTheta"}]}], ";", " ", "\n", "  ", 
      RowBox[{"CaHeight", " ", "=", " ", 
       RowBox[{
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
        RowBox[{"maxRanges", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ca", " ", "=", " ", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RGBCube", "[", "\"\<LCaCb\>\"", "]"}], "[", "theta", 
            "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"theta", ",", " ", "0", ",", " ", "MaxTheta"}], "}"}], ",", 
         " ", "\n", "         ", 
         RowBox[{"PlotStyle", " ", "->", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", " ", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "]"}]}], 
           "]"}]}], ",", " ", "\[IndentingNewLine]", "     ", 
         RowBox[{"FrameTicks", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"ticks", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
         "\n", "         ", 
         RowBox[{"FrameLabel", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "None", ",", " ", "\"\<RGB Cube corner position in Ca\>\""}], 
           "}"}]}], ",", " ", "\[IndentingNewLine]", "     ", 
         RowBox[{"PlotRange", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"MaxTheta", " ", "-", " ", 
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", " ", 
            RowBox[{"maxRanges", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", " ", "\n", 
         "         ", 
         RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
         "\[IndentingNewLine]", "     ", 
         RowBox[{"Epilog", " ", "->", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"-", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"2", "/", "3"}], "]"}]}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"2", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], 
             ",", " ", "\[IndentingNewLine]", "    ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.8", "]"}], ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"cols", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"centersA", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
                    "0.04"}], "]"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], 
                "]"}]}], "}"}], ",", " ", "\n", "           ", 
             RowBox[{"{", 
              RowBox[{"Black", ",", " ", 
               RowBox[{"Translate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{"Sequence", " ", "@@", " ", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"MaxTheta", " ", "-", " ", 
                    RowBox[{"maxRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", " ", "0"}], 
                  "}"}]}], "]"}], ",", " ", "\n", "            ", "Blue", ",",
                " ", 
               RowBox[{"Translate", "[", 
                RowBox[{
                 RowBox[{"Polygon", "[", 
                  RowBox[{
                   RowBox[{"LCaCbPolygon", "[", 
                    RowBox[{"\[Theta]", " ", "-", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], ",", " ", 
                   RowBox[{"VertexColors", " ", "->", " ", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"RGBColor", ",", " ", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "[", 
                    
                    RowBox[{"[", "\n", "                ", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
                    " ", "6", ",", " ", "7"}], "}"}], "]"}], "]"}], "]"}]}], 
                    "]"}]}]}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"MaxTheta", " ", "-", " ", 
                    RowBox[{"maxRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", " ", "0"}], 
                  "}"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], ",", " ", 
         "\[IndentingNewLine]", "     ", 
         RowBox[{"AspectRatio", " ", "->", " ", 
          RowBox[{"CaHeight", "/", "CaWidth"}]}], ",", " ", "\n", "         ", 
         RowBox[{"ImageSize", " ", "->", " ", 
          RowBox[{"Floor", "[", 
           RowBox[{"imgScale", "*", 
            RowBox[{"{", 
             RowBox[{"CaWidth", ",", " ", "CaHeight"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "   ", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"opt", "=", 
       RowBox[{"GraphicsCubeOptions", "[", " ", 
        RowBox[{
         RowBox[{"PlotRange", "->", 
          RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"ViewPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"8", ",", "5", ",", 
            RowBox[{"-", "10"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"cube3D", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", 
          RowBox[{"RGBCubeInYabFinite", "[", 
           RowBox[{"\[Theta]", ",", "cut"}], "]"}], ",", 
          RowBox[{"LCaCbAxisEnds3D", "[", 
           RowBox[{"\[Theta]", ",", "brighten"}], "]"}]}], "}"}], "]"}]}], 
      ";", "\n", "\[IndentingNewLine]", "    ", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{"cube3D", ",", "opt"}], "]"}], ",", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Inset", "[", 
               RowBox[{"Cb", ",", " ", 
                RowBox[{"Floor", "[", 
                 RowBox[{"imgScale", "*", 
                  RowBox[{"{", 
                   RowBox[{"CbWidth", ",", " ", "0"}], "}"}]}], "]"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"CbWidth", ",", " ", 
                  RowBox[{"maxRanges", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
                
                RowBox[{"Floor", "[", 
                 RowBox[{"imgScale", "*", 
                  RowBox[{"{", 
                   RowBox[{"CbWidth", ",", " ", "CbHeight"}], "}"}]}], 
                 "]"}]}], "]"}], ",", " ", "\n", "       ", 
              RowBox[{"Inset", "[", 
               RowBox[{"Ca", ",", " ", 
                RowBox[{"Floor", "[", 
                 RowBox[{"imgScale", "*", 
                  RowBox[{"{", 
                   RowBox[{"CaWidth", ",", " ", "0"}], "}"}]}], "]"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"CaWidth", ",", " ", 
                  RowBox[{"maxRanges", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", 
                
                RowBox[{"Floor", "[", 
                 RowBox[{"imgScale", "*", 
                  RowBox[{"{", 
                   RowBox[{"CaWidth", ",", " ", "CaHeight"}], "}"}]}], "]"}], 
                ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
           " ", "\n", "     ", 
           RowBox[{"PlotRange", " ", "->", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{"imgScale", "*", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "CbWidth"}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "CaWidth"}], "}"}]}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "MaxTheta"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"brighten", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cut", ",", "3"}], "}"}], ",", "0", ",", "3"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.615744762154598*^9, 3.615744809437511*^9, {3.615744900294574*^9, 
   3.6157449255978394`*^9}, {3.615745392646512*^9, 3.615745395076818*^9}, 
   3.6157454529886847`*^9, 3.6157455060046*^9, {3.6158808411928463`*^9, 
   3.615880842993964*^9}, {3.615881169530158*^9, 3.615881221104282*^9}, {
   3.615881289524775*^9, 3.6158812950358973`*^9}, {3.615881431817992*^9, 
   3.6158814493897533`*^9}, {3.615881482350573*^9, 3.615881533989566*^9}, {
   3.615881564383504*^9, 3.61588157030932*^9}, {3.6158817330805607`*^9, 
   3.615881777336059*^9}, {3.615881820369657*^9, 3.615881861871283*^9}, 
   3.6158818987056932`*^9, {3.615882075101215*^9, 3.615882107757346*^9}, 
   3.61588274557607*^9, {3.615882781018458*^9, 3.615882810364456*^9}, {
   3.615882952525847*^9, 3.615883032809856*^9}, {3.615883079059317*^9, 
   3.615883122953772*^9}, {3.615883235189744*^9, 3.615883247858034*^9}, {
   3.615883316396372*^9, 3.6158833539851313`*^9}, {3.615884427374096*^9, 
   3.615884595060425*^9}, {3.615884779452549*^9, 3.615884783559533*^9}, {
   3.615884959630518*^9, 3.61588501135894*^9}, {3.615886878018252*^9, 
   3.615886917862103*^9}, 3.615886947869267*^9, {3.615886992115251*^9, 
   3.6158870319032516`*^9}, {3.615887065119426*^9, 3.6158870667523623`*^9}, {
   3.6158871774477577`*^9, 3.615887197702413*^9}, {3.615887247089973*^9, 
   3.6158873288809433`*^9}, {3.615887535636766*^9, 3.6158876106136*^9}, {
   3.615887656368023*^9, 3.615887693588511*^9}, {3.615888012370923*^9, 
   3.615888055467196*^9}, 3.615888652657555*^9, 3.61588869711313*^9, 
   3.615888757117961*^9, 3.615889776805579*^9, {3.615889975227284*^9, 
   3.615889978575819*^9}, {3.6158913376538467`*^9, 3.6158913902014637`*^9}, 
   3.615891519925408*^9, {3.615894086569316*^9, 3.6158940935895987`*^9}, {
   3.615894277383312*^9, 3.615894299743243*^9}, {3.616059901601013*^9, 
   3.6160599050013237`*^9}, {3.617453797906592*^9, 3.617453808187415*^9}, {
   3.617454189596245*^9, 3.617454193684801*^9}, {3.6189325141783524`*^9, 
   3.618932514203717*^9}, {3.618932555668715*^9, 3.618932561040574*^9}, 
   3.618935133336281*^9, {3.618983875828992*^9, 3.618983983661347*^9}, {
   3.618984023851461*^9, 3.618984062951942*^9}, {3.618984125080703*^9, 
   3.618984131183819*^9}, {3.618984242124776*^9, 3.618984370207101*^9}, {
   3.618984602709834*^9, 3.618984790816523*^9}, {3.6255747429671288`*^9, 
   3.625574749943996*^9}, {3.62557481225473*^9, 3.6255748312299547`*^9}, {
   3.6255748687267733`*^9, 3.6255748989771137`*^9}, {3.625575153486683*^9, 
   3.6255751750952177`*^9}, {3.625575215694264*^9, 3.625575221493403*^9}, {
   3.625575285134294*^9, 3.625575288213892*^9}, {3.6255755488215427`*^9, 
   3.62557560752597*^9}, 3.625575666088879*^9, {3.625575866830462*^9, 
   3.625575891159801*^9}, {3.625577036479342*^9, 3.625577058478176*^9}, {
   3.6255771077384653`*^9, 3.625577190008054*^9}, {3.6255772240452337`*^9, 
   3.625577224597744*^9}, {3.625577315280972*^9, 3.625577422771001*^9}, {
   3.625577615855497*^9, 3.625577616850142*^9}, {3.625581227256686*^9, 
   3.625581442287334*^9}, 3.625581473953658*^9, {3.625581571373539*^9, 
   3.625581680112269*^9}, {3.625581720118565*^9, 3.625581739712864*^9}, 
   3.6255818575664053`*^9, {3.6255823401937313`*^9, 3.6255824205040627`*^9}, {
   3.6255824532551823`*^9, 3.62558245841289*^9}, {3.625582966930542*^9, 
   3.625583016283265*^9}, {3.6328294348758993`*^9, 3.632829453496449*^9}, 
   3.6330673631630497`*^9, {3.6330678081985826`*^9, 3.633067840033822*^9}, {
   3.633067940573634*^9, 3.6330679421642923`*^9}, {3.6331695246778593`*^9, 
   3.63316960771023*^9}, {3.633169679644588*^9, 3.6331696816920633`*^9}, {
   3.633169743239972*^9, 3.633169744346261*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`brighten$$ = 1, $CellContext`cut$$ = 
    3, $CellContext`\[Theta]$$ = 0.786, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 1.7707963267948965`}, {
      Hold[$CellContext`brighten$$], 1, 2}, {{
       Hold[$CellContext`cut$$], 3}, 0, 3}}, Typeset`size$$ = {
    1000., {259., 264.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$117021$$ = 
    0, $CellContext`brighten$117022$$ = 0, $CellContext`cut$117023$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`brighten$$ = 1, $CellContext`cut$$ = 
        3, $CellContext`\[Theta]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$117021$$, 0], 
        Hold[$CellContext`brighten$$, $CellContext`brighten$117022$$, 0], 
        Hold[$CellContext`cut$$, $CellContext`cut$117023$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`maxRanges, $CellContext`ranges, $CellContext`cube, \
$CellContext`centersB, $CellContext`centersA, $CellContext`cols, \
$CellContext`imgScale, $CellContext`ticks, $CellContext`CbWidth, \
$CellContext`CbHeight, $CellContext`Cb, $CellContext`CaWidth, \
$CellContext`CaHeight, $CellContext`Ca, $CellContext`opt, \
$CellContext`cube3D}, $CellContext`MaxTheta = 
         Pi/2 + 0.2; $CellContext`maxRanges = {{0, 
            Sqrt[3]}, {-Sqrt[2/3], 
            Sqrt[2/3]}, {-Sqrt[2/3], 
            Sqrt[2/3]}}; $CellContext`imgScale = 
         200; $CellContext`ranges = \
$CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$]; $CellContext`cube = 
         Cuboid[{{
             Part[$CellContext`ranges, 1, 1], 
             Part[$CellContext`ranges, 2, 1], 
             Part[$CellContext`ranges, 3, 1]}, {
             Part[$CellContext`ranges, 1, 2], 
             Part[$CellContext`ranges, 2, 2], 
             Part[$CellContext`ranges, 3, 2]}}]; $CellContext`centersB = 
         Part[
           $CellContext`RGBCube["LCaCb"][$CellContext`\[Theta]$$], 
           3]; $CellContext`centersA = Part[
           $CellContext`RGBCube["LCaCb"][$CellContext`\[Theta]$$], 
           2]; $CellContext`cols = MapThread[RGBColor, 
           Transpose[
            Transpose[
             $CellContext`RGBCube["RGB"]]]]; $CellContext`ticks = Prepend[
           Table[{
             
             N[$CellContext`i (Pi/6)], $CellContext`i (Pi/
              6)}, {$CellContext`i, 0, 6 ($CellContext`MaxTheta/Pi)}], {
            N[$CellContext`\[Theta]$$], "\[Theta]"}]; $CellContext`CbWidth = 
         Part[$CellContext`maxRanges, 2, 2] - 
          Part[$CellContext`maxRanges, 2, 
           1] + $CellContext`MaxTheta; $CellContext`CbHeight = 
         Part[$CellContext`maxRanges, 3, 2] - 
          Part[$CellContext`maxRanges, 3, 1]; $CellContext`Cb = Plot[
           Evaluate[
            Part[
             $CellContext`RGBCube["LCaCb"][$CellContext`theta], 
             3]], {$CellContext`theta, 0, $CellContext`MaxTheta}, PlotStyle -> 
           MapThread[RGBColor, 
             Transpose[
              Transpose[
               $CellContext`RGBCube["RGB"]]]], 
           FrameTicks -> {{All, None}, {None, $CellContext`ticks}}, 
           FrameLabel -> {{"RGB Cube corner position in Cb", None}, {
             None, None}}, 
           PlotRange -> {{
             0, $CellContext`MaxTheta - Part[$CellContext`maxRanges, 2, 1] + 
              Part[$CellContext`maxRanges, 2, 2]}, 
             Part[$CellContext`maxRanges, 3]}, Frame -> True, Epilog -> 
           Flatten[{
              
              Line[{{$CellContext`\[Theta]$$, -
                 Sqrt[2/3]}, {$CellContext`\[Theta]$$, 
                 Sqrt[2/3]}}], {
               Opacity[0.8], 
               Table[{
                 Part[$CellContext`cols, $CellContext`i], 
                 Disk[{$CellContext`\[Theta]$$, 
                   Part[$CellContext`centersB, $CellContext`i]}, 
                  0.04]}, {$CellContext`i, 1, 8}]}, {Black, 
               Translate[
                Rectangle[
                 Apply[Sequence, 
                  Transpose[{
                    Part[
                    $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 2], 
                    Part[
                    $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 
                    3]}]]], {$CellContext`MaxTheta - 
                 Part[$CellContext`maxRanges, 2, 1], 0}], Blue, 
               Translate[
                Polygon[
                 $CellContext`LCaCbPolygon[$CellContext`\[Theta]$$], 
                 VertexColors -> MapThread[RGBColor, 
                   Transpose[
                    Part[
                    Transpose[
                    $CellContext`RGBCube["RGB"]], {2, 3, 4, 5, 6, 
                    7}]]]], {$CellContext`MaxTheta - 
                 Part[$CellContext`maxRanges, 2, 1], 0}]}}], 
           AspectRatio -> $CellContext`CbHeight/$CellContext`CbWidth, 
           ImageSize -> 
           Floor[$CellContext`imgScale {$CellContext`CbWidth, \
$CellContext`CaHeight}]]; $CellContext`CaWidth = 
         Part[$CellContext`maxRanges, 3, 2] - 
          Part[$CellContext`maxRanges, 3, 
           1] + $CellContext`MaxTheta; $CellContext`CaHeight = 
         Part[$CellContext`maxRanges, 2, 2] - 
          Part[$CellContext`maxRanges, 2, 1]; $CellContext`Ca = Plot[
           Evaluate[
            Part[
             $CellContext`RGBCube["LCaCb"][$CellContext`theta], 
             2]], {$CellContext`theta, 0, $CellContext`MaxTheta}, PlotStyle -> 
           MapThread[RGBColor, 
             Transpose[
              Transpose[
               $CellContext`RGBCube["RGB"]]]], 
           FrameTicks -> {{All, None}, {$CellContext`ticks, None}}, 
           FrameLabel -> {None, "RGB Cube corner position in Ca"}, 
           PlotRange -> {{
             0, $CellContext`MaxTheta - Part[$CellContext`maxRanges, 3, 1] + 
              Part[$CellContext`maxRanges, 3, 2]}, 
             Part[$CellContext`maxRanges, 2]}, Frame -> True, Epilog -> 
           Flatten[{
              
              Line[{{$CellContext`\[Theta]$$, -
                 Sqrt[2/3]}, {$CellContext`\[Theta]$$, 
                 Sqrt[2/3]}}], {
               Opacity[0.8], 
               Table[{
                 Part[$CellContext`cols, $CellContext`i], 
                 Disk[{$CellContext`\[Theta]$$, 
                   Part[$CellContext`centersA, $CellContext`i]}, 
                  0.04]}, {$CellContext`i, 1, 8}]}, {Black, 
               Translate[
                Rectangle[
                 Apply[Sequence, 
                  Transpose[{
                    Part[
                    $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 3], 
                    Part[
                    $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 
                    2]}]]], {$CellContext`MaxTheta - 
                 Part[$CellContext`maxRanges, 3, 1], 0}], Blue, 
               Translate[
                Polygon[
                 $CellContext`LCaCbPolygon[$CellContext`\[Theta]$$ - Pi/2], 
                 VertexColors -> MapThread[RGBColor, 
                   Transpose[
                    Part[
                    Transpose[
                    $CellContext`RGBCube["RGB"]], {2, 3, 4, 5, 6, 
                    7}]]]], {$CellContext`MaxTheta - 
                 Part[$CellContext`maxRanges, 3, 1], 0}]}}], 
           AspectRatio -> $CellContext`CaHeight/$CellContext`CaWidth, 
           ImageSize -> 
           Floor[$CellContext`imgScale {$CellContext`CaWidth, \
$CellContext`CaHeight}]]; $CellContext`opt = $CellContext`GraphicsCubeOptions[
          PlotRange -> $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 
           ViewPoint -> {8, 5, -10}, ImageSize -> 500]; $CellContext`cube3D = 
         Flatten[{
            Opacity[1], 
            $CellContext`RGBCubeInYabFinite[$CellContext`\[Theta]$$, \
$CellContext`cut$$], 
            $CellContext`LCaCbAxisEnds3D[$CellContext`\[Theta]$$, \
$CellContext`brighten$$]}]; Row[{
           Graphics3D[$CellContext`cube3D, $CellContext`opt], 
           Show[
            Graphics[{
              Inset[$CellContext`Cb, 
               
               Floor[$CellContext`imgScale {$CellContext`CbWidth, 
                  0}], {$CellContext`CbWidth, 
                Part[$CellContext`maxRanges, 3, 1]}, 
               
               Floor[$CellContext`imgScale {$CellContext`CbWidth, \
$CellContext`CbHeight}]], 
              Inset[$CellContext`Ca, 
               
               Floor[$CellContext`imgScale {$CellContext`CaWidth, 
                  0}], {$CellContext`CaWidth, 
                Part[$CellContext`maxRanges, 2, 2]}, 
               
               Floor[$CellContext`imgScale {$CellContext`CaWidth, \
$CellContext`CaHeight}], {0, -1}]}], PlotRange -> 
            Floor[$CellContext`imgScale {{0, $CellContext`CbWidth}, {
                0, $CellContext`CaWidth}}], ImageSize -> 500]}]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 
         1.7707963267948965`}, {$CellContext`brighten$$, 1, 
         2}, {{$CellContext`cut$$, 3}, 0, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {331., 336.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.63316978781061*^9}]
}, Open  ]],

Cell[TextData[{
 "In the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", 
    FractionBox["\[Pi]", "3"]}], TraditionalForm]], "InlineFormula"],
 ", both sin and cos are positive, therefore the axis ranges are given by the \
following: "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<L\>\"", ",", "\"\<Ca\>\"", ",", "\"\<Cb\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Min\>\"", ",", "\"\<Max\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633068507703628*^9, 3.633068508582643*^9}, {
  3.63306858108678*^9, 3.633068685490171*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Min\"\>",
       HoldForm], 
      TagBox["\<\"Max\"\>",
       HoldForm]},
     {
      TagBox["\<\"L\"\>",
       HoldForm], "0", 
      SqrtBox["3"]},
     {
      TagBox["\<\"Ca\"\>",
       HoldForm], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]},
     {
      TagBox["\<\"Cb\"\>",
       HoldForm], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{"L", "Ca", "Cb"}, {"Min", "Max"}}, 
    TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{
  3.633068509189321*^9, {3.63306860422333*^9, 3.633068632798646*^9}, {
   3.63306866364489*^9, 3.6330686858995543`*^9}}]
}, Open  ]],

Cell["The lengths of the axis after rotation are given by: ", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<LCaCbAxisRanges\>\"", "[", "\[Theta]", "]"}], ",", 
    "\"\< = \>\"", ",", 
    RowBox[{"TraditionalForm", "[", 
     RowBox[{
      RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "\[Rule]", " ", 
         OverscriptBox["\[CurlyTheta]", "~"]}], ",", " ", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "\[Rule]", " ", 
         OverscriptBox["\[Theta]", "~"]}]}], "}"}]}], "]"}], ",", 
    "\"\<  where  \>\"", ",", " ", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        OverscriptBox["\[CurlyTheta]", "~"], "==", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}]}], ",", 
       RowBox[{
        OverscriptBox["\[Theta]", "~"], " ", "==", " ", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6156232602254047`*^9, 3.6156232948096724`*^9}, {
  3.6189335927026663`*^9, 3.618933605179678*^9}, {3.618933654703908*^9, 
  3.618933674240162*^9}, {3.6328294180769367`*^9, 3.632829418797739*^9}, {
  3.633068845246656*^9, 3.633068847063971*^9}, {3.6330690009772797`*^9, 
  3.633069077497458*^9}, {3.633169214500688*^9, 3.633169229010694*^9}, {
  3.6331692893003283`*^9, 3.6331692917312107`*^9}}],

Cell[BoxData[
 TemplateBox[{
  RowBox[{"\"LCaCbAxisRanges\"", "[", "\[Theta]", "]"}],"\" = \"",TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{"0", 
          SqrtBox["3"]}, {
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"cos", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", 
                OverscriptBox["\[CurlyTheta]", "~"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"cos", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", 
                OverscriptBox["\[CurlyTheta]", "~"]}], ")"}]}]}, {
          RowBox[{
            RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
            RowBox[{"cos", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", 
                OverscriptBox["\[Theta]", "~"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"cos", "(", 
              RowBox[{
                FractionBox["\[Pi]", "6"], "-", 
                OverscriptBox["\[Theta]", "~"]}], ")"}]}]}}, RowSpacings -> 1,
         ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
        Center], "\[NoBreak]", ")"}], TraditionalForm], TraditionalForm, 
    Editable -> True],"\"  where  \"",TagBox[
    GridBox[{{
       RowBox[{
         OverscriptBox["\[CurlyTheta]", "~"], "\[Equal]", 
         RowBox[{"Mod", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}]}, {
       RowBox[{
         OverscriptBox["\[Theta]", "~"], "\[Equal]", 
         RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.6330688484147577`*^9, 3.6330690801240387`*^9, {3.633169269879835*^9, 
   3.6331692924704523`*^9}}]
}, Open  ]],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxRanges", ",", "ranges", ",", " ", "cube"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxRanges", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           SqrtBox["3"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], ",", 
           SqrtBox[
            FractionBox["2", "3"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], ",", 
           SqrtBox[
            FractionBox["2", "3"]]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ranges", " ", "=", " ", 
       RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cube", " ", "=", " ", 
       RowBox[{"Cuboid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}]
       , ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"Raster", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"inLCaCb", "[", "\[Theta]", "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"Y", ",", "a", ",", "b"}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.02"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", 
                  RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.02"}], "}"}]}], 
               "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Rectangle", "[", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", " ", "]"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"LCaCbAxisRanges", "[", "\[Theta]", " ", "]"}], 
                    "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
              ",", "Blue", ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{
                RowBox[{"LCaCbPolygon", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"VertexColors", "\[Rule]", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"RGBColor", ",", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"RGBCube", "[", "\"\<RGB\>\"", "]"}], "]"}], "[", 
                    
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                    "}"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"maxRanges", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}], "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Y", ",", "0.5"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618934160054926*^9, 3.618934172987547*^9}, {
  3.6189348091800117`*^9, 3.618934886861141*^9}, {3.618934936789895*^9, 
  3.61893496094081*^9}, {3.632829421959176*^9, 3.632829431402953*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Y$$ = 
    0.41600000000000004`, $CellContext`\[Theta]$$ = 2.2996458224277285`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}, {{
       Hold[$CellContext`Y$$], 0.5}, 0, 1}}, Typeset`size$$ = {
    809., {197.134033203125, 202.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$1175309$$ = 0, $CellContext`Y$1175310$$ = 0}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Y$$ = 0.5, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$1175309$$, 0], 
        Hold[$CellContext`Y$$, $CellContext`Y$1175310$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`maxRanges, $CellContext`ranges, $CellContext`cube}, \
$CellContext`maxRanges = {{
           0, 3^Rational[1, 2]}, {-(2/3)^Rational[1, 2], (2/3)^
            Rational[1, 2]}, {-(2/3)^Rational[1, 2], (2/3)^
            Rational[
             1, 2]}}; $CellContext`ranges = \
$CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$]; $CellContext`cube = 
         Cuboid[{{
             Part[$CellContext`ranges, 1, 1], 
             Part[$CellContext`ranges, 2, 1], 
             Part[$CellContext`ranges, 3, 1]}, {
             Part[$CellContext`ranges, 1, 2], 
             Part[$CellContext`ranges, 2, 2], 
             Part[$CellContext`ranges, 3, 2]}}]; Grid[{{
            Show[
             Graphics[
              Raster[
               Table[
                Table[
                 Dot[
                  $CellContext`inLCaCb[$CellContext`\[Theta]$$], \
{$CellContext`Y$$, $CellContext`a, $CellContext`b}], {$CellContext`a, -0.5, 
                  0.5, 0.02}], {$CellContext`b, -0.5, 0.5, 0.02}]]], 
             ImageSize -> 400], 
            Graphics[{Black, 
              Rectangle[
               Apply[Sequence, 
                Transpose[{
                  Part[
                   $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 2], 
                  
                  Part[
                   $CellContext`LCaCbAxisRanges[$CellContext`\[Theta]$$], 
                   3]}]]], Blue, 
              Polygon[
               $CellContext`LCaCbPolygon[$CellContext`\[Theta]$$], 
               VertexColors -> MapThread[RGBColor, 
                 Transpose[
                  Part[
                   Transpose[
                    $CellContext`RGBCube["RGB"]], {2, 3, 4, 5, 6, 7}]]]]}, 
             PlotRange -> {
               Part[$CellContext`maxRanges, 2], 
               Part[$CellContext`maxRanges, 3]}, ImageSize -> 400]}}]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 
         Pi}, {{$CellContext`Y$$, 0.5}, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{854., {256., 261.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6189348307017727`*^9, 3.618934857926672*^9}, 
   3.618934890931828*^9, {3.618934938285568*^9, 3.618934962125599*^9}, 
   3.62612372193013*^9, 3.633067066746502*^9}]
}, Open  ]],

Cell[TextData[{
 "It is convenient to produce a transformation which will result in axes of \
known length. Because the rotation cannot include a translation, we desire a \
transformation matrix which will result in the ranges ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "1"}], TraditionalForm]], "InlineFormula"],
 ", \[Hyphen]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], ":", 
    FractionBox["1", "2"]}], TraditionalForm]], "InlineFormula"],
 ", and \[Hyphen]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], ":", 
    FractionBox["1", "2"]}], TraditionalForm]], "InlineFormula"],
 ". Such a transformation is easily obtained by multiplying the rotation \
matrix by a diagonal matrix with the reciprocal of the maximums found above \
placed along the diagonal. This will scale each axis to a unit length. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"ShowFun", "[", 
      RowBox[{
       RowBox[{"scale", "[", 
        RowBox[{"\"\<LCaCb\>\"", ",", "\"\<nLCaCb\>\""}], "]"}], "[", 
       "\[Theta]", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"List", "\[Rule]", "mForm"}], " ", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"ShowFun", "[", 
      RowBox[{
       RowBox[{"scale", "[", 
        RowBox[{"\"\<nLCaCb\>\"", ",", "\"\<LCaCb\>\""}], "]"}], "[", 
       "\[Theta]", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"List", "\[Rule]", "mForm"}], " ", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.633170088130492*^9, 3.6331702094167023`*^9}, {
   3.633170925495119*^9, 3.633170946970436*^9}, {3.6331709874893084`*^9, 
   3.6331710013422403`*^9}, {3.633171092809805*^9, 3.633171127725762*^9}, 
   3.6331711624238462`*^9, {3.633171226202124*^9, 3.633171278827649*^9}, {
   3.633171359282604*^9, 3.633171461663353*^9}, {3.633171517033626*^9, 
   3.6331715197029657`*^9}, {3.63317157254243*^9, 3.6331716351068773`*^9}, 
   3.6331717671580973`*^9, {3.633171826543948*^9, 3.633171839075672*^9}, {
   3.633172094627116*^9, 3.633172116904332*^9}, {3.633173635966992*^9, 
   3.6331736456727467`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox["\"L\"", TraditionalForm], TraditionalForm, Editable -> 
         True], TraditionalForm], "(", "\"\[Theta]\"", ")"}], 
     TraditionalForm], TraditionalForm, Editable -> True],"\" = \"",TagBox[
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\*TagBox[\\((\[NoBreak] \
\\*TagBox[GridBox[{{\\(\\@3\\)}, {\\(2\\\\ \\@\\(2\\/3\\)\\\\ \
\\(\\(cos(\\(\\(\[Pi]\\/6 - \\*TemplateBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[\\\"\\\\[Theta]\\\", \\\"-\\\", FractionBox[\\\"\\\\[Pi]\\\", \
\\\"6\\\"]]], \\\")\\\"]], FractionBox[\\\"\\\\[Pi]\\\", \\\"3\\\"]], \\\"Mod\
\\\"]\\)\\))\\)\\)\\)}, {\\(2\\\\ \\@\\(2\\/3\\)\\\\ \
\\(\\(cos(\\(\\(\[Pi]\\/6 - \\*TemplateBox[List[\\\"\\\\[Theta]\\\", \
FractionBox[\\\"\\\\[Pi]\\\", \\\"3\\\"]], \\\"Mod\\\"]\\)\\))\\)\\)\\)}}, \
RowSpacings -> 1, ColumnAlignments -> Center, ColumnAlignments -> Left], \
Column] \[NoBreak])\\), Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\\)\"", 
     TraditionalForm], TraditionalForm, Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.633170146535883*^9, {3.633170179995244*^9, 3.6331702101947813`*^9}, {
   3.633170928722562*^9, 3.63317094779793*^9}, 3.633171002047249*^9, {
   3.6331710948891153`*^9, 3.633171128082353*^9}, 3.6331711635298758`*^9, {
   3.633171226859518*^9, 3.633171231639391*^9}, {3.633171262437894*^9, 
   3.633171279756215*^9}, {3.633171363985217*^9, 3.633171416484275*^9}, 
   3.633171462995229*^9, 3.633171520469112*^9, 3.6331716042741756`*^9, 
   3.633171637056778*^9, 3.633171846714439*^9, {3.633172005179181*^9, 
   3.633172008143072*^9}, {3.6331720857781153`*^9, 3.6331721176586733`*^9}, 
   3.63317319098672*^9, {3.633173641429142*^9, 3.6331736468857937`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    FormBox[
     RowBox[{
       FormBox[
        TagBox[
         FormBox[
         "\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
          TraditionalForm], TraditionalForm, Editable -> True], 
        TraditionalForm], "(", "\"\[Theta]\"", ")"}], TraditionalForm], 
    TraditionalForm, Editable -> True],"\" = \"",TagBox[
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\*TagBox[\\((\[NoBreak] \
\\*TagBox[GridBox[{{\\(1\\/\\@3\\)}, {\\(1\\/2\\\\ \\@\\(3\\/2\\)\\\\ \
\\(\\(sec(\\(\\(\[Pi]\\/6 - \\*TemplateBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[\\\"\\\\[Theta]\\\", \\\"-\\\", FractionBox[\\\"\\\\[Pi]\\\", \
\\\"6\\\"]]], \\\")\\\"]], FractionBox[\\\"\\\\[Pi]\\\", \\\"3\\\"]], \\\"Mod\
\\\"]\\)\\))\\)\\)\\)}, {\\(1\\/2\\\\ \\@\\(3\\/2\\)\\\\ \
\\(\\(sec(\\(\\(\[Pi]\\/6 - \\*TemplateBox[List[\\\"\\\\[Theta]\\\", \
FractionBox[\\\"\\\\[Pi]\\\", \\\"3\\\"]], \\\"Mod\\\"]\\)\\))\\)\\)\\)}}, \
RowSpacings -> 1, ColumnAlignments -> Center, ColumnAlignments -> Left], \
Column] \[NoBreak])\\), Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\\)\"", 
     TraditionalForm], TraditionalForm, Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.633170146535883*^9, {3.633170179995244*^9, 3.6331702101947813`*^9}, {
   3.633170928722562*^9, 3.63317094779793*^9}, 3.633171002047249*^9, {
   3.6331710948891153`*^9, 3.633171128082353*^9}, 3.6331711635298758`*^9, {
   3.633171226859518*^9, 3.633171231639391*^9}, {3.633171262437894*^9, 
   3.633171279756215*^9}, {3.633171363985217*^9, 3.633171416484275*^9}, 
   3.633171462995229*^9, 3.633171520469112*^9, 3.6331716042741756`*^9, 
   3.633171637056778*^9, 3.633171846714439*^9, {3.633172005179181*^9, 
   3.633172008143072*^9}, {3.6331720857781153`*^9, 3.6331721176586733`*^9}, 
   3.63317319098672*^9, {3.633173641429142*^9, 3.633173646893929*^9}}]
}, Open  ]],

Cell["The normalized \[CloseCurlyQuote]rotation\[CloseCurlyQuote] matrix is \
given by: ", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<nLCaCb[\[Theta]] = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"nLCaCb", "[", "\[Theta]", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596031389628778*^9, 3.596031398491406*^9}, {
   3.596031810629077*^9, 3.596031882107218*^9}, {3.5973413196459875`*^9, 
   3.5973413235732117`*^9}, {3.5982596858886547`*^9, 3.598259692780513*^9}, {
   3.5982611313576813`*^9, 3.5982611711710033`*^9}, {3.606116117906073*^9, 
   3.6061161276026278`*^9}, {3.606116178667548*^9, 3.60611618568995*^9}, {
   3.6061166608111258`*^9, 3.606116663050254*^9}, {3.6061169512347364`*^9, 
   3.606116965682563*^9}, {3.6061170335954475`*^9, 3.6061170379946995`*^9}, {
   3.6061170879635572`*^9, 3.6061170925868216`*^9}, 3.6061171741874886`*^9, {
   3.6074170012582407`*^9, 3.6074170105624247`*^9}, {3.616064236718367*^9, 
   3.61606427900108*^9}, {3.616064343471733*^9, 3.616064420112588*^9}, {
   3.6328294748818693`*^9, 3.63282947724149*^9}, 3.633174423451315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nLCaCb[\[Theta]] = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "3"], 
        FractionBox["1", "3"], 
        FractionBox["1", "3"]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["nLCaCb[\[Theta]] = ", 
   MatrixForm[{{
      Rational[1, 3], 
      Rational[1, 3], 
      Rational[1, 3]}, {
     Rational[-1, 2] 
      Sec[Rational[1, 6] Pi - Mod[
        Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], Rational[1, 2] 
      Cos[$CellContext`\[Theta]] 
      Sec[Rational[1, 6] Pi - Mod[
        Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
      Rational[-1, 2] 
      Sec[Rational[1, 6] Pi - Mod[
        Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] 
      Sin[Rational[1, 6] Pi - $CellContext`\[Theta]]}, {
     Rational[-1, 2] Cos[Rational[1, 6] Pi + $CellContext`\[Theta]] 
      Sec[Rational[1, 6] Pi - Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], 
      Rational[-1, 2] 
      Sec[Rational[1, 6] Pi - Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] 
      Sin[$CellContext`\[Theta]], Rational[1, 2] 
      Cos[Rational[1, 6] Pi - $CellContext`\[Theta]] 
      Sec[Rational[1, 6] Pi - 
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6160642862741947`*^9, 3.616064420935543*^9, 
  3.6160645231002493`*^9, 3.618992816822548*^9, 3.633174372304867*^9, 
  3.633174435619063*^9}]
}, Open  ]],

Cell["\<\
This matrix is no longer technically a rotation matrix as its inverse is no \
longer equal to its transpose. It now equal to: \
\>", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<inLCaCb[\[Theta]] =\>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"inLCaCb", "[", "\[Theta]", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.633174431594285*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inLCaCb[\[Theta]] =\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "-", "\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "-", "\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}]},
       {"1", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "3"]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
       {"1", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["inLCaCb[\[Theta]] =", 
   MatrixForm[{{
     1, Rational[
       1, 3] ((-2) 
        Cos[Rational[1, 6] Pi - $CellContext`\[Theta] + 
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       2 Sin[$CellContext`\[Theta] + 
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
      Rational[1, 3] ((-2) 
        Cos[$CellContext`\[Theta] + 
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 2 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta] + 
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]])}, {
     1, Rational[4, 3] Cos[$CellContext`\[Theta]] 
      Cos[Rational[1, 6] Pi - Mod[
        Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
      Rational[-4, 3] 
      Cos[Rational[1, 6] Pi - Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] 
      Sin[$CellContext`\[Theta]]}, {
     1, Rational[
       1, 3] ((-2) 
        Cos[Rational[1, 6] Pi + $CellContext`\[Theta] + 
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       2 Sin[$CellContext`\[Theta] - Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
      Rational[1, 3] (
       2 Cos[$CellContext`\[Theta] - 
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       2 Sin[Rational[1, 6] Pi + $CellContext`\[Theta] + 
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]])}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.633174432572156*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Representing the Rotation ", "Subsection",
 CellChangeTimes->{3.6331129183473682`*^9}],

Cell[TextData[{
 "The final piece of the metaphorical jigsaw is to add the capability to deal \
with the machine handling of the numerics. The transforms as defined above \
assume the capacity to represent the resulting numbers. Unfortunately, on a \
device, the numerics are not handled in such a pure way and \[LongDash] \
whilst we are uninterested in the information overflow outside the \
destination representation \[LongDash] this can cause instabilities in a \
practical implementation. In the development of the algorithm, it is \
therefore necessary to define these bounds. In the unit space, these bounds \
have already been defined by Equation\[NonBreakingSpace]",
 
 CounterBox["Section", "eq:L"],
 " ; so long as the axis length can be represented on the device between \
these bounds, then overflow and underflow can be dealt with using a simple \
conditional statement. "
}], "Text"],

Cell["\<\
It is significantly advantageous to perform calculations using integer types, \
particularly given that the input and output types are integers with small \
ranges, meaning it\[CloseCurlyQuote]s possible to construct algorithms which \
avoid conversion to floating point operations. To this end, we wish to \
determine the most efficient internal representation for the transformation. \
\
\>", "Text"],

Cell[CellGroupData[{

Cell["Principles of Optimization ", "Subsubsection",
 CellChangeTimes->{3.633112931651589*^9}],

Cell["\<\
During the color space conversion, the pixel values are represented in three \
different ways: input, working and output representations. At each stage, we \
are concerned with preserving the information from the previous stage \
required by the next. For this reason, we have defined terms for the \
mathematical analysis of the problem, as well as terms for the algorithm \
development. The terms associated with each stage are as follows: \
\>", "Text"],

Cell[TextData[Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[" Data Types  "], Cell[" Src Pixel Values  "], Cell[
       " Trans Pixel Values  "], Cell[" Dst Pixel Values  "]},
      {Cell[" What?  "], Cell[" Input  "], Cell[" Working  "], Cell[
       " Output  "]},
      {Cell[" Where?  "], Cell[" Initial  "], Cell[" After Rotation  "], Cell[
       " After Re\[Hyphen]Distribution  "]},
      {Cell[" Unit Range Value  "], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]]},
      {Cell[" 1\[Hyphen]1 Int Range Value  "], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]]},
      {Cell[" 1\[Hyphen]1 Max  "], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]]},
      {Cell[" 1\[Hyphen]1 Min  "], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]]},
      {Cell[" 1\[Hyphen]1 Range  "], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]], Cell[TextData[{
        " ",
        Cell["\[Null]", "InlineFormula"],
        "  "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "InlineFormula"]], "Text"],

Cell["\<\
The rotation operation consists of 9 multiplications and 6 additions and \
constitutes the majority of the computational cost. It is this operation \
which we will focus our optimization efforts upon. The redistribution \
transformation, which comes after the rotation, processes each pixel channel \
value separately. This allows us to pull apart the rotation matrix by scaling \
each row arbitrarily, handing the knowledge of the scaling to the \
distribution. The goal of this section is to represent the matrix \
multiplication in such a way that we avoid floating\[Hyphen]point operations. \
\>", "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", "\[Theta]", "]"}], "\[LongEqual]", 
   RowBox[{"(", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox["-", "DisplayFormula"], TraditionalForm]]]]]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox["Scale", "DisplayFormula"], TraditionalForm]]]]]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox["-", "DisplayFormula"], TraditionalForm]]]]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]]], 
    ")"}], "\[CircleTimes]", 
   RowBox[{"[", "\[Theta]", "]"}], " ", "where", "  ", 
   RowBox[{
    RowBox[{"[", "\[Theta]", "]"}], "\[Element]", 
    StyleBox["Z",
     FontSlant->"Plain"]}]}], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:NormRxyz4"],

Cell[TextData[{
 "Given an infinite set of integers, this is not a problem. However, we wish \
to choose ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to lie in a finite range, which depends on the color depth of the source. \
Ideally, we\[CloseCurlyQuote]d like the result of the rotation to have a bit \
depth not greater than twice the bit depth of the source, i.e. for \
8\[Hyphen]bit pixel values, we would like the rotated LCaCb values to be \
expressible as 16\[Hyphen]bit integers. To accommodate 3 multiplications and \
2 additions, the matrix ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " needs to be represented in two fewer bits than the source. "
}], "Text"],

Cell[TextData[{
 "This unit range is discretized into steps of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox["1"], TraditionalForm]], "InlineFormula"],
 ". The question then is to what degree of accuracy do we need to represent \
the internal numerics? If we represent the transformation in a discrete type ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ", we can express the problem in terms of the largest perturbation which can \
be made to the transformation without affecting the result. "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox["\[CenterDot]", "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox["\[LongEqual]", "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"let", "  "}], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            RowBox[{"(", "+", ")"}], "\[CenterDot]"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], "\[Null]", "\[Null]"},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            RowBox[{"therefore", " ", "if", " "}], "\[CenterDot]"}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox["\[LongEqual]", "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"then", "  ", "\[CenterDot]", "\[LongEqual]"}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]], "\[Null]"}
     },
     GridBoxAlignment->{
      "Columns" -> {Center, Left, Left, {Left}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "NumberedEquation",
 CellTags->"eq:lxyPixel"],

Cell[TextData[{
 "The continuous rotation ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " can be expressed as the sum of its discrete representation ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " with a discretization factor ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " and the correction ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". The elements of the discrete rotation can be expressed as rational \
fractions. "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          FractionBox[
           RowBox[{"\[LongEqual]", 
            StyleBox["i", "TI"], 
            StyleBox["n", "TI"], 
            StyleBox["t", "TI"], 
            RowBox[{"(", "\[CenterDot]", ")"}]}], 
           RowBox[{"  ", 
            RowBox[{
             RowBox[{
              RowBox[{
               StyleBox["w", "TI"], 
               StyleBox["h", "TI"], 
               StyleBox["e", "TI"], 
               StyleBox["r", "TI"], 
               StyleBox["e", "TI"], "  ", 
               StyleBox["i", "TI"], 
               StyleBox["n", "TI"], 
               StyleBox["t", "TI"], 
               RowBox[{"(", "1.5", ")"}]}], "\[LongEqual]", "1"}], ",", 
             RowBox[{
              RowBox[{
               StyleBox["i", "TI"], 
               StyleBox["n", "TI"], 
               StyleBox["t", "TI"], 
               RowBox[{"(", 
                RowBox[{"-", "1.5"}], ")"}]}], "\[LongEqual]", 
              RowBox[{"-", "1"}]}]}]}]], "DisplayFormula"], 
         TraditionalForm]]]],
        CellTags->"eq:dRRange"]},
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          FractionBox[
           FractionBox[
            RowBox[{
             StyleBox["t", "TI"], 
             StyleBox["h", "TI"], 
             StyleBox["e", "TI"], 
             StyleBox["r", "TI"], 
             StyleBox["e", "TI"], 
             StyleBox["f", "TI"], 
             StyleBox["o", "TI"], 
             StyleBox["r", "TI"], 
             StyleBox["e", "TI"], "  ", "-", "1"}], 
            RowBox[{"<", "<", "1"}]], "\[Null]"], "DisplayFormula"], 
         TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "It should be noted that \[LongDash] unlike the source type \[LongDash] the \
perturbation can be negative. The definition of the function ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"i", "n", "t"}], "TI"], TraditionalForm]], "InlineFormula"],
 " results in the sign of the perturbation matching the sign of the \
discretized transformation matrix. We must therefore consider both the \
maximum and minimum of ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". As ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "\[LessEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " the extrema of ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " are found where ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " is a vector with elements of 0 and 1. If the matrix is decomposed into a \
sum of positive and negative elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[LongEqual]", "+"], 
    SubscriptBox["+", "-"]}], TraditionalForm]], "InlineFormula"],
 " then the extrema are given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"max", "(", 
    RowBox[{
     SubscriptBox["\[Null]", "+"], "\[CenterDot]", 
     StyleBox["1",
      FontSlant->"Bold"]}], ")"}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"min", "(", 
    RowBox[{
     SubscriptBox["\[Null]", "-"], "\[CenterDot]", 
     StyleBox["1",
      FontSlant->"Bold"]}], ")"}], TraditionalForm]], "InlineFormula"],
 ". Where the elements are positive or negative is determined by the sign of \
the elements in the rotation matrix ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ".  "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Factoring the Rotation ", "Subsubsection",
 CellChangeTimes->{3.633112944488859*^9}],

Cell[TextData[{
 "If we were to scale the entire matrix evenly, the top row would dominate as \
it is always positive, and the necessary discrete representation would be \
characterised by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", 
    RowBox[{"3", " "}]}], TraditionalForm]], "InlineFormula"],
 ". This would, however, necessitate the matrix being stored in a data type \
with at least 2 more bits than the source type. "
}], "Text"],

Cell[TextData[{
 "The second and third rows each sum to zero (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CenterDot]", 
    StyleBox["1",
     FontSlant->"Bold"], "\[LongEqual]", 
    RowBox[{"[", 
     RowBox[{
      SqrtBox["3"], ",", "0", ",", "0"}], "]"}]}], TraditionalForm]], 
  "InlineFormula"],
 ", where ",
 Cell[BoxData[
  FormBox[
   StyleBox["1",
    FontSlant->"Bold"], TraditionalForm]], "InlineFormula"],
 " is a vector of ones), allowing us to state that each of the rows has one \
element of the opposite sign to the other two elements. The discretization \
for the second and third rows then only requires ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", 
    RowBox[{"2", " "}]}], TraditionalForm]], "InlineFormula"],
 ". It is also possible to pull out common factors from the rows, resulting \
in all elements taking values between \[Hyphen]1 and 1. "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[Theta]", ")"}], "\[LongEqual]", 
   RowBox[{"(", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            FractionBox["1", 
             SqrtBox["3"]], "DisplayFormula"], TraditionalForm]]]]]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SqrtBox[
             FractionBox["2", "3"]], "DisplayFormula"], 
           TraditionalForm]]]]]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SqrtBox[
             FractionBox["2", "3"]], "DisplayFormula"], TraditionalForm]]]]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]]], 
    ")"}], "\[CircleTimes]", 
   RowBox[{"(", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"-", "sin", 
              RowBox[{"(", 
               RowBox[{"\[Theta]", "+", "6"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"cos", "(", "\[Theta]", ")"}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"sin", "(", 
              RowBox[{"\[Theta]", "-", "6"}], ")"}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"-", "cos", 
              RowBox[{"(", 
               RowBox[{"\[Theta]", "+", "6"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"-", "sin", 
              RowBox[{"(", "\[Theta]", ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"cos", "(", 
              RowBox[{"\[Theta]", "-", "6"}], ")"}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]}
       },
       GridBoxAlignment->{
        "Columns" -> {Center, Left, {Left}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]]], 
    ")"}]}], TraditionalForm]], "NumberedEquation",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell["\<\
To facilitate the quantization, we next factor the second and third rows such \
that the largest element of each row equals exactly 1. As previously \
mentioned, the largest element has the opposite sign to the other two \
elements in a given row. So, the steps required to perform the factorization \
are as follows: \
\>", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[CellGroupData[{

Cell["Find the sign of each of the elements. ", "Item",
 TaggingRules:>{"Tex Macro Name" -> "itemize"}],

Cell["Determine which of those elements is of the opposite sign. ", "Item",
 TaggingRules:>{"Tex Macro Name" -> "itemize"}],

Cell["Factor each row by that largest element. ", "Item",
 TaggingRules:>{"Tex Macro Name" -> "itemize"}]
}, Open  ]],

Cell["\<\
The sign of the elements is most easily seen by looking at the rotation as \
phase shifted sine functions. \
\>", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", "\[Theta]", "]"}], "\[LongEqual]", 
   RowBox[{"(", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "-", 
              FractionBox[
               RowBox[{"5", "\[Pi]"}], "6"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "+", 
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "6"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "-", "6"}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "-", 
              FractionBox[
               RowBox[{"2", "\[Pi]"}], "6"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "-", 
              FractionBox[
               RowBox[{"6", "\[Pi]"}], "6"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\[Theta]", "+", 
              FractionBox[
               RowBox[{"2", "\[Pi]"}], "6"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]}
       },
       GridBoxAlignment->{
        "Columns" -> {Center, Left, {Left}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]]], 
    ")"}]}], TraditionalForm]], "NumberedEquation",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell["So the signs look like  ", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "Each row is a series of three sin waves each ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "3"], TraditionalForm]], "InlineFormula"],
 " out of phase with each other. The rows are",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]], "InlineFormula"],
 " out of phase with each other. The largest element changes every ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "6"], TraditionalForm]], "InlineFormula"],
 " radians repeating every ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]], "InlineFormula"],
 " radians. "
}], "Text"],

Cell[TextData[{
 "By defining ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[LongEqual]", "\[CapitalTheta]", "+"}], 
   TraditionalForm]], "InlineFormula"],
 " \[LongDash] where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "\[LongEqual]", "\[Theta]", "\[NegativeThinSpace]", "\[NegativeThinSpace]  ",
     "mod", "6"}], TraditionalForm]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  FormBox["\[CapitalTheta]", TraditionalForm]], "InlineFormula"],
 " is the starting value for the region in which ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " lies \[LongDash] and substituting in the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "\[Phi]", "]"}], TraditionalForm]], "InlineFormula"],
 ": "
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Phi]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }],
      CellTags->"eq:fReDef"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox["3"], "tan", 
           RowBox[{"(", "\[Phi]", ")"}]}], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]]],

Cell["we can now rewrite the factored rotation as shown in ", "Text"],

Cell[TextData[{
 "We can now relate the functions to each other, since they are now \
essentially the same function, and ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " has the same domain; the values they take have the same range, despite \
being in different positions in the matrix. This allows us to write the \
piecewise function ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " independently as a function ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ", which re\[Hyphen]orders the elements of the matrix in region ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Bold"], TraditionalForm]], "InlineFormula"],
 " appropriately for the other regions. "
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }],
      CellTags->"eq:factoredMatrixDef"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", 
          RowBox[{",", "\[Theta]"}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"(", Cell[BoxData[
             FormBox[GridBox[{
                {Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell[BoxData[{"fRe", "\n", 
                   RowBox[{"(", ")"}]}], "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell[BoxData[{"fRe", "\n", "(", "\n", "-", "\n", 
                  ")"}], "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell[BoxData[{"fRe", "\n", "(", "\n", 
                   RowBox[{
                    FractionBox[
                    StyleBox["\[Pi]", "uniA"], "6"], "-"}], "\n", 
                  ")"}], "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell[BoxData[{"fRe", "\n", "(", "\n", 
                   RowBox[{"-", 
                    FractionBox[
                    StyleBox["\[Pi]", "uniA"], "6"]}], "\n", 
                  ")"}], "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]]}
               }], TraditionalForm]]], ")"}], ",", "\[Theta]"}], "]"}]}], 
        TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "The scaling factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", ")"}], TraditionalForm]], "InlineFormula"],
 " can also be further simplified by separating the sign and combining the \
functional parts.  ",
 Cell[BoxData[
  FormBox[GridBox[{
     {Cell[TextData[{
       " ",
       Cell[BoxData[
        FormBox[
         RowBox[{"(", "\[Theta]", ")"}], TraditionalForm]], "InlineFormula"],
       " "
      }]], Cell[TextData[Cell[BoxData[
       FormBox[Cell[BoxData[
         FormBox[GridBox[{
            {Cell[TextData[{
              " ",
              Cell[BoxData[
               RowBox[{"\n", Cell[BoxData[
                 FormBox[
                 Cell[TextData[Cell["1", "InlineFormula"]]], 
                  TraditionalForm]]]}]], "InlineFormula"],
              " "
             }]], Cell[" "]}
           }], TraditionalForm]]], TraditionalForm]], "InlineFormula"]]]},
     {Cell[TextData[{
       " ",
       Cell[BoxData[
        FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
       " "
      }]], Cell[TextData[{
       " ",
       Cell[BoxData[
        FormBox[
         RowBox[{"\[LongEqual]", 
          RowBox[{"(", Cell[BoxData[
            FormBox[Cell[""], TraditionalForm]]], ")"}], "  ", "where", "  ", 
          Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[Cell[BoxData[{
                OverscriptBox["\[Theta]", "~"], "\n", "\[LongEqual]", "\n", 
               "\[Theta]", "\n", "mod", "\n", 
                FractionBox["\[Pi]", "3"]}], "InlineFormula"]]]},
              {Cell[TextData[Cell[BoxData[{
                OverscriptBox["\[CurlyTheta]", "~"], "\n", "\[LongEqual]", 
               "\n", 
                RowBox[{"(", 
                 RowBox[{"\[Theta]", "-", "6"}], ")"}], "\n", "mod", "\n", 
                FractionBox["\[Pi]", "3"]}], "InlineFormula"]]]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
            TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
       " "
      }]]}
    }], TraditionalForm]]],
 " "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"},
 CellChangeTimes->{{3.63312071660774*^9, 3.6331208331016703`*^9}}],

Cell[TextData[{
 "then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[Theta]", ")"}], "\[LongEqual]", 
    RowBox[{"(", "\[Theta]", ")"}], "\[CircleTimes]", 
    RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]], "InlineFormula"],
 ", where ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " is a piecewise function containing the signs.  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", "\[Theta]", "]"}], "+", 
         RowBox[{"[", "\[Theta]", "]"}]}], TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", "\[CircleTimes]", 
         RowBox[{"(", "\[Theta]", ")"}], "\[CircleTimes]", 
         RowBox[{"[", 
          StyleBox["n", "TI"], "]"}], "\[CircleTimes]", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"[", 
            RowBox[{"\[Theta]", ",", 
             StyleBox["n", "TI"]}], "]"}], "+", 
           RowBox[{"[", 
            RowBox[{"\[Theta]", ",", 
             StyleBox["n", "TI"]}], "]"}]}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"(", Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 3]], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 2]], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 2]], "InlineFormula"],
                " "
               }]]}
             }], TraditionalForm]]], ")"}], "\[CircleTimes]", 
         RowBox[{"(", Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell["1", "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData["2"], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData["2"], "InlineFormula"],
                " "
               }]]}
             }], TraditionalForm]]], ")"}], "\[CircleTimes]", 
         RowBox[{"(", "\[Theta]", ")"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"[", 
            RowBox[{"\[Theta]", ",", 
             StyleBox["n", "TI"]}], "]"}], "+", 
           RowBox[{"[", 
            RowBox[{"\[Theta]", ",", 
             StyleBox["n", "TI"]}], "]"}]}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell["defining ", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", 
         RowBox[{"\[Theta]", ",", 
          StyleBox["n", "TI"]}], "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }],
      CellTags->"eq:scaleDef"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"(", Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 3]], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData["2"], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData["2"], "InlineFormula"],
                " "
               }]]}
             }], TraditionalForm]]], ")"}], "\[CircleTimes]", 
         RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{"[", 
           RowBox[{"\[Theta]", ",", 
            StyleBox["n", "TI"]}], "]"}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{"[", 
           RowBox[{"\[Theta]", ",", 
            StyleBox["n", "TI"]}], "]"}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "the perturbation to the rotated channel elements ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " is found for an input set of pixel values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", 
    SuperscriptBox["2", 
     StyleBox["n", "TI"]]}], TraditionalForm]], "InlineFormula"],
 " "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["+", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CenterDot]", "+", 
         RowBox[{"[", "\[Theta]", "]"}], "\[CenterDot]"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         SuperscriptBox["2", 
          StyleBox["n", "TI"]], 
         RowBox[{"[", "\[Theta]", "]"}], "\[CenterDot]"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         SuperscriptBox["2", 
          StyleBox["n", "TI"]], 
         RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{"[", 
           RowBox[{"\[Theta]", ",", 
            StyleBox["n", "TI"]}], "]"}], "]"}], "\[CenterDot]"}], 
        TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"(", Cell[BoxData[
             FormBox[GridBox[{
                {Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell[BoxData[{"2", "\n", 
                   RowBox[{"[", "]"}]}], "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell[BoxData[{"2", "\n", 
                   RowBox[{"[", 
                    RowBox[{"6", "-"}], "]"}]}], "InlineFormula"],
                  " "
                 }]]}
               }], TraditionalForm]]], ")"}], "\[CircleTimes]", 
           RowBox[{"(", Cell[BoxData[
             FormBox[GridBox[{
                {Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["-1", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell["1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["-1", "InlineFormula"],
                  " "
                 }]], Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]]}
               }], TraditionalForm]]], ")"}], ",", "\[Theta]"}], "]"}]}], 
        TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "So, to minimize the perturbation, we need to simultaneously minimize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", "]"}]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", 
     RowBox[{"6", "-"}], "]"}]}], TraditionalForm]], "InlineFormula"],
 " "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "caption Perturbation to channels a and b against angle ",
 Cell[BoxData[
  FormBox["\[Delta]\[Theta]", TraditionalForm]], "InlineFormula"],
 " \nFor n \[LongEqual] 8 with ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 " regions shaded and extrema labelled  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "The maxima for each function are where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", "]"}], "\[LongEqual]", "\[PlusMinus]", "1"}], 
   TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", 
     RowBox[{"6", "-"}], "]"}], "\[LongEqual]", "\[PlusMinus]", "1"}], 
   TraditionalForm]], "InlineFormula"],
 ", and the minima are where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", "]"}], "\[LongEqual]", "0"}], TraditionalForm]], 
  "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2", 
    RowBox[{"[", 
     RowBox[{"6", "-"}], "]"}], "\[LongEqual]", "0"}], TraditionalForm]], 
  "InlineFormula"],
 ". To find the corresponding values of ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ", all that is needed is an inverse function for ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". In essence ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "\[Phi]", "]"}], TraditionalForm]], "InlineFormula"],
 " discretizes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["3"], "tan", 
    RowBox[{"(", "\[Phi]", ")"}]}], TraditionalForm]], "InlineFormula"],
 " into steps of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{"3", "-", 
     StyleBox["n", "TI"]}]], TraditionalForm]], "InlineFormula"],
 ". The minima can be found by taking the inverse of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["3"], "tan", 
    RowBox[{"(", "\[Phi]", ")"}]}], TraditionalForm]], "InlineFormula"],
 ", given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    SqrtBox["3"], "tan", 
    RowBox[{"(", "\[Phi]", ")"}], "\[LessEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "\[Phi]", "\[LessEqual]", "6"}], 
   TraditionalForm]], "InlineFormula"],
 " we can say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Round", 
    RowBox[{"[", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        StyleBox["n", "TI"], "-", "3"}]], 
      SqrtBox["3"], "tan", 
      RowBox[{"(", "\[Phi]", ")"}]}], "]"}], "\[Element]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "\[CenterEllipsis]", 
      SuperscriptBox["2", 
       RowBox[{
        StyleBox["n", "TI"], "-", "3"}]]}], "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 " "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", "\[Phi]", "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "0"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", 
         RowBox[{"6", "-", "\[Phi]"}], "]"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"0", "  "}], "when"}], TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           StyleBox["n", "TI"], "-", "3"}]], 
         SqrtBox["3"], "tan", 
         RowBox[{"(", "\[Phi]", ")"}]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         StyleBox["m", "TI"]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           StyleBox["n", "TI"], "-", "3"}]], 
         SqrtBox["3"], "tan", 
         RowBox[{"(", 
          RowBox[{"6", "-", "\[Phi]"}], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         StyleBox["m", "TI"], "  ", "where", "  ", 
         StyleBox["m", "TI"], "\[LongEqual]", "0", ",", "1", ",", "2", 
         "\[CenterEllipsis]", 
         SuperscriptBox["2", 
          RowBox[{
           StyleBox["n", "TI"], "-", "3"}]]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         StyleBox["b", "TI"], "\[LongEqual]"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"arctan", "(", 
         FractionBox[
          RowBox[{
           StyleBox["m", "TI"], 
           SuperscriptBox["2", 
            RowBox[{"3", "-", 
             StyleBox["n", "TI"]}]]}], 
          SqrtBox["3"]], ")"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"arctan", "(", 
         FractionBox[
          RowBox[{"2", 
           SqrtBox["3"], 
           StyleBox["m", "TI"]}], 
          RowBox[{
           SuperscriptBox["2", 
            StyleBox["n", "TI"]], "-", "2", 
           StyleBox["m", "TI"]}]], ")"}], TraditionalForm]], "InlineFormula"],
      
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell["\<\
The maxima can be found by recognizing that the maximum rounding error is a \
half and evaluating at these points \
\>", "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", 
         StyleBox["b", "TI"], "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "\[PlusMinus]", "1"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"[", 
         RowBox[{"6", "-", 
          StyleBox["a", "TI"]}], "]"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "\[PlusMinus]", 
         RowBox[{"1", "  "}], "when"}], TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        StyleBox["b", "TI"], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "arctan", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["2", 
             RowBox[{"3", "-", 
              StyleBox["n", "TI"]}]], 
            SqrtBox["3"]], "(", 
           RowBox[{
            StyleBox["m", "TI"], "+", 
            FractionBox["1", "2"]}], ")"}], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "arctan", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", 
            SqrtBox["3"], 
            RowBox[{"(", 
             RowBox[{
              StyleBox["m", "TI"], "+", 
              FractionBox["1", "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["2", 
             StyleBox["n", "TI"]], "-", "2", 
            RowBox[{"(", 
             RowBox[{
              StyleBox["m", "TI"], "+", 
              FractionBox["1", "2"]}], ")"}]}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        StyleBox["b", "TI"], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "arctan", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", 
              StyleBox["m", "TI"], "+", "1"}], ")"}], 
            SuperscriptBox["2", 
             RowBox[{"2", "-", 
              StyleBox["n", "TI"]}]]}], 
           SqrtBox["3"]], ")"}]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "arctan", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], "(", 
            RowBox[{"2", 
             StyleBox["m", "TI"], "+", "1"}], ")"}], 
           RowBox[{
            SuperscriptBox["2", 
             StyleBox["n", "TI"]], "-", "2", 
            StyleBox["m", "TI"], "-", "1"}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["  ", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"with", "  ", 
         StyleBox["m", "TI"], "\[LongEqual]", "0", ",", "1", ",", "2", ",", 
         "3", "\[CenterEllipsis]", 
         SuperscriptBox["2", 
          RowBox[{
           StyleBox["n", "TI"], "-", "3"}]], "-", "1"}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], "\[Null]", "\[Null]"}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "We are interested in a compromise between the perturbations to each channel \
which is where the perturbations intersect. It would be useful to be able to \
assign a relative importance ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineFormula"],
 " to each channel a and b respectively.  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{
           RowBox[{"\[Beta]", " "}], 
           RowBox[{"[", "\[Phi]", "]"}], "\[LongEqual]", 
           RowBox[{"\[Alpha]", " "}], 
           RowBox[{"[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", "\[Phi]"}], "]"}], "  ", 
           StyleBox["when", "TB"]}], "DisplayFormula"], 
         TraditionalForm]]]]]},
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox[
                  StyleBox[
                   RowBox[{"\[Beta]", "Round", 
                    RowBox[{"[", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{
                    StyleBox["n", "TI"], "-", "3"}]], 
                    SqrtBox["3"], "tan", 
                    RowBox[{"(", "\[Phi]", ")"}]}], "]"}], "-", "\[Alpha]", 
                    "Round", 
                    RowBox[{"[", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{
                    StyleBox["n", "TI"], "-", "3"}]], 
                    SqrtBox["3"], "tan", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    StyleBox["\[Pi]", "uniA"], "6"], "-", "\[Phi]"}], ")"}]}],
                     "]"}]}], "DisplayFormula"], TraditionalForm]]],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox[
                  StyleBox[
                   RowBox[{"\[LongEqual]", 
                    SuperscriptBox["2", 
                    RowBox[{
                    StyleBox["n", "TI"], "-", "3"}]], 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox["3"], "\[Alpha]", "tan", 
                    RowBox[{"(", "\[Theta]", ")"}], "+", "2", "\[Beta]", 
                    "sin", 
                    RowBox[{"(", "\[Theta]", ")"}], "sec", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], ")"}]}], 
                    ")"}]}], "DisplayFormula"], TraditionalForm]]],
                " "
               }]]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
            TraditionalForm]]], "DisplayFormula"], TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "Equation",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[TextData[{
 "The values ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineFormula"],
 " can only move the point of intersection within the bounds of the extrema. \
Therefore, any solution for the point of intersection will enable the \
bounding extrema to be identified. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[TextData[{
 "We solve first for the case where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[LongEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "\[LongEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 ". Recognizing that the rounded part can only take certain values "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["i", "TI"], "\[LongEqual]", "Round", 
   RowBox[{"[", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       StyleBox["n", "TI"], "-", "3"}]], 
     SqrtBox["3"], "tan", 
     RowBox[{"(", "\[Phi]", ")"}]}], "]"}], "-", "Round", 
   RowBox[{"[", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       StyleBox["n", "TI"], "-", "3"}]], 
     SqrtBox["3"], "tan", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "-", "\[Phi]"}], ")"}]}], "]"}], "  ", 
   "where", "  ", 
   StyleBox["i", "TI"], "\[LongEqual]", "0", ",", "1", ",", "2", 
   "\[CenterEllipsis]", 
   SuperscriptBox["2", 
    RowBox[{
     StyleBox["n", "TI"], "-", "2"}]]}], TraditionalForm]], "NumberedEquation",\

 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["then ", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "arctan", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 StyleBox["i", "TI"], "2"], 
                SuperscriptBox["2", 
                 RowBox[{"6", "-", "2", 
                  StyleBox["n", "TI"]}]], "-", 
                StyleBox["i", "TI"], 
                SuperscriptBox["2", 
                 RowBox[{"4", "-", 
                  StyleBox["n", "TI"]}]], "+", "49"}]], "+", 
              StyleBox["i", "TI"], 
              SuperscriptBox["2", 
               RowBox[{"3", "-", 
                StyleBox["n", "TI"]}]], "-", "7"}], 
             RowBox[{"2", 
              SqrtBox["3"]}]], ")"}], "  ", "where", "  ", 
           StyleBox["i", "TI"], "\[LongEqual]", "0", ",", "1", ",", "2", 
           "\[CenterEllipsis]", 
           SuperscriptBox["2", 
            RowBox[{
             StyleBox["n", "TI"], "-", "2"}]]}], "DisplayFormula"], 
         TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "Equation",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["\<\
Each point of intersection is defined and bounded by 4 extrema. Comparing \
with the functional form of the extrema allows these 4 points to be \
identified. \
\>", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["\<\
Separating the points of intersection into even and odd terms facilitates the \
identification. \
\>", "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[Cell[BoxData[
    FormBox[GridBox[{
       {Cell["  "], Cell[" Channel a  "], Cell[" Channel b  "], Cell[
        " i  "]},
       {Cell[" Minima  "], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["a", "TI"], "\n", 
          RowBox[{"(", 
           FractionBox[
            StyleBox["i", "TI"], "2"], ")"}], "\n", "\[LongEqual]", "\n", 
          StyleBox["a", "TI"], "\n", 
          StyleBox["i", "TI"]}], "InlineFormula"],
         "  "
        }]], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["b", "TI"], "\n", 
          RowBox[{"(", 
           FractionBox[
            StyleBox["i", "TI"], "2"], ")"}], "\n", "\[LongEqual]", "\n", 
          StyleBox["b", "TI"], "\n", 
          StyleBox["i", "TI"]}], "InlineFormula"],
         "  "
        }]], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["i", "TI"], "\n", "\[Element]", "\n", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "4", ",", "6", "\[CenterEllipsis]", 
            SuperscriptBox["2", 
             RowBox[{
              StyleBox["n", "TI"], "-", "2"}]]}], "}"}]}], "InlineFormula"],
         " "
        }]]},
       {Cell[" Maxima  "], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["a", "TI"], "\n", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             StyleBox["i", "TI"], "-", "1"}], "2"], ")"}], "\n", 
         "\[LongEqual]", "\n", 
          StyleBox["a", "TI"], "\n", 
          StyleBox["i", "TI"]}], "InlineFormula"],
         "  "
        }]], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["b", "TI"], "\n", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             StyleBox["i", "TI"], "-", "1"}], "2"], ")"}], "\n", 
         "\[LongEqual]", "\n", 
          StyleBox["b", "TI"], "\n", 
          StyleBox["i", "TI"]}], "InlineFormula"],
         "  "
        }]], Cell[TextData[{
         " ",
         Cell[BoxData[{
          StyleBox["i", "TI"], "\n", "\[Element]", "\n", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3", ",", "5", ",", "7", "\[CenterEllipsis]", 
            SuperscriptBox["2", 
             RowBox[{
              StyleBox["n", "TI"], "-", "2"}]], "-", "1"}], "}"}]}], 
          "InlineFormula"],
         "  "
        }]]}
      }], TraditionalForm]]], TraditionalForm]], "InlineFormula"],
 " "
}], "Text"],

Cell[TextData[{
 "The following ranges are guaranteed to be true for even or odd values of ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 ", with very specific values of ",
 Cell[BoxData[
  FormBox[
   StyleBox["p", "TI"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["q", "TI"], TraditionalForm]], "InlineFormula"],
 ". "
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[Cell[BoxData[
         FormBox[GridBox[{
            {Cell[TextData[Cell[BoxData[{
              StyleBox["b", "TI"], "\n", 
              RowBox[{
               StyleBox["p", "TI"], "-", "1"}]}], "InlineFormula"]]], Cell[
             TextData[Cell["<", "InlineFormula"]]]},
            {Cell[TextData[Cell[BoxData[{
              StyleBox["a", "TI"], "\n", 
              StyleBox["q", "TI"]}], "InlineFormula"]]], Cell[TextData[Cell[
             "<", "InlineFormula"]]]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
          TraditionalForm]]], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         StyleBox["i", "TI"], Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["a", "TI"], "\n", 
               RowBox[{
                StyleBox["q", "TI"], "+", "1"}]}], "InlineFormula"]]]},
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["b", "TI"], "\n", 
               StyleBox["p", "TI"]}], "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[Vee]", Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell[BoxData[{
               StyleBox["a", "TI"], "\n", 
               RowBox[{
                StyleBox["q", "TI"], "+", "1"}]}], "InlineFormula"]]], Cell[
              TextData[Cell["<", "InlineFormula"]]]},
             {Cell[TextData[Cell[BoxData[{
               StyleBox["b", "TI"], "\n", 
               StyleBox["p", "TI"]}], "InlineFormula"]]], Cell[TextData[Cell[
              "<", "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         RowBox[{
          StyleBox["i", "TI"], "+", "1"}], Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["b", "TI"], "\n", 
               RowBox[{
                StyleBox["p", "TI"], "+", "1"}]}], "InlineFormula"]]]},
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["a", "TI"], "\n", 
               RowBox[{
                StyleBox["q", "TI"], "+", "2"}]}], "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[Cell[BoxData[
         FormBox[GridBox[{
            {Cell[TextData[Cell[BoxData[
              FormBox["p", TI]], "InlineFormula"]]], Cell[TextData[Cell[
             BoxData[{"\[Element]", "\n", 
              RowBox[{"{", 
               RowBox[{"2", 
                StyleBox["N",
                 FontSlant->"Plain"]}], "}"}]}], "InlineFormula"]]]},
            {Cell[TextData[Cell[BoxData[
              FormBox["q", TI]], "InlineFormula"]]], Cell[TextData[Cell[
             BoxData[{"\[Element]", "\n", 
              RowBox[{"{", 
               RowBox[{"2", 
                StyleBox["N",
                 FontSlant->"Plain"]}], "}"}]}], "InlineFormula"]]]},
            {Cell[TextData[Cell["2", "InlineFormula"]]], Cell[TextData[Cell[
             BoxData[{"\[LessEqual]", "\n", 
              StyleBox["i", "TI"], "\n", "\[LessEqual]", "\n", 
              SuperscriptBox["2", 
               RowBox[{
                StyleBox["n", "TI"], "-", "2"}]], "\n", "-", "\n", 
             "1"}], "InlineFormula"]]]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
          TraditionalForm]]], TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]]],

Cell[TextData[{
 "This slightly glib definition illustrates the pattern for the extrema \
bounding the points of intersection. At the start of a ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[CapitalPi]", "6"], TraditionalForm]], "InlineFormula"],
 " region, i.e. for low values of ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["p", "TI"], "\[LongEqual]", 
    StyleBox["i", "TI"]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["q", "TI"], "\[LongEqual]", 
    StyleBox["i", "TI"]}], TraditionalForm]], "InlineFormula"],
 ". The maxima swap orderings between certain values of ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " within a ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[CapitalPi]", "6"], TraditionalForm]], "InlineFormula"],
 " region. This is evident in the inescapable indices of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["i", "TI"], "-", "1"}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["i", "TI"], "+", "1"}], TraditionalForm]], "InlineFormula"],
 ", regardless of the starting values for ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " for either the maxima or minima. So, whilst it is true that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["a", "TI"], 
    StyleBox["i", "TI"], ">", 
    StyleBox["b", "TI"], 
    StyleBox["i", "TI"]}], TraditionalForm]], "InlineFormula"],
 ", it is not always true that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["a", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "+", "1"}], ">", 
    StyleBox["b", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "-", "1"}]}], TraditionalForm]], "InlineFormula"],
 ". This leads to the question of what happens when this boundary ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["a", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "+", "1"}], "\[LongEqual]", 
    StyleBox["b", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "-", "1"}]}], TraditionalForm]], "InlineFormula"],
 " is crossed. Firstly, the even\[Hyphen]odd ordering (i.e. the a\[Hyphen]b \
channel ordering) is flipped; secondly, the indices are shifted. A second \
transition restores the a\[Hyphen]b ordering and shifts the indices again. As \
the index ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " passes the half way point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", 
    SuperscriptBox["2", 
     RowBox[{
      StyleBox["n", "TI"], "-", "3"}]]}], TraditionalForm]], 
  "InlineFormula"],
 ", the transitions occur in the opposite direction, restoring the indices \
and ordering. Transitions occur where ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["a", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "+", "\[Iota]"}], "\[LongEqual]", 
    StyleBox["b", "TI"], 
    RowBox[{
     StyleBox["i", "TI"], "-", "\[Iota]"}]}], TraditionalForm]], 
  "InlineFormula"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Iota]", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", "\[CenterEllipsis]", 
      RowBox[{"(", 
       RowBox[{"7", "-", "4", 
        SqrtBox["3"]}], ")"}], 
      SuperscriptBox["2", 
       RowBox[{
        StyleBox["n", "TI"], "-", "3"}]]}], "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 ". "
}], "Text"],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{"\[LongEqual]", 
           SuperscriptBox["2", 
            RowBox[{
             StyleBox["n", "TI"], "-", "3"}]], "    ", 
           StyleBox["\[CapitalGamma]",
            FontSlant->"Italic"], 
           RowBox[{"(", 
            RowBox[{"\[Iota]", ",", 
             StyleBox["n", "TI"]}], ")"}], "\[LongEqual]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Iota]", "2"], "-", "14", "\[Iota]", 
             SuperscriptBox["+", "2"]}]]}], "DisplayFormula"], 
         TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "Equation",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[TextData[{
 "The region ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 " for a given value of ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " is the highest value of ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 " for which the following condition remains true: "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{"-", 
           StyleBox["\[CapitalGamma]",
            FontSlant->"Italic"], 
           RowBox[{"(", 
            RowBox[{"\[Iota]", ",", 
             StyleBox["n", "TI"]}], ")"}], "\[LessEqual]", 
           StyleBox["i", "TI"], "\[LessEqual]", 
           StyleBox["\[CapitalGamma]",
            FontSlant->"Italic"], 
           RowBox[{"(", 
            RowBox[{"\[Iota]", ",", 
             StyleBox["n", "TI"]}], ")"}], "+"}], "DisplayFormula"], 
         TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "Equation",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell[TextData[{
 "For a given value of ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["n", "TI"], TraditionalForm]], "InlineFormula"],
 ", we can find the intersection index ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 ", and from this we can find ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 ": "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather*"}],

Cell["", "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{
           StyleBox["i", "TI"], 
           RowBox[{"(", 
            RowBox[{"\[Delta]\[Theta]", ",", 
             StyleBox["n", "TI"]}], ")"}], "\[LongEqual]", 
           FractionBox[
            RowBox[{"tan", 
             RowBox[{"(", "\[Delta]\[Theta]", ")"}], 
             RowBox[{"(", 
              RowBox[{
               SqrtBox["3"], "tan", 
               RowBox[{"(", "\[Delta]\[Theta]", ")"}], "+", "7"}], ")"}]}], 
            RowBox[{"tan", 
             RowBox[{"(", "\[Delta]\[Theta]", ")"}], "+", 
             SqrtBox["3"]}]], "  ", "where", "  ", "\[Delta]\[Theta]", 
           "\[LongEqual]", 
           RowBox[{"\[Theta]", "  "}], "mod", 
           FractionBox[
            StyleBox["\[Pi]", "uniA"], "6"]}], "DisplayFormula"], 
         TraditionalForm]]]],
        CellTags->"eq:indexFromTheta"]},
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{"\[Iota]", 
           RowBox[{"(", 
            RowBox[{
             StyleBox["i", "TI"], ",", 
             StyleBox["n", "TI"]}], ")"}], "\[LongEqual]", 
           RowBox[{"\[LeftFloor]", 
            RowBox[{
             RowBox[{"7", " "}], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                StyleBox["i", "TI"], "2"], "-", "2", 
               StyleBox["i", "TI"], " ", "+", 
               RowBox[{"49", " "}], "2"}]]}], "\[RightFloor]"}]}], 
          "DisplayFormula"], TraditionalForm]]]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}], TraditionalForm]]], 
  TraditionalForm]], "NumberedEquation",
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[TextData[{
 "The sequence of a\[Hyphen]b channel extrema depends on both the index ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " and the region ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 " in the following way: "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[Cell[BoxData[
         FormBox[GridBox[{
            {Cell[TextData[Cell[BoxData[{
              StyleBox["b", "TI"], "\n", 
              RowBox[{
               StyleBox["i", "TI"], "-", "\[Iota]", "-", "1"}]}], 
              "InlineFormula"]]], Cell[TextData[Cell[
             "<", "InlineFormula"]]]},
            {Cell[TextData[Cell[BoxData[{
              StyleBox["a", "TI"], "\n", 
              RowBox[{
               StyleBox["i", "TI"], "+", "\[Iota]"}]}], "InlineFormula"]]], 
             Cell[TextData[Cell["<", "InlineFormula"]]]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
          TraditionalForm]]], TraditionalForm]], "InlineFormula"],
      " "
     }],
      CellTags->"eq:extremaBounds"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         StyleBox["i", "TI"], Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["a", "TI"], "\n", 
               RowBox[{
                StyleBox["i", "TI"], "+", "\[Iota]", "+", "1"}]}], 
               "InlineFormula"]]]},
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["b", "TI"], "\n", 
               RowBox[{
                StyleBox["i", "TI"], "-", "\[Iota]"}]}], "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"when", "  ", Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell[BoxData[{
               StyleBox["i", "TI"], "\n", "\[Element]", "\n", 
               RowBox[{"{", 
                RowBox[{"2", 
                 StyleBox["N",
                  FontSlant->"Plain"], "+", "1"}], "}"}]}], 
               "InlineFormula"]]], Cell[TextData[Cell[
              "\[Wedge]", "InlineFormula"]]], Cell[TextData[Cell[BoxData[{
              "\[Iota]", "\n", 
               RowBox[{
                RowBox[{"\[Element]", "\n", 
                 RowBox[{"{", 
                  RowBox[{"2", 
                   StyleBox["N",
                    FontSlant->"Plain"], "+", "1"}], "}"}]}], "\n", " "}], 
              "\n", "\[Vee]"}], "InlineFormula"]]]},
             {Cell[TextData[Cell[BoxData[{
               StyleBox["i", "TI"], "\n", "\[Element]", "\n", 
               RowBox[{"{", 
                RowBox[{"2", 
                 StyleBox["N",
                  FontSlant->"Plain"]}], "}"}]}], "InlineFormula"]]], Cell[
              TextData[Cell["\[Wedge]", "InlineFormula"]]], Cell[TextData[
              Cell[BoxData[{"\[Iota]", "\n", "\[Element]", "\n", 
               RowBox[{"{", 
                RowBox[{"2", 
                 StyleBox["N",
                  FontSlant->"Plain"]}], "}"}]}], "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Left, Center, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[Cell[BoxData[
         FormBox[GridBox[{
            {Cell[TextData[Cell[BoxData[{
              StyleBox["a", "TI"], "\n", 
              RowBox[{
               StyleBox["i", "TI"], "+", "\[Iota]"}]}], "InlineFormula"]]], 
             Cell[TextData[Cell["<", "InlineFormula"]]]},
            {Cell[TextData[Cell[BoxData[{
              StyleBox["b", "TI"], "\n", 
              RowBox[{
               StyleBox["i", "TI"], "-", "\[Iota]", "-", "1"}]}], 
              "InlineFormula"]]], Cell[TextData[Cell["<", "InlineFormula"]]]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
          TraditionalForm]]], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         StyleBox["i", "TI"], Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["b", "TI"], "\n", 
               RowBox[{
                StyleBox["i", "TI"], "-", "\[Iota]"}]}], "InlineFormula"]]]},
             {Cell[TextData[Cell["<", "InlineFormula"]]], Cell[TextData[Cell[
              BoxData[{
               StyleBox["a", "TI"], "\n", 
               RowBox[{
                StyleBox["i", "TI"], "+", "\[Iota]", "+", "1"}]}], 
               "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Center, {Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"when", "  ", Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[Cell[BoxData[{"(", "\n", 
               RowBox[{
                StyleBox["i", "TI"], "\[Element]", 
                RowBox[{"{", 
                 RowBox[{"2", 
                  StyleBox["N",
                   FontSlant->"Plain"], "+", "1"}], "}"}]}]}], 
               "InlineFormula"]]], Cell[TextData[Cell[
              "\[Wedge]", "InlineFormula"]]], Cell[TextData[Cell[BoxData[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Iota]", "\n", 
                  RowBox[{"\[Element]", "\n", 
                   RowBox[{"{", 
                    RowBox[{"2", 
                    StyleBox["N",
                    FontSlant->"Plain"]}], "}"}]}], "\n"}], ")"}], " "}], 
              "\n", "\[Vee]"}], "InlineFormula"]]]},
             {Cell[TextData[Cell[BoxData[{"(", "\n", 
               RowBox[{
                StyleBox["i", "TI"], "\[Element]", 
                RowBox[{"{", 
                 RowBox[{"2", 
                  StyleBox["N",
                   FontSlant->"Plain"]}], "}"}]}]}], "InlineFormula"]]], Cell[
              TextData[Cell["\[Wedge]", "InlineFormula"]]], Cell[TextData[
              Cell[BoxData[{"\[Iota]", "\n", "\[Element]", "\n", 
               RowBox[{"{", 
                RowBox[{"2", 
                 StyleBox["N",
                  FontSlant->"Plain"], "+", "1"}], "}"}], "\n", 
              ")"}], "InlineFormula"]]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {Left, Center, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
           TraditionalForm]]]}], TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   },
   GridBoxAlignment->{
    "Columns" -> {Right, Center, {Left}}, "ColumnsIndexed" -> {}, 
     "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[TextData[{
 "We want to classify the points of intersection as greater or lesser than a \
tolerance ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "\[Tau]", "\[LessEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 ". In order to do this, we make a linear approximation to the perturbation \
between the extrema. There is one point of intersection between each of the \
maxima and corresponding minima. A bit of geometry allows us to write a \
classification criteria for each of the points of intersection. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[TextData[{
 "Defining a function for the degree of error at the point of intersection \
using the linear approximation from the four extrema surrounding the point, \
and generalizing to allow for different maximum errors ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineFormula"],
 " for channel ",
 Cell[BoxData[
  FormBox[
   StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineFormula"],
 " for channel b. The conditions on ",
 Cell[BoxData[
  FormBox[
   StyleBox["i", "TI"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Iota]", TraditionalForm]], "InlineFormula"],
 " can be more compactly written by applying a condition to their product. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "gather"}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["h", "TI"], 
   RowBox[{"(", 
    RowBox[{
     StyleBox["i", "TI"], ",", "\[Iota]"}], ")"}], "\[LongEqual]", 
   RowBox[{"{", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             FractionBox[
              RowBox[{"\[Alpha]\[Beta]", "(", 
               RowBox[{
                StyleBox["a", "TI"], 
                RowBox[{
                 StyleBox["i", "TI"], "+", "\[Iota]"}], "-", 
                StyleBox["b", "TI"], 
                RowBox[{
                 StyleBox["i", "TI"], "-", "\[Iota]"}]}], ")"}], 
              RowBox[{"\[Beta]", 
               RowBox[{"(", 
                RowBox[{
                 StyleBox["a", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "+", "\[Iota]"}], "-", 
                 StyleBox["a", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "+", "\[Iota]", "+", "1"}]}], ")"}], 
               "+", "\[Alpha]", 
               RowBox[{"(", 
                RowBox[{
                 StyleBox["b", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "-", "\[Iota]", "-", "1"}], "-", 
                 StyleBox["b", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "-", "\[Iota]"}]}], ")"}]}]], 
             "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              StyleBox["i", "TI"], "+", "\[Iota]", "\[Element]", 
              RowBox[{"{", 
               RowBox[{"2", 
                StyleBox["N",
                 FontSlant->"Plain"]}], "}"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             FractionBox[
              RowBox[{"\[Alpha]\[Beta]", "(", 
               RowBox[{
                StyleBox["b", "TI"], 
                RowBox[{
                 StyleBox["i", "TI"], "-", "\[Iota]", "-", "1"}], "-", 
                StyleBox["a", "TI"], 
                RowBox[{
                 StyleBox["i", "TI"], "+", "\[Iota]", "+", "1"}]}], ")"}], 
              RowBox[{"\[Beta]", 
               RowBox[{"(", 
                RowBox[{
                 StyleBox["a", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "+", "\[Iota]"}], "-", 
                 StyleBox["a", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "+", "\[Iota]", "+", "1"}]}], ")"}], 
               "+", "\[Alpha]", 
               RowBox[{"(", 
                RowBox[{
                 StyleBox["b", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "-", "\[Iota]", "-", "1"}], "-", 
                 StyleBox["b", "TI"], 
                 RowBox[{
                  StyleBox["i", "TI"], "-", "\[Iota]"}]}], ")"}]}]], 
             "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              StyleBox["i", "TI"], "+", "\[Iota]", "\[Element]", 
              RowBox[{"{", 
               RowBox[{"2", 
                StyleBox["N",
                 FontSlant->"Plain"], "+", "1"}], "}"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]}
       },
       GridBoxAlignment->{
        "Columns" -> {Left, {Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], 
      TraditionalForm]]]}]}], TraditionalForm]], "NumberedEquation",
 TaggingRules:>{{"Tex Macro Name" -> "gather"}, {
   "Tex Macro Name" -> "matrix"}},
 CellTags->"eq:generalisedPerturbation"],

Cell[TextData[{
 "allows the criteria for a channel to be written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", "\[GreaterEqual]", 
    StyleBox["h", "TI"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["i", "TI"], ",", "\[Iota]"}], ")"}]}], TraditionalForm]], 
  "InlineFormula"],
 ". "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "The criteria ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", "\[LongEqual]", "\[Null]"}], TraditionalForm]], 
  "InlineFormula"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[LongEqual]", "\[Beta]"}], TraditionalForm]], 
  "InlineFormula"],
 " selects from either the odd values or the even values of i, because if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["h", "TI"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["i", "TI"], ",", 
      StyleBox["n", "TI"]}], ")"}], "<", "\[Null]"}], TraditionalForm]], 
  "InlineFormula"],
 " is true, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["h", "TI"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["i", "TI"], "+", "1", ",", 
      StyleBox["n", "TI"]}], ")"}], "<", "\[Null]"}], TraditionalForm]], 
  "InlineFormula"],
 " is false and vice versa. There are ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{
     StyleBox["n", "TI"], "-", "2"}]], TraditionalForm]], "InlineFormula"],
 " points of intersection and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{
     StyleBox["n", "TI"], "-", "3"}]], TraditionalForm]], "InlineFormula"],
 " which satisfy the criteria ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", "\[LongEqual]", 
    FractionBox["1", "2"]}], TraditionalForm]], "InlineFormula"],
 ". The algorithm as implemented in openCV leaves the decision about the \
criteria up to the programmer. The programmer chooses a value for ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " and selects a value for ",
 Cell[BoxData[
  FormBox["\[Tau]", TraditionalForm]], "InlineFormula"],
 ". The algorithm returns the nearest value of ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " which satisfies the condition defined by ",
 Cell[BoxData[
  FormBox["\[Tau]", TraditionalForm]], "InlineFormula"],
 ". The programmer then decides whether the suggested value for ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " is acceptable and either adopts the suggested value, or chooses a value as \
close as possible, accepting the possibility of errors. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "For example, in this project ",
 Cell[BoxData[
  FormBox[
   StyleBox["n", "TI"], TraditionalForm]], "InlineFormula"],
 " is 8, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Element]", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"-", "2"}], 
       RowBox[{"8", "-", "2"}]], "\[CenterEllipsis]", 
      SuperscriptBox["2", 
       RowBox[{"8", "-", "2"}]]}], "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 ", which gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"8", "-", "3"}]], "-", "1"}], TraditionalForm]], "InlineFormula"],
 " values in each ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "6"], TraditionalForm]], "InlineFormula"],
 " region, producing a maximum perturbation of less than . In total, there \
are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"12", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"8", "-", "3"}]], "-", "1"}], ")"}], "\[LongEqual]", "372"}], 
   TraditionalForm]], "InlineFormula"],
 " possible values for ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " which produces a maximum perturbation of less than . This would allow the \
destination pixel values to be expressed in 8\[Hyphen]bit numbers without \
error using a transformation matrix expressed in 6\[Hyphen]bit signed \
integers. The statistics performed to determine ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " are not demanding enough to justify rejecting a suggested value of theta \
within 1of the requested value. It is, however, important to know the value \
actually used in the algorithm, which is why the mechanism for adjusting ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " is separate from the color\[Hyphen]space algorithm and is under the \
control of the programmer. For instance, in the implementation below, the \
suggested value is accepted and used to adjust the statistical model, keeping \
all the values in correct correspondence. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preservation of Color Information  ", "Section",
 CellChangeTimes->{3.633114972518466*^9},
 CellTags->"sec:PreservationOfColorInformation"],

Cell["\<\
The goal of the algorithm is to preserve all the information captured by the \
camera which relates to skin whilst discarding as much of the irrelevant \
information as possible. Given that edges and features often present as \
shadows and highlights, all the information captured in terms of luminosity \
will be regarded as relevant information, at least as far as the manipulation \
of individual pixel values is concerned. Considering the chromatic \
information, the importance of the pixel value will be directly determined by \
a Gaussian distribution. \
\>", "Text"],

Cell["\<\
Knowing the range of values produced by the rotation allows us to scale the \
transformation to fit into the range of the destination data type. If we have \
RGB pixel values in a given machine data type, the amount of information \
contained in each of those channels is equal to the number of values \
accessible in that data type. For example: for 8\[Hyphen]bit, unsigned \
integers, there are 256 possible values. After a rotation, we are interested \
in the amount of information which lies along the new axes. This is found \
simply by multiplying the range of the source data type by the length of the \
new axes found for the unit cube. To preserve all the information captured, \
we would therefore have to use a larger data type to store the new values. We \
are, however, only interested in a small region in the chromatic space. The \
question is, then, how to preserve the relevant information in a way \
consistent with the significance indicated by the aforementioned Gaussian \
distribution. \
\>", "Text"],

Cell["\<\
None of the rotated axes have lengths less than 1 for the unit RGB cube. For \
this reason we\[CloseCurlyQuote]ve written redistribution functions which \
perform any necessary type conversion whilst preserving the information in a \
controlled way; we can keep the information where it\[CloseCurlyQuote]s \
needed and discard it where it\[CloseCurlyQuote]s irrelevant. So although \
this is strictly beyond the normal meaning of a color space conversion, it is \
addressing a connected issue and belongs in the conversion. In terms of \
optimization, it is also the most efficient place in the code in which to \
perform this adjustment, allowing us to \[LongDash] for the sake of example \
\[LongDash] discard the details of the colors of a duck\[CloseCurlyQuote]s \
feathers whilst keeping the hues and tones of human skin. \
\>", "Text"],

Cell["\<\
We can use a function to redistribute the information contained on the longer \
axis onto the shorter axis, which can be expressed in the discrete \
representation of that axis necessitated by internal integer data types. \
There are three ways in which to implement the redistribution functions: \
\>", "Text"],

Cell[CellGroupData[{

Cell["Partition  ", "Subsection",
 CellChangeTimes->{3.6331149515682287`*^9},
 CellTags->"sec:Partition"],

Cell["\<\
The most straightforward redistribution method is to simply preserve the \
information in a 1\[Hyphen]to\[Hyphen]1 fashion within a region. The region \
can be defined in terms of the distribution Gaussian by specifying a \
significance level in terms of the variance or the standard deviation. \
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear  ", "Subsection",
 CellChangeTimes->{3.633114958878171*^9},
 CellTags->"sec:Linear"],

Cell[TextData[{
 "A slightly more sophisticated method is to use a linear redistribution. A \
linear distribution is equivalent to partitioning given a unit gradient. \
However, a linear redistribution function allows for the possibility of data \
compression. So then, in the case where the region of interest contains more \
information than can be expressed in the destination data type, a linear \
distribution function allows an even compression of the information from \
source to destination. \[NonBreakingSpace]",
 ButtonBox["Lee2002",
  BaseStyle->"Citation",
  ButtonData->"Lee2002",
  ButtonNote->"Lee2002"],
 " "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ERF (Gaussian Error Function)  ", "Subsection",
 CellChangeTimes->{3.633114930002302*^9},
 CellTags->"sec:ERF"],

Cell["\<\
The integral of the cumulative Gaussian (i.e. Error Function) allows the \
redistribution of the information on the axis in a way which selectively \
preserves the information about a point on the axis (i.e. the mean of the \
Gaussian), and then progressively discard the information as it falls into \
the tails of the Gaussian. So, it provides a non\[Hyphen]linear distribution \
of the information. The Gaussian can be seen as describing our interest in \
the information contained along the axis, so it\[CloseCurlyQuote]s logical to \
use the error function to redistribute the information. The disadvantage of \
this is simply the computational effort involved in generating the error \
function. \
\>", "Text"],

Cell["\<\
The error function distribution is mathematically correct, being directly \
related to the Gaussian fit. Computationally, there are two considerations: \
the numerical representation, and performance. The discrete representation of \
the numerics means that \[LongDash] for a significant number of possible \
distributions \[LongDash] distributing using the error function has little to \
no advantage (or indeed difference) from using a linear distribution. \
\>", "Text"],

Cell["\<\
Considering the preservation of information captured, mappings with a \
gradient greater than 1 are undesirable because they preserve all the \
information whilst being informatically wasteful in that there are \
functionally inaccessible discrete values in the destination range. Our \
stated aim is to preserve the information in the image pertaining to human \
skin; unevenly distributing this information across a discrete data type is \
not only wasteful in terms of memory, but also of processing resources \
because subsequent processing routines will treat the data as if it has a \
higher fidelity than it actually does. \
\>", "Text"],

Cell[TextData[{
 "To construct a distribution function, we first need to describe the \
relationship of the error function to the Gaussian fit, and then produce a \
function with the appropriate range and domain. For a Gaussian fit with an \
amplitude A, a mean of ",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]], "InlineFormula"],
 ", and a standard deviation of ",
 Cell[BoxData[
  FormBox["\[Sigma]", TraditionalForm]], "InlineFormula"],
 ", where ",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineFormula"],
 " lie in a source range ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " from ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". The cumulative distribution is found by integrating from ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to the point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineFormula"],
 ", as can be seen in (",
 
 CounterBox["Section", "eq:ErfDefinition"],
 " ): "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Integral]", "x"], 
   StyleBox["A", "TI"], 
   FractionBox[
    SuperscriptBox[
     StyleBox["e", "TI"], 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          StyleBox["t", "TI"], "-", "\[Mu]"}], ")"}], "2"], 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]], "\[Sigma]"}]], 
   StyleBox["d", "TI"], 
   StyleBox["t", "TI"], "\[LongEqual]", 
   FractionBox["1", "2"], 
   StyleBox["A", "TI"], 
   RowBox[{"(", 
    RowBox[{"erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"x", "-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}]}], ")"}]}], 
  TraditionalForm]], "NumberedEquation",
 CellTags->"eq:ErfDefinition"],

Cell[TextData[{
 "The Gaussian distribution and the cumulative distribution are shown in \
Figure\[NonBreakingSpace]",
 
 CounterBox["Section", "fig:ErrorFunctionGraph"],
 "  for some values chosen for illustrative purposes. All that is required \
now is to fix the range ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " for the domain ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". "
}], "Text"],

Cell[TextData[{
 "First, we determine the maximum value taken in the domain. This is simply \
found by evaluating the function at ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". It should be noted that \[LongDash] if the Gaussian distribution is well \
contained in the source domain \[LongDash] the maximum value should be equal \
to the amplitude. For the sake of simplicity, we\[CloseCurlyQuote]ll ignore \
the amplitude of the fitted Gaussian found previously as it is not relevant \
to the design of the redistribution function. So, to fix the range of the \
distribution function, we first scale to the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "1"}], TraditionalForm]], "InlineFormula"],
 " by simply dividing through by the maximum value, and then re\[Hyphen]scale \
to the destination range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", "-"}], TraditionalForm]], "InlineFormula"],
 " and shift by ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["d", "TI"], 
   StyleBox["i", "TI"], 
   StyleBox["s", "TI"], 
   RowBox[{"(", 
    StyleBox["x", "TI"], ")"}], "\[LongEqual]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", ")"}], "(", 
     RowBox[{"erf", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         StyleBox["x", "TI"], "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], "\[Sigma]"}]], ")"}]}], ")"}], 
    RowBox[{"erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}]}]], "+"}], 
  TraditionalForm]], "NumberedEquation",
 CellTags->"eq:disFunction"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiently Implementing the Distribution Function ", "Subsection",
 CellChangeTimes->{{3.633119473684432*^9, 3.633119484385284*^9}}],

Cell[TextData[{
 "Mathematically, the ERF distribution function\[NonBreakingSpace](",
 
 CounterBox["Section", "eq:disFunction"],
 " ) achieves all the stated objectives. However, on a device we are dealing \
with discrete numerics and limited processing power, so further analysis is \
required. Where we\[CloseCurlyQuote]re using a discrete domain and range, the \
distribution is usefully divided into three characteristic behaviours: where \
it is constant, where it preserves all the information, and where it \
selectively preserves information. Looking at the distribution, this divides \
the source domain into five regions: two where it is effectively constant, \
two where it is selective, and one region around the mean where it preserves \
all the information. In order to design an efficient algorithm, it is useful \
to identify the boundaries of these five regions. "
}], "Text",
 CellChangeTimes->{3.633119471964732*^9}],

Cell[CellGroupData[{

Cell["The Region Which Discards All Information ", "Subsubsection",
 CellChangeTimes->{3.6331149107218027`*^9}],

Cell[TextData[{
 "First, we need to identify where the distribution is effectively constant. \
This can be found by solving the following equation in the region and domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    StyleBox["x", "TI"], "\[LessEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " and then generalized to the specific discrete numerics: "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"erf", 
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}], "+", "erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        StyleBox["x", "TI"], "-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}]}], 
    RowBox[{"erf", 
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Mu]", "-", "1"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}]}]], "\[LongEqual]", 
   RowBox[{"dL", "  ", "where", "  ", "dL"}], "\[LongEqual]"}], 
  TraditionalForm]], "NumberedEquation",
 CellChangeTimes->{{3.6331208812117653`*^9, 3.633120883545951*^9}},
 CellTags->"eq:0to1"],

Cell[TextData[{
 "The solution is found for the source domain in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "1"}], TraditionalForm]], "InlineFormula"],
 " as: "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["x", "TI"], "\[LongEqual]", 
   SqrtBox["2"], "\[Sigma]", 
   SuperscriptBox["erf", 
    RowBox[{"-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dL", "-", "1"}], ")"}], "erf", 
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "dL", " ", "erf", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Mu]", "-", "1"}], 
       RowBox[{
        SqrtBox["2"], "\[Sigma]"}]], ")"}]}], ")"}], "+", "\[Mu]"}], 
  TraditionalForm]], "NumberedEquation",
 CellTags->"eq:LowHigh"],

Cell[TextData[{
 "The boundaries of the regions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], 
    SubscriptBox["<", "1"]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], 
    SubscriptBox[">", "2"]}], TraditionalForm]], "InlineFormula"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], "\[Element]", 
    RowBox[{"{", "\[CenterEllipsis]", "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], 
    SubscriptBox["<", "1"]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], 
    SubscriptBox[">", "2"]}], TraditionalForm]], "InlineFormula"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], "\[Element]", 
    RowBox[{"{", 
     RowBox[{"0", "\[CenterEllipsis]", "1"}], "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 " can be written using the following helpful constants of the distribution. \
"
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        SuperscriptBox["\[CapitalSigma]", "-"], TraditionalForm]], 
       "InlineFormula"],
      " "
     }],
      CellTags->"eq:DistributionConstants"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "erf", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            StyleBox["\[Mu]", "uniA"], "-", "1"}], 
           RowBox[{
            SqrtBox["2"], 
            StyleBox["\[Sigma]", "uniA"]}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        SuperscriptBox["\[CapitalSigma]", "+"], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "erf", 
         RowBox[{"(", 
          FractionBox[
           StyleBox["\[Mu]", "uniA"], 
           RowBox[{
            SqrtBox["2"], 
            StyleBox["\[Sigma]", "uniA"]}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["dL", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[LongEqual]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Kappa]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[LongEqual]", TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 CellChangeTimes->{{3.633120890448477*^9, 3.6331208933922777`*^9}}],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           SubscriptBox["\[Null]", "1"], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "\[Sigma]", 
            SqrtBox["2"], " ", 
            SuperscriptBox["erf", 
             RowBox[{"-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dL", "-", "1"}], ")"}], 
              SuperscriptBox["\[CapitalSigma]", "+"], "-", "dL", " ", 
              SuperscriptBox["\[CapitalSigma]", "-"]}], ")"}], "+", "\[Mu]"}],
            "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           SubscriptBox["\[Null]", "2"], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "\[Sigma]", 
            SqrtBox["2"], " ", 
            SuperscriptBox["erf", 
             RowBox[{"-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dL", "-", "1"}], ")"}], 
              SuperscriptBox["\[CapitalSigma]", "-"], "-", "dL", " ", 
              SuperscriptBox["\[CapitalSigma]", "+"]}], ")"}], "+", "\[Mu]"}],
            "DisplayFormula"], TraditionalForm]]],
        " "
       }]]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           SubscriptBox["\[Null]", "1"], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Null]", "1"], "(", 
              RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], ")"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           SubscriptBox["\[Null]", "2"], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Null]", "2"], "(", 
              RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], ")"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:DiscardedRegionBounds"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Region Which Keeps All Information", "Subsubsection",
 CellChangeTimes->{{3.633119517721067*^9, 3.633119535052372*^9}}],

Cell["\<\
 To find the region where all the information in the source domain is \
preserved, we differentiate the distribution and solve for where the gradient \
is equal to the destination range over the source range. This corresponds to \
the point at which a unit change in the source produces a unit change in the \
destination range: \
\>", "Text",
 CellChangeTimes->{3.6331195156475077`*^9}],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["2", "\[Pi]"]], 
     SuperscriptBox[
      StyleBox["e", "TI"], 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           StyleBox["x", "TI"], "-", "\[Mu]"}], ")"}], "2"], 
        RowBox[{"2", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{"erf", 
      RowBox[{"(", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[Mu]", "-", "1"}], 
        RowBox[{
         SqrtBox["2"], "\[Sigma]"}]], ")"}]}], ")"}]], "\[LongEqual]"}], 
  TraditionalForm]], "NumberedEquation",
 CellChangeTimes->{3.6331208991730833`*^9},
 CellTags->"eq:Boundaries"],

Cell[TextData[{
 "Rearranging for ",
 Cell[BoxData[
  FormBox[
   StyleBox["x", "TI"], TraditionalForm]], "InlineFormula"],
 ", we find: "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["x", "TI"], "\[LongEqual]", "\[Mu]", "\[PlusMinus]", "\[Sigma]", 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "log", 
      RowBox[{"(", 
       RowBox[{"\[Sigma]", "(", 
        RowBox[{"erf", 
         RowBox[{"(", 
          FractionBox["\[Mu]", 
           RowBox[{
            SqrtBox["2"], "\[Sigma]"}]], ")"}], "-", "erf", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Mu]", "-", "1"}], 
           RowBox[{
            SqrtBox["2"], "\[Sigma]"}]], ")"}]}], ")"}], ")"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"log", "(", ")"}]}], "+", 
     RowBox[{"log", 
      RowBox[{"(", 
       FractionBox["2", "\[Pi]"], ")"}]}]}]]}], 
  TraditionalForm]], "NumberedEquation",
 CellChangeTimes->{3.6331209017235327`*^9},
 CellTags->"eq:PreservedRegion"],

Cell[TextData[{
 "The boundaries of the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Null]", "1"], "<", 
    StyleBox["x", "TI"], 
    SubscriptBox["<", "2"]}], TraditionalForm]], "InlineFormula"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], "\[Element]", 
    RowBox[{"{", "\[CenterEllipsis]", "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Null]", "1"], "<", 
    StyleBox["x", "TI"], 
    SubscriptBox["<", "2"]}], TraditionalForm]], "InlineFormula"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x", "TI"], "\[Element]", 
    RowBox[{"{", 
     RowBox[{"0", "\[CenterEllipsis]", "1"}], "}"}]}], TraditionalForm]], 
  "InlineFormula"],
 " can be written using the following helpful constants of the distribution. \
"
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        SuperscriptBox["\[CapitalSigma]", "-"], TraditionalForm]], 
       "InlineFormula"],
      " "
     }],
      CellTags->"eq:DistributionConstants"], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "erf", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            StyleBox["\[Mu]", "uniA"], "-", "1"}], 
           RowBox[{
            SqrtBox["2"], 
            StyleBox["\[Sigma]", "uniA"]}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        SuperscriptBox["\[CapitalSigma]", "+"], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "erf", 
         RowBox[{"(", 
          FractionBox[
           StyleBox["\[Mu]", "uniA"], 
           RowBox[{
            SqrtBox["2"], 
            StyleBox["\[Sigma]", "uniA"]}]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Kappa]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         FractionBox[]}], TraditionalForm]], "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]]],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["w", "TI"], 
   RowBox[{"(", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "\[LongEqual]", "\[Sigma]", 
   SqrtBox[
    RowBox[{"log", 
     RowBox[{"(", 
      FractionBox["2", "\[Pi]"], ")"}], "-", "2", "log", 
     RowBox[{"(", 
      RowBox[{"\[Kappa]\[Sigma]", "(", 
       RowBox[{
        SuperscriptBox["\[CapitalSigma]", "+"], "-", 
        SuperscriptBox["\[CapitalSigma]", "-"]}], ")"}], ")"}]}]]}], 
  TraditionalForm]], "NumberedEquation",
 CellTags->"eq:PreservedRegionConsts"],

Cell[TextData[{
 "The equations are found in the unit source domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ":", "1"}], TraditionalForm]], "InlineFormula"],
 ". It is a simple matter to scale and shift these values to give the points \
in a more general source domain. "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            SubscriptBox["\[Null]", "1"], "(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "\[Mu]", "-", 
            StyleBox["w", "TI"], 
            RowBox[{"(", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            SubscriptBox["\[Null]", "2"], "(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "\[Mu]", "+", 
            StyleBox["w", "TI"], 
            RowBox[{"(", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            SubscriptBox["\[Null]", "1"], "(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+", 
            RowBox[{"(", 
             RowBox[{"\[Mu]", "-", 
              StyleBox["w", "TI"], 
              RowBox[{"(", 
               RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], ")"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            SubscriptBox["\[Null]", "2"], "(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "+", 
            RowBox[{"(", 
             RowBox[{"\[Mu]", "+", 
              StyleBox["w", "TI"], 
              RowBox[{"(", 
               RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], ")"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:PreservedRegionGen"],

Cell[TextData[{
 "One refinement can be made to these values by recognizing that the discrete \
distribution extends the effectively linear region past the analytic solution \
by rounding the values. This can be seen in ",
 
 CounterBox["Section", "fig:ExtensionToLinearRegion"],
 " , where the shaded squares are the rounded values. The extended region \
boundary ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " was found by numerically solving "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftFloor]", 
    RowBox[{"dis", "(", 
     SubscriptBox["\[Null]", "2"], ")"}], "\[RightFloor]"}], "+", 
   RowBox[{"(", 
    RowBox[{
     StyleBox["x", "TI"], 
     SubscriptBox["-", "2"]}], ")"}], "\[LongEqual]", "dis", 
   RowBox[{"(", 
    StyleBox["x", "TI"], ")"}]}], TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "In the C++ code, whilst numerical routines were used MatLab and Mathematica \
to perform the analysis, the extended region boundary point was found by \
\[CloseCurlyQuote]walking\[CloseCurlyQuote] along the distribution from the \
analytic point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Null]", "2"], TraditionalForm]], "InlineFormula"],
 " until divergence from linear behaviour became apparent. This is regarded \
as a simpler solution, not requiring the use of numerical library routines, \
and proved to be a quick and elegant solution for the C++ implementation. The \
extended boundaries ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Null]", "1"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Null]", "2"], TraditionalForm]], "InlineFormula"],
 " are then defined by "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            RowBox[{"\[LeftCeiling]", 
             RowBox[{"dis", "(", 
              SubscriptBox["\[Null]", "1"], ")"}], "\[RightCeiling]"}], 
            SubscriptBox["-", "1"]}], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "dis", 
            RowBox[{"(", 
             SubscriptBox["\[Null]", "1"], ")"}], 
            SubscriptBox["-", "1"]}], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            RowBox[{"\[LeftFloor]", 
             RowBox[{"dis", "(", 
              SubscriptBox["\[Null]", "2"], ")"}], "\[RightFloor]"}], 
            SubscriptBox["-", "2"]}], "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "dis", 
            RowBox[{"(", 
             SubscriptBox["\[Null]", "2"], ")"}], 
            SubscriptBox["-", "2"]}], "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The compression ratio ", "Subsubsection",
 CellChangeTimes->{3.633119618128394*^9}],

Cell["\<\
There is one final value of interest to the development of the algorithm, \
which is the gradient at the mean. The reason this is of interest is because \
we\[CloseCurlyQuote]re trying to compress the relevant data as much as \
possible. If the destination region is small (i.e. the destination machine \
type is smaller than the source type), then the gradient at the mean allows \
us to assess the fidelity required of the source type. If it weren\
\[CloseCurlyQuote]t for the fact that the source is the result of a rotation \
transformation, then there would be little purpose in assessing this value. \
However, it is entirely possible that the lengthening of the axes resulting \
from the rotation is insignificant for the desired destination type; there\
\[CloseCurlyQuote]s no point preserving information during the rotation which \
is then discarded by the redistribution. The gradient is given by \
\>", "Text"],

Cell[TextData[{
 "The compression ratio is at most one\[Hyphen]to\[Hyphen]one, therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "<", "\[LongEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " and the gradient in the unit space must always be greater than one ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "\[Delta]", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], TraditionalForm]], 
  "InlineFormula"],
 ". so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "\[LessEqual]", "\[CapitalDelta]", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "\[LessEqual]", "\[Delta]", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}], TraditionalForm]], 
  "InlineFormula"],
 ". "
}], "Text"],

Cell[TextData[{
 "The required fidelity in the source domain can be found using ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " in the sense that the correspondence between one information step in the \
source must produce a step of ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " in the destination type. For the algorithm evaluating the maximum gradient \
",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " allows us to be sure that ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " \[LongDash] the region on the x axis where all the information is to be \
preserved \[LongDash] exists if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", ">", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " or tells us that the x axis can be shortened if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "<", "1"}], TraditionalForm]], 
  "InlineFormula"],
 ". In the algorithm ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " is used to find an appropriate working data type for the rotated color \
space and to define the axis scaling for the rotation matrix. "
}], "Text"],

Cell[TextData[{
 "We need to consider the requested compression of information alongside the \
spread of information caused by the rotation, and the desired focus on the \
specific region of interest dictated by the statistics. Each axis in the \
color space is to be represented by a discrete set of numbers. The size of \
these sets dictates the discretization of the axis, and the ratios between \
them indicates the spread or compression of the information they contain. We \
assume that the RGB axes are each discretized to the same extent, each \
containing ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " values. After the application of the un\[Hyphen]normalized rotational \
transformation, the axes contain differing numbers of values given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Null]", "1"], 
    RowBox[{"\[LongEqual]", " "}], 
    SqrtBox["3"]}], TraditionalForm]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Null]", "2"], 
    RowBox[{"\[LongEqual]", " "}], 
    SubscriptBox[
     StyleBox["L", "TI"], "2"], 
    RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Null]", "3"], 
    RowBox[{"\[LongEqual]", " "}], 
    SubscriptBox[
     StyleBox["L", "TI"], "3"], 
    RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]], "InlineFormula"],
 ". These axis lengths preserve all the information contained in the source \
color space, and so are the maximum length the axis should take. The minumum \
length the axis may take is where the information is lost evenly throuought \
the axis, and corresponds to an axis length equal to the destination axis \
length ",
 Cell[BoxData[
  FormBox["\[LongEqual]", TraditionalForm]], "InlineFormula"],
 ". "
}], "Text"],

Cell[TextData[{
 "We can now write an algorithm which determines the necessary scaling for \
the axes, and whether truncation of the extreme values is significant. As \
this will alter ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " we fix the values of ",
 Cell[BoxData[
  FormBox["\[Kappa]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " to be those for the working range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LongEqual]", 
    StyleBox["L",
     FontSlant->"Bold"], 
    RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]], "InlineFormula"],
 " which preserves all information. With this value the constants are  "
}], "Text",
 CellChangeTimes->{{3.633160432061348*^9, 3.633160452609489*^9}}],

Cell[TextData[{
 "The length of the axis ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " after rescaling should be "
}], "Text",
 CellChangeTimes->{3.633160448830092*^9}],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]", ",", "\[Mu]", ",", "\[Sigma]"}], ")"}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "min", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               StyleBox["K", "TI"], 
               RowBox[{
                StyleBox["L",
                 FontSlant->"Bold"], "(", "\[Theta]", ")"}]], "\[Delta]", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], ",", "1"}], "}"}], 
            StyleBox["L",
             FontSlant->"Bold"], 
            RowBox[{"(", "\[Theta]", ")"}]}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox["\[Null]", "DisplayFormula"], TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "min", 
            RowBox[{"{", 
             RowBox[{
              StyleBox["K", "TI"], "\[Delta]", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{
              StyleBox["L",
               FontSlant->"Bold"], "(", "\[Theta]", ")"}], "}"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:CombinedRotationRange"],

Cell[TextData[{
 "The scaling ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " comes from the source pixel values, the remaining terms translates simply \
into a rotation matrix scaling  "
}], "Text"],

Cell[TextData[{
 "This satisfies the requirements placed on the gradient ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], ">", "1"}], TraditionalForm]],
   "InlineFormula"],
 " because: if we substitute for ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " in the definition for the gradient ",
 
 CounterBox["Section", "eq:gradient"],
 "  "
}], "Text"],

Cell["", "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[CapitalDelta]", "(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "max", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               StyleBox["K", "TI"], 
               RowBox[{
                StyleBox["L",
                 FontSlant->"Bold"], "(", "\[Theta]", ")"}]], "\[Delta]", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}], ",", "1"}], "}"}]}],
            "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:newGradient"],

Cell[TextData[{
 "And the compression ratio ",
 Cell[BoxData[
  FormBox["\[Kappa]", TraditionalForm]], "InlineFormula"],
 " is also explicitly restricted to being at most one and now is no longer \
defined in terms of ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". "
}], "Text"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[Kappa]", "(", "\[Theta]", ")"}], "DisplayFormula"], 
          TraditionalForm]]],
        " "
       }]], Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"\[LongEqual]", "max", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"\[Delta]", "(", 
                RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]], ",", 
              FractionBox[
               StyleBox["K", "TI"], 
               RowBox[{
                StyleBox["L",
                 FontSlant->"Bold"], "(", "\[Theta]", ")"}]]}], "}"}]}], 
           "DisplayFormula"], TraditionalForm]]],
        " "
       }]]}
     }], TraditionalForm]]], TraditionalForm]], "NumberedEquation",
 CellTags->"eq:newCompressionRatio"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A Piecewise Approximation to the ERF Distribution ", "Subsubsection",
 CellChangeTimes->{{3.6331196341140423`*^9, 3.633119647592169*^9}}],

Cell["\<\
We now have equations which give us the four points in the source domain \
which mark the boundaries of the five characteristic regions. We can now use \
them to define a piecewise function which uses the computationally \
problematic error function based distribution as little as possible \
\>", "Text",
 CellChangeTimes->{3.633119632660562*^9}],

Cell["", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["p", "TI"], 
   StyleBox["D", "TI"], 
   StyleBox["i", "TI"], 
   StyleBox["s", "TI"], 
   RowBox[{"(", 
    StyleBox["x", "TI"], ")"}], "\[LongEqual]", 
   RowBox[{"{", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox["\[Null]", "DisplayFormula"], TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              StyleBox["x", "TI"], 
              SubscriptBox["\[LessEqual]", "1"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"dis", "(", 
              StyleBox["x", "TI"], ")"}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SubscriptBox["\[Null]", "1"], "<", 
              StyleBox["x", "TI"], 
              SubscriptBox["<", "1"]}], "DisplayFormula"], TraditionalForm]]],
          
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              StyleBox["x", "TI"], 
              SubscriptBox["-", "1"], "+", "dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "1"], ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SubscriptBox["\[Null]", "1"], "\[LessEqual]", 
              StyleBox["x", "TI"], 
              SubscriptBox["\[LessEqual]", "2"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"dis", 
              RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], 
              SubscriptBox["+", "2"], 
              SubscriptBox["-", "1"], "-", "dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "2"], ")"}], "+", "dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "1"], ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SubscriptBox["\[Null]", "2"], "<", 
              StyleBox["x", "TI"], 
              SubscriptBox["<", "2"]}], "DisplayFormula"], TraditionalForm]]],
          
          " "
         }]]},
        {Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "2"], ")"}], 
              SubscriptBox["+", "2"], 
              SubscriptBox["-", "1"], "-", "dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "2"], ")"}], "+", "dis", 
              RowBox[{"(", 
               SubscriptBox["\[Null]", "1"], ")"}]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]], Cell[TextData[{
          " ",
          Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              StyleBox["x", "TI"], 
              SubscriptBox["\[GreaterEqual]", "2"]}], "DisplayFormula"], 
            TraditionalForm]]],
          " "
         }]]}
       }], TraditionalForm]]]}]}], TraditionalForm]], "NumberedEquation",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "All three distribution techniques ( ",
 
 CounterBox["Section", "sec:Partition"],
 "  , ",
 
 CounterBox["Section", "sec:Linear"],
 "  , ",
 
 CounterBox["Section", "sec:ERF"],
 "  ) described earlier are special cases of this distribution. When the \
distribution has a very large variance the piecewise distribution can be \
simplified as a linear distribution fig",
 
 CounterBox["Section", "fig:useLinear"],
 " . When the distribution has a very small variance a partitioning is more \
appropriate fig ",
 
 CounterBox["Section", "fig:usePartitioning"],
 " . The most interesting distributions, however, are the ones which require \
the use of the piecewise distribution fig ",
 
 CounterBox["Section", "fig:usePiecewiseERF"],
 " .  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Skin Color Space Algorithm ", "Section",
 CellChangeTimes->{3.633119670135826*^9}],

Cell[TextData[{
 "Now that all of the values necessary to preserve the skin information have \
been obtained, we can use them to build a color space transformation \
algorithm which can make intelligent decisions about the numerical precision \
for the intermediate and final variables, as well as determining the most \
efficient transformation methods. The algorithm described herein will take \
values of ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 ", the rotation about the luminosity axis, the standard deviations ",
 Cell[BoxData[
  FormBox[
   StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox["b", "TI"], TraditionalForm]], "InlineFormula"],
 " and mean values ",
 Cell[BoxData[
  FormBox[
   StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox["b", "TI"], TraditionalForm]], "InlineFormula"],
 " for the two chromatic axes in the unit range and will automatically decide \
upon the necessary intermediate working data types and the most efficient \
redistribution methods. "
}], "Text"],

Cell[TextData[{
 "Previously, we found a rotational transformation which allows a working \
type ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " to be chosen such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LessEqual]", "2"}], TraditionalForm]], "InlineFormula"],
 ". If we were to keep the same data type for the color space ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " as is used for the RGB values ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ", then the axes would have to be rescaled with the accompanying loss of \
information. Given that we have values which allow us to assess where all the \
relevant information lies, a more sophisticated approach is possible. For a \
chromatic axis \[LongDash] which, after rotation, has a length ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["L", "TI"], "(", "\[Theta]", ")"}], TraditionalForm]], 
  "InlineFormula"],
 " \[LongDash] we can determine the positions on that axis at which the \
information is considered irrelevant using Equation\[NonBreakingSpace](",
 
 CounterBox["Section", "eq:LowHigh"],
 " ) and the positions where the information is all considered relevant. If \
the gradient ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "InlineFormula"],
 " ",
 
 CounterBox["Section", "eq:gradient"],
 "  is less than 1, then the distribution loses information at all points on \
the axis and the axis can be shortened without loss of relevant information. \
The only further consideration is to ensure that the values outside that \
range are prevented from causing errors associated with overflow. To exclude \
this possibility, a conditional statement can be used which checks the bounds \
as stated, assigning an appropriate value as necessary. The alternative is to \
use an intermediate value with a higher bit depth, and then to recast into \
the destination data type in such a way that overflow and underflow are \
handled appropriately. The OpenCV library provides a casting method \
\[LongDash] saturateCast \[LongDash] which serves this purpose. "
}], "Text"],

Cell[CellGroupData[{

Cell["Setting the Value for the Tolerance ", "Subsubsection",
 CellChangeTimes->{{3.633119689674574*^9, 3.633119712982277*^9}}],

Cell[TextData[{
 "Now that we have the working type range ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ", accounting for both the rotation and the statistics, we can set a \
meaningful tolerance on the error. Previously we calculated that the maximum \
error would occur for pixel values at the corners of the RGB cube, we have \
now seen that some values are more important than others and that it is more \
meaningful to use a smaller RGB cube which encloses only the values of \
interest. This cube is found by taking the values for ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " as the corners in the rotated space and rotating back to the RGB space. As \
this only needs to be done once it can be performed using floats in the unit \
spaces however the values of ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " account for the discrete numerics in that they are calculated from the \
discrete values ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " using the new values for ",
 Cell[BoxData[
  FormBox["\[Kappa]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 ". In order to perform the inverse rotation the values must be shifted to \
compensate for the natural range of the rotation which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
    "0", ":", "1", ",", "-", "\[Null]", ":", "\[Null]", ",", "-", "\[Null]", 
     ":", "\[Null]"}], "}"}], TraditionalForm]], "InlineFormula"],
 ". "
}], "Text",
 CellChangeTimes->{3.633119687084944*^9}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        SubsuperscriptBox["\[Null]", "2", 
         StyleBox[
          RowBox[{"R", "G", "B"}], "TI"]], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         SuperscriptBox["\[LongEqual]", 
          RowBox[{"-", "1"}]], "\[CenterDot]", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Null]", "2"], "-"}], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"where", "  ", "\[LongEqual]", 
         RowBox[{"(", Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell["0", "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 2]], "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell[BoxData[
                 FormBox["1", 2]], "InlineFormula"],
                " "
               }]]}
             }], TraditionalForm]]], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]},
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{
         SuperscriptBox["\[LongEqual]", 
          StyleBox["T", "TI"]], "\[CenterDot]", 
         RowBox[{"(", 
          RowBox[{"\[CircleTimes]", "(", 
           RowBox[{
            SubscriptBox["\[Null]", "2"], "-"}], ")"}], ")"}]}], 
        TraditionalForm]], "InlineFormula"],
      " "
     }]], "\[Null]"}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "Because rotations of any angle are allowed the values for ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Null]", "1", 
    StyleBox[
     RowBox[{"R", "G", "B"}], "TI"]], TraditionalForm]], "InlineFormula"],
 " may be larger than those for ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Null]", "2", 
    StyleBox[
     RowBox[{"R", "G", "B"}], "TI"]], TraditionalForm]], "InlineFormula"],
 " in the RGB space. A smart programmer could actually take advantage of \
this. The values may also be outside the RGB cube meaning that the values may \
have to be truncated to fit inside the RGB cube range. "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "The perturbation to the rotated channel elements ",
 Cell[BoxData[
  FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
 " is found for an input set of pixel values ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Null]", "2", 
    StyleBox[
     RowBox[{"R", "G", "B"}], "TI"]], TraditionalForm]], "InlineFormula"],
 " "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox["\[Null]", TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", "min", 
         RowBox[{"{", 
          RowBox[{
           StyleBox["K", "TI"], "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           StyleBox["L",
            FontSlant->"Bold"], "(", "\[Theta]", ")"}], "}"}], 
         "\[CircleTimes]", 
         RowBox[{"(", Cell[BoxData[
           FormBox[GridBox[{
              {Cell[TextData[{
                " ",
                Cell["0", "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell["2", "InlineFormula"],
                " "
               }]]},
              {Cell[TextData[{
                " ",
                Cell["2", "InlineFormula"],
                " "
               }]]}
             }], TraditionalForm]]], ")"}], "\[CircleTimes]", 
         RowBox[{"[", 
          RowBox[{"(", Cell[BoxData[
            FormBox[GridBox[{
               {Cell[TextData[{
                 " ",
                 Cell["0", "InlineFormula"],
                 " "
                }]]},
               {Cell[TextData[{
                 " ",
                 Cell[BoxData[{"[", "\n", "]"}], "InlineFormula"],
                 " "
                }]]},
               {Cell[TextData[{
                 " ",
                 Cell[BoxData[{"[", "\n", 
                  RowBox[{"6", "-"}], "\n", "]"}], "InlineFormula"],
                 " "
                }]]}
              }], TraditionalForm]]], ")"}], "]"}], "\[CircleTimes]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"[", "\[Theta]", "]"}], 
           SubsuperscriptBox["\[CenterDot]", "2", 
            StyleBox[
             RowBox[{"R", "G", "B"}], "TI"]]}], ")"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "We have previously solved the case where both channels are of equal \
importance we now need to find the values of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineFormula"],
 " which set the relative importance of each channel. There are two factors \
here, the channel scaling and the new smaller RGB cube corners. The values \
for these also need to be put in correct correspondence with the ",
 Cell[BoxData[
  FormBox[
   StyleBox["a", "TI"], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["b", "TI"], TraditionalForm]], "InlineFormula"],
 " channel functions. For the scaling this is found by:  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"(", Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[{
               " ",
               Cell["0", "InlineFormula"],
               " "
              }]]},
             {Cell[TextData[{
               " ",
               Cell[BoxData[
                FormBox["\[Alpha]", 1]], "InlineFormula"],
               " "
              }]]},
             {Cell[TextData[{
               " ",
               Cell[BoxData[
                FormBox["\[Beta]", 1]], "InlineFormula"],
               " "
              }]]}
            }], TraditionalForm]]], ")"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", 
          RowBox[{"min", 
           RowBox[{"{", 
            RowBox[{
             StyleBox["K", "TI"], "\[Delta]", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{
             StyleBox["L",
              FontSlant->"Bold"], "(", "\[Theta]", ")"}], "}"}], 
           "\[CircleTimes]", 
           RowBox[{"(", Cell[BoxData[
             FormBox[GridBox[{
                {Cell[TextData[{
                  " ",
                  Cell["0", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell["2", "InlineFormula"],
                  " "
                 }]]},
                {Cell[TextData[{
                  " ",
                  Cell["2", "InlineFormula"],
                  " "
                 }]]}
               }], TraditionalForm]]], ")"}]}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "For the new RGB corners we need to find the largest element which can \
result from the inner product with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
 ". As the elements of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "\[Theta]", "]"}], TraditionalForm]], "InlineFormula"],
 " are in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], TraditionalForm]], 
  "InlineFormula"],
 " with only one occurrence of each in the second and third rows we need to \
find the largest element of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Null]", "2", 
    StyleBox[
     RowBox[{"R", "G", "B"}], "TI"]], TraditionalForm]], "InlineFormula"],
 " which is not in the zero position. The algorithm solves: "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"(", Cell[BoxData[
          FormBox[GridBox[{
             {Cell[TextData[{
               " ",
               Cell["0", "InlineFormula"],
               " "
              }]]},
             {Cell[TextData[{
               " ",
               Cell[BoxData[
                FormBox["\[Alpha]", 2]], "InlineFormula"],
               " "
              }]]},
             {Cell[TextData[{
               " ",
               Cell[BoxData[
                FormBox["\[Beta]", 2]], "InlineFormula"],
               " "
              }]]}
            }], TraditionalForm]]], ")"}], TraditionalForm]], "InlineFormula"],
      " "
     }]], Cell[TextData[{
      " ",
      Cell[BoxData[
       FormBox[
        RowBox[{"\[LongEqual]", 
         RowBox[{"[", 
          RowBox[{"max", 
           RowBox[{"{", 
            RowBox[{"abs", 
             RowBox[{"(", 
              RowBox[{"[", "\[Theta]", "]"}], ")"}], "\[CircleTimes]", 
             SuperscriptBox[
              RowBox[{"(", 
               SubsuperscriptBox["\[Null]", "2", 
                StyleBox[
                 RowBox[{"R", "G", "B"}], "TI"]], ")"}], 
              StyleBox["T", "TI"]]}], "}"}]}], "]"}]}], TraditionalForm]], 
       "InlineFormula"],
      " "
     }]]}
   }], TraditionalForm]],
 TaggingRules:>{"Tex Macro Name" -> "matrix"}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["max", TraditionalForm]], "InlineFormula"],
 " acts on each row and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"abs", 
    RowBox[{"(", 
     RowBox[{"[", "\[Theta]", "]"}], ")"}], "\[LongEqual]", 
    RowBox[{"[", "\[Theta]", "]"}], "\[CircleTimes]", 
    RowBox[{"[", "\[Theta]", "]"}]}], TraditionalForm]], "InlineFormula"],
 ". These then give a combined value for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[LongEqual]", 
    SubscriptBox["\[Alpha]", "1"], 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "\[LongEqual]", 
    SubscriptBox["\[Beta]", "1"], 
    SubscriptBox["\[Beta]", "2"]}], TraditionalForm]], "InlineFormula"],
 ". Because the axis have been scaled so that the information on the axis is \
to be kept at least near the mean the tolerance should be set to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", "\[LongEqual]", "1"}], TraditionalForm]], 
  "InlineFormula"],
 " the condition for accepting a value of ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]], "InlineFormula"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ">", 
    StyleBox["h", "TI"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["i", "TI"], ",", "\[Iota]", ";", "\[Alpha]", ",", "\[Beta]"}], 
     ")"}]}], TraditionalForm]], "InlineFormula"],
 " can be used.  "
}], "Text",
 TaggingRules:>{"Tex Macro Name" -> "matrix"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1197, 748},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "eq:AxisRangeMinMax"->{
  Cell[306480, 6852, 620, 17, 51, "NumberedEquation",
   CellTags->"eq:AxisRangeMinMax"]},
 "eq:Boundaries"->{
  Cell[493634, 12121, 859, 30, 81, "NumberedEquation",
   CellTags->"eq:Boundaries"]},
 "eq:CombinedRotationRange"->{
  Cell[510770, 12669, 1799, 58, 75, "NumberedEquation",
   CellTags->"eq:CombinedRotationRange"]},
 "eq:DiscardedRegionBounds"->{
  Cell[490179, 12010, 2867, 92, 57, "NumberedEquation",
   CellTags->"eq:DiscardedRegionBounds"]},
 "eq:disFunction"->{
  Cell[482992, 11755, 954, 35, 63, "NumberedEquation",
   CellTags->"eq:disFunction"]},
 "eq:ErfDefinition"->{
  Cell[480302, 11669, 984, 36, 63, "NumberedEquation",
   CellTags->"eq:ErfDefinition"]},
 "eq:generalisedPerturbation"->{
  Cell[464191, 11241, 3906, 112, 99, "NumberedEquation",
   CellTags->"eq:generalisedPerturbation"]},
 "eq:LowHigh"->{
  Cell[486674, 11873, 611, 21, 45, "NumberedEquation",
   CellTags->"eq:LowHigh"]},
 "eq:lxyPixel"->{
  Cell[387507, 8814, 2181, 78, 73, "NumberedEquation",
   CellTags->"eq:lxyPixel"]},
 "eq:newCompressionRatio"->{
  Cell[514581, 12800, 972, 31, 53, "NumberedEquation",
   CellTags->"eq:newCompressionRatio"]},
 "eq:newGradient"->{
  Cell[513286, 12756, 978, 31, 51, "NumberedEquation",
   CellTags->"eq:newGradient"]},
 "eq:NormRxyz4"->{
  Cell[385168, 8752, 946, 25, 73, "NumberedEquation",
   CellTags->"eq:NormRxyz4"]},
 "eq:PreservedRegion"->{
  Cell[494668, 12163, 845, 27, 59, "NumberedEquation",
   CellTags->"eq:PreservedRegion"]},
 "eq:PreservedRegionConsts"->{
  Cell[497921, 12287, 540, 16, 59, "NumberedEquation",
   CellTags->"eq:PreservedRegionConsts"]},
 "eq:PreservedRegionGen"->{
  Cell[498773, 12316, 2782, 94, 53, "NumberedEquation",
   CellTags->"eq:PreservedRegionGen"]},
 "eq:0to1"->{
  Cell[485616, 11833, 844, 28, 63, "NumberedEquation",
   CellTags->"eq:0to1"]},
 "sec:CameraRGB"->{
  Cell[2052, 60, 141, 2, 44, "Subsection",
   CellTags->"sec:CameraRGB"]},
 "sec:ConstructingANewColorSpace"->{
  Cell[742, 29, 138, 2, 64, "Section",
   CellTags->"sec:ConstructingANewColorSpace"]},
 "sec:ERF"->{
  Cell[477098, 11592, 117, 2, 44, "Subsection",
   CellTags->"sec:ERF"]},
 "sec:Linear"->{
  Cell[476325, 11570, 97, 2, 44, "Subsection",
   CellTags->"sec:Linear"]},
 "sec:Partition"->{
  Cell[475861, 11556, 105, 2, 44, "Subsection",
   CellTags->"sec:Partition"]},
 "sec:PreservationOfColorInformation"->{
  Cell[472891, 11501, 145, 2, 64, "Section",
   CellTags->"sec:PreservationOfColorInformation"]},
 "sec:RotationMatrix"->{
  Cell[3892, 100, 620, 10, 68, "Text",
   CellTags->"sec:RotationMatrix"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"eq:AxisRangeMinMax", 538258, 13541},
 {"eq:Boundaries", 538369, 13544},
 {"eq:CombinedRotationRange", 538487, 13547},
 {"eq:DiscardedRegionBounds", 538617, 13550},
 {"eq:disFunction", 538737, 13553},
 {"eq:ErfDefinition", 538848, 13556},
 {"eq:generalisedPerturbation", 538971, 13559},
 {"eq:LowHigh", 539090, 13562},
 {"eq:lxyPixel", 539192, 13565},
 {"eq:newCompressionRatio", 539306, 13568},
 {"eq:newGradient", 539423, 13571},
 {"eq:NormRxyz4", 539530, 13574},
 {"eq:PreservedRegion", 539640, 13577},
 {"eq:PreservedRegionConsts", 539763, 13580},
 {"eq:PreservedRegionGen", 539889, 13583},
 {"eq:0to1", 539999, 13586},
 {"sec:CameraRGB", 540100, 13589},
 {"sec:ConstructingANewColorSpace", 540212, 13592},
 {"sec:ERF", 540314, 13595},
 {"sec:Linear", 540405, 13598},
 {"sec:Partition", 540501, 13601},
 {"sec:PreservationOfColorInformation", 540622, 13604},
 {"sec:RotationMatrix", 540745, 13607}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 137, 3, 65, "Chapter"],
Cell[CellGroupData[{
Cell[742, 29, 138, 2, 64, "Section",
 CellTags->"sec:ConstructingANewColorSpace"],
Cell[883, 33, 236, 4, 49, "Text"],
Cell[1122, 39, 559, 9, 68, "Text"],
Cell[1684, 50, 343, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[2052, 60, 141, 2, 44, "Subsection",
 CellTags->"sec:CameraRGB"],
Cell[2196, 64, 305, 5, 49, "Text"],
Cell[2504, 71, 967, 14, 106, "Text"],
Cell[3474, 87, 272, 5, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3783, 97, 106, 1, 44, "Subsection"],
Cell[3892, 100, 620, 10, 68, "Text",
 CellTags->"sec:RotationMatrix"],
Cell[CellGroupData[{
Cell[4537, 114, 404, 9, 63, "Input"],
Cell[4944, 125, 951, 23, 63, "Output"],
Cell[5898, 150, 948, 23, 63, "Output"],
Cell[6849, 175, 951, 23, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7837, 203, 784, 19, 46, "Input"],
Cell[8624, 224, 7171, 168, 87, "Output"]
}, Open  ]],
Cell[15810, 395, 737, 21, 62, "Text"],
Cell[CellGroupData[{
Cell[16572, 420, 7525, 176, 284, "Input"],
Cell[24100, 598, 251196, 5413, 515, "Output"]
}, Open  ]],
Cell[275311, 6014, 255, 5, 30, "Text"],
Cell[275569, 6021, 16, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[275610, 6025, 179, 3, 28, "Input"],
Cell[275792, 6030, 2130, 60, 127, "Output"]
}, Open  ]],
Cell[277937, 6093, 211, 6, 32, "Text"],
Cell[278151, 6101, 946, 21, 101, "Text"],
Cell[279100, 6124, 1147, 24, 114, "Text"],
Cell[280250, 6150, 707, 15, 76, "Text"],
Cell[CellGroupData[{
Cell[280982, 6169, 2961, 59, 80, "Input"],
Cell[CellGroupData[{
Cell[283968, 6232, 8528, 234, 245, "Print"],
Cell[292499, 6468, 8630, 234, 190, "Print"]
}, Open  ]]
}, Open  ]],
Cell[301156, 6706, 872, 20, 46, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[302031, 6728, 3629, 102, 194, "Output"],
Cell[305663, 6832, 748, 15, 72, "Text"],
Cell[306414, 6849, 63, 1, 30, "Text"],
Cell[306480, 6852, 620, 17, 51, "NumberedEquation",
 CellTags->"eq:AxisRangeMinMax"],
Cell[307103, 6871, 210, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[307338, 6882, 26358, 589, 1015, "Input"],
Cell[333699, 7473, 10094, 210, 718, "Output"]
}, Open  ]],
Cell[343808, 7686, 303, 9, 38, "Text"],
Cell[CellGroupData[{
Cell[344136, 7699, 574, 14, 28, "Input"],
Cell[344713, 7715, 2700, 85, 139, "Output"]
}, Open  ]],
Cell[347428, 7803, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[347569, 7808, 1848, 47, 82, "Input"],
Cell[349420, 7857, 2327, 61, 123, "Output"]
}, Open  ]],
Cell[351762, 7921, 63, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[351850, 7926, 5359, 138, 235, "Input"],
Cell[357212, 8066, 3855, 84, 534, "Output"]
}, Open  ]],
Cell[361082, 8153, 915, 23, 78, "Text"],
Cell[CellGroupData[{
Cell[362022, 8180, 1502, 33, 63, "Input"],
Cell[363527, 8215, 1793, 31, 123, "Output"],
Cell[365323, 8248, 1866, 33, 127, "Output"]
}, Open  ]],
Cell[367204, 8284, 145, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[367374, 8290, 1841, 26, 28, "Input"],
Cell[369218, 8318, 4740, 126, 84, "Print"]
}, Open  ]],
Cell[373973, 8447, 197, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[374195, 8455, 230, 5, 28, "Input"],
Cell[374428, 8462, 5924, 152, 86, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[380401, 8620, 92, 1, 44, "Subsection"],
Cell[380496, 8623, 899, 15, 106, "Text"],
Cell[381398, 8640, 412, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[381835, 8651, 94, 1, 35, "Subsubsection"],
Cell[381932, 8654, 466, 7, 68, "Text"],
Cell[382401, 8663, 2123, 74, 210, "Text"],
Cell[384527, 8739, 619, 9, 87, "Text"],
Cell[385149, 8750, 16, 0, 30, "Text"],
Cell[385168, 8752, 946, 25, 73, "NumberedEquation",
 CellTags->"eq:NormRxyz4"],
Cell[386117, 8779, 737, 14, 72, "Text"],
Cell[386857, 8795, 628, 15, 95, "Text"],
Cell[387488, 8812, 16, 0, 30, "Text"],
Cell[387507, 8814, 2181, 78, 73, "NumberedEquation",
 CellTags->"eq:lxyPixel"],
Cell[389691, 8894, 559, 15, 53, "Text"],
Cell[390253, 8911, 16, 0, 30, "Text"],
Cell[390272, 8913, 1958, 56, 103, "NumberedEquation"],
Cell[392233, 8971, 1764, 51, 135, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394034, 9027, 90, 1, 35, "Subsubsection"],
Cell[394127, 9030, 448, 10, 70, "Text"],
Cell[394578, 9042, 890, 25, 103, "Text"],
Cell[395471, 9069, 16, 0, 30, "Text"],
Cell[395490, 9071, 3358, 110, 177, "NumberedEquation"],
Cell[398851, 9183, 389, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[399265, 9194, 103, 1, 28, "Item"],
Cell[399371, 9197, 123, 1, 28, "Item"],
Cell[399497, 9200, 105, 1, 28, "Item"]
}, Open  ]],
Cell[399617, 9204, 131, 3, 30, "Text"],
Cell[399751, 9209, 2627, 90, 115, "NumberedEquation"],
Cell[402381, 9301, 87, 1, 30, "Text"],
Cell[402471, 9304, 609, 18, 68, "Text"],
Cell[403083, 9324, 834, 26, 53, "Text"],
Cell[403920, 9352, 581, 22, 33, InheritFromParent],
Cell[404504, 9376, 69, 0, 30, "Text"],
Cell[404576, 9378, 774, 19, 93, "Text"],
Cell[405353, 9399, 2725, 87, 221, InheritFromParent],
Cell[408081, 9488, 2302, 64, 329, "Text"],
Cell[410386, 9554, 443, 13, 32, "Text"],
Cell[410832, 9569, 3198, 105, 119, InheritFromParent],
Cell[414033, 9676, 72, 1, 30, "Text"],
Cell[414108, 9679, 2193, 77, 111, InheritFromParent],
Cell[416304, 9758, 399, 12, 32, "Text"],
Cell[416706, 9772, 3936, 132, 169, InheritFromParent],
Cell[420645, 9906, 433, 14, 32, "Text"],
Cell[421081, 9922, 365, 9, 53, "Text"],
Cell[421449, 9933, 2544, 86, 136, "Text"],
Cell[423996, 10021, 3223, 121, 81, InheritFromParent],
Cell[427222, 10144, 185, 4, 49, "Text"],
Cell[427410, 10150, 4150, 149, 131, InheritFromParent],
Cell[431563, 10301, 466, 11, 70, "Text"],
Cell[432032, 10314, 2974, 78, 135, "Equation"],
Cell[435009, 10394, 436, 11, 51, "Text"],
Cell[435448, 10407, 416, 13, 51, "Text"],
Cell[435867, 10422, 808, 27, 38, "NumberedEquation"],
Cell[436678, 10451, 69, 1, 30, "Text"],
Cell[436750, 10454, 64, 1, 30, "Text"],
Cell[436817, 10457, 1450, 39, 69, "Equation"],
Cell[438270, 10498, 230, 5, 49, "Text"],
Cell[438503, 10505, 120, 3, 30, "Text"],
Cell[438626, 10510, 2477, 75, 274, "Text"],
Cell[441106, 10587, 418, 14, 55, "Text"],
Cell[441527, 10603, 4919, 127, 207, InheritFromParent],
Cell[446449, 10732, 3617, 117, 227, "Text"],
Cell[450069, 10851, 64, 1, 30, "Text"],
Cell[450136, 10854, 916, 25, 39, "Equation"],
Cell[451055, 10881, 434, 13, 33, "Text"],
Cell[451492, 10896, 64, 1, 30, "Text"],
Cell[451559, 10899, 878, 24, 29, "Equation"],
Cell[452440, 10925, 513, 17, 33, "Text"],
Cell[452956, 10944, 63, 1, 30, "Text"],
Cell[453022, 10947, 1867, 50, 107, "NumberedEquation"],
Cell[454892, 10999, 357, 10, 33, "Text"],
Cell[455252, 11011, 7513, 190, 345, InheritFromParent],
Cell[462768, 11203, 582, 12, 89, "Text"],
Cell[463353, 11217, 835, 22, 93, "Text"],
Cell[464191, 11241, 3906, 112, 99, "NumberedEquation",
 CellTags->"eq:generalisedPerturbation"],
Cell[468100, 11355, 355, 12, 32, "Text"],
Cell[468458, 11369, 2247, 67, 166, "Text"],
Cell[470708, 11438, 2122, 56, 203, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[472891, 11501, 145, 2, 64, "Section",
 CellTags->"sec:PreservationOfColorInformation"],
Cell[473039, 11505, 584, 9, 106, "Text"],
Cell[473626, 11516, 1032, 15, 182, "Text"],
Cell[474661, 11533, 851, 12, 144, "Text"],
Cell[475515, 11547, 321, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[475861, 11556, 105, 2, 44, "Subsection",
 CellTags->"sec:Partition"],
Cell[475969, 11560, 319, 5, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476325, 11570, 97, 2, 44, "Subsection",
 CellTags->"sec:Linear"],
Cell[476425, 11574, 636, 13, 106, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477098, 11592, 117, 2, 44, "Subsection",
 CellTags->"sec:ERF"],
Cell[477218, 11596, 726, 11, 125, "Text"],
Cell[477947, 11609, 483, 7, 87, "Text"],
Cell[478433, 11618, 654, 10, 125, "Text"],
Cell[479090, 11630, 1190, 35, 91, "Text"],
Cell[480283, 11667, 16, 0, 30, "Text"],
Cell[480302, 11669, 984, 36, 63, "NumberedEquation",
 CellTags->"eq:ErfDefinition"],
Cell[481289, 11707, 623, 19, 51, "Text"],
Cell[481915, 11728, 1055, 23, 133, "Text"],
Cell[482973, 11753, 16, 0, 30, "Text"],
Cell[482992, 11755, 954, 35, 63, "NumberedEquation",
 CellTags->"eq:disFunction"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483983, 11795, 139, 1, 44, "Subsection"],
Cell[484125, 11798, 936, 15, 144, "Text"],
Cell[CellGroupData[{
Cell[485086, 11817, 111, 1, 35, "Subsubsection"],
Cell[485200, 11820, 394, 9, 70, "Text"],
Cell[485597, 11831, 16, 0, 30, "Text"],
Cell[485616, 11833, 844, 28, 63, "NumberedEquation",
 CellTags->"eq:0to1"],
Cell[486463, 11863, 189, 6, 32, "Text"],
Cell[486655, 11871, 16, 0, 30, "Text"],
Cell[486674, 11873, 611, 21, 45, "NumberedEquation",
 CellTags->"eq:LowHigh"],
Cell[487288, 11896, 1072, 42, 51, "Text"],
Cell[488363, 11940, 1794, 66, 37, InheritFromParent],
Cell[490160, 12008, 16, 0, 30, "Text"],
Cell[490179, 12010, 2867, 92, 57, "NumberedEquation",
 CellTags->"eq:DiscardedRegionBounds"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493083, 12107, 129, 1, 35, "Subsubsection"],
Cell[493215, 12110, 397, 7, 87, "Text"],
Cell[493615, 12119, 16, 0, 30, "Text"],
Cell[493634, 12121, 859, 30, 81, "NumberedEquation",
 CellTags->"eq:Boundaries"],
Cell[494496, 12153, 150, 6, 32, "Text"],
Cell[494649, 12161, 16, 0, 30, "Text"],
Cell[494668, 12163, 845, 27, 59, "NumberedEquation",
 CellTags->"eq:PreservedRegion"],
Cell[495516, 12192, 870, 32, 51, "Text"],
Cell[496389, 12226, 1510, 57, 37, InheritFromParent],
Cell[497902, 12285, 16, 0, 30, "Text"],
Cell[497921, 12287, 540, 16, 59, "NumberedEquation",
 CellTags->"eq:PreservedRegionConsts"],
Cell[498464, 12305, 287, 7, 51, "Text"],
Cell[498754, 12314, 16, 0, 30, "Text"],
Cell[498773, 12316, 2782, 94, 53, "NumberedEquation",
 CellTags->"eq:PreservedRegionGen"],
Cell[501558, 12412, 490, 11, 89, "Text"],
Cell[502051, 12425, 16, 0, 30, "Text"],
Cell[502070, 12427, 363, 11, 20, "NumberedEquation"],
Cell[502436, 12440, 860, 20, 110, "Text"],
Cell[503299, 12462, 16, 0, 30, "Text"],
Cell[503318, 12464, 1460, 46, 31, "NumberedEquation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504815, 12515, 89, 1, 35, "Subsubsection"],
Cell[504907, 12518, 932, 13, 163, "Text"],
Cell[505842, 12533, 776, 23, 53, "Text"],
Cell[506621, 12558, 1263, 31, 135, "Text"],
Cell[507887, 12591, 1857, 45, 211, "Text"],
Cell[509747, 12638, 816, 21, 72, "Text"],
Cell[510566, 12661, 201, 6, 32, "Text"],
Cell[510770, 12669, 1799, 58, 75, "NumberedEquation",
 CellTags->"eq:CombinedRotationRange"],
Cell[512572, 12729, 230, 6, 51, "Text"],
Cell[512805, 12737, 459, 15, 51, "Text"],
Cell[513267, 12754, 16, 0, 30, "Text"],
Cell[513286, 12756, 978, 31, 51, "NumberedEquation",
 CellTags->"eq:newGradient"],
Cell[514267, 12789, 311, 9, 53, "Text"],
Cell[514581, 12800, 972, 31, 53, "NumberedEquation",
 CellTags->"eq:newCompressionRatio"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515590, 12836, 143, 1, 35, "Subsubsection"],
Cell[515736, 12839, 357, 6, 68, "Text"],
Cell[516096, 12847, 16, 0, 30, "Text"],
Cell[516115, 12849, 3881, 129, 123, "NumberedEquation"],
Cell[519999, 12980, 815, 25, 106, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[520875, 13012, 92, 1, 64, "Section"],
Cell[520970, 13015, 1131, 28, 130, "Text"],
Cell[522104, 13045, 2153, 45, 266, "Text"],
Cell[CellGroupData[{
Cell[524282, 13094, 127, 1, 35, "Subsubsection"],
Cell[524412, 13097, 1662, 37, 192, "Text"],
Cell[526077, 13136, 1976, 70, 99, InheritFromParent],
Cell[528056, 13208, 690, 17, 74, "Text"],
Cell[528749, 13227, 407, 12, 36, "Text"],
Cell[529159, 13241, 2168, 70, 129, InheritFromParent],
Cell[531330, 13313, 817, 20, 91, "Text"],
Cell[532150, 13335, 1947, 66, 77, InheritFromParent],
Cell[534100, 13403, 895, 26, 78, "Text"],
Cell[534998, 13431, 1429, 48, 77, InheritFromParent],
Cell[536430, 13481, 1475, 44, 93, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
