errorMins[nnn_] := Module[{midPointM, midPts, mmm, mMins, minThetaPoints, 
      ppts}, midPointM = thetaToPoint[Pi/12, nnn, 2]; 
      mmm = Union[Table[lft = points[nnn, m][[2]]; 
           rght = points[nnn, m + 1][[2]]; sequence[
            {m, IntegerPart[N[thetaToPoint[lft, nnn, 3]]]}, 
            {m, IntegerPart[N[thetaToPoint[(lft + rght)/2, nnn, 3]]]}, 
            {m, IntegerPart[N[thetaToPoint[rght, nnn, 3]]]}], 
          {m, 0, midPointM}] /. sequence -> Sequence]; 
      minThetaPoints = (Threshold[N[errorIntersection[nnn, 
            Sequence @@ #1]]] & ) /@ mmm; 
      ppts = {sequence @@ ({Pi/6 - #1[[1]], #1[[2]]} & ) /@ minThetaPoints, 
         sequence @@ minThetaPoints[[All,{1, 2}]]} /. sequence -> Sequence; 
      AppendTo[ppts, {0, 0}]; {Sort[Threshold[ppts], #1[[1]] < #2[[1]] & ], 
       Sort[Threshold[Extract[ppts, Position[(0 <= #1[[2]] <= 1 & ) /@ ppts, 
           True]]], #1[[1]] < #2[[1]] & ], 
       Sort[Threshold[Extract[ppts, Position[(0 <= #1[[2]] <= 0.5 & ) /@ 
            ppts, True]]], #1[[1]] < #2[[1]] & ], 
       Sort[Threshold[Extract[ppts, Position[(0 <= #1[[2]] <= 0.25 & ) /@ 
            ppts, True]]], #1[[1]] < #2[[1]] & ]}]
 
thetaToPoint[\[Theta]_, n_, chan_] := Module[{section, m\[Theta], m, mm}, 
     section = Quotient[\[Theta], Pi/6]; m\[Theta] = Mod[\[Theta], Pi/6]; 
      m = If[Xor[OddQ[section], chan == 3], IntegerPart[
         N[2^(-1 + n)*Sec[Pi/6 + m\[Theta]]*Sin[m\[Theta]]]], 
        2^(-1 + n) - IntegerPart[N[2^(-1 + n)*Sec[Pi/6 + (Pi/6 - m\[Theta])]*
             Sin[Pi/6 - m\[Theta]]] - 1]]; mm = section*2^(-1 + n) + m; mm]
 
points[n_, mm_] := Module[{m}, m = Mod[mm, 1 + 2^(n - 1)]; 
      {ArcCos[(2^n + m)/Sqrt[4^n + 2*m*(2^n + 2*m)]], 
       Pi/6 - ArcCos[(3*2^n - 2*m)/(2*Sqrt[3*4^n - 3*2^(1 + n)*m + 4*m^2])]}]
 
errorIntersection = CompiledFunction[{8, 9., 5468}, 
     {_Integer, _Integer, _Integer}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, 
      {3, 1, 0}}, {{1, {2, 0, 8}}, {6, {2, 0, 3}}, {3.141592653589793, 
       {3, 0, 0}}, {2, {2, 0, 5}}, {-1, {2, 0, 9}}, {4, {2, 0, 12}}, 
      {3, {2, 0, 4}}}, {0, 16, 8, 0, 1}, {{41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 
       6}, {15, 4, 6, 7}, {12, 8, 1, 6}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 11}, {12, 8, 11, 10}, 
      {41, 261, 2, 0, 6, 2, 0, 10, 2, 0, 11}, {15, 5, 11, 6}, {18, 6, 11}, 
      {12, 7, 11, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 6}, {15, 4, 6, 10}, 
      {12, 8, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 1, 6}, 
      {12, 9, 0, 13}, {41, 263, 2, 0, 5, 2, 0, 13, 2, 0, 14}, 
      {12, 8, 14, 13}, {41, 261, 2, 0, 6, 2, 0, 13, 2, 0, 14}, 
      {15, 4, 11, 14, 6}, {18, 6, 11}, {12, 8, 1, 6}, {12, 9, 0, 14}, 
      {41, 263, 2, 0, 5, 2, 0, 14, 2, 0, 13}, {12, 8, 13, 14}, 
      {41, 261, 2, 0, 6, 2, 0, 14, 2, 0, 13}, {40, 56, 2, 0, 13, 2, 0, 6}, 
      {15, 12, 6, 13}, {12, 10, 11, 13, 10}, {10, 10, 1}, 
      {40, 57, 3, 0, 1, 3, 0, 2}, {10, 5, 1}, {16, 1, 2, 1}, 
      {40, 60, 3, 0, 1, 3, 0, 2}, {10, 7, 1}, {16, 1, 2, 1}, 
      {40, 18, 3, 0, 1, 3, 0, 2}, {10, 3, 1}, {16, 1, 2, 1}, {19, 1, 2}, 
      {13, 0, 2, 1}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 7}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 11}, {12, 8, 11, 10}, 
      {41, 261, 2, 0, 2, 2, 0, 10, 2, 0, 11}, {12, 7, 11, 7}, 
      {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 11}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 13}, {12, 8, 13, 10}, 
      {41, 261, 2, 0, 2, 2, 0, 10, 2, 0, 13}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 10}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 14}, 
      {12, 8, 14, 6}, {41, 261, 2, 0, 2, 2, 0, 6, 2, 0, 14}, {15, 5, 14, 6}, 
      {12, 10, 6, 10}, {15, 5, 13, 10, 6}, {12, 11, 6, 11}, {10, 11, 2}, 
      {40, 57, 3, 0, 2, 3, 0, 3}, {40, 60, 3, 0, 3, 3, 0, 2}, {10, 7, 3}, 
      {16, 3, 2, 3}, {40, 18, 3, 0, 3, 3, 0, 2}, {41, 263, 2, 0, 5, 2, 0, 0, 
       2, 0, 7}, {12, 8, 2, 11}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 
       2, 0, 13}, {12, 8, 13, 6}, {41, 261, 2, 0, 11, 2, 0, 6, 2, 0, 13}, 
      {12, 7, 13, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 13}, {12, 8, 2, 11}, 
      {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 10}, {12, 8, 10, 6}, 
      {41, 261, 2, 0, 11, 2, 0, 6, 2, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 11}, {12, 8, 2, 6}, {12, 9, 0, 14}, {41, 263, 2, 0, 5, 2, 0, 14, 2, 
       0, 15}, {12, 8, 15, 14}, {41, 261, 2, 0, 6, 2, 0, 14, 2, 0, 15}, 
      {15, 5, 15, 6}, {12, 11, 6, 11}, {15, 5, 10, 11, 6}, {12, 13, 6, 13}, 
      {10, 13, 3}, {40, 57, 3, 0, 3, 3, 0, 4}, {40, 60, 3, 0, 4, 3, 0, 3}, 
      {10, 7, 4}, {16, 4, 3, 4}, {40, 18, 3, 0, 4, 3, 0, 3}, {19, 3, 4}, 
      {13, 2, 4, 2}, {10, 3, 4}, {40, 60, 3, 0, 4, 3, 0, 3}, {16, 0, 3, 4}, 
      {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 7}, {15, 4, 7, 13}, {12, 9, 0, 7}, 
      {41, 263, 2, 0, 5, 2, 0, 7, 2, 0, 6}, {12, 8, 6, 7}, 
      {41, 261, 2, 0, 1, 2, 0, 7, 2, 0, 6}, {15, 5, 6, 7}, {18, 7, 6}, 
      {12, 13, 6, 13}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 6}, {15, 4, 6, 7}, 
      {12, 8, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 10}, {12, 9, 0, 6}, 
      {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 11, 6}, 
      {41, 261, 2, 0, 1, 2, 0, 6, 2, 0, 11}, {15, 4, 10, 11, 6}, {18, 6, 10}, 
      {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 11, 6}, 
      {41, 261, 2, 0, 1, 2, 0, 6, 2, 0, 11}, {40, 56, 2, 0, 11, 2, 0, 6}, 
      {15, 12, 6, 11}, {12, 7, 10, 11, 7}, {10, 7, 3}, 
      {40, 57, 3, 0, 3, 3, 0, 5}, {10, 5, 3}, {16, 3, 5, 3}, 
      {40, 60, 3, 0, 3, 3, 0, 5}, {10, 13, 3}, {16, 3, 5, 3}, 
      {40, 18, 3, 0, 3, 3, 0, 5}, {19, 5, 3}, {10, 3, 5}, 
      {40, 60, 3, 0, 5, 3, 0, 6}, {16, 0, 6, 5}, {41, 261, 3, 0, 3, 3, 0, 5, 
       3, 0, 6}, {13, 4, 6, 4}, {40, 1, 3, 0, 4, 3, 0, 6}, {16, 1, 2, 6, 1}, 
      {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 13}, {15, 4, 13, 7}, {12, 9, 0, 13}, 
      {41, 263, 2, 0, 5, 2, 0, 13, 2, 0, 10}, {12, 8, 10, 13}, 
      {41, 261, 2, 0, 1, 2, 0, 13, 2, 0, 10}, {15, 5, 10, 13}, {18, 13, 10}, 
      {12, 7, 10, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 10}, 
      {15, 4, 10, 13}, {12, 8, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 
       11}, {12, 9, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 6}, 
      {12, 8, 6, 10}, {41, 261, 2, 0, 1, 2, 0, 10, 2, 0, 6}, 
      {15, 4, 11, 6, 10}, {18, 10, 11}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 6}, {12, 8, 6, 10}, 
      {41, 261, 2, 0, 1, 2, 0, 10, 2, 0, 6}, {40, 56, 2, 0, 6, 2, 0, 10}, 
      {15, 12, 10, 6}, {12, 13, 11, 6, 13}, {10, 13, 2}, 
      {40, 57, 3, 0, 2, 3, 0, 6}, {10, 5, 2}, {16, 2, 6, 2}, 
      {40, 60, 3, 0, 2, 3, 0, 6}, {10, 7, 2}, {16, 2, 6, 2}, 
      {40, 18, 3, 0, 2, 3, 0, 6}, {19, 6, 2}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 7}, {15, 4, 7, 13}, {12, 8, 1, 7}, {12, 9, 0, 11}, 
      {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 6}, {12, 8, 6, 11}, 
      {41, 261, 2, 0, 7, 2, 0, 11, 2, 0, 6}, {15, 5, 6, 7}, {18, 7, 6}, 
      {12, 13, 6, 13}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 6}, {15, 4, 6, 7}, 
      {12, 8, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 1, 6}, 
      {12, 9, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 15}, 
      {12, 8, 15, 10}, {41, 261, 2, 0, 6, 2, 0, 10, 2, 0, 15}, 
      {15, 4, 11, 15, 6}, {18, 6, 11}, {12, 8, 1, 6}, {12, 9, 0, 15}, 
      {41, 263, 2, 0, 5, 2, 0, 15, 2, 0, 10}, {12, 8, 10, 15}, 
      {41, 261, 2, 0, 6, 2, 0, 15, 2, 0, 10}, {40, 56, 2, 0, 10, 2, 0, 6}, 
      {15, 12, 6, 10}, {12, 7, 11, 10, 7}, {10, 7, 6}, 
      {40, 57, 3, 0, 6, 3, 0, 4}, {10, 5, 6}, {16, 6, 4, 6}, 
      {40, 60, 3, 0, 6, 3, 0, 4}, {10, 13, 6}, {16, 6, 4, 6}, 
      {40, 18, 3, 0, 6, 3, 0, 4}, {13, 2, 4, 2}, {41, 263, 2, 0, 5, 2, 0, 0, 
       2, 0, 13}, {12, 9, 0, 7}, {41, 263, 2, 0, 5, 2, 0, 7, 2, 0, 11}, 
      {12, 8, 11, 7}, {41, 261, 2, 0, 2, 2, 0, 7, 2, 0, 11}, 
      {12, 13, 11, 13}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 11}, 
      {12, 9, 0, 7}, {41, 263, 2, 0, 5, 2, 0, 7, 2, 0, 10}, {12, 8, 10, 7}, 
      {41, 261, 2, 0, 2, 2, 0, 7, 2, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 7}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 15}, 
      {12, 8, 15, 6}, {41, 261, 2, 0, 2, 2, 0, 6, 2, 0, 15}, {15, 5, 15, 6}, 
      {12, 7, 6, 7}, {15, 5, 10, 7, 6}, {12, 11, 6, 11}, {10, 11, 4}, 
      {40, 57, 3, 0, 4, 3, 0, 6}, {40, 60, 3, 0, 6, 3, 0, 4}, {10, 13, 6}, 
      {16, 6, 4, 6}, {40, 18, 3, 0, 6, 3, 0, 4}, {10, 3, 6}, 
      {40, 60, 3, 0, 6, 3, 0, 3}, {16, 0, 3, 6}, {41, 263, 2, 0, 5, 2, 0, 0, 
       2, 0, 13}, {12, 8, 2, 11}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 
       2, 0, 10}, {12, 8, 10, 6}, {41, 261, 2, 0, 11, 2, 0, 6, 2, 0, 10}, 
      {12, 13, 10, 13}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 10}, 
      {12, 8, 2, 11}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 7}, 
      {12, 8, 7, 6}, {41, 261, 2, 0, 11, 2, 0, 6, 2, 0, 7}, 
      {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 11}, {12, 8, 2, 6}, {12, 9, 0, 15}, 
      {41, 263, 2, 0, 5, 2, 0, 15, 2, 0, 14}, {12, 8, 14, 15}, 
      {41, 261, 2, 0, 6, 2, 0, 15, 2, 0, 14}, {15, 5, 14, 6}, 
      {12, 11, 6, 11}, {15, 5, 7, 11, 6}, {12, 10, 6, 10}, {10, 10, 3}, 
      {40, 57, 3, 0, 3, 3, 0, 5}, {40, 60, 3, 0, 5, 3, 0, 3}, {10, 13, 5}, 
      {16, 5, 3, 5}, {40, 18, 3, 0, 5, 3, 0, 3}, {19, 3, 5}, {10, 3, 3}, 
      {40, 60, 3, 0, 3, 3, 0, 7}, {16, 0, 7, 3}, {41, 261, 3, 0, 5, 3, 0, 3, 
       3, 0, 7}, {13, 6, 7, 6}, {40, 1, 3, 0, 6, 3, 0, 7}, {10, 3, 6}, 
      {16, 6, 2, 4, 7, 6}, {13, 1, 6, 1}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 
       13}, {12, 9, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 6}, 
      {12, 8, 6, 10}, {41, 261, 2, 0, 2, 2, 0, 10, 2, 0, 6}, {12, 13, 6, 13}, 
      {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 6}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 7}, {12, 8, 7, 10}, 
      {41, 261, 2, 0, 2, 2, 0, 10, 2, 0, 7}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 10}, {12, 9, 0, 11}, {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 14}, 
      {12, 8, 14, 11}, {41, 261, 2, 0, 2, 2, 0, 11, 2, 0, 14}, 
      {15, 5, 14, 11}, {12, 10, 11, 10}, {15, 5, 7, 10, 11}, {12, 6, 11, 6}, 
      {10, 6, 6}, {40, 57, 3, 0, 6, 3, 0, 2}, {40, 60, 3, 0, 2, 3, 0, 6}, 
      {10, 13, 2}, {16, 2, 6, 2}, {40, 18, 3, 0, 2, 3, 0, 6}, 
      {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 13}, {12, 8, 2, 6}, {12, 9, 0, 11}, 
      {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 7}, {12, 8, 7, 11}, 
      {41, 261, 2, 0, 6, 2, 0, 11, 2, 0, 7}, {12, 13, 7, 13}, 
      {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 7}, {12, 8, 2, 6}, {12, 9, 0, 11}, 
      {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 10}, {12, 8, 10, 11}, 
      {41, 261, 2, 0, 6, 2, 0, 11, 2, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 6}, {12, 8, 2, 11}, {12, 9, 0, 14}, {41, 263, 2, 0, 5, 2, 0, 14, 2, 
       0, 15}, {12, 8, 15, 14}, {41, 261, 2, 0, 11, 2, 0, 14, 2, 0, 15}, 
      {15, 5, 15, 11}, {12, 6, 11, 6}, {15, 5, 10, 6, 11}, {12, 7, 11, 7}, 
      {10, 7, 2}, {40, 57, 3, 0, 2, 3, 0, 4}, {40, 60, 3, 0, 4, 3, 0, 2}, 
      {10, 13, 4}, {16, 4, 2, 4}, {40, 18, 3, 0, 4, 3, 0, 2}, {19, 2, 4}, 
      {13, 6, 4, 6}, {10, 3, 4}, {40, 60, 3, 0, 4, 3, 0, 2}, {16, 0, 2, 4}, 
      {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 13}, {15, 4, 13, 7}, {12, 9, 0, 13}, 
      {41, 263, 2, 0, 5, 2, 0, 13, 2, 0, 11}, {12, 8, 11, 13}, 
      {41, 261, 2, 0, 1, 2, 0, 13, 2, 0, 11}, {15, 5, 11, 13}, {18, 13, 11}, 
      {12, 7, 11, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 11}, 
      {15, 4, 11, 13}, {12, 8, 0, 11}, {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 
       10}, {12, 9, 0, 11}, {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 6}, 
      {12, 8, 6, 11}, {41, 261, 2, 0, 1, 2, 0, 11, 2, 0, 6}, 
      {15, 4, 10, 6, 11}, {18, 11, 10}, {12, 9, 0, 11}, 
      {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 6}, {12, 8, 6, 11}, 
      {41, 261, 2, 0, 1, 2, 0, 11, 2, 0, 6}, {40, 56, 2, 0, 6, 2, 0, 11}, 
      {15, 12, 11, 6}, {12, 13, 10, 6, 13}, {10, 13, 2}, 
      {40, 57, 3, 0, 2, 3, 0, 7}, {10, 5, 2}, {16, 2, 7, 2}, 
      {40, 60, 3, 0, 2, 3, 0, 7}, {10, 7, 2}, {16, 2, 7, 2}, 
      {40, 18, 3, 0, 2, 3, 0, 7}, {19, 7, 2}, {10, 3, 7}, 
      {40, 60, 3, 0, 7, 3, 0, 5}, {16, 0, 5, 7}, {41, 261, 3, 0, 2, 3, 0, 7, 
       3, 0, 5}, {13, 4, 5, 4}, {40, 1, 3, 0, 4, 3, 0, 5}, {10, 3, 4}, 
      {16, 4, 6, 5, 4}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 0, 7}, {15, 4, 7, 13}, 
      {12, 9, 0, 7}, {41, 263, 2, 0, 5, 2, 0, 7, 2, 0, 10}, {12, 8, 10, 7}, 
      {41, 261, 2, 0, 1, 2, 0, 7, 2, 0, 10}, {15, 5, 10, 7}, {18, 7, 10}, 
      {12, 13, 10, 13}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 10}, 
      {15, 4, 10, 7}, {12, 8, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 6}, 
      {12, 9, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 11}, 
      {12, 8, 11, 10}, {41, 261, 2, 0, 1, 2, 0, 10, 2, 0, 11}, 
      {15, 4, 6, 11, 10}, {18, 10, 6}, {12, 9, 0, 10}, 
      {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 11}, {12, 8, 11, 10}, 
      {41, 261, 2, 0, 1, 2, 0, 10, 2, 0, 11}, {40, 56, 2, 0, 11, 2, 0, 10}, 
      {15, 12, 10, 11}, {12, 7, 6, 11, 7}, {10, 7, 6}, 
      {40, 57, 3, 0, 6, 3, 0, 5}, {10, 5, 6}, {16, 6, 5, 6}, 
      {40, 60, 3, 0, 6, 3, 0, 5}, {10, 13, 6}, {16, 6, 5, 6}, 
      {40, 18, 3, 0, 6, 3, 0, 5}, {19, 5, 6}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 13}, {15, 4, 13, 7}, {12, 8, 1, 13}, {12, 9, 0, 6}, 
      {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 11, 6}, 
      {41, 261, 2, 0, 13, 2, 0, 6, 2, 0, 11}, {15, 5, 11, 13}, {18, 13, 11}, 
      {12, 7, 11, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 11}, 
      {15, 4, 11, 13}, {12, 8, 0, 11}, {41, 263, 2, 0, 5, 2, 0, 11, 2, 0, 6}, 
      {12, 8, 1, 11}, {12, 9, 0, 10}, {41, 263, 2, 0, 5, 2, 0, 10, 2, 0, 15}, 
      {12, 8, 15, 10}, {41, 261, 2, 0, 11, 2, 0, 10, 2, 0, 15}, 
      {15, 4, 6, 15, 11}, {18, 11, 6}, {12, 8, 1, 11}, {12, 9, 0, 15}, 
      {41, 263, 2, 0, 5, 2, 0, 15, 2, 0, 10}, {12, 8, 10, 15}, 
      {41, 261, 2, 0, 11, 2, 0, 15, 2, 0, 10}, {40, 56, 2, 0, 10, 2, 0, 11}, 
      {15, 12, 11, 10}, {12, 13, 6, 10, 13}, {10, 13, 5}, 
      {40, 57, 3, 0, 5, 3, 0, 2}, {10, 5, 5}, {16, 5, 2, 5}, 
      {40, 60, 3, 0, 5, 3, 0, 2}, {10, 7, 5}, {16, 5, 2, 5}, 
      {40, 18, 3, 0, 5, 3, 0, 2}, {13, 6, 2, 6}, {10, 3, 2}, 
      {40, 60, 3, 0, 2, 3, 0, 5}, {16, 0, 5, 2}, {41, 263, 2, 0, 5, 2, 0, 0, 
       2, 0, 7}, {12, 8, 2, 13}, {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 
       2, 0, 10}, {12, 8, 10, 6}, {41, 261, 2, 0, 13, 2, 0, 6, 2, 0, 10}, 
      {12, 7, 10, 7}, {41, 263, 2, 0, 12, 2, 0, 0, 2, 0, 10}, {12, 8, 2, 13}, 
      {12, 9, 0, 6}, {41, 263, 2, 0, 5, 2, 0, 6, 2, 0, 11}, {12, 8, 11, 6}, 
      {41, 261, 2, 0, 13, 2, 0, 6, 2, 0, 11}, {41, 263, 2, 0, 5, 2, 0, 0, 2, 
       0, 13}, {12, 8, 2, 6}, {12, 9, 0, 15}, {41, 263, 2, 0, 5, 2, 0, 15, 2, 
       0, 14}, {12, 8, 14, 15}, {41, 261, 2, 0, 6, 2, 0, 15, 2, 0, 14}, 
      {15, 5, 14, 6}, {12, 13, 6, 13}, {15, 5, 11, 13, 6}, {12, 10, 6, 10}, 
      {10, 10, 5}, {40, 57, 3, 0, 5, 3, 0, 7}, {40, 60, 3, 0, 7, 3, 0, 5}, 
      {10, 7, 7}, {16, 7, 5, 7}, {40, 18, 3, 0, 7, 3, 0, 5}, {19, 5, 7}, 
      {10, 3, 5}, {40, 60, 3, 0, 5, 3, 0, 3}, {16, 0, 3, 5}, 
      {41, 261, 3, 0, 7, 3, 0, 5, 3, 0, 3}, {13, 2, 3, 2}, 
      {40, 1, 3, 0, 2, 3, 0, 3}, {10, 3, 2}, {16, 2, 6, 3, 2}, {13, 4, 2, 4}, 
      {40, 60, 3, 0, 4, 3, 0, 2}, {16, 1, 2, 1}, {47, linearErrorGrad, 2, 0, 
       0, 2, 0, 1, 2, 0, 7}, {46, Function[{nn, mm, mmm}, 
        linearErrorGrad[nn, mm][[1]]], 2, 0, 0, 2, 0, 1, 2, 0, 2, 2, 0, 10}, 
      {10, 10, 2}, {16, 2, 1, 2}, {47, linearErrorInter, 2, 0, 0, 2, 0, 1, 2, 
       0, 10}, {46, Function[{nn, mm, mmm}, linearErrorInter[nn, mm][[1]]], 
       2, 0, 0, 2, 0, 1, 2, 0, 2, 2, 0, 7}, {10, 7, 4}, {13, 2, 4, 2}, 
      {47, linearErrorGrad, 2, 0, 0, 2, 0, 2, 2, 0, 7}, 
      {46, Function[{nn, mm, mmm}, linearErrorGrad[nn, mmm][[2]]], 2, 0, 0, 
       2, 0, 1, 2, 0, 2, 2, 0, 10}, {10, 10, 4}, {16, 4, 1, 4}, 
      {47, linearErrorInter, 2, 0, 0, 2, 0, 2, 2, 0, 10}, 
      {46, Function[{nn, mm, mmm}, linearErrorInter[nn, mmm][[2]]], 2, 0, 0, 
       2, 0, 1, 2, 0, 2, 2, 0, 7}, {10, 7, 6}, {13, 4, 6, 4}, 
      {34, 1, 2, 4, 3, 0}, {1}}, Function[{nn, mm, mmm}, 
      Module[{\[Theta]}, 
       \[Theta] = ((Pi - 6*ArcCos[(3*2^nn - 2*Mod[1 + mm, 1 + 2^(-1 + nn)])/
                (2*Sqrt[3*4^nn - 3*2^(1 + nn)*Mod[1 + mm, 1 + 2^(-1 + nn)] + 
                   4*Mod[1 + mm, 1 + 2^(-1 + nn)]^2])])*
            (ArcCos[(2^nn + Mod[mmm, 1 + 2^(-1 + nn)])/Sqrt[4^nn + 
                 2*Mod[mmm, 1 + 2^(-1 + nn)]*(2^nn + 2*Mod[mmm, 
                     1 + 2^(-1 + nn)])]] - ArcCos[(2^nn + Mod[1 + mmm, 
                 1 + 2^(-1 + nn)])/Sqrt[4^nn + 2*Mod[1 + mmm, 
                   1 + 2^(-1 + nn)]*(2^nn + 2*Mod[1 + mmm, 1 + 
                      2^(-1 + nn)])]])*Sin[Pi/6 + Mod[-ArcCos[
                 (3*2^nn - 2*Mod[mm, 1 + 2^(-1 + nn)])/(2*Sqrt[3*4^nn - 
                     3*2^(1 + nn)*Mod[mm, 1 + 2^(-1 + nn)] + 
                     4*Mod[mm, 1 + 2^(-1 + nn)]^2])], Pi/6]] + 
           6*(-ArcCos[(3*2^nn - 2*Mod[mm, 1 + 2^(-1 + nn)])/
                (2*Sqrt[3*4^nn - 3*2^(1 + nn)*Mod[mm, 1 + 2^(-1 + nn)] + 
                   4*Mod[mm, 1 + 2^(-1 + nn)]^2])] + 
             ArcCos[(3*2^nn - 2*Mod[1 + mm, 1 + 2^(-1 + nn)])/(2*
                Sqrt[3*4^nn - 3*2^(1 + nn)*Mod[1 + mm, 1 + 2^(-1 + nn)] + 
                  4*Mod[1 + mm, 1 + 2^(-1 + nn)]^2])])*
            ArcCos[(2^nn + Mod[mmm, 1 + 2^(-1 + nn)])/Sqrt[4^nn + 
                2*Mod[mmm, 1 + 2^(-1 + nn)]*(2^nn + 2*Mod[mmm, 
                    1 + 2^(-1 + nn)])]]*Sin[Pi/6 + Mod[-ArcCos[
                 (2^nn + Mod[1 + mmm, 1 + 2^(-1 + nn)])/Sqrt[4^nn + 
                    2*Mod[1 + mmm, 1 + 2^(-1 + nn)]*(2^nn + 2*Mod[1 + mmm, 
                        1 + 2^(-1 + nn)])]], Pi/6]])/
          (6*(ArcCos[(2^nn + Mod[mmm, 1 + 2^(-1 + nn)])/Sqrt[4^nn + 
                 2*Mod[mmm, 1 + 2^(-1 + nn)]*(2^nn + 2*Mod[mmm, 
                     1 + 2^(-1 + nn)])]] - ArcCos[(2^nn + Mod[1 + mmm, 
                 1 + 2^(-1 + nn)])/Sqrt[4^nn + 2*Mod[1 + mmm, 
                   1 + 2^(-1 + nn)]*(2^nn + 2*Mod[1 + mmm, 1 + 
                      2^(-1 + nn)])]])*Sin[Pi/6 + Mod[-ArcCos[
                 (3*2^nn - 2*Mod[mm, 1 + 2^(-1 + nn)])/(2*Sqrt[3*4^nn - 
                     3*2^(1 + nn)*Mod[mm, 1 + 2^(-1 + nn)] + 
                     4*Mod[mm, 1 + 2^(-1 + nn)]^2])], Pi/6]] + 
           6*(-ArcCos[(3*2^nn - 2*Mod[mm, 1 + 2^(-1 + nn)])/
                (2*Sqrt[3*4^nn - 3*2^(1 + nn)*Mod[mm, 1 + 2^(-1 + nn)] + 
                   4*Mod[mm, 1 + 2^(-1 + nn)]^2])] + 
             ArcCos[(3*2^nn - 2*Mod[1 + mm, 1 + 2^(-1 + nn)])/(2*
                Sqrt[3*4^nn - 3*2^(1 + nn)*Mod[1 + mm, 1 + 2^(-1 + nn)] + 
                  4*Mod[1 + mm, 1 + 2^(-1 + nn)]^2])])*
            Sin[Pi/6 + Mod[-ArcCos[(2^nn + Mod[1 + mmm, 1 + 2^(-1 + nn)])/
                  Sqrt[4^nn + 2*Mod[1 + mmm, 1 + 2^(-1 + nn)]*(2^nn + 
                      2*Mod[1 + mmm, 1 + 2^(-1 + nn)])]], Pi/6]]); 
        {\[Theta], linearErrorGrad[nn, mm][[1]]*\[Theta] + 
          linearErrorInter[nn, mm][[1]], linearErrorGrad[nn, mmm][[2]]*
           \[Theta] + linearErrorInter[nn, mmm][[2]]}]], Evaluate]
 
linearErrorGrad[nn_, mm_] := {-ptsAA[nn, mm][[2]]/(ptsAA[nn, mm + 1][[1]] - 
       ptsAA[nn, mm][[1]]), ptsBB[nn, mm + 1][[2]]/(ptsBB[nn, mm + 1][[1]] - 
       ptsBB[nn, mm][[1]])}
 
ptsAA[nn_, mm_] := {points[nn, mm][[2]], partMaxErrorFun[points[nn, mm][[2]]]}
 
partMaxErrorFun[\[Theta]_] := 2*Sin[Mod[\[Theta], Pi/6] + Pi/6]
 
ptsBB[nn_, mm_] := {points[nn, mm][[1]], partMaxErrorFun[
      -points[nn, mm][[1]]]}
 
linearErrorInter[nn_, mm_] := {(ptsAA[nn, mm + 1][[1]]*ptsAA[nn, mm][[2]])/
      (ptsAA[nn, mm + 1][[1]] - ptsAA[nn, mm][[1]]), 
     ((-ptsBB[nn, mm][[1]])*ptsBB[nn, mm + 1][[2]])/(ptsBB[nn, mm + 1][[1]] - 
       ptsBB[nn, mm][[1]])}
 
errorMinsHalfTable = {{}}
 
errorMinsOneTable = {{}}
 
errorMinsQuarterTable = {{}}
 
errorMinsTable = {{}}
