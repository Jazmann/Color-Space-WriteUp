(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    217744,       4498]
NotebookOptionsPosition[    213987,       4371]
NotebookOutlinePosition[    214457,       4389]
CellTagsIndexPosition[    214414,       4386]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ValueThumbSlider", "[", "v_", "]"}], ":=", 
   RowBox[{"ValueThumbSlider", "[", 
    RowBox[{"v", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ValueThumbSlider", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "var_", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_"}], "}"}], ",", "options___"}], "]"}], ":=", 
   
   RowBox[{"LocatorPane", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumberQ", "[", "var", "]"}]}], ",", 
          RowBox[{"var", "=", "min"}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"var", ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "=", 
          RowBox[{"First", "[", "#", "]"}]}], ")"}], "&"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "1.5", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"min", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"max", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"var", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "5"}], ",", 
                   RowBox[{"-", "8"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"5", ",", 
                   RowBox[{"-", "8"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
            "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "30"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}], "+", 
           RowBox[{"0.1", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], 
            RowBox[{"(", 
             RowBox[{"max", "-", "min"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "10"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"max", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ValueThumbSlider", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "var_", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_", ",", "scale_"}], "}"}], ",", 
     "options___"}], "]"}], ":=", 
   RowBox[{"LocatorPane", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumberQ", "[", "var", "]"}]}], ",", 
          RowBox[{"var", "=", "min"}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"var", ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "=", 
          RowBox[{"First", "[", "#", "]"}]}], ")"}], "&"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "1.5", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"min", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"max", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"var", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "5"}], ",", 
                   RowBox[{"-", "8"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}], ",", 
               RowBox[{"Offset", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"5", ",", 
                   RowBox[{"-", "8"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "0"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
            "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "30"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}], "+", 
           RowBox[{"0.1", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], 
            RowBox[{"(", 
             RowBox[{"max", "-", "min"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "10"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"max", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"scale", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5691805641112127`*^9, 3.5691805709813643`*^9}, {
  3.56918076269549*^9, 3.569180768384871*^9}}],

Cell[CellGroupData[{

Cell[RawData[""], "Section",
 CellChangeTimes->{{3.579274383154561*^9, 3.579274387104787*^9}}],

Cell["The Normal Distribution", "Title",
 CellChangeTimes->{{3.5792743944872093`*^9, 3.579274407840973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.579259496140073*^9, 3.5792595150121517`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t", "-", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.5792594701635866`*^9, 3.579259516651246*^9}]
}, Open  ]],

Cell["The relationship to the  error Function ", "Subtitle",
 CellChangeTimes->{{3.5792744159394364`*^9, 3.5792744349385233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x0", ",", "x"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
       RowBox[{"a", " ", "t"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x0", ",", "x"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], " ", ",", "t"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.578908189129383*^9, 3.578908235399065*^9}, {
   3.5792628532850904`*^9, 3.5792628615005603`*^9}, {3.5792679843335695`*^9, 
   3.57926799938043*^9}, {3.579268072509613*^9, 3.579268075892806*^9}, {
   3.5792682966774344`*^9, 3.5792682975644855`*^9}, {3.5792683417720137`*^9, 
   3.5792683472543273`*^9}, {3.5792744475672455`*^9, 3.57927447701493*^9}, {
   3.579274910422719*^9, 3.5792749237204795`*^9}, 3.5793271301078386`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"x", "-", "\[Mu]"}], 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "-", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"x0", "-", "\[Mu]"}], 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.5789082439322796`*^9, 3.5792628639286995`*^9, 3.5792680241798487`*^9, 
   3.5792680776769085`*^9, 3.5792682983745317`*^9, 3.579268347976369*^9, {
   3.579274449624363*^9, 3.5792744780939913`*^9}, 3.5792749243575163`*^9, 
   3.5793271341170454`*^9, 3.591079217993756*^9},
 FontSize->18],

Cell[BoxData[
 FractionBox[
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "a"}], " ", "x"}], "+", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "x0"}], "+", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
  RowBox[{"2", " ", "a"}]]], "Output",
 CellChangeTimes->{
  3.5789082439322796`*^9, 3.5792628639286995`*^9, 3.5792680241798487`*^9, 
   3.5792680776769085`*^9, 3.5792682983745317`*^9, 3.579268347976369*^9, {
   3.579274449624363*^9, 3.5792744780939913`*^9}, 3.5792749243575163`*^9, 
   3.5793271341170454`*^9, 3.591079218328775*^9},
 FontSize->18],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "A", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"sMax", "-", "\[Mu]"}], 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "-", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"sMin", "-", "\[Mu]"}], 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.5789082439322796`*^9, 3.5792628639286995`*^9, 3.5792680241798487`*^9, 
   3.5792680776769085`*^9, 3.5792682983745317`*^9, 3.579268347976369*^9, {
   3.579274449624363*^9, 3.5792744780939913`*^9}, 3.5792749243575163`*^9, 
   3.5793271341170454`*^9, 3.591079218529786*^9},
 FontSize->18]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"sMax_", ",", "sMin_", ",", " ", "\[Sigma]_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.5910832041407504`*^9, 3.5910832473092194`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", " ", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sMax", " ", "=", " ", "10"}], ";", " ", 
  RowBox[{"sMin", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "\[Mu]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dRange", " ", "=", 
   RowBox[{"N", "[", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[Mu]", " ", "-", " ", "sMin"}], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"sMax", " ", "-", " ", "\[Mu]"}], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMin", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMax", " ", "=", " ", 
   RowBox[{"dMin", " ", "+", " ", "dRange"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"x", "-", "\[Mu]"}], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox["\[Mu]", 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
     " ", 
     RowBox[{"nErf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5789083100919957`*^9, 3.5789083792313175`*^9}, {
  3.5789084648910675`*^9, 3.578908465437069*^9}, {3.578908562391239*^9, 
  3.578908585307679*^9}, {3.5789089161228604`*^9, 3.5789089957142*^9}, {
  3.579256858315198*^9, 3.5792569195497*^9}, {3.5792569507864866`*^9, 
  3.5792569829503264`*^9}, {3.5792570324461575`*^9, 3.5792570586686573`*^9}, {
  3.579257483710968*^9, 3.579257499798888*^9}, {3.579263580629692*^9, 
  3.5792635847829294`*^9}, {3.5792636233671365`*^9, 3.5792638357672853`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt12k4lO/bB/AhW/Yk+zKL5Jcle1Hd19kiKZVElpQSEpIUEUkRQqUSikqR
EmUra4nskV0RISHrDNm3eq77fzzzYmY+x/e8r/WcF0OzO2vqwE6hUNTxG/lJ
KTT812L7p4jy/y8/9qjyXZusEP46/rOQQag9PFkpqnuFdK187W7ikFbb++Bt
UdgBOw/GHidy2i2uhfg+JN2fwuNICBSPMMqsE8j6VWWJLsQ5R5ehsqhkbNjx
Iv088UxP2bg8M4WsV99Q4kW08I+8Ka9LI52VO+xDxFvp6J8MysSmnjuwM4Cg
UN79O1mUS+bx1tdCiAdDohp9xvlkPh3ieYPQbL5gZ99RQM7HWX8xnLBP1i63
n/uA3SNyJvU2sXw7aqYv+CN2wpOvzEiiZsvCvaywYmz1Flfhu4S9onW5puQn
7PGamTNRhLo0b5dHD+kGb9dX94lloYKZrBel5PNqNuPRRPS8pJKWbjl2sV/J
gwdEZW17mNahKuzI3BznJ4ST9/fKI8rV2LExn24lEDwKHRxBKz5jV9347+xT
Yo9vp39Ldg05370Wg0RiWPFH4VJ4LXbGh/AtSUR40485Bfsv2JvalDY/J2r/
6/bwFK3HzusWOPiCcG3tTn80+j83f3V6SQSD+4ydXQP2YHfIjRRi3ai7Vrh+
I7meA/kDqYTTDo/XHcNN2LVfdSMyiE0P/tSwDjdjK6h+RJkED8tjeEUp6SBJ
5lwmkfLw/DqVuBbsqAimXzZxaXzSALhbsUPjpXa/JfbsumBvdp40h+MzyXfE
8MSFp357v2L7PQ9tyCEKDKc/Rub+zybGOblE2CPPriTGN3J+Dd3EPELZyEv6
yyJpPw6LewWEa8LF+7Jp7dgvVWWbi4gtM7PZGhLfsXeWWs59JPiNvZsMgkg7
xRjfKyZez3oLudl0YA8YxteXEP775lWvVZE+Li/i+YnYn+hjHK3diV22Lka+
lGDuv3SjiP8HdpuTY1AZUZS08KLJm/R+vn9EOXFr4VLFQB/pvo87/pUTG5J9
Vwh96CL3hy7dqSTy/IuK0nV7sKc2+rLVEAkpf7/ku5I28zdm1hChLcSP0mek
k4b0e2sJy/UfF78J/iT7Sxt66ggw/8fbu5P0ccnS4XpCKQBJjV4inZbwyL+B
mG/9uInym/S1ep9HjUQvhbKbV7YXO33EXKuJ+KwMFqKHSOe/S/rSRDy8Wuyp
9JF0lKG0cAuhr1qSZRLzC/tELKPhK6HT8jW6qJr0HVPvgG+Euu/oJZUl0qIa
T3TaCMVq8R08J/qwc7t/vWknVju4NX9c3499hDLf00kI8gflqh4lnfXmRuEP
gjf7QVzcbdL1r9njuwgKW/nJi1PYAckRSRt7iNF46Sm1ogGcB56r0+glfu/Q
aIsfJz0SxcrrJXqHd73nZfzG9daTaTt+Ee2bPIIGQrAp+1Ss7fuIipYq0ccH
B8n+CFFrHSBKfLvm+IJILzf88P1NvKdPdfrkYAfU9UwqDhJZ7vLPzaWHcK6n
Vh42RDzh99IR6McOOJW5MWKUeJgdLukrPow9wmlmNUZEWz9dHjTCpjyJ+KzM
JCJe1paXvSFzpwf7frII752Mw37eI4gCF8oNqieI8yOb9IdfkQaR9YZ/CLe7
++Usf5AeObyv6g/h0OMzoLV9FD+fU/O0ZZIw9WvwGuEbw+NvcGgWnyH2MQas
rQhscDy9nDlD7P68SFS6k87/IGoySxAS67gTW7GLTVe4xs4Rym8vx1g/YWJ/
VAiwWSQUj9zzrWokza/fIrFE0NlTbHU5WHi+eNf+9iVCwqRlnchp7OJprSzn
vwS715pOe8lxbCQu309B1sdfNeVpYx/nFnlygg1l7UHV/CakNQwu/WRDdvKn
c94GY0NKwIMRdvSp6n0kxxSZ1xovKHMiqeyDIZZCE3g8Zmp9OSfyeDRwOW09
6R3735/kQnQPYRezE9jUopkdadwoUNreIKkOmyK2wHueF3Vyzm+eGyJz/7go
dT6kPX5T05jzD84ftIhN8qG+slz5qc1/yPtUuhYigHa68S3sSMF2D5ko9RZG
8ZYJ4zFlZO53W3NMGE1t1/k90k26mSfJfhVKErdtuSc2iSgJl+S+24ggjpKs
N78CsXushd5eEEU2qYbPNz7BplpwWq5Yg97e74wLL8A2Ced4cn8NsnfmuqE1
QeZf3rmVi6Hy1dYnA49NIUqDsVy8mSSS+8u0+uaDfXz3qU52KeQ1GGiifB/b
JKv08jsppPjh9dbmGjJ/88hYSQYFO7JJMPSm8Xr23pcwlEddJtGCF82wla6W
vBagIt3Nypw1Z7FDD8m6X6KiASHzPx7J2DzrnNfY0NCu/Je1n1bP4Pm31T3f
xkCPE7eWim3Azut7f/sTA83cbMp33oN9XHP+8S4FlGy3lCxyFZsaoeRluRZx
85tctWNiD+YPSz5fhyzXWRfrrpzF5yUkZEMooVfb7f/xKmALB/Zu7lBC+328
L2dbYVO9jdZS16PogQQfjnLsjC96w20qaJAtNa+tm6xXMLe7o4r0Zd/Npi1g
O8XxK+xXQ12Hqj3N1ecQxXvnwd6WDUixZOJcchw2x7XqhQgN5N25mHEpBzsy
2ytzUQN9nuUc39+IHfB1YtxVE7mpSbnNcs3j9Vr3gYUWyonb7rzbAzvviEym
sQ7iyTVOkbmJ7Z3St6lRB1k3HR4cf4EdMOfywVIX/eVxcXzwA9v97Y9F943I
wOue3fDuBUSZuxsrUaWHou88elp0EtssPHu/oz4aTHvRc9cfm8cohJtnM4r4
VXhs81vsDGnVPYe3oBaTPusI+UU8fmcog4qQoivzwXF97KoNBy93IuQdMtem
bY4t8krw0n5AMkX8Fj/CsL25N+9asw3ZK+scUpvBtj+1/+SH7ShnF7rLvmoJ
Uaw9t2mq7kA8dkaNX5WxX5Vuc3qyA6XFHj1w5QS2jfQRvfCdaIozeG9DLfau
W3Ofr+5CgT1fd3gkLiNKkMOOjTN7UFf+3jPe77E5+DR/h+xF+veKo/1bseum
v52WMUbjBq+Gwrj/IkqW+jvJ/fvQsdTLtxNdsM0EDG63HkAFQX/yUoKwN359
+ASZoDXHTvWmP8IWn29fE22CaoUP6ryvxx7cHjRveBDpeyl0tGj9Q5Qavw+n
i01R9IEHHB3G2Ae1zvyjH0ITSoJqPx2w13jUuYUcQi87ZgPGYrBND59eMDdD
YttqFLmWsBXXZabwHkbznHr50nYUoCTe3TfeboWSPSa/PHbDLj4dJn7MGpl1
v+6l+WK/fKD+vM8aZeTR+ZWisKvPgvT8EeTowm+rXYHdUxZ5C44h0baK87lN
2A/FzTjaj6FPO6+G6ndjXyvk17pgi2TlZjJhDjs8IuG81XHU0tDNsW89GwTY
9Ex7pJxA17Y+lGzQZQNKGE+NGpsdUn9lpnZoB3aFdtcFazsUHlhtYWWDfTWI
O2/VSbRdN/uVwy38fJ/s66p79igjLtjE/w/ODUzPV46cQjWrg38LUdiBYnfE
+a+TExoIv+7/VAC77U3JtUEnJOMXlFamhF28rPGAeRqF2lzj4bMlc2kdPglX
lNhy9Um8KzsEXHf3LnjpioqMr+qqXcL5gus1zi1n0NSWAPuD93G+9rxnrLMb
Oi7rXxxTg/N8qZ9nLrgj3/uXLf5rZwfoXseornRH0QKXmQUD7FBc8/TyI5lz
qHbZV6aLbQUUMwwPVX0+hzZ1+XgrbFoBAQHfGJ/1ziPhJ57qmUkrgCK39Lzl
lBdSFves3J6F7cZ6dLfVC+26feFYy0dc32g4r2JwEfldOR8x+x0b0uki673R
oO25wa2rOKBYI8j4BN8ltKLN/Uq9HAeAqNlIWeglJGfiLnZCBedhwye38vgi
Mzi7M8iQAwLEpgLDBPxQMfVMwufLOB+pkDyt6Y86Yl032oRzAIViG7+rxB/N
CLvWjcXi+u08G7xMryAVNpcl4bccQHV9Wjm9NQDF/nSytBjG833dOLDS6yo6
+8xeuO8wJxQf9o+3VQhCt3wexN86yQkJ06nF6y8FoTcmdUp67tipl9S0G4MQ
8+/GbbducMJxwXOjwoHXkesRPo9N73Ge9ei9zUwwchbNao6gcQGV/iU2TS4M
hY0M2G5U4wLK/lh/tbAw9OqT9OhPfS5IWBm6Tm02DA25X+fYaMYFx+lpSbmt
4cjpi6XOz2DsxRphl+c3kWPwv2idUS5Qr9XLi6qORMFHtRk9c1yQMa11cTf/
HZSsfTo9jJMbhJ/RfLsO3EH9vU2V3XLcMP72c1JB+x1kj5LnbhzkhgY5qSue
c3eR3ZyxdVcON1CHlxeF7O+ja/VXB0JLuQGMtcK4cu6jZ8k5HloN3JDwehuV
a2U0+mlGDQ8dwvV6lID1WdHoeOZkoaYMD2T8GHY/sCoWHXN+KBtylQfGcwO5
9nPGocX2lXUTN3nAvV9RX/hUHIo18vG3ecgDwvOiEvPVcahRybJbI5sHoE1/
Yve9eLTz95qnnX08EDkpZKWk/Rj9Z39HQXP3Smg7drX3blsCqmimtMabrYS8
Lbv+bF/9FNntcL/OfWIlmDh/nH24/ymKpx8Y6PTBtu5V2F35FAn+5H8ZkroS
JOa5RwuLn6Gpo6HKPwR5ofjo1iSN1iQU+WW2w1CaFyinx+/9k3qOVLeeisha
xwsNsjqvwk48R44yu8ZCgBcGGzIe/Rh/jtq/r0jX9OCFvLV+fXESL1CRxRXN
0FZemHubeDXxZgq6cdBLTyueDxq8z6isEU9Hd2vXu6al8IH6FqWXxlfSUbxh
9+O1uXwQ+6tTI2owHWVs3c0h0cQHtYqZv1VsM1Dbf1L1S9z84H4+KNNzcyZS
Yi+yrzjPD6Li6StKBLOR5mWPGHSVHyS2q98s2JuNtswpfs67xQ8cXmctd9/I
RibM2xtSU/ghoO7KPQbXW3Tx+4mF2938sOk+y2aU6x2qyOKMtNorAFOrN9yx
XZuLGlQLPjVZCkDAzJF2lksu+v7SbXqvowDEVyuJymfnIubjb9bEVQHYdLG9
ymZHHhILT1nLyBUA0XfvAx1c8pHDyX2Fo3RBiE0pX7fueyHiEL0/cGVBEI4d
KRnvfFiMRJj+giLcQvDZKnj3lfJiRKty0k1aLQT64w85z4wXI8JvS3CVihDY
ZbdKKBuWIJ++X2tX2QpBXePOzdpzJYj5VtPhWakQKJV5Noc5laLR9YPn7HYJ
w2DUwcOB1yrQlPiP66nGwjDMs+Z+ak4FWuRoejBlKgzJKaY/5EcqEG93YUmw
rTB8d+bdPGpWidbdu70q1VsYlKS3v1ylUoXsFnUzJ18JQ49O8KjnYDX6VnN9
PEhoFWi+cTseGPsFRRGPDMzFVkHfZ6P/RDu+INPMtw/Xyq4ChZ/WubOydagu
+tfOivWrgD3iSMa7pDpUcWLbA+5dq4Dg7Hdnz6lHObNL28L88HiHSvRKJhtQ
NOPCvdtDq8BKPvqJ7bZmZO5rp/uwVATG72+tW7OlDbnyjdDrrEXBl8tI9wzt
JxrxKeDgOyEK3J4MU9D5iZwHbwwYnhKFi64qAcJGP9GpcqVXJedFgZOxfOiF
+09kd8VR412EKER6opcpH38iq8mfKL5IFFYXrf3yzaYX7epos3Gmr4G7D0Wq
Y+7+QvKpFdFcw2tA/ciy1NbefmT2JC//8zjOtcOOX5zuR2H3XnXeml0D67Xl
+5/yDKAp31t0cU4x0L7VzlGpNoA+Gx9+s44qBt+5Q1T2XRpAXsz+8t2HxeDj
4F6ddYK/0RcNzumwT2Kw9DLeS05pELErzoofqBaDu+bH0iT1BtEmqSH91Q1i
oP40YoSyZxA9Y/8SEPdDDNg2CSjccxlE3s1R/GlzYhBpqcosfT2IFDwVFL6o
icPXb0d37lQbQr55Ow4JxYmDdXvvsd3yw0jTpmHc9qk4NHp4vExVGUbD/2xu
ZbwQh7aQpYZFvWFkbehVffCtOCSYF7+0MxtG+l9foqgv4lB24fOYUegwmpsU
UJGkSMCHOw3jvqPDyGtDGwfDQQLs2DaLuCSPILVm+2fnXSRAZRVR55g5gga8
JlDZOQm4G6nuceD9CDIv4vV18JeA9z0LYb8bR5D2vq0TL2IkgK1mukRraQRN
Oj/7ofJZAtw1Em127BtF7smuObobJIF6M+ZyyM9R1FUvfV9QVxLSOy+NDw+P
on3zn88PbJEE7uqym3pTo2i98X8a0XskQbekIiqWawz1TfSnTjtIgteXPrbj
68eQxVbbp2/jJSFYTjNT0W0MVTgKBkQkSsJ+afuzu7zGkHbkh2P2rySBS+7Q
a1P/MST8S1pGNE8S2i1ucGncGkOfQ9uizzdLwiXqvi/cr8cQ0XIwQpNXCt5P
F+/R+j2G0pYpLryrpKBtF7+3InMMSa/LMOoVlwLrtQZvuafH0JyPIPfdtVLw
WVe1NIqdibLka65OgBQY+Ikodsow0VqXnRczLkrB0yr0YeN+JoqKmjQP9ZeC
JSFTPwkzJmIveqZ9/LoUFJTY/x20YqIuYbY/QvekQOrdu0IrByaKzfngevaN
FEDdxQ2XfZmIn32jnVq/FChoFpX1JTFR/sUVhwZGpGDBRXltXgoTOY7V73j8
Rwq+j5y9d/kNExW3Oa0VpEiD6Sdvzu5cJjqf/nBwTEoakth4tf5VM9F3m79u
r02koe6YxvbaESYKafps62AhDWrKTPkvLCbS3h1jIntMGuSkduaXTDLRLS11
zZsu0vA4mBUavMhE23jtpl2DpaHvZ0zAVV4Weplb7qvyXhr+jtOLDimykLnq
Xde+T9Jwy6ghOf4/FmJPPHY0vloaeFIPjX5XYSGbW7ME/zdpWKpzndyoxUJC
Dv+xj05IgwLxINsLsZCXyM3Q1HUykOaw7Z3MYRZihFr5nFSTgb71c7KVlizU
sLzWWVpHBrKqVro5HWGh9UNFe8O3y8C06j965HEW6vo4LuhyVAb+Zma4ezmz
kMEZs/vr78nA0oPb77L8WOjC3ULK2QcyUFVU0JPpz0JJuXTX7CcyAD42R18F
4PWyT2zfkiYDLdPoTkgQCxVH3xzfVy4Dg9f2VE+Fs5B+ccXec7MywNPWvT/l
AQud7lfNfbcsAwpRylEGcSwUy3ufvrBCFlhtXhs741lo1uzk/DVhWTgzfuTb
3BMWejv0LznqP1mY+nVIY+I5C6mt1mPPOyILu3uiYkYyWOjopoQzSydkQY19
eVQ7i4UijnK3g5MscLi9jPTJZqGRF63p1RdkIStweGHqHT7/LR5HO27KQtds
7o93BSzUdqK9Sj4Kz9eQoNRRyELcIaBt/1AWkAljw9J7FnJsFOQbS5aFIpZ/
osZHfL6OqXl/P8oCz7Y191xKWcg0XERhR4UsvPkmsda9jIWuZfjcDqmVhZM3
+trcy1moZ8HQUbhdFoZZDV8dK1no8e2+1fQ/stD7+pOfYg0LSeTLnjVQkAOx
+NG4v40s9PfkC+lVynKgkivf09HEQn2CGlWdGnKwed0n93fNLJRhv5N2AclB
F+NP2tFWFjIUdml+Zi0HLad2UYLaWEilcOqK2wk58NkCEgbtLCTi6K+i7yQH
lsbqfezf8X0X3rne6CkHdUl81Rc6cP+cyttIuSMHCiWvxLS6cL+JbO+riZGD
PD1j+Q7s7R9qImMeywGX4Q39gG4WElzdPaSWJgd6bPGtJT0slFzEGX+0Ug46
H+s3MH6xUOuaQ5TCZTnY1HpnyeU3CxUUd6YFc8hDrsz4f8PYCS6OVqZ88pBk
oC/oOMhCriU+WUMS8iBVdoRqMcRCHGcS7CW05eF9QZOD/AgLDYuvX9WnLw8V
rfa7IrAbPmV/SN+G81kvhVnseIlKMcMD8pBlsW2hYpSFtMvGqjydsffaMQ8w
WUjq7EXPbefk4atFxqPX2BQpNrqAtzzk7P57YyWLhWrPivomXZcHiVnrje+x
T0pvVm1OkAf/1bnpAhMsdNcj9I76N3ng0n4jeWqShRZq0/JCf8jDqyc11i+w
7dY1dvf8kgdLkaPuA9hanZJqd8blYW+RqsqJKbz+Z+b9cxxUeCkk6Ww0zUJy
Db/nFHio8Ey/tykA23TZh/8gHxX4mkV1crELLR5rpayigszBfzPUGdzP/L+v
WslR4alO2MAgdrGez/3rNCqM57+JlJhloSlHvpRMBSpwqe4wN8S2KdnQsFKZ
CoMWilufYat6ecsVbKTCm4SX4/vmWKiue2Wh1EEqHDUKpgTM49+vQHzdLjMq
dB3PXpGIrauv1uthQYWOuHbLcuzHUaYra45SQbBZl5NngYXOGsVZ+DpTYYmZ
kncdO8lL1eXFGSroFjo/TsRuS/zo3+xOhQKFHWPF2PD313Pli1QQa5humMcW
zlaZ6gjE++lTnbdfZKGdPUXcPCFUoM6XuvtjewsclNYOo0IsT5tDDHbPKc/t
EZFUyPYba6zEzpQpitzyiAoJ4l0T9CV8fsEHVB/lUOH2+l1aZdjJVuNG+fl4
PZR3G75iz6vccWx9j88jk7/+N3ZCc9MTgVIqUHIOLK9cZqEx6mER/3oqVCZe
37UHG6Zm1B424fGvN4RaYUdVxuzNaaVC/xWKrxO2vlt7ELODCte+Cnhexw4t
tJk9NkgFcc4zg4XYnbeWV/uOUMF/8VFTFfYGu8fqMUwqNH0S8G7F/srTc7p+
igqHT/bNj2EzDp/sRGw0+Hi2Zkn6LwsVjZ8uoUrRoGJvDs8ZbJEy3q4tsjQY
PmK/yQvbISZ1wZJKg8bBOp0r2PzEmNYdRRr+f1/zKBLbKtw9mU2LBvszBbdm
YqcdW1Uqq0sDw9+np/OwKZpZ3Xp6NMiUn75WjJ3cNinhgWgg3sJJq8eeWnsx
vHcvDeRvygQMY++eF3/5dz8NPBuo8+PYcbV5ZVKmNPhwo3zfLPb28wvLppY0
aIvqjVjxj4VuF192L7Wnwav3Rl5S2L335G52n6JBYKJRjzy27qmPKYvONBC7
46W8FrtTgO2X1jkauFn1nNqAvf5IkHnSZRpQX/CEbce2OpcjwnGVBl2Tz88a
YoeGDNafDKJB/YfnusbY/dnGexjhNFBPvuNijp3AvwY9i6UBv01moCN2Hd1w
iS2eBgELq0OcsZc3+eSfeEIDXnOuc27Y1g4/tGjJNEiOHV/wxF5T9FwpIZsG
n76GzgRi72z51v8vhwb3x1SJEGyP4ZWJtgU0WDv70T0Mu0HMTVa+hAbNJs9i
I7HDzuqKPK6jgaXOLUo8dv51p/rlRhocrelMe4w9GPcw4mgrDXxlSw2fYhtU
/eWS7aQB+3/Le5KxKbTKxbghGmju1Lybjr1h43ze4igNjFYfKcrEPrZP2evI
OA1cmaqd2diFPrfHpWax8zSZudheTRb9DzjocNvoz4WP2EmDN57Nc9NB5n72
xhLs5r+FtlZ8dMg9nc78hK2uTP0uIUIH03I//QrskcDBuhh5Otx9JnOwFlvq
oVTELJ0O0Y2uH75g784wNrJQpMO1XklqPXZyZ0apmCquH/evbsQ+ruOTd1+f
DlIfWrK+kv2wN9Vzeisdjpt7tX3DLjrxQ9N8Gx328OvPtGFL39r2WnQ3HebE
/kh1YH8dWPnsnjkdeBqdBbuxK8xuxOdb0sHp8bdh0jmfeGK6j9BBrexNSQ92
9GPuCGU7OljLKNj2Ypsf5vQqdcPj6+Tb9JP3VxbkPnSODgs3+IUHsLU1OVyE
POnwC1UWkRYVXHH8iC8dnLX6BAexW8opeyZD8PMhWX7D2GVaATslw+kw9Xuz
4Aj226f/CHQL79fuXxzpqMt/tcKj6GAxcjdtFPuQzpIs4ykdXpnYJTGxtyf6
Shgl0WH/FV0pFrbmqkWRsy/wfVRPRpAWGZvnLnxNB7a2i6fHsZuSZidMC+gQ
OpBO+YP9SeTiqPcHOvQbfbclnRUwM/C4mA5hBf7vSd+1me4YrqAD3cHLbRL7
oOhk+bVmvP5NDTlT2HDNo/jlVzoMqVxeMU3e9/hEQV07HVYNSu8nLVw7ni7V
Q4eK5ZM/SDcEMh9kjdKhSuZa/wx28cSZqDYWHTJFGYxZ7AzbsVt//+D795Cw
JR25eTRwzzwdXLVVmkgfmBw608vJgJRJ6eQ5bOLEaSeelQzw0wz+RlqtftBO
jZ8BMZ33ueexBVN/W1wSYcBFh+qTpOvs+reJyDNgqsBdYAH7J8eLuft0BsR2
XdYjPZXslC6pyIC4UTV70pIjIzI0VQbE+zx/R1rl5uvmJHUGtMT7d5ImNpwN
U9JmwNMZOvsitv35P7MbNjPAMXHCiPTFNW/fZBMMiPRXdSUdluvpsHE7AyST
LG6STl+cayKMGLCwMaaW9ELgv9f7LBig1vwALWELKJbYN1ozIHMF1Zo0teqa
tPkxBsy/qD9P2oCf64aNAwPKucqTSFu+qUQ9TgxQ/U/8PWlnkxszJ10Z8PJO
ahPpyCh+e5fzDNgllbVMOlG3TorlxYCyHRtElsn+b7vd6HGJAaZVHIqkO2RW
o0tXGUAnvuwlrfhcUurGbQa4E9aRpPUMOxr47zFgTyEtgbTxUHxIZDQDKImO
6aTPqVKnYx4xIKrYu5Z0UP3PVOmnDPiWue876ehziXZPkhjgFJz+m/T7d4oN
yakMMBRTYvuLXW8xGLw+nQGv0gwESPfOp2x9k8UAjq5lCdLchGrqu3wG3Evf
s4G0aYVWcFklA95op1iQdnCa3rK7hgGJfqzjpL15cydr6vB+d/8+TfrRfv0T
za0MqDgwfYl0xviiuEU7A4SMhQNJf7r7oe57JwPOmwyEkR78Clt6fzFAXa32
AekFb/ZJh98McNvck0BaQLosZWiYARH5uS9Ia9oaik9MMGDoY95b0gZsK+su
TDNA+29/AWnLxM9Bc3MMMJPqKibtbBCx2W+JAWE1zypIX/6978+/fwy4XqhT
S/r/AH4dhlA=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
JC1pLg==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
S/r/AH4dhlA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{324., Automatic},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.578908938165699*^9, 3.5789089965254016`*^9}, 
   3.579257059607711*^9, {3.5792574844700117`*^9, 3.5792575003909225`*^9}, {
   3.5792638025933876`*^9, 3.5792638362683134`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
     " ", 
     RowBox[{"nErf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.579263904717229*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
JC1pLg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
S/r/AH4dhlA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{321., Automatic},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.579263906172312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Mu]", ",", "\[Sigma]", ",", " ", "g", ",", "c", ",", " ", "sMin", ",", 
    " ", "sMax", ",", " ", "dMin", ",", " ", "dMax"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"Log", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[Mu]", " ", "-", " ", "sMin"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"sMax", " ", "-", " ", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.579267416498091*^9, 3.579267423955518*^9}, {
  3.579267468873087*^9, 3.579267523845231*^9}, {3.579268011829142*^9, 
  3.5792680158603725`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"sMax", "-", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "sMin"}], "+", "\[Mu]"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.579267424438545*^9, {3.5792674856500463`*^9, 3.5792675242092524`*^9}, 
   3.5792680164134045`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMax", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5792638213924627`*^9, 3.5792638223315163`*^9}}],

Cell[BoxData[
 RowBox[{"g", "[", "\[Sigma]"}]], "Input",
 CellChangeTimes->{{3.5910830508089805`*^9, 3.5910830658288393`*^9}}],

Cell[BoxData["0.9999994266968563`"], "Output",
 CellChangeTimes->{{3.579263823005555*^9, 3.5792638397585135`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nErf", "[", "h", "]"}]], "Input",
 CellChangeTimes->{{3.5792576384278173`*^9, 3.5792576388118396`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"255", " ", 
    RowBox[{"Erf", "[", 
     FractionBox["3", "85"], "]"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox["3", "85"], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox["82", "85"], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"255", " ", 
    RowBox[{"Erf", "[", 
     FractionBox["82", "85"], "]"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox["3", "85"], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox["82", "85"], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.5792576264551325`*^9, 3.579257639578883*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nErf", "[", "x", "]"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "x"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}], "\[Rule]", 
    RowBox[{"-", " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "c"}], ")"}]}], 
       RowBox[{"sMax", "-", "sMin"}]], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "0", "]"}], "]"}], "[", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Together", "[", 
     RowBox[{
      RowBox[{"%", "[", 
       RowBox[{"[", "0", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"%", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5793285543913403`*^9, 3.5793285582133465`*^9}, {
  3.5793286607835274`*^9, 3.5793287132942195`*^9}, {3.5793290326891804`*^9, 
  3.57932903799319*^9}}],

Cell[BoxData[
 RowBox[{"dMin", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.579328498948843*^9, 3.579328559305349*^9, {3.5793286910631804`*^9, 
   3.5793287175062265`*^9}, 3.5793290385547905`*^9}],

Cell[BoxData[
 RowBox[{"dMin", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "sMin"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.579328498948843*^9, 3.579328559305349*^9, {3.5793286910631804`*^9, 
   3.5793287175062265`*^9}, 3.5793290385547905`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"nErf", "[", "x", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "x"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}], "\[Rule]", 
      RowBox[{"-", " ", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "c"}], ")"}]}], 
         RowBox[{"sMax", "-", "sMin"}]], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"TransformationFunctions", "\[Rule]", 
    RowBox[{"{", "Automatic", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.579257143091486*^9, 3.5792571440585413`*^9}, 
   3.5793278703613386`*^9, {3.5793282980984898`*^9, 3.5793283187217264`*^9}, {
   3.579328357409794*^9, 3.5793283759114265`*^9}, {3.57932842338231*^9, 
   3.5793284588879724`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"dMin", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "x"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}], ")"}]}], "+", 
   RowBox[{"dMax", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "sMin"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}], ")"}]}]}], 
  RowBox[{
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
     RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"c", "-", "sMin"}], ")"}]}], 
     RowBox[{"sMax", "-", "sMin"}]], "]"}]}]]], "Output",
 CellChangeTimes->{{3.5793284597303743`*^9, 3.579328483177215*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nErf", "[", "x", "]"}], " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"c", "-", "x"}], ")"}]}], 
       RowBox[{"sMax", "-", "sMin"}]], "]"}], "\[Rule]", 
     RowBox[{"-", " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "c"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "0", "]"}], "]"}], "[", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Together", "[", 
     RowBox[{
      RowBox[{"%", "[", 
       RowBox[{"[", "0", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"%", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.5792552491161566`*^9, {3.579255306883461*^9, 3.5792553104196634`*^9}, {
   3.5793291312345533`*^9, 3.5793291433089743`*^9}}],

Cell[BoxData[
 RowBox[{"dMin", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "sMin"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.578929544840495*^9, 3.579255156832878*^9, 3.579255249821197*^9, 
   3.579255310954694*^9, 3.579257701167406*^9, 3.5793284775924053`*^9, {
   3.5793291333717575`*^9, 3.5793291440733757`*^9}},
 FontSize->16]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.578908290747962*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "1"}], "]"}], ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "x"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Erf", "[", 
   FractionBox["x", 
    SqrtBox["2"]], "]"}]}]], "Output",
 CellChangeTimes->{3.567949365939722*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Erf", "[", 
     FractionBox["x", 
      SqrtBox["2"]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.578908450180242*^9, 3.5789084565450535`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
6mybGiL38qgoNPtDpN879UTSu5qYidDiD27pIbaZOMv03K8k3F68nmCw2oku
h+gqh8wSYrW4a4BRSxth03vKzd6zhBh0VxM/+6qNaPhzY72iZgnhvv6FcrVZ
G+Gkm7GcTPpOeJQl7Ii+2Er4uhkLnYn6Rgz3rtyytoQkyvzEttscLCL4AyYe
mbrXEyb9akWtX/MI6+PKjysvFhNPrSZVGrXeE19L6kO1LItAx9MXL39uTQOO
Xg1fD6wsBnOLf3IvHkkDgksaaYG830CD/gNVtfj3YKtPk1912nfg6Rb25V7/
B1CygnT3YJeBWDGVgksRGcDR2P1VY28l2LRFYytPzhfg8uj8HbmX9WBTTaun
31AeWD82nrZGugEULFndMLIxH4iae1VuCmwAEwlV97Uj88GrcS8JV9tGcJt2
C4ppFID+HReuZYs2A5uDUxISjoUgwy87+7VOC1i/x6jyU2kR0F+V887ibjtw
bZOt0XP6AdZW10ZnF7cD3UeyKypf/gCrfX5fUJtpB3/TZ9JX/P0BlhUvMBY8
+gscSg76wz5bClgOrlWEagd4BnctrjhfBn7HyY6oZ3eCI5duHN+cWQ4einqu
FevoAQ+ayroC4ipBTNr1hT4LekHOm+TBM58qQfT+x7PdW3rBbxp/l35tJQhL
KinIT+0FnVEvdQ5KVAEvE2Xri159oNf7vlCrfxXYfbHcs0/kDzDw8Nep2VcN
eDwlm44tHACdm8y1pAdrwP4jyZUZ2gNg+sSm7q0iteDdVlAsajEAOFw9ZyyW
1gI7+ZPp74MHgOYiOfFqm1qQW5R1kzYyAPY6/+j/8qUWBMge2/S0dBDs/vg0
Wdn/J2jimzSY6BkETl0jU8HRP4H2QLimOd8QoFseyPry6if4lf9RfsRgCJQv
4mp41vgTmLiKTBm/GAIvxu0T7dbWAVrOu9T2gGHQIKvhntBSB2xTzJ7pPhwG
idUF46ajdeD9nabY65nD4OQh+1NIqB4cc+K/pjU4DIp3FD/R1KwHBaz99gGH
RkC5SV3ugsv1IPg4t7Sy3ihoap7U5F3QAARELS7b9Y+B8metwe5LGoHN8v1I
R2gc/NZTefBeqxEkGx2bF14yDqqNPopUGjWCHd5evmn7xoERj2DCwyONILrz
kTetYBwkXEb1oTGNYFnO4JnE2Alw1fKb13eBJuDVNP3mQvoEGKzlBfXsJvBt
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
Zwtlrt34f//XD/o//x++i5Jj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-0.5, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5789084574030547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[RawData[""], "Subtitle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Erf", "[", "x", "]"}], ",", 
     RowBox[{"Erf", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5921223552158227`*^9, 3.592122380337858*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF2nk4VN//AHDMYGaMISQqFK1Ki2RJdU4RUYq0SKGEIkmULC1kDSlZEyWl
EEoKldxDEpEiZN+zm7Hvy+/cPt+n3/xhntdz5957lvf7fc99nOXmFw9Z8nBx
cVnhP+T39U69ofl5OcT19zNAhF4+tc/94f/7JbfjMy6V/zevpbaipInsP4tW
f7GNC17+z4c+R51Z+23ZP7txdtjea5P556yrUTavDkr/84H7R5bNPVj6z9ox
nw7s7Vv8z8+/ulQ5npD8Z1Ov0IU/Ehah+b8fDmE3VHy6v0EcTf3PN05RUgVE
xdG3/5nQCs5YvX8hUp77z1wKMoSGtxhqGfzPF06efHo1RRQVeP/n2oAHvi8r
RdAR5Zm/nv7mLqHPFEGOPzv/einjXOLI7gXobrn9X+8+kN5UXimMnPaHzpG2
vj+3MO2cMDpk5jxD+prSis3LFIVRyiW3KdLSKSGR0uNCyFPYdpz05oPv0+8g
IVSQYThKWnOwsXTmthASYX0aIm0UQu05byiExt0DOKTPb5XnrVsqhPboRPeS
dq3U1hXhEULR0ye6Sftfsbyr08lCcZsaO0hHLfSscC9hoYjwpe2kk97FSmal
sdCu7cItpD8cyTHlhLNQm0daA+lvo3VPV11joT7aRA3p8i82Wnl2LNRqN/b7
7/iETXaZnGah1XG1laS7ty7aEKbFQibbDpaRHuB9/nOTGr5ffX0p6YlKJceS
dSyk9UW3hDTN6VAWZQELxazKLSAtrNVi/JjCQucOFHwmLSFuP7ttTBBtl4xH
pNdk3NntUCeImGJd70lv8ln6R7BUEPXr7M0grXr0pW8iEkRx613fkN47VljS
HC+Ijo3rJJHWLzh28VqkIBJc2hb/dzzDOxZIBAiiZAvNJ6TPKlOPHbQXRB8f
Ho74G098IZM95oJoSfVsMGmnquXRPkcEkXvZmUDSPk6g5dM2QZS19Lg76SCt
Us/jCoLI60mLC+lwcZNVozKCiKUl6Uj6eYbr+fW8guh4qI8F6VQfOqtwnIn2
yb49STrjaOTrMz1MFBzqfph0wdi70agfTLSioW036dICzUjlPCaSY15SI10V
/mtb+Vsmsi65vZH0H+XBm/QoJnq9a+9i0n187rLxgUzUca2VRXqkivUF3mSi
p/qDPKSpV9cznC2YyJt9qHsOm6n9MVn0GBP5SUbWkRZbpHvwlQ4TfYtU/k56
RebZ0I4NTJQ0ciqV9HrfMeVby5kIJtfHkFY65l0jJcZE/GeDA0lrjsdJH5kU
QOCZx1nS+79uzh3oFUAXBZIMSR+OQGcCGwWQgsqfnaTPqDQmfP4sgKrnzomQ
tkpQOaqVKYAkHXbOzGLbSAZTipIEkNiU9B/S9tMapqXBAkjHvjqdtKNtjICB
twD6MvDwAWmnhrGsX84CqCYO3CB9jUgUrTETQDxz4xqkb26i5J4wFEB6qcMr
SN96ctKuUQvfPyyGStrPU6ioTUEALY7KJ2awQ7Wv3GBPM1D102w50hFZpesu
cRiI8tx/YprMr7VraoZbGchu8e1i0rECdVsmixio8nrJedJPrym1uH1ioHTl
HlXSz/vvBM29ZqCIrm4K6ZQfsJsSyUA9lqohU9ivYVS4TwAD3co+foz027Rh
DfpNBkoU5ZEk/SHk+SOWFQMFb/UMnSTj5RjzsKQSA4W/MLCewC4qtOSOXo3b
Z/FRnHSJGpEqvYSBiulFaJzM5yUO9BU8DCTxTodBujKwOOP5KB3FXHVKHMOu
nl1hsbabjgZ9P2iSbmr6nbPhJx3dvNdvN4rdqr/ZNu0zHXndCpgdwe7I9ZdU
yqSjwJhHvqT7nu64rPaIjvSyLt0ZJvP/7NO1mrZ0ZBZ0x3iQrKfVM1UFZnSk
sPoJMYA9p3PUS8eQjkxsIqVJU9fTmw5so6PIsj1FbGz+GPPAMgU6evDaXYw0
g5Wtdng5HdHvJBj1Yy8YsAs9TqMjz72vv/WS8Xu6cFf9NA0J5fJM9JD1pHw5
x5RDQ027V0uRln5boWNRRUPdta/0urDlnbfN2z2joUythJ3t2KjhgHxbOA0p
TXTQ2rCPapw5cuw2Dc0N6ha0kPHCCnwJ7GjodLOLRBN5/cuxVemnaOjiOaXk
BjK/a95yrzGkoQjm8KZ67JpnDceEVWko8IacQA1ZXxhDt7zkaYhOO2H2m+yv
PV/qxFIaOvd1eVwlWd/UN1JbuPH5qxMGysh4LHN/nVbMjxbzaMQUke1XCatb
mcOPVrQVGHwl4yM6kS/qNT/SSMtn52M3ny0/eSuMHz26HdVIkPnwvcN3zJcf
RaSEbvxE5vuW6Tc2rvxI2G6/5QdslTk5uqEZP/qMal3fkvFyRlXpqwE/CvC4
Y5SGbV6030xdkx+dSngnnkrWu9Ar7+TW8qOYqvSNL8j5l/96emSID2n4bEuL
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
Ub/raRMc4BZ2/djaGh64IyjnGAc7XPA6+0MHD1xho7lv3SSOr1m3pY3cFBjk
5PU2Brvzilv6RSEKXBTkr1mBzcN21eWWosDFlm6y9CkcL40uzitUKVDQec3k
BWzDoy5CGXsocKf/M/ojbLtS5+fahhQYdSYoogT7Wc7VChs7CtTj7j62cpoD
hB9f2ZT2jAKdZdG9Aux1i6583f2GAvcYFLztxda6e9m0gqDAAItHL4RmOODa
TcfA8VoK3FQZKnUYO2LcQe52FwVenaW8uYz95qLDh8VjFDh4qlslFLvL7FLX
jgVU+GGnuupPbEq1/c0f0lQ4XLUxrw9bWt9e/PR6KrR2SjlJm8XxCi9qemlT
oeofoebt2GjZhdhv16lwffGmpofYdZG2KicDqDBdMjYlDXtM2La0P5IKd+fs
yy3AXs99fkb4LRW6fj/2g42t7WITEpdLhUa/flZwz3GA+aC1vNIPKiy2e79V
DDuy5ZzRsR4qXDdyXFoFO/34OU7XOBWafB55pY1dWnbWx5WXF9aXF7w+hk3N
s3obs4wXbnlxUMQJ+2KchXD7UV74q9P6ezJ2kMuD6KAzvLBUxcc9CztVv3SN
mj0v9DurVP4Zmz2nsivoNi80UKWY1GCzqmy/q4bj46qlD9uwFVKeHG+L44Vn
Gt29+rFtTwg4qGbzwpbmRaZc87h+K8K51kJeuD+ccZiOnUy/4n+nkheOhvLM
LcDuzWzEr2G80B4YX5XFthF78ytwOR/s8rfaAbH9ezvMVDbwwT15xAJt7KS8
JX0t2/igVObql3rY3fbeVJXDfPBVu5+SMTZt74d7Laf44INtImtOYa+R4SwN
vMAHk3YVd1pin/tutLXFhw++HTxZbo/t9+xObkAIH3wyZcrlhJ3glqenHMsH
r0q1c7lhd65dbxXwng82uevc9MK28pkP39qH25NWGxGG7WOiJNc8wQdvTT1x
f4D9XMn6lT8vP1SUu64Vg/2ntfxrkzQ/dBmZufAMm/qB/7D/On6ofaq87AX2
iuDtzUqq/PDAa6lFL7EtwPOJ2wb88OTmJbpp2F7idV5Kpvxw9+ZstbfYz/qF
FjTZ8EPLlWmsTOy2hy5rlbz4obGirG02tvnEfuPGDH546eJ5ZgH2rR8eHX6f
+WHdgXU7C7Hjnmc4bPnJD922vDjxDbvl8LIAv25+uGRt8MlSbK71RxZtGeOH
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
/b/9ZP/8f98FtpM=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
Om215MXyN+/+z/8/r532/wFQ26WG
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-10, 10}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.592122384177863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mErf", "[", 
   RowBox[{"x_", ",", " ", "g_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Erf", "[", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"x", " ", "-", "c"}], ")"}]}], "]"}], "+", "1"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"yMax", "-", "yMin"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mErf", "[", 
          RowBox[{"x", ",", 
           RowBox[{"g", "/", 
            RowBox[{"(", 
             RowBox[{"xMax", "-", "xMin"}], ")"}]}], ",", "c"}], "]"}], "-", 
         RowBox[{"mErf", "[", 
          RowBox[{"xMin", ",", 
           RowBox[{"g", "/", 
            RowBox[{"(", 
             RowBox[{"xMax", "-", "xMin"}], ")"}]}], ",", "c"}], "]"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mErf", "[", 
          RowBox[{"xMax", ",", 
           RowBox[{"g", "/", 
            RowBox[{"(", 
             RowBox[{"xMax", "-", "xMin"}], ")"}]}], ",", "c"}], "]"}], "-", 
         RowBox[{"mErf", "[", 
          RowBox[{"xMin", ",", 
           RowBox[{"g", "/", 
            RowBox[{"(", 
             RowBox[{"xMax", "-", "xMin"}], ")"}]}], ",", "c"}], "]"}]}], 
        ")"}]}]}], "+", "yMin"}], ",", " ", 
    RowBox[{"xMin", " ", "<=", "c", "\[LessEqual]", "xMax"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.569224068305455*^9, 3.569224097356985*^9}, {
   3.569224131348761*^9, 3.569224317790791*^9}, {3.569224700567607*^9, 
   3.56922470425941*^9}, {3.56922494178384*^9, 3.569225037158739*^9}, {
   3.569226391706126*^9, 3.569226415539055*^9}, {3.56923163451364*^9, 
   3.569231637375374*^9}, {3.5692317348260813`*^9, 3.569231790459939*^9}, {
   3.569932021258597*^9, 3.56993204597383*^9}, {3.569932150121657*^9, 
   3.5699321535018272`*^9}, {3.5699322039369783`*^9, 
   3.5699322059648438`*^9}, {3.569932272600704*^9, 3.5699323069722843`*^9}, 
   3.5910791946634216`*^9}],

Cell["\<\
yMin + ((-yMax + yMin)*(Erf[(g*(-c + x))/(xMax - xMin)] + Erf[(g*(c - \
xMin))/(xMax - xMin)]))/(Erf[(g*(c - xMax))/(xMax - xMin)] + Erf[(g*(-c + \
xMin))/(xMax - xMin)])\
\>", "Output",
 CellChangeTimes->{
  3.5692317466380033`*^9, 3.569231780169338*^9, 3.569232380879356*^9, 
   3.569932049396408*^9, 3.5699321540981216`*^9, 3.569932206988147*^9, {
   3.569932279414546*^9, 3.569932308073853*^9}, 3.57100330408797*^9, 
   3.578910313029314*^9, 3.591079198901664*^9}]
}, Open  ]],

Cell[RawData[""], "Text"],

Cell[RawData[""], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"aErf", "[", 
      RowBox[{
      "x_", ",", " ", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", 
       "yMin_", ",", "yMax_", ",", 
       RowBox[{"erf_:", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", 
          RowBox[{"Erf", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}]}], "]"}], ":=", 
     RowBox[{"yMin", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yMax", "-", "yMin"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"erf", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], ",", 
                RowBox[{"x", "\[GreaterEqual]", "c"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"erf", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{"c", "-", "x"}], ")"}]}], ")"}], ",", 
                   RowBox[{"(", 
                    RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ",", 
                RowBox[{"x", "<", "c"}]}], "}"}]}], "}"}], "]"}], "+", 
           RowBox[{"erf", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "*", 
               RowBox[{"(", 
                RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}], ")"}],
        "/", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "c"}], "+", "xMax"}], ")"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], "+", 
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}]}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.569231798384149*^9, 3.569231842385067*^9}, 
   3.5692323012032623`*^9, 3.569232390376411*^9, {3.5696056312234364`*^9, 
   3.569605666790227*^9}, {3.569606608774123*^9, 3.569606671995515*^9}, {
   3.5696067495639143`*^9, 3.569606793729053*^9}, {3.569658522090856*^9, 
   3.5696585325697927`*^9}, {3.569658570466051*^9, 3.569658596288782*^9}, {
   3.5696588974031343`*^9, 3.569658933006098*^9}, {3.5696589902807913`*^9, 
   3.5696591062031813`*^9}, {3.569659305497343*^9, 3.56965930674369*^9}, {
   3.570012272921792*^9, 3.570012273857708*^9}, 3.570012365015205*^9, 
   3.570012535409162*^9, 3.570013831762528*^9, 3.5701818353400717`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aErf", "[", 
  RowBox[{
  "x", ",", " ", "g", ",", "c", ",", "xMin", ",", "xMax", ",", "yMin", ",", 
   "yMax"}], "]"}]], "Input",
 CellChangeTimes->{{3.570473140509256*^9, 3.570473156339593*^9}}],

Cell[BoxData[
 RowBox[{"yMin", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"yMax", "-", "yMin"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "xMin"}], ")"}]}], ",", 
        RowBox[{"xMax", "-", "xMin"}]}], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"Erf", "[", 
               RowBox[{
                RowBox[{"g", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ",", 
                RowBox[{"xMax", "-", "xMin"}]}], "]"}], 
              RowBox[{"x", "\[GreaterEqual]", "c"}]},
             {
              RowBox[{"-", 
               RowBox[{"Erf", "[", 
                RowBox[{
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"c", "-", "x"}], ")"}]}], ",", 
                 RowBox[{"xMax", "-", "xMin"}]}], "]"}]}], 
              RowBox[{"x", "<", "c"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False], ")"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"Erf", "[", 
     RowBox[{
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "xMax"}], ")"}]}], ",", 
      RowBox[{"xMax", "-", "xMin"}]}], "]"}], "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "xMin"}], ")"}]}], ",", 
      RowBox[{"xMax", "-", "xMin"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.5704731608460627`*^9, 3.5789103184113235`*^9, 
  3.5910793121691427`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "setUprErf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUprErf", "[", " ", 
   RowBox[{
   "g_", ",", "c_", ",", "sMin_", ",", "sMax_", ",", "dMin_", ",", "dMax_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "aa5", ",", "aa4", ",", "aa3", ",", "aa2", ",", "aa1", ",", "ppD", ",", 
      "ppN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{
      "shift", ",", "scale", ",", "dRange", ",", "sRange", ",", " ", "ErfA", 
       ",", "ErfB", ",", " ", "grad", ",", "con", ",", "ErfA", ",", "ErfB", 
       ",", "iErf"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"grad", "=", " ", "g"}], ";", "\[IndentingNewLine]", 
     RowBox[{"con", " ", "=", " ", "c"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dRange", " ", "=", " ", 
      RowBox[{"dMax", "-", "dMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sRange", " ", "=", " ", 
      RowBox[{"sMax", "-", "sMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ErfA", " ", "=", " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"g", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", "-", "sMin"}], ")"}], "/", "sRange"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ErfB", " ", "=", " ", 
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "c"}], "+", "sMax"}], ")"}], "/", "sRange"}]}], 
        "]"}], "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", "sMin"}], ")"}], "/", "sRange"}]}], "]"}]}]}], 
     ";", "\n", "     ", 
     RowBox[{"shift", "=", 
      RowBox[{
       RowBox[{"dRange", "*", 
        RowBox[{"ErfA", "/", "ErfB"}]}], " ", "+", " ", "dMin"}]}], ";", "\n",
      "     ", 
     RowBox[{"scale", "=", 
      RowBox[{"dRange", "/", "ErfB"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxStep", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "  ", "grad", " ", "scale"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sqrt", "[", "\[Pi]", "]"}], " ", "sRange"}], ")"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"iErf", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"N", "[", "shift", "]"}], "]"}], " ", "+", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"N", "[", "scale", "]"}], "]"}], "  ", 
         RowBox[{"Erf", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"grad", "*", 
              RowBox[{"(", 
               RowBox[{"x", "-", "con"}], ")"}]}], ")"}], "/", "sRange"}], 
           ")"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nErf", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{"shift", " ", "+", 
        RowBox[{"scale", "  ", 
         RowBox[{"Erf", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"grad", "*", 
              RowBox[{"(", 
               RowBox[{"x", "-", "con"}], ")"}]}], ")"}], "/", "sRange"}], 
           ")"}], "]"}]}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.570521266807798*^9, 3.5705212677123203`*^9}, 
   3.570521301634432*^9, {3.5705213901103697`*^9, 3.570521450039152*^9}, {
   3.570521616250318*^9, 3.570521640729458*^9}, {3.5705217305036173`*^9, 
   3.5705217813872423`*^9}, {3.5705218360211573`*^9, 3.570522011083564*^9}, {
   3.5705220704716787`*^9, 3.5705221150705633`*^9}, {3.570522349254261*^9, 
   3.570522439487253*^9}, {3.570522511638818*^9, 3.570522570635078*^9}, {
   3.570523387772965*^9, 3.5705235146268578`*^9}, {3.57052354638035*^9, 
   3.570523564460826*^9}, {3.5705240310710487`*^9, 3.570524032663419*^9}, {
   3.57052406379355*^9, 3.570524070900621*^9}, {3.570526050775429*^9, 
   3.570526054567299*^9}, {3.570526096577856*^9, 3.570526129499763*^9}, {
   3.570526190273934*^9, 3.5705261960022097`*^9}, {3.5705262386724653`*^9, 
   3.570526414182437*^9}, {3.570526444305524*^9, 3.570526469521947*^9}, {
   3.5705398298878317`*^9, 3.570539830616444*^9}, {3.5705401573923597`*^9, 
   3.570540161881826*^9}, 3.570544237312669*^9, 3.570544750820245*^9, {
   3.570544813233728*^9, 3.5705448143176813`*^9}, 3.570549996981381*^9, {
   3.570550084606254*^9, 3.57055011049725*^9}, {3.575265460084817*^9, 
   3.575265475261079*^9}, {3.575265549405407*^9, 3.575265554948784*^9}, {
   3.575265610289527*^9, 3.5752656131560373`*^9}, {3.575364398850857*^9, 
   3.5753644307218637`*^9}, 3.5753647015743647`*^9, {3.5792551944390297`*^9, 
   3.579255224781765*^9}, {3.5928154093400483`*^9, 3.592815412296217*^9}, {
   3.592826375134256*^9, 3.5928264234780207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"g", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Together", "[", 
  RowBox[{"iErf", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Together", "[", 
  RowBox[{"nErf", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5789104640219793`*^9, 3.578910501040844*^9}, {
  3.5789105716017685`*^9, 3.5789105842065907`*^9}, {3.5792575359799576`*^9, 
  3.579257547008589*^9}, {3.5792576598120403`*^9, 3.579257686188549*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
     RowBox[{"sMax", "-", "sMin"}]], "]"}], " ", 
   RowBox[{"Floor", "[", 
    FractionBox[
     RowBox[{"dMax", "-", 
      RowBox[{"1.`", " ", "dMin"}]}], 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1.`"}], " ", "c"}], "+", "sMax"}], ")"}]}], 
        RowBox[{"sMax", "-", 
         RowBox[{"1.`", " ", "sMin"}]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", 
           RowBox[{"1.`", " ", "sMin"}]}], ")"}]}], 
        RowBox[{"sMax", "-", 
         RowBox[{"1.`", " ", "sMin"}]}]], "]"}]}]], "]"}]}], "+", 
  RowBox[{"Floor", "[", 
   RowBox[{"dMin", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dMax", "-", 
        RowBox[{"1.`", " ", "dMin"}]}], ")"}], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", 
           RowBox[{"1.`", " ", "sMin"}]}], ")"}]}], 
        RowBox[{"sMax", "-", 
         RowBox[{"1.`", " ", "sMin"}]}]], "]"}]}], 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1.`"}], " ", "c"}], "+", "sMax"}], ")"}]}], 
        RowBox[{"sMax", "-", 
         RowBox[{"1.`", " ", "sMin"}]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", 
           RowBox[{"1.`", " ", "sMin"}]}], ")"}]}], 
        RowBox[{"sMax", "-", 
         RowBox[{"1.`", " ", "sMin"}]}]], "]"}]}]]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.5789105019768457`*^9, {3.578910576390977*^9, 3.5789105849241915`*^9}, {
   3.5792575302536306`*^9, 3.579257547764632*^9}, 3.5792576535856843`*^9, 
   3.5792576870565987`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"dMin", " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "+", 
   RowBox[{"dMax", " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{"c", "-", "sMin"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "+", 
   RowBox[{"dMax", " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "-", 
   RowBox[{"dMin", " ", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c"}], "+", "x"}], ")"}]}], 
      RowBox[{"sMax", "-", "sMin"}]], "]"}]}]}], 
  RowBox[{
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c"}], "+", "sMax"}], ")"}]}], 
     RowBox[{"sMax", "-", "sMin"}]], "]"}], "+", 
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"c", "-", "sMin"}], ")"}]}], 
     RowBox[{"sMax", "-", "sMin"}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.5789105019768457`*^9, {3.578910576390977*^9, 3.5789105849241915`*^9}, {
   3.5792575302536306`*^9, 3.579257547764632*^9}, 3.5792576535856843`*^9, 
   3.579257687059599*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"1.4138", ",", "188", ",", "0", ",", "255", ",", "0", ",", "255"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<ErfA\>\"", ",", " ", "\"\<ErfB\>\"", ",", " ", "\"\<shift\>\"", ",",
       " ", "\"\<scale\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ErfA", ",", " ", "ErfB", ",", " ", "shift", ",", " ", "scale"}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "[", "ErfA", "]"}], ",", " ", 
      RowBox[{"N", "[", "ErfB", "]"}], ",", " ", 
      RowBox[{"N", "[", "shift", "]"}], ",", 
      RowBox[{"N", "[", " ", "scale", "]"}]}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"iErf", "[", "a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"iErf", "[", "128", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.591084883234789*^9, 3.5910848922623053`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"ErfA\"\>", "\<\"ErfB\"\>", "\<\"shift\"\>", "\<\"scale\"\>"},
    {"0.859539572763363`", "1.2601903024419396`", "173.9281683329379`", 
     "202.35039065597678`"},
    {"0.859539572763363`", "1.2601903024419396`", "173.9281683329379`", 
     "202.35039065597678`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.570523515256249*^9, 3.570523565148543*^9, 3.5705240337919493`*^9, 
   3.570524075839768*^9, 3.570526055419649*^9, 3.57052613171054*^9, 
   3.57052619863177*^9, {3.5705262461427183`*^9, 3.570526270348089*^9}, 
   3.570526384484655*^9, 3.570526417042897*^9, {3.5705264530818*^9, 
   3.5705264708247423`*^9}, 3.5705398323356237`*^9, 3.570540162701167*^9, 
   3.57054410249546*^9, 3.5705442224105577`*^9, 3.570544713445384*^9, 
   3.570544751957561*^9, 3.5705448156431627`*^9, {3.570549987950653*^9, 
   3.570549998980166*^9}, {3.5705500863308487`*^9, 3.570550111499576*^9}, 
   3.5710033378776903`*^9, 3.574176741954235*^9, 3.57526398088651*^9, 
   3.575265492280025*^9, 3.575265555767851*^9, 3.575265613613635*^9, {
   3.575364391995345*^9, 3.5753644101158752`*^9}, 3.575364657665022*^9, 
   3.575364839155044*^9, 3.5789103595329957`*^9, 3.591079345719061*^9, 
   3.5910848938253946`*^9}],

Cell[BoxData[
 RowBox[{"173", "+", 
  RowBox[{"202", " ", 
   RowBox[{"Erf", "[", 
    RowBox[{"0.005544313725490196`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "188"}], "+", "a"}], ")"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.570523515256249*^9, 3.570523565148543*^9, 3.5705240337919493`*^9, 
   3.570524075839768*^9, 3.570526055419649*^9, 3.57052613171054*^9, 
   3.57052619863177*^9, {3.5705262461427183`*^9, 3.570526270348089*^9}, 
   3.570526384484655*^9, 3.570526417042897*^9, {3.5705264530818*^9, 
   3.5705264708247423`*^9}, 3.5705398323356237`*^9, 3.570540162701167*^9, 
   3.57054410249546*^9, 3.5705442224105577`*^9, 3.570544713445384*^9, 
   3.570544751957561*^9, 3.5705448156431627`*^9, {3.570549987950653*^9, 
   3.570549998980166*^9}, {3.5705500863308487`*^9, 3.570550111499576*^9}, 
   3.5710033378776903`*^9, 3.574176741954235*^9, 3.57526398088651*^9, 
   3.575265492280025*^9, 3.575265555767851*^9, 3.575265613613635*^9, {
   3.575364391995345*^9, 3.5753644101158752`*^9}, 3.575364657665022*^9, 
   3.575364839155044*^9, 3.5789103595329957`*^9, 3.591079345719061*^9, 
   3.5910848938293953`*^9}],

Cell[BoxData["99.88268741221042`"], "Output",
 CellChangeTimes->{
  3.570523515256249*^9, 3.570523565148543*^9, 3.5705240337919493`*^9, 
   3.570524075839768*^9, 3.570526055419649*^9, 3.57052613171054*^9, 
   3.57052619863177*^9, {3.5705262461427183`*^9, 3.570526270348089*^9}, 
   3.570526384484655*^9, 3.570526417042897*^9, {3.5705264530818*^9, 
   3.5705264708247423`*^9}, 3.5705398323356237`*^9, 3.570540162701167*^9, 
   3.57054410249546*^9, 3.5705442224105577`*^9, 3.570544713445384*^9, 
   3.570544751957561*^9, 3.5705448156431627`*^9, {3.570549987950653*^9, 
   3.570549998980166*^9}, {3.5705500863308487`*^9, 3.570550111499576*^9}, 
   3.5710033378776903`*^9, 3.574176741954235*^9, 3.57526398088651*^9, 
   3.575265492280025*^9, 3.575265555767851*^9, 3.575265613613635*^9, {
   3.575364391995345*^9, 3.5753644101158752`*^9}, 3.575364657665022*^9, 
   3.575364839155044*^9, 3.5789103595329957`*^9, 3.591079345719061*^9, 
   3.5910848938323956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "dRange", ",", "sRange", ",", " ", "ErfA", ",", "ErfB", ",", " ", "grad", 
   ",", "con", ",", "ErfA", ",", "ErfB", ",", "iErf"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{"shift", " ", "+", 
    RowBox[{"scale", "  ", 
     RowBox[{"Erf", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"grad", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "con"}], ")"}]}], ")"}], "/", "sRange"}], ")"}], 
      "]"}]}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.592815235295992*^9, 3.5928153027710867`*^9}, {
  3.5928153704461813`*^9, 3.5928153716761827`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["grad", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "con"}], "+", "x"}], ")"}], "2"]}], 
      SuperscriptBox["sRange", "2"]]}]], " ", "grad", " ", "scale"}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", "sRange"}]]], "Output",
 CellChangeTimes->{3.5928152749990473`*^9, 3.5928153735171857`*^9, 
  3.5928174492127223`*^9}]
}, Open  ]],

Cell[BoxData["nf4Tn12Bb5"], "Input",
 CellChangeTimes->{{3.592827694498719*^9, 3.5928276945047197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"setUprErf", "[", " ", 
         RowBox[{
         "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}], 
         "]"}], "]"}], ";", 
       RowBox[{"Floor", "[", 
        RowBox[{"iErf", "[", "x", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"TraditionalForm", "/@", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"iErf", "[", "a", "]"}]}], "}"}]}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMax"}], "}"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMin"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMin"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMin", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "255"}], ",", "255", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "188"}], "}"}], ",", "sMin", ",", "sMax", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "1.4138"}], "}"}], ",", "1", ",", "10", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.570522147143224*^9, 3.57052221968115*^9}, {
  3.570538574902136*^9, 3.5705386601838493`*^9}, {3.570538767663076*^9, 
  3.5705387681179333`*^9}, {3.570550129075527*^9, 3.570550130242475*^9}, {
  3.5753647639942513`*^9, 3.575364781030279*^9}, {3.591081744872285*^9, 
  3.591081749074525*^9}, {3.5910850568267183`*^9, 3.5910850795670185`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 188, $CellContext`dMax$$ = 
    255, $CellContext`dMin$$ = 0, $CellContext`g$$ = 
    1.4138, $CellContext`sMax$$ = 255, $CellContext`sMin$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`dMin$$], 0}, -255, 255, 
      1, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }, {{
       Hold[$CellContext`dMax$$], 255}, 1, 255, 
      1, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }, {
      Hold[$CellContext`sMin$$], 0, 
      Dynamic[$CellContext`sMax$$], 1, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }, {{
       Hold[$CellContext`sMax$$], 255}, 1, 255, 
      1, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }, {{
       Hold[$CellContext`c$$], 188}, 
      Dynamic[$CellContext`sMin$$], 
      Dynamic[$CellContext`sMax$$], 1, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }, {{
       Hold[$CellContext`g$$], 1.4138}, 1, 10, $CellContext`ValueThumbSlider[
       SlotSequence[1]]& }}, Typeset`size$$ = {360., {116., 120.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`g$1222801$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 188, $CellContext`dMax$$ = 
        255, $CellContext`dMin$$ = 0, $CellContext`g$$ = 
        1.4138, $CellContext`sMax$$ = 255, $CellContext`sMin$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`g$$, $CellContext`g$1222801$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DiscretePlot[{Evaluate[
           $CellContext`setUprErf[$CellContext`g$$, $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$]]; Floor[
           $CellContext`iErf[$CellContext`x]]}, {$CellContext`x, \
$CellContext`sMin$$, $CellContext`sMax$$}, PlotStyle -> {Blue}, AxesLabel -> 
        Map[TraditionalForm, {$CellContext`a, 
           $CellContext`iErf[$CellContext`a]}], 
        PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, Filling -> Bottom, 
        Epilog -> {Red, 
          Dashing[{0.02, 0.02}], 
          
          Line[{{$CellContext`sMin$$, $CellContext`dMax$$}, \
{$CellContext`sMax$$, $CellContext`dMax$$}}], 
          
          Line[{{$CellContext`sMin$$, $CellContext`dMin$$}, \
{$CellContext`sMax$$, $CellContext`dMin$$}}]}], 
      "Specifications" :> {{{$CellContext`dMin$$, 0}, -255, 255, 
         1, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }, {{$CellContext`dMax$$, 255}, 1, 255, 
         1, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }, {$CellContext`sMin$$, 0, 
         Dynamic[$CellContext`sMax$$], 1, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }, {{$CellContext`sMax$$, 255}, 1, 255, 
         1, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }, {{$CellContext`c$$, 188}, 
         Dynamic[$CellContext`sMin$$], 
         Dynamic[$CellContext`sMax$$], 1, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }, {{$CellContext`g$$, 1.4138}, 1, 
         10, $CellContext`ValueThumbSlider[
          SlotSequence[1]]& }}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {191., 196.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570522225653123*^9, 3.570522493043317*^9, 3.5705225895410023`*^9, 
   3.57052359773034*^9, {3.570538592449699*^9, 3.5705386080195103`*^9}, {
   3.570538646472001*^9, 3.5705386615316753`*^9}, 3.570538769264392*^9, 
   3.570550131286825*^9, 3.571003379819294*^9, 3.575364499854225*^9, {
   3.575364686898525*^9, 3.5753647134277573`*^9}, 3.5753647835463963`*^9, 
   3.579258798031143*^9, 3.5910799624913387`*^9, 3.591081595978769*^9, 
   3.591081766793539*^9, 3.5910818374195786`*^9, 3.5910849321405864`*^9, {
   3.591085003664677*^9, 3.5910850244558663`*^9}, 3.5910850828692074`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", " ", "=", "188"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", "20.1188"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sMax", " ", "=", " ", "255"}], ";", " ", 
  RowBox[{"sMin", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "\[Mu]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dRange", " ", "=", "255"}], ";", " ", 
  RowBox[{"dMin", " ", "=", " ", "0"}], ";", " ", 
  RowBox[{"dMax", " ", "=", " ", 
   RowBox[{"dMin", " ", "+", " ", "dRange"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dRange", " ", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]}], ",", 
     " ", 
     RowBox[{"nErf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5789083100919957`*^9, 3.5789083792313175`*^9}, {
   3.5789084648910675`*^9, 3.578908465437069*^9}, {3.578908562391239*^9, 
   3.578908585307679*^9}, {3.5789089161228604`*^9, 3.5789089957142*^9}, {
   3.579256858315198*^9, 3.5792569195497*^9}, {3.5792569507864866`*^9, 
   3.5792569829503264`*^9}, {3.5792570324461575`*^9, 
   3.5792570586686573`*^9}, {3.579257483710968*^9, 3.579257499798888*^9}, {
   3.579263580629692*^9, 3.5792635847829294`*^9}, {3.5792636233671365`*^9, 
   3.5792638357672853`*^9}, {3.5910852580012245`*^9, 
   3.5910854010404058`*^9}, {3.591085543654563*^9, 3.5910855514290075`*^9}, 
   3.5910861228096886`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVV3c8198XJkTJ3r5llwhlr8/7fY+9997bR2YKFRVKKIrshr0ykyJZCSFk
JpJkz0LDivj5/fV+Pa/3ved5nnPPPfdeXmc/Y7dDJCQkn8lISP7/nb3GyjA8
OIRLX+9q33cTIDSdLo5/R/ESvZm6oMcneJKQeHh34SFFK+Kg/fraZPUk4fq6
AEsExUf0lfn+9aVkQcIvb/kzVylm0OGWjr0slTOE0qcq1Zco/iCdDJfxRUkJ
wp22jp0LFOQQ9tVCQ10MCFfMYjL8KJiBaLZo8lzdirD/6mfj3pgAyNZQ3f1Q
9YDAHKXtEUVxErZMNvT2zBIIp81zGejFTgL9F8U3rTsJBMM/pq68oSfh6N37
P0cskwhZ52qOqPKegjO5KrtL9qkE5aIbpnfcBOG57+EXzr0ZhMhH1EtMK0Kg
bMhpk/u8mPDovGviE1ZhyKo+JJScWUIol2sgnETCwPM4/ndlcilh+JNvnEy8
MAwNPjgV/7iccJppQMpK4gw4+5UXMMc8J3TGpIVmBIlA1PJPM3TkFcGb3KFz
ulYUapu57pLLNRJorp9kEdoXg8JPhgVUH1oI9EyT/6K5zgE3wZMY8v494RHx
rP/1hnMwqSeVf6utj/DtwafizWPiUL8Z/riNZ5AgUH99xt9WHCyJespneoYI
HnMCXN9LxIHecnH97+cRQhl9t4X7jjhMhUxkkRiNEX4pXHowoS0BHLLHs7/y
TBBk3Di7rB9JwLES86s69lOEkLi35EOLEnDmqUI669IMoem1B24gLwn9V4L7
23rmCRQzdFfeR0vCnJJLmwb7MkGb9tVzlRFJyOYKlGf7uELwzr3bQ0IiBa9V
Y/nbL6wR4uTslxsEpSC6hym4Pvon4aMzxUm5y1JATen+fGTtN8H5GEu4SY4U
SDBPjPI6rRN+Vgl89f0gBXkeNXmJyxuEMAcp+btbUjAQOEJxKGGLQHtENTmf
XxrKDon+52T+l5BeafKzSV8aCJ/2jdsVdgkiti56Y1elYc6LrcFPaY+g9ewm
BVOfNHQxkzU/cSDFRiwTnMR2pOHpA72U3vRDmPuhnAatUzJA9ezaS89fZNh6
yXMONyMZOJYU571jT4FFmL0NDLsmA7zpIpzCs4cxxv2+/seFB5jl/O+6SCos
++mE6KsBGQiqXVhPUjuKNe7sz/44LQt3dWbeGfPTYpF9lEkhuCw8EwmRcTpH
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
/wAUdw80
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 255}, {0, 255}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.591085351376565*^9, 3.59108540180645*^9}, 
   3.5910855642067385`*^9, 3.591086153919468*^9}]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1356, 804},
WindowMargins->{{2, Automatic}, {0, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 7653, 215, 232, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[8078, 232, 94, 1, 23, "Section"],
Cell[8175, 235, 108, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[8308, 240, 343, 8, 52, "Input"],
Cell[8654, 250, 413, 13, 71, "Output"]
}, Open  ]],
Cell[9082, 266, 130, 1, 56, "Subtitle"],
Cell[CellGroupData[{
Cell[9237, 271, 1580, 40, 72, "Input"],
Cell[10820, 313, 705, 20, 64, "Output"],
Cell[11528, 335, 876, 26, 72, "Output"],
Cell[12407, 363, 720, 20, 64, "Output"]
}, Open  ]],
Cell[13142, 386, 385, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[13552, 401, 3022, 83, 267, "Input"],
Cell[16577, 486, 43046, 714, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59660, 1205, 610, 19, 31, "Input"],
Cell[60273, 1226, 31819, 529, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92129, 1760, 901, 26, 78, "Input"],
Cell[93033, 1788, 590, 19, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93660, 1812, 135, 2, 52, "Input"],
Cell[93798, 1816, 126, 2, 31, "Input"],
Cell[93927, 1820, 114, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94078, 1826, 127, 2, 31, "Input"],
Cell[94208, 1830, 605, 20, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94850, 1855, 1197, 38, 68, "Input"],
Cell[96050, 1895, 1588, 53, 64, "Output"],
Cell[97641, 1950, 1152, 37, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98830, 1992, 945, 25, 46, "Input"],
Cell[99778, 2019, 1482, 49, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101297, 2073, 1352, 42, 88, "Input"],
Cell[102652, 2117, 1237, 39, 67, "Output"]
}, Open  ]],
Cell[103904, 2159, 87, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[104016, 2164, 321, 9, 31, "Input"],
Cell[104340, 2175, 179, 6, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104568, 2187, 349, 11, 52, "Input"],
Cell[104920, 2200, 13458, 227, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118415, 2432, 29, 0, 23, "Subtitle"],
Cell[CellGroupData[{
Cell[118469, 2436, 372, 11, 31, "Input"],
Cell[118844, 2449, 21402, 360, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140283, 2814, 2147, 57, 92, "Input"],
Cell[142433, 2873, 478, 9, 31, "Output"]
}, Open  ]],
Cell[142926, 2885, 25, 0, 23, "Text"],
Cell[142954, 2887, 26, 0, 23, "Input"],
Cell[142983, 2889, 3483, 89, 112, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[146491, 2982, 220, 5, 31, "Input"],
Cell[146714, 2989, 3292, 92, 78, "Output"]
}, Open  ]],
Cell[150021, 3084, 5002, 114, 332, "Input"],
Cell[CellGroupData[{
Cell[155048, 3202, 635, 12, 92, "Input"],
Cell[155686, 3216, 2158, 68, 70, "Output"],
Cell[157847, 3286, 1556, 51, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159440, 3342, 962, 24, 92, "Input"],
Cell[160405, 3368, 1689, 33, 57, "Output"],
Cell[162097, 3403, 1142, 21, 31, "Output"],
Cell[163242, 3426, 956, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164235, 3445, 839, 22, 72, "Input"],
Cell[165077, 3469, 529, 16, 72, "Output"]
}, Open  ]],
Cell[165621, 3488, 104, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[165750, 3493, 3546, 95, 152, "Input"],
Cell[169299, 3590, 4648, 90, 404, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173996, 3686, 2318, 57, 172, "Input"],
Cell[176317, 3745, 37654, 623, 243, "Output"]
}, Open  ]]
}
]
*)

