(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1140813,      21938]
NotebookOptionsPosition[   1127710,      21581]
NotebookOutlinePosition[   1128918,      21614]
CellTagsIndexPosition[   1128875,      21611]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"<<", " ", "TransformImagesPackage`"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.657357416426873*^9, 3.6573574355902*^9}}],

Cell[CellGroupData[{

Cell["Init.", "Subsection",
 CellChangeTimes->{{3.642265253043488*^9, 3.642265261965519*^9}, {
  3.642306055306261*^9, 3.6423060572083817`*^9}, {3.642410054457844*^9, 
  3.642410056240748*^9}, {3.642946522826429*^9, 3.642946526575878*^9}, {
  3.6429478159446583`*^9, 3.642947816630946*^9}, {3.6430236428810053`*^9, 
  3.643023644193609*^9}, {3.6430237290306177`*^9, 3.643023730380468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"figPath", " ", "=", " ", 
   RowBox[{
   "$HomeDirectory", " ", "<>", " ", 
    "\"\</Developer/projects/Color-Space-WriteUp/WriteUp/Dissertation/\
Chapter4/Figs/\>\""}]}], ";"}]], "Code",
 CellChangeTimes->{{3.650283329650834*^9, 3.650283341815071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup the Model and Colorspace", "Subchapter",
 CellChangeTimes->{{3.647952054188222*^9, 3.647952072403687*^9}, {
  3.657471308640132*^9, 3.6574713126481028`*^9}}],

Cell[CellGroupData[{

Cell["Load The images", "Section",
 CellChangeTimes->{{3.642154828368236*^9, 3.642154843000649*^9}, 
   3.645342775046529*^9}],

Cell[CellGroupData[{

Cell["On Green Fingers Pad", "Subsection",
 CellChangeTimes->{{3.642480732528942*^9, 3.642480735876264*^9}, 
   3.642480782177772*^9, {3.64313334423634*^9, 3.643133348673539*^9}}],

Cell[CellGroupData[{

Cell["FSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.6575977264294558`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{"rootDirectory", "<>", "\"\<FSkin/Index/Pad/Orig\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, 3.6574715962865963`*^9, {3.657597766539514*^9, 
   3.657597795623205*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.jpg\>\"", ",", "directory"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.6533047250357847`*^9, {
   3.65759780135723*^9, 3.657597809927142*^9}, 3.657598146074129*^9, {
   3.6576239963880053`*^9, 3.657623996955987*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<FSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<Pad Pressure \>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "fileNames", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.657623877977664*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"298", ",", "510"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"448", ",", "982"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"304", ",", "522"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"438", ",", "1036"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"298", ",", "512"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"456", ",", "1000"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"300", ",", "496"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"456", ",", "1022"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"304", ",", "522"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"454", ",", "1000"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.35066681354414314`", ",", "0.34799874194142316`", ",", 
     "0.47933489448875244`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["JSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.657597749110532*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{"rootDirectory", "<>", "\"\<JSkin/Index/Pad/Orig\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, 3.6574715962865963`*^9, {3.657597766539514*^9, 
   3.657597795623205*^9}, 3.657597934578948*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.jpg\>\"", ",", "directory"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.6533047250357847`*^9, {
   3.65759780135723*^9, 3.657597809927142*^9}, 3.657598141794462*^9, {
   3.657623989901332*^9, 3.657623990500251*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<JSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<Pad Pressure \>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "fileNames", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.6575979610414457`*^9, 3.6576238700031652`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"336", ",", "590"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"306", ",", "1016"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"342", ",", "596"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"324", ",", "972"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"356", ",", "598"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"296", ",", "984"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"366", ",", "592"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"290", ",", "962"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"372", ",", "598"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"272", ",", "974"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"380", ",", "614"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"272", ",", "966"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"374", ",", "600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"270", ",", "964"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9, 3.657597971633111*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.5670766312417511`", ",", "0.3364918173115394`", ",", 
     "0.48633810530330035`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9, 3.657597980648366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["NSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.657597754535007*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{"rootDirectory", "<>", "\"\<NSkin/Index/Pad/Orig\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, 3.6574715962865963`*^9, {3.657597766539514*^9, 
   3.657597795623205*^9}, 3.657597934578948*^9, 3.657598010919817*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.jpg\>\"", ",", "directory"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.6533047250357847`*^9, {
   3.65759780135723*^9, 3.657597809927142*^9}, 3.6575981375784903`*^9, {
   3.6576240003637657`*^9, 3.6576240012920103`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<NSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<Pad Pressure \>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "fileNames", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.6575979610414457`*^9, 3.657598019135233*^9, 
   3.6576238816012087`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"588", ",", "686"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"324", ",", "564"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"588", ",", "688"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"324", ",", "552"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"580", ",", "690"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"326", ",", "574"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"584", ",", "692"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"328", ",", "560"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"580", ",", "688"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"324", ",", "572"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"578", ",", "684"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"326", ",", "564"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"576", ",", "682"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"328", ",", "562"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9, 3.657597971633111*^9, 
   3.6575980736249733`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.6380280516342101`", ",", "0.3056304620897022`", ",", 
     "0.49204688577154304`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9, 3.657597980648366*^9, 3.6575980817757597`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On Green Digits", "Subsection",
 CellChangeTimes->{{3.642480732528942*^9, 3.642480735876264*^9}, 
   3.642480782177772*^9, {3.64313334423634*^9, 3.643133348673539*^9}, {
   3.644858961092691*^9, 3.644858962762636*^9}}],

Cell[CellGroupData[{

Cell["FSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.6575977264294558`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"individualDirectorys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rootDirectory", "<>", "\"\<FSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<JSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<NSkin/\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"digitDirectories", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index/Pad/Orig\>\"", ",", "\"\<Middle/Pad/Orig\>\"", ",", 
     "\"\<Ring/Pad/Orig\>\"", ",", "\"\<Little/Pad/Orig\>\"", ",", 
     "\"\<Thumb/Pad/Orig\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directories", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"individualDirectorys", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "<>", 
      RowBox[{"digitDirectories", "[", 
       RowBox[{"[", "d", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, {3.644858994795741*^9, 3.6448590537023277`*^9}, {
   3.644859154064694*^9, 3.644859193125301*^9}, {3.644861615635454*^9, 
   3.6448616407000313`*^9}, {3.644861682083609*^9, 3.644861773191596*^9}, {
   3.6448967798398657`*^9, 3.6448967849583893`*^9}, {3.657600684899022*^9, 
   3.657600689553187*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.jpg\>\"", ",", 
        RowBox[{"directories", "[", 
         RowBox[{"[", "d", "]"}], "]"}]}], " ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.644896655228272*^9, {
   3.6576008883151484`*^9, 3.657600938013115*^9}, 3.657624011427629*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<FSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index\>\"", ",", " ", "\"\<Little\>\"", ",", " ", "\"\<Middle\>\"", 
     ",", " ", "\"\<Ring\>\"", ",", " ", "\"\<Thumb\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.6576009715657988`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"304", ",", "530"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"438", ",", "796"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"300", ",", "532"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"392", ",", "888"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"336", ",", "536"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"312", ",", "918"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"286", ",", "426"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"438", ",", "894"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"370", ",", "606"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"356", ",", "902"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9, 3.657600992044751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.3632689778540767`", ",", "0.3530497573731274`", ",", 
     "0.48681243012248104`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9, 3.657601005419936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["JSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.657597749110532*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"individualDirectorys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rootDirectory", "<>", "\"\<FSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<JSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<NSkin/\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"digitDirectories", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index/Pad/Orig\>\"", ",", "\"\<Middle/Pad/Orig\>\"", ",", 
     "\"\<Ring/Pad/Orig\>\"", ",", "\"\<Little/Pad/Orig\>\"", ",", 
     "\"\<Thumb/Pad/Orig\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directories", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"individualDirectorys", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "<>", 
      RowBox[{"digitDirectories", "[", 
       RowBox[{"[", "d", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, {3.644858994795741*^9, 3.6448590537023277`*^9}, {
   3.644859154064694*^9, 3.644859193125301*^9}, {3.644861615635454*^9, 
   3.6448616407000313`*^9}, {3.644861682083609*^9, 3.644861773191596*^9}, {
   3.6448967798398657`*^9, 3.6448967849583893`*^9}, {3.657600684899022*^9, 
   3.657600700488779*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.jpg\>\"", ",", 
        RowBox[{"directories", "[", 
         RowBox[{"[", "d", "]"}], "]"}]}], " ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.644896655228272*^9, {
   3.6576008883151484`*^9, 3.657600935198401*^9}, 3.65762400892494*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<JSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index\>\"", ",", " ", "\"\<Little\>\"", ",", " ", "\"\<Middle\>\"", 
     ",", " ", "\"\<Ring\>\"", ",", " ", "\"\<Thumb\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.6575979610414457`*^9, 3.657600967598119*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"344", ",", "596"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"292", ",", "944"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"390", ",", "658"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"304", ",", "932"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"402", ",", "564"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"302", ",", "720"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"328", ",", "448"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"330", ",", "798"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"594", ",", "730"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"378", ",", "684"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9, 3.657597971633111*^9, 
   3.65760101890773*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.5384198922684201`", ",", "0.32765993359994056`", ",", 
     "0.4953417283851964`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9, 3.657597980648366*^9, 3.6576010512015753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["NSkin", "Subsubsection",
 CellChangeTimes->{{3.65759771700323*^9, 3.657597754535007*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootDirectory", "=", 
   "\"\</Users/jaspershemilt/Developer/projects/Color-Space-Stats/matLab/\
ColorSpaceStats/Skin/IndividualSkin/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"individualDirectorys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rootDirectory", "<>", "\"\<FSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<JSkin/\>\""}], ",", 
     RowBox[{"rootDirectory", "<>", "\"\<NSkin/\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"digitDirectories", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index/Pad/Orig\>\"", ",", "\"\<Middle/Pad/Orig\>\"", ",", 
     "\"\<Ring/Pad/Orig\>\"", ",", "\"\<Little/Pad/Orig\>\"", ",", 
     "\"\<Thumb/Pad/Orig\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"directories", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"individualDirectorys", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "<>", 
      RowBox[{"digitDirectories", "[", 
       RowBox[{"[", "d", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643133109374193*^9, 3.643133125619039*^9}, 
   3.6431332363951263`*^9, {3.6436580498122168`*^9, 3.643658057004263*^9}, {
   3.643658111332309*^9, 3.6436581226361513`*^9}, {3.64365816697132*^9, 
   3.643658168144196*^9}, {3.643658208398662*^9, 3.643658228695765*^9}, {
   3.643658450007304*^9, 3.643658455022098*^9}, {3.6436647523364143`*^9, 
   3.643664770967944*^9}, {3.644858994795741*^9, 3.6448590537023277`*^9}, {
   3.644859154064694*^9, 3.644859193125301*^9}, {3.644861615635454*^9, 
   3.6448616407000313`*^9}, {3.644861682083609*^9, 3.644861773191596*^9}, {
   3.6448967798398657`*^9, 3.6448967849583893`*^9}, {3.657600684899022*^9, 
   3.6576007060808277`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.jpg\>\"", ",", 
        RowBox[{"directories", "[", 
         RowBox[{"[", "d", "]"}], "]"}]}], " ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "digitDirectories", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643133128350039*^9, 3.643133145294273*^9}, {
   3.643133203040821*^9, 3.64313327723704*^9}, {3.64313330917376*^9, 
   3.6431333181812973`*^9}, 3.643530421610262*^9, {3.6436584945664454`*^9, 
   3.643658525315559*^9}, {3.64365857590702*^9, 3.6436585810735197`*^9}, {
   3.643695732535961*^9, 3.6436957348785048`*^9}, 3.644896655228272*^9, {
   3.6576008883151484`*^9, 3.657600935198401*^9}, 3.657624014643558*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setLabel", "=", "\"\<NSkin\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgLabel", " ", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Index\>\"", ",", " ", "\"\<Little\>\"", ",", " ", "\"\<Middle\>\"", 
     ",", " ", "\"\<Ring\>\"", ",", " ", "\"\<Thumb\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643694798616538*^9, 3.6436948142866163`*^9}, 
   3.643694871132969*^9, {3.643694914163094*^9, 3.643694946075006*^9}, {
   3.643695030036499*^9, 3.643695039174963*^9}, {3.643695633147697*^9, 
   3.643695658369144*^9}, 3.653304728306875*^9, 3.6575978271502047`*^9, 
   3.657597864265593*^9, 3.6575979610414457`*^9, 3.657598019135233*^9, 
   3.657600964086133*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgsPatch", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"584", ",", "694"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"340", ",", "586"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"226", ",", "528"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"452", ",", "922"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"346", ",", "626"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"468", ",", "930"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"332", ",", "572"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"414", ",", "896"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"298", ",", "630"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"392", ",", "952"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643133499690968*^9, 3.643133502166504*^9}, 
   3.643136427828534*^9, 3.643137411522217*^9, 3.643137541604143*^9, {
   3.6431381555438757`*^9, 3.643138196782349*^9}, {3.643178304835051*^9, 
   3.64317831948907*^9}, 3.6437129451220837`*^9, {3.643712980565736*^9, 
   3.643712983426483*^9}, {3.64371316471764*^9, 3.643713177237131*^9}, {
   3.6437150009968452`*^9, 3.64371503076929*^9}, 3.643717139135738*^9, {
   3.653300910439755*^9, 3.653300954847289*^9}, 3.6573807459964113`*^9, 
   3.657381102232565*^9, 3.657597897440218*^9, 3.657597971633111*^9, 
   3.6575980736249733`*^9, 3.657601034146555*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]Skin", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.49986617767842145`", ",", "0.342187270348238`", ",", 
     "0.4907957638466103`"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6574717267859583`*^9, 3.657471728465357*^9}, 
   3.657597906607437*^9, 3.657597980648366*^9, 3.6575980817757597`*^9, 
   3.6576010415057993`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Final Values", "Section",
 CellChangeTimes->{{3.641922697970581*^9, 3.641922737739909*^9}}],

Cell["Set the final values and float the mean", "Text",
 CellChangeTimes->{{3.645263703357264*^9, 3.6452637224702044`*^9}, {
  3.6574742481644697`*^9, 3.657474251544256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "sig", ",", " ", "LCaCb\[Theta]", ",", " ", "\[Theta]", ",", " ", 
    "\[Delta]\[Theta]", ",", " ", "c", ",", " ", "s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", "2.3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LCaCb\[Theta]", " ", "=", " ", "0.902576829326826"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTheta]", " ", "=", " ", 
   RowBox[{
    RowBox[{"Quotient", "[", 
     RowBox[{"LCaCb\[Theta]", ",", " ", 
      RowBox[{"Pi", "/", "6"}]}], "]"}], " ", 
    RowBox[{"Pi", "/", "6"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Delta]\[Theta]", " ", "=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"LCaCb\[Theta]", ",", " ", 
     RowBox[{"Pi", "/", "6"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "127.5", ",", " ", "90.92186223027412`", ",", " ", 
     "122.09591414487721`"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"255", " ", 
      RowBox[{"uG", "[", 
       RowBox[{"\[Gamma]Min", "/", "2"}], "]"}]}], ",", " ", 
     RowBox[{"sig", "  ", "6.655674357484659`"}], ",", " ", 
     RowBox[{"sig", " ", "2.934431559612464`"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colorspaceRules", " ", "=", " ", 
   RowBox[{"colorSpaceParams", "[", 
    RowBox[{"s", ",", " ", 
     RowBox[{"255", " ", "\[Mu]Skin"}], ",", " ", "LCaCb\[Theta]", ",", " ", 
     "8", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"255", ",", " ", "255", ",", " ", "255"}], "}"}]}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"255", ",", " ", "255", ",", " ", "255"}], "}"}]}], "}"}]}],
       "}"}], ",", " ", 
     RowBox[{"Unit", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"G", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}]}], "FunctionalProgram",
 CellChangeTimes->{{3.641922806238686*^9, 3.641922854703679*^9}, {
   3.641922911703545*^9, 3.6419229142067823`*^9}, {3.64192647923977*^9, 
   3.641926485620884*^9}, {3.641926523389852*^9, 3.6419265646988773`*^9}, {
   3.645262900230783*^9, 3.6452629403643208`*^9}, {3.650614966550996*^9, 
   3.650615002179935*^9}, {3.650615040484007*^9, 3.650615040835607*^9}, 
   3.65743629236644*^9, {3.657436515848092*^9, 3.65743651584927*^9}, {
   3.657471345903556*^9, 3.657471347059669*^9}, {3.657474127446512*^9, 
   3.657474168222794*^9}, {3.657601156814967*^9, 3.657601161028385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set Scales", "Section",
 CellChangeTimes->{{3.642352098514812*^9, 3.64235210972946*^9}, {
  3.6430268737579927`*^9, 3.643026878860004*^9}, {3.643713793789357*^9, 
  3.643713798523479*^9}}],

Cell[CellGroupData[{

Cell["The three Scales", "Subsection",
 CellChangeTimes->{{3.645343782264889*^9, 3.645343790580801*^9}, {
  3.653297784723371*^9, 3.653297785945919*^9}}],

Cell["\<\
We have very large images. We wish to find 3 scales.
1. Full scale.
2. Edge and Feature scale for the target region. 
3. Tracking and Blob detection scale\
\>", "Text",
 CellChangeTimes->{{3.6437077939415913`*^9, 3.643707842006589*^9}, {
  3.643707879157361*^9, 3.6437079489238586`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Available Scales", "Subsection",
 CellChangeTimes->{{3.645343782264889*^9, 3.645343790580801*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgDimensions", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", 
     RowBox[{"ImageData", "[", 
      RowBox[{
       RowBox[{"imgsL", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"commonFactors", "=", 
   RowBox[{"CommonFactors", "[", "imgDimensions", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"powers", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], ",", 
     "commonFactors"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prod", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{"Reverse", "[", "powers", "]"}], ")"}]}]}], "]"}]}], 
  ";"}]}], "FunctionalProgram",
 CellChangeTimes->{{3.643700774208757*^9, 3.6437009720254374`*^9}, {
   3.643701476911086*^9, 3.643701565811511*^9}, {3.643701901633231*^9, 
   3.643701907457312*^9}, {3.6437023772071133`*^9, 3.6437024364378138`*^9}, {
   3.643702626681911*^9, 3.643702840653604*^9}, {3.643706991823111*^9, 
   3.643706992777461*^9}, {3.6437070375441504`*^9, 3.643707038078519*^9}, {
   3.6437070803011627`*^9, 3.6437070862851152`*^9}, {3.643707118831565*^9, 
   3.643707153401661*^9}, {3.643707286808723*^9, 3.643707321444642*^9}, {
   3.643707743782302*^9, 3.6437077621882687`*^9}, {3.6437092060581837`*^9, 
   3.643709206410527*^9}, {3.653027351817193*^9, 3.653027351976056*^9}, 
   3.653132753940256*^9, 3.653133382961795*^9, 3.6531346282373457`*^9, {
   3.653220537942679*^9, 3.653220574560151*^9}, 3.653221482982224*^9, 
   3.653222774910796*^9, 3.653297793828397*^9, 3.657436739589323*^9, 
   3.6574402895170507`*^9, {3.6576239175119953`*^9, 3.65762394524662*^9}, 
   3.657624032180277*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<k\>\"", ",", "\"\<l\>\"", ",", 
     "\"\<m\>\"", ",", "\"\<n\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<scale = \>\"", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Times", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"commonFactors", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "^", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "commonFactors", "]"}]}], "}"}]}], "]"}]}]}],
     ",", "\"\<     \>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "\"\< \[Element] \>\"", ",", 
          RowBox[{"{", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<\[CenterEllipsis]\>\"", ",", 
              RowBox[{"commonFactors", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], 
           "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "commonFactors", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Framed", "[", 
      RowBox[{"TableForm", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{"(", 
             RowBox[{"imgDimensions", "/", "#"}], ")"}], "]"}], "&"}], ",", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], ",", 
        RowBox[{"TableHeadings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"powers", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"1", "/", 
            RowBox[{"powers", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "prod", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"powers", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "DisplayProgram",
 CellChangeTimes->{{3.657440291317217*^9, 3.657440294130583*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose Small Scale.", "Subsection",
 CellChangeTimes->{{3.6437095561783867`*^9, 3.643709593219792*^9}, {
  3.645342989970443*^9, 3.645342993200779*^9}, {3.653286350980995*^9, 
  3.653286357200303*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SMin", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iScaleS", "=", 
   RowBox[{"findMediumScale", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Min", "[", "imgDimensions", "]"}], "/", "SMin"}], "]"}], ",", 
     
     RowBox[{"Min", "[", "imgDimensions", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleS", "=", 
   RowBox[{"1", "/", "iScaleS"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"midScales", "=", 
   RowBox[{"factorsToFactors", "[", 
    RowBox[{"FactorInteger", "[", "iScaleS", "]"}], "]"}]}], 
  ";"}]}], "FunctionalProgram",
 CellChangeTimes->{{3.653223619285829*^9, 3.65322363148744*^9}, {
   3.653224534234996*^9, 3.653224535082056*^9}, {3.6532866353485126`*^9, 
   3.653286662993668*^9}, {3.653286693024645*^9, 3.653286737695324*^9}, 
   3.653287109256123*^9, 3.653289488006926*^9, {3.653291919956662*^9, 
   3.65329192303554*^9}, {3.6576249220887747`*^9, 3.65762494324702*^9}, 
   3.657626265238906*^9}],

Cell[CellGroupData[{

Cell["Adjust the Images.", "Subsubsection",
 CellChangeTimes->{{3.653298827366404*^9, 3.653298840763493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mi", ",", "mj"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "mi", "}"}], "=", 
      RowBox[{"Dimensions", "[", "imgsL", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"imgsS", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageResize", "[", 
         RowBox[{
          RowBox[{"imgsL", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", "iScaleS"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "mi"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{
  3.653294702509996*^9, {3.653297944472849*^9, 3.65329794633565*^9}, {
   3.653297985487896*^9, 3.653298033936674*^9}, {3.653298254025009*^9, 
   3.653298302973393*^9}, {3.653298338620874*^9, 3.653298339859557*^9}, {
   3.653298604158449*^9, 3.65329868165825*^9}, {3.6532987330113583`*^9, 
   3.6532987416176243`*^9}, 3.653298982907056*^9, {3.657626296981462*^9, 
   3.657626320788237*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set Mid Scale.", "Subsection",
 CellChangeTimes->{{3.6437095561783867`*^9, 3.643709593219792*^9}, {
  3.645342989970443*^9, 3.645342993200779*^9}, {3.653286350980995*^9, 
  3.653286357200303*^9}, {3.653294601709293*^9, 3.653294603892898*^9}}],

Cell["An initial guess for the mid scale.", "Text",
 CellChangeTimes->{{3.657440655825274*^9, 3.6574406823247433`*^9}, {
  3.657698055599684*^9, 3.657698062590489*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj", ",", "wMin"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mj", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "imgsL", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"wMin", "=", "100"}], ";", "\n", 
    RowBox[{"width", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"N", "[", 
         RowBox[{"SMin", "/", "7"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"iScaleM", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"findMediumScale", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"iScaleS", " ", 
           RowBox[{
            RowBox[{"width", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "/", "wMin"}]}], "]"}], ",", 
         "midScales"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"scaleM", "=", 
     RowBox[{"1", "/", "iScaleM"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "FunctionalProgram",
 CellChangeTimes->{
  3.653294702509996*^9, {3.653297944472849*^9, 3.65329794633565*^9}, {
   3.653297985487896*^9, 3.653298033936674*^9}, {3.653298254025009*^9, 
   3.653298302973393*^9}, {3.653298338620874*^9, 3.653298339859557*^9}, {
   3.653299429558894*^9, 3.653299486764221*^9}, {3.657697929008314*^9, 
   3.6576979537252893`*^9}, {3.658076916395144*^9, 3.6580769463673964`*^9}, {
   3.658076990782498*^9, 3.65807699106252*^9}, 3.6580770576968317`*^9}],

Cell["In practice the distal width will determine the mid scale.", "Text",
 CellChangeTimes->{{3.657440655825274*^9, 3.6574406823247433`*^9}}],

Cell[CellGroupData[{

Cell["Adjust the Images.", "Subsubsection",
 CellChangeTimes->{{3.653298827366404*^9, 3.653298840763493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "mj", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "imgsL", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"imgsM", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageResize", "[", 
         RowBox[{
          RowBox[{"imgsL", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", 
            RowBox[{"iScaleM", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{
  3.653294702509996*^9, {3.653297944472849*^9, 3.65329794633565*^9}, {
   3.653297985487896*^9, 3.653298033936674*^9}, {3.653298254025009*^9, 
   3.653298302973393*^9}, {3.653298338620874*^9, 3.653298339859557*^9}, {
   3.653298604158449*^9, 3.65329868165825*^9}, {3.6532987330113583`*^9, 
   3.653298776799399*^9}, 3.6532989848413677`*^9, {3.6580770090954723`*^9, 
   3.6580770232358313`*^9}, 3.658077060840569*^9, {3.6580771025425367`*^9, 
   3.658077102869081*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mi", ",", "mj"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "imgsL", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Table", "[", "\n", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ImageCompose", "[", 
              RowBox[{
               RowBox[{"ImageCompose", "[", 
                RowBox[{
                 RowBox[{"imgsL", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"imgsM", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Left", ",", "Top"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}], ",", 
               RowBox[{"imgsS", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}], ",", "\n", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Small Scale  : \>\"", ",", "scaleS"}], "}"}], 
              "]"}], ",", "\n", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Medium Scale : \>\"", ",", 
                RowBox[{"scaleM", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "]"}], "\n", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "DisplayProgram",
 CellChangeTimes->{{3.64534284250278*^9, 3.6453429341267643`*^9}, {
  3.657440362584813*^9, 3.6574404749803543`*^9}, {3.657440505605337*^9, 
  3.657440536532366*^9}, {3.657440590524055*^9, 3.6574406305287037`*^9}, {
  3.65807712472606*^9, 3.6580771641246557`*^9}, {3.658077308606483*^9, 
  3.6580773107396507`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Process Image", "Subchapter",
 CellChangeTimes->{{3.643104127002372*^9, 3.643104139852786*^9}}],

Cell[CellGroupData[{

Cell["Generate the Tip Images", "Subsubsection",
 CellChangeTimes->{{3.658236314453607*^9, 3.658236340466876*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"mj", "=", 
      RowBox[{"Length", "[", "imgsL", "]"}]}], ",", 
     RowBox[{"wMin", " ", "=", " ", "100"}], ",", "null", ",", 
     RowBox[{"method", "=", "\"\<MeanSquareGradientDescent\>\""}]}], "}"}], 
   ",", "\n", 
   RowBox[{
    RowBox[{"null", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"tipM", "=", "null"}], ";", 
    RowBox[{"tipSeq", "=", "null"}], ";", 
    RowBox[{"tipSeqLCaCb", "=", "null"}], ";", 
    RowBox[{"matches", "=", "null"}], ";", 
    RowBox[{"tipGray", "=", "null"}], ";", "\n", 
    RowBox[{"out", "=", "null"}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Setup", " ", 
       RowBox[{"Colorspace", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"probFuns", "=", 
     RowBox[{"setProbFun", "[", "colorspaceRules", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"partitionFuns", "=", 
     RowBox[{"setPartitioningFun", "[", "colorspaceRules", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"distroFuns", "=", 
     RowBox[{"setDistroFun", "[", "colorspaceRules", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"catagoryFun", "=", 
     RowBox[{"RegionClassifier", "[", 
      RowBox[{"colorspaceRules", ",", 
       RowBox[{"qRange", "\[Rule]", "True"}], ",", 
       RowBox[{"Slack", "\[Rule]", "0.1"}]}], "]"}]}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Setup", " ", "the", " ", 
       RowBox[{"Model", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"modelS", ",", " ", "modelPosS", ",", "width"}], "}"}], " ", 
     "=", " ", 
     RowBox[{"buildModel", "[", 
      RowBox[{
       RowBox[{"imgsS", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "colorspaceRules"}], "]"}]}], 
    ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Set", " ", "the", " ", 
       RowBox[{"Frame", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mdlL", ",", " ", "mdlPosL"}], " ", "}"}], "=", 
     RowBox[{"scaleModel", "[", 
      RowBox[{"modelS", ",", " ", "modelPosS", ",", "iScaleS"}], "]"}]}], ";",
     "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mdlXL", ",", "mdlPosXL"}], "}"}], "=", 
     RowBox[{"stretchModel", "[", 
      RowBox[{"mdlL", ",", " ", "mdlPosL", ",", 
       RowBox[{"iScaleS", "/", "2"}]}], "]"}]}], ";", "\n", 
    RowBox[{"lFrame", "=", 
     RowBox[{"fixImageDimensionRanges", "[", 
      RowBox[{
       RowBox[{"imgsL", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{"modelBoundingBox", "[", 
        RowBox[{"mdlXL", ",", "mdlPosXL"}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Set", " ", "the", " ", 
       RowBox[{"Midscale", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
    RowBox[{"iScaleM", " ", "=", " ", 
     RowBox[{"findMediumScale", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"iScaleS", " ", 
         RowBox[{
          RowBox[{"width", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "wMin"}]}], "]"}], ",", " ", 
       "midScales"}], "]"}]}], ";", "\n", " ", 
    RowBox[{"scaleM", " ", "=", " ", 
     RowBox[{"1", "/", "iScaleM"}]}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Crop", " ", "the", " ", 
       RowBox[{"Tip", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
    RowBox[{"tipL", "=", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"ImageData", "[", 
        RowBox[{"imgsL", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ";;", 
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], ";;", 
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], "]"}]}], 
    ";", "\n", 
    RowBox[{
     RowBox[{"tipM", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "=", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"tipL", ",", " ", 
       RowBox[{"Scaled", "[", "scaleM", "]"}]}], " ", "]"}]}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{"Set", " ", "the", " ", "Midscale", " ", "Tip", " ", 
       RowBox[{"Mask", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
    RowBox[{"mdlPosTipL", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"mdlPosL", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"lFrame", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"mdlPosL", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mdlTipM", ",", "  ", "mdlTipPosM"}], " ", "}"}], "=", 
     RowBox[{"scaleModel", "[", 
      RowBox[{"mdlL", ",", " ", "mdlPosTipL", ",", " ", "scaleM"}], "]"}]}], 
    ";", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mdlTipXM", ",", " ", "mdlTipPosXM"}], "}"}], "=", 
     RowBox[{"stretchModel", "[", 
      RowBox[{"mdlTipM", ",", " ", "mdlTipPosM", ",", 
       RowBox[{"-", 
        RowBox[{"(", "iScaleM", ")"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"modelMask", "=", 
     RowBox[{"Binarize", "[", 
      RowBox[{
       RowBox[{"tipMask", "[", 
        RowBox[{
         RowBox[{"tipM", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "mdlTipXM", ",", " ", 
         "mdlTipPosXM", ",", 
         RowBox[{"scaleM", " ", "lFrame"}]}], "]"}], ",", "0.5"}], "]"}]}], 
    ";", "\n", "  ", 
    RowBox[{"modelMaskPos", "=", 
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "modelMask", "]"}], "]"}], ",", "1"}], 
      "]"}]}], ";", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{
      "Set", " ", "the", " ", "Midscale", " ", "Metric", " ", "Tip", " ", 
       RowBox[{"Mask", "."}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
    RowBox[{"mdlTipXCM", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pointOnPath", "[", 
            RowBox[{
             RowBox[{"mdlTipXM", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"pathLengths", "[", 
                RowBox[{"mdlTipXM", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "            ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pointOnPath", "[", 
            RowBox[{
             RowBox[{"mdlTipXM", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"pathLengths", "[", 
                RowBox[{"mdlTipXM", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "           ", "}"}], ",", 
       RowBox[{"mdlTipXM", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "  ", 
    RowBox[{"modelMetricMask", "=", 
     RowBox[{"Binarize", "[", 
      RowBox[{
       RowBox[{"tipMask", "[", 
        RowBox[{
         RowBox[{"tipM", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "mdlTipXCM", ",", " ", 
         "mdlTipPosXM", ",", 
         RowBox[{"scaleM", " ", "lFrame"}]}], "]"}], ",", "0.5"}], "]"}]}], 
    ";", "\n", "\n", 
    RowBox[{"(*", " ", 
     StyleBox[
      RowBox[{
       RowBox[{
       "Convert", " ", "to", " ", "Skin", " ", "Colorspace", " ", "LP"}], " ",
        "=", " ", 
       RowBox[{"LCaCb", " ", 
        RowBox[{"Partitioned", "."}]}]}],
      FontColor->GrayLevel[0],
      Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
    RowBox[{"tipLP", "=", 
     RowBox[{"processImage", "[", 
      RowBox[{
       RowBox[{"ImageData", "[", 
        RowBox[{
         RowBox[{"tipM", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"partitionFuns", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "colorspaceRules", ",", 
       RowBox[{"Unit", "\[Rule]", "False"}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{
     RowBox[{"tipGray", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"tipLP", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], ",", 
       "\"\<Byte\>\""}], "]"}]}], ";", "\n", "  ", 
    RowBox[{
     RowBox[{"tipSeq", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"tipLP", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", 
          RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], ",", "\"\<Byte\>\""}], 
      "]"}]}], ";", "\n", "  ", 
    RowBox[{
     RowBox[{"tipSeqLCaCb", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"tipLP", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", 
          RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], ",", "\"\<Byte\>\""}], 
      "]"}]}], ";", "\n", 
    RowBox[{"Do", "[", "\n", "  ", 
     RowBox[{"(*", " ", 
      StyleBox[
       RowBox[{"Setup", " ", "Next", " ", 
        RowBox[{"Frame", "."}]}],
       FontColor->GrayLevel[0],
       Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"tipL", "=", 
        RowBox[{"Image", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{"imgsL", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"lFrame", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ";;", 
             RowBox[{"lFrame", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"lFrame", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], ";;", 
             RowBox[{"lFrame", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], 
         "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{"tipM", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"ImageResize", "[", 
         RowBox[{"tipL", ",", " ", 
          RowBox[{"Scaled", "[", "scaleM", "]"}]}], " ", "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"(*", " ", 
        StyleBox[
         RowBox[{
          RowBox[{
          "Convert", " ", "to", " ", "Skin", " ", "Colorspace", " ", "LP"}], 
          " ", "=", " ", 
          RowBox[{"LCaCb", " ", 
           RowBox[{"Partitioned", "."}]}]}],
         FontColor->GrayLevel[0],
         Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
       RowBox[{"tipLP", "=", 
        RowBox[{"processImage", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"tipM", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"partitionFuns", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", "}"}], ",", "colorspaceRules", ",", 
          RowBox[{"Unit", "\[Rule]", "False"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{"tipGray", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", " ", 
        RowBox[{"Image", "[", 
         RowBox[{
          RowBox[{"tipLP", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], ",", 
          "\"\<Byte\>\""}], "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{"tipSeq", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"Image", "[", 
         RowBox[{
          RowBox[{"tipLP", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", 
             RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], ",", "\"\<Byte\>\""}], 
         "]"}]}], ";", "\n", "  ", 
       RowBox[{"(*", " ", 
        StyleBox[
         RowBox[{"Find", " ", "Alignment", " ", 
          RowBox[{"Shift", "."}]}],
         FontColor->GrayLevel[0],
         Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "method", ",", "\n", "\"\<Sliding\>\"", ",", "\[IndentingNewLine]", 
         "  ", 
         RowBox[{
          RowBox[{"f", ":=", 
           RowBox[{
            RowBox[{"NormalizedSquaredEuclideanDistance", "[", 
             RowBox[{
              RowBox[{"Extract", "[", 
               RowBox[{"#1", ",", "modelMaskPos"}], "]"}], ",", 
              RowBox[{"Extract", "[", 
               RowBox[{"#2", ",", "modelMaskPos"}], "]"}]}], "]"}], "&"}]}], 
          ";", "\[IndentingNewLine]", "  ", 
          RowBox[{"corr", "=", 
           RowBox[{"ImageAdjust", "[", 
            RowBox[{"ImageCorrelate", "[", 
             RowBox[{
              RowBox[{"tipGray", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              RowBox[{"tipGray", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "f"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "  ", 
          RowBox[{"minOffset", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"PixelValuePositions", "[", 
              RowBox[{"corr", ",", 
               RowBox[{"Min", "[", 
                RowBox[{"ImageData", "[", "corr", "]"}], "]"}]}], "]"}], "[", 
             
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"ImageDimensions", "[", 
              RowBox[{"tipGray", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}], "/", "2"}]}]}], ";", 
          "\n", "  ", 
          RowBox[{"trans", "=", 
           RowBox[{"TranslationTransform", "[", "minOffset", "]"}]}], ";", 
          "\n", "  ", 
          RowBox[{"(*", " ", 
           StyleBox[
            RowBox[{"Adjust", " ", 
             RowBox[{"Frame", "."}]}],
            FontColor->GrayLevel[0],
            Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
          
          RowBox[{"lFrame", "=", 
           RowBox[{"fixImageDimensionRanges", "[", 
            RowBox[{
             RowBox[{"imgsL", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"{", "\n", "          ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"lFrame", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", " ", 
                  RowBox[{"iScaleM", " ", 
                   RowBox[{"minOffset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                 RowBox[{
                  RowBox[{"lFrame", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", " ", 
                  RowBox[{"iScaleM", " ", 
                   RowBox[{"minOffset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", "\n", 
               "          ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"lFrame", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "+", " ", 
                  RowBox[{"iScaleM", " ", 
                   RowBox[{"minOffset", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"lFrame", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", " ", 
                  RowBox[{"iScaleM", " ", 
                   RowBox[{"minOffset", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}], "}"}]}], 
            "]"}]}], ";"}], ",", "\n", "\"\<MeanSquareGradientDescent\>\"", 
         ",", "\n", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"err", ",", "trans"}], "}"}], "=", 
           RowBox[{"FindGeometricTransform", "[", 
            RowBox[{
             RowBox[{"tipGray", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"tipGray", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"Method", "->", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ImageAlign\>\"", ",", 
                "\"\<MeanSquareGradientDescent\>\""}], "}"}]}]}], "]"}]}], 
          ";", "\n", "  ", 
          RowBox[{"(*", " ", 
           StyleBox[
            RowBox[{"Adjust", " ", 
             RowBox[{"Frame", "."}]}],
            FontColor->GrayLevel[0],
            Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
          
          RowBox[{"lFrame", "=", 
           RowBox[{"fixImageDimensionRanges", "[", 
            RowBox[{
             RowBox[{"imgsL", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"trans", "[", "lFrame", "]"}]}], "]"}]}], ";"}]}], "\n", 
        "]"}], ";", "\n", "  ", 
       RowBox[{"(*", " ", 
        StyleBox[
         RowBox[{"Adjust", " ", 
          RowBox[{"Image", "."}]}],
         FontColor->GrayLevel[0],
         Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"minOffset", ",", " ", "lFrame"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"matches", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{"ImageCorrespondingPoints", "[", 
           RowBox[{
            RowBox[{"tipGray", "[", 
             RowBox[{"[", 
              RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"tipGray", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Masking", "\[Rule]", "modelMask"}], ",", 
            RowBox[{"KeypointStrength", "\[Rule]", "0"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"err", ",", "trans"}], "}"}], "=", 
          RowBox[{"FindGeometricTransform", "[", 
           RowBox[{
            RowBox[{"matches", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"matches", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
            "TransformationClass", "\[Rule]", "\"\<Translation\>\""}]}], 
           "]"}]}], ";"}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"tipSeqLCaCb", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", 
        RowBox[{"ImageTransformation", "[", 
         RowBox[{
          RowBox[{"tipSeq", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", "trans", ",", 
          RowBox[{"DataRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}], "\n", 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        RowBox[{"Length", "[", "imgsL", "]"}]}], "}"}]}], "]"}]}]}], "\n", 
  "]"}]], "FunctionalProgram",
 CellChangeTimes->{{3.657625153689906*^9, 3.657625171441333*^9}, 
   3.657625515103731*^9, {3.6576255521176558`*^9, 3.657625864666779*^9}, {
   3.657625894987834*^9, 3.657625919266246*^9}, 3.6576260079107227`*^9, 
   3.657626158530531*^9, {3.657630273124296*^9, 3.6576303233589087`*^9}, {
   3.6576305055844603`*^9, 3.657630536875292*^9}, {3.6576306569326344`*^9, 
   3.657630696256586*^9}, {3.657630789119578*^9, 3.6576307949836607`*^9}, {
   3.657630834731144*^9, 3.657630844681444*^9}, {3.657630899402378*^9, 
   3.657630909586322*^9}, {3.657630957358775*^9, 3.657631005535528*^9}, {
   3.657636789356341*^9, 3.657636802343328*^9}, {3.657637276753521*^9, 
   3.657637286760337*^9}, {3.657639543141938*^9, 3.657639630492207*^9}, {
   3.657639677524481*^9, 3.657639715659193*^9}, {3.6576430609894257`*^9, 
   3.657643076596743*^9}, {3.657643109818614*^9, 3.657643139897274*^9}, {
   3.657643171892672*^9, 3.657643369457406*^9}, 3.657643400062784*^9, {
   3.657644122119643*^9, 3.657644126318911*^9}, {3.657644166739684*^9, 
   3.657644169851492*^9}, {3.657644254589484*^9, 3.657644312667818*^9}, {
   3.6578804798925962`*^9, 3.657880521762374*^9}, {3.6578842595784903`*^9, 
   3.6578843161364613`*^9}, {3.65788482816794*^9, 3.657884849711712*^9}, {
   3.657885618441063*^9, 3.6578856212081537`*^9}, 3.65788571424139*^9, {
   3.657885799590015*^9, 3.657885808775935*^9}, {3.6579642884410458`*^9, 
   3.657964347495124*^9}, 3.6579644463718987`*^9, {3.657964515345933*^9, 
   3.6579645157924967`*^9}, {3.6579645606800117`*^9, 3.657964587902166*^9}, {
   3.657964694275218*^9, 3.657964730641576*^9}, 3.657964843983032*^9, 
   3.657964893125227*^9, 3.657964932235697*^9, 3.657965197011384*^9, {
   3.657965364252365*^9, 3.657965367778908*^9}, {3.657965407858674*^9, 
   3.657965437241131*^9}, {3.657965487483076*^9, 3.657965518272524*^9}, {
   3.6579655536692123`*^9, 3.657965556852003*^9}, {3.657965668426528*^9, 
   3.657965681705556*^9}, 3.657965724754258*^9, {3.6579658759629593`*^9, 
   3.6579659182178173`*^9}, 3.6579659488397083`*^9, {3.657967955585662*^9, 
   3.657968004150168*^9}, {3.65796803882864*^9, 3.65796804609834*^9}, {
   3.657968168229356*^9, 3.657968178756795*^9}, {3.657970911751165*^9, 
   3.657970975565061*^9}, {3.657971007869635*^9, 3.6579710265401382`*^9}, {
   3.657971058402553*^9, 3.657971088329268*^9}, {3.657973450354122*^9, 
   3.6579734549624233`*^9}, {3.657974942440916*^9, 3.6579751153526077`*^9}, {
   3.657976030365529*^9, 3.657976079198483*^9}, {3.657976634240644*^9, 
   3.657976636088585*^9}, {3.657977212419875*^9, 3.657977221874473*^9}, {
   3.657978254985301*^9, 3.657978263232306*^9}, {3.657979722655217*^9, 
   3.657979726363779*^9}, {3.6579797953896923`*^9, 3.657979802918272*^9}, {
   3.6579807065592127`*^9, 3.6579807103735456`*^9}, {3.6579814967853518`*^9, 
   3.657981507206945*^9}, 3.65807990280276*^9, {3.6581350449313173`*^9, 
   3.6581350675343037`*^9}, {3.658136158313195*^9, 3.6581361602694597`*^9}, 
   3.65813769824934*^9, {3.658220675569619*^9, 3.658220679192855*^9}, {
   3.6582211684081917`*^9, 3.658221236418956*^9}, {3.6582213899271717`*^9, 
   3.65822141636512*^9}, {3.65822165748637*^9, 3.658221665139642*^9}, {
   3.658221719350909*^9, 3.658221719845872*^9}, {3.658221867492734*^9, 
   3.658221902137974*^9}, {3.6582221389091187`*^9, 3.658222145021085*^9}, {
   3.658222176254653*^9, 3.6582221786796837`*^9}, {3.658222406851396*^9, 
   3.658222432849119*^9}, {3.658222477000128*^9, 3.658222502487213*^9}, {
   3.6582225669077578`*^9, 3.658222644263741*^9}, {3.658222708816553*^9, 
   3.658222709511489*^9}, {3.658222761064147*^9, 3.658222827452033*^9}, 
   3.65822294003734*^9, 3.658224065692862*^9, {3.6582289455004272`*^9, 
   3.658228945843062*^9}, {3.658229941385941*^9, 3.6582300473254547`*^9}, 
   3.658240820496675*^9, {3.658257519126071*^9, 3.65825755193995*^9}, {
   3.659367731277417*^9, 3.65936776111217*^9}, {3.659367834560384*^9, 
   3.6593678366954317`*^9}, {3.659373872800261*^9, 3.659373913282424*^9}, {
   3.6593739579629602`*^9, 3.659373975730571*^9}, {3.659374038150885*^9, 
   3.659374133323474*^9}, {3.659374260735572*^9, 3.659374335397015*^9}, 
   3.65937590391108*^9, 3.659376380287834*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"err", ",", "t"}], "}"}], "=", 
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{
    RowBox[{"tipGray", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"tipGray", "[", 
     RowBox[{"[", "7", "]"}], "]"}], ",", 
    RowBox[{"Method", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<ImageAlign\>\"", ",", "\"\<MeanSquareGradientDescent\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.659368153001552*^9, {3.6593684481436253`*^9, 3.659368453902809*^9}, {
   3.659368548066718*^9, 3.65936855174647*^9}}],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"1.`", "0", "0.20853510885826765`"},
      {"0", "1.`", "3.649786609200987`"},
      {"0", "0", "1.`"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Input"],

Cell[BoxData["lFrame"], "Input",
 CellChangeTimes->{{3.659369714562457*^9, 3.659369717434483*^9}}],

Cell[BoxData[
 RowBox[{"t", "[", "lFrame", "]"}]], "Input",
 CellChangeTimes->{{3.659368539739942*^9, 3.65936854137884*^9}, {
  3.659369737953809*^9, 3.659369738975934*^9}}],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Green", ",", 
    RowBox[{"Point", "[", "lFrame", "]"}], ",", "Red", ",", 
    RowBox[{"Point", "[", 
     RowBox[{"t", "[", "lFrame", "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.659368476790134*^9, 3.659368523893057*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check the initial setup", "Subsubsection",
 CellChangeTimes->{{3.658236357506405*^9, 3.658236373569504*^9}}],

Cell[BoxData[
 RowBox[{"setupFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ColorX", "=", "Blue"}], ",", 
      RowBox[{"ColorXL", "=", "Red"}], ",", 
      RowBox[{"ColorXS", "=", "Green"}], ",", "smFrame", ",", "spFrame", ",", 
      "smlFrame", ",", "mdl", ",", "mdlPos", ",", "mdlX", ",", "mdlPosX", ",",
       "mdlXL", ",", "mdlPosXL", ",", "mdlXS", ",", "mdlPosXS", ",", "pnts", 
      ",", "scale", ",", "img", ",", "tipL", ",", "tipM", ",", "mdlPosTipXS", 
      ",", "modelMask", ",", "tipMaskedM"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"scale", "=", "iScaleS"}], ";", " ", 
     RowBox[{"mdl", " ", "=", " ", "modelS"}], ";", " ", 
     RowBox[{"mdlPos", " ", "=", " ", "modelPosS"}], ";", " ", 
     RowBox[{"img", " ", "=", " ", 
      RowBox[{"imgsL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mdlX", ",", " ", "mdlPosX"}], " ", "}"}], "=", 
      RowBox[{"scaleModel", "[", 
       RowBox[{"mdl", ",", "mdlPos", ",", "scale"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mdlXL", ",", "mdlPosXL"}], "}"}], "=", 
      RowBox[{"stretchModel", "[", 
       RowBox[{"mdlX", ",", " ", "mdlPosX", ",", 
        RowBox[{"scale", "/", "2"}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mdlXS", ",", "mdlPosXS"}], "}"}], "=", 
      RowBox[{"stretchModel", "[", 
       RowBox[{"mdlX", ",", " ", "mdlPosX", ",", 
        RowBox[{
         RowBox[{"-", "scale"}], "/", "2"}]}], "]"}]}], ";", "\n", 
     RowBox[{"smFrame", " ", "=", 
      RowBox[{"fixImageDimensionRanges", "[", 
       RowBox[{"img", ",", 
        RowBox[{"modelBoundingBox", "[", 
         RowBox[{"mdlX", ",", "mdlPosX"}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"smlFrame", "=", 
      RowBox[{"fixImageDimensionRanges", "[", 
       RowBox[{"img", ",", 
        RowBox[{"modelBoundingBox", "[", 
         RowBox[{"mdlXL", ",", "mdlPosXL"}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", " ", 
      StyleBox[
       RowBox[{"Crop", " ", "the", " ", 
        RowBox[{"Tip", "."}]}],
       FontColor->GrayLevel[0],
       Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", 
     RowBox[{"tipL", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", "img", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ";;", 
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ";;", 
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], "]"}]}],
      ";", "\n", 
     RowBox[{"tipM", "=", 
      RowBox[{"ImageResize", "[", 
       RowBox[{"tipL", ",", " ", 
        RowBox[{"Scaled", "[", "scaleM", "]"}]}], " ", "]"}]}], ";", "\n", 
     RowBox[{"(*", " ", 
      StyleBox[
       RowBox[{"Set", " ", "the", " ", "Midscale", " ", "Tip", " ", 
        RowBox[{"Mask", "."}]}],
       FontColor->GrayLevel[0],
       Background->RGBColor[0.94, 0.88, 0.94]], " ", "*)"}], "\n", "  ", 
     RowBox[{"mdlPosTipXS", "=", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"mdlPosXS", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"smlFrame", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"mdlPosXS", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{"modelMask", "=", 
      RowBox[{"Binarize", "[", 
       RowBox[{
        RowBox[{"tipMask", "[", 
         RowBox[{"tipM", ",", "mdlXS", ",", "mdlPosTipXS", ",", "smlFrame"}], 
         "]"}], ",", "0.5"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"tipMaskedM", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{"tipM", ",", "\"\<Byte\>\""}], "]"}], ",", 
          RowBox[{"ImageData", "[", "modelMask", "]"}]}], "]"}], ",", 
        "\"\<Byte\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"imageGraphics", "[", 
                 RowBox[{"img", ",", 
                  RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}], ",", 
                "\n", " ", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"{", "\n", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "ColorX", " ", "]"}], ",", " ", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Transpose", "[", "smFrame", "]"}]}], "]"}]}], 
                    "}"}], ",", "\n", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "ColorXL", "]"}], ",", " ", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Transpose", "[", "smlFrame", "]"}]}], "]"}]}], 
                    "}"}], ",", "\n", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", "ColorX", "}"}], " ", "]"}], ",", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"modelToPolygon", "[", 
                    RowBox[{"mdlX", ",", "mdlPosX"}], "]"}]}], "}"}], ",", 
                   "\n", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", "ColorXL", "}"}], "]"}], ",", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"modelToPolygon", "[", 
                    RowBox[{"mdlXL", ",", "mdlPosXL"}], "]"}]}], "}"}], ",", 
                   "\n", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", "ColorXS", "}"}], "]"}], ",", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"modelToPolygon", "[", 
                    RowBox[{"mdlXS", ",", "mdlPosXS"}], "]"}]}], "}"}]}], 
                  "\n", " ", "}"}], "]"}]}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", "500"}], "}"}]}]}], "]"}], " ", 
            "]"}], ",", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"easySwatch", "[", 
               RowBox[{
                RowBox[{"{", "\n", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Model perimeter used to set the crop frame\>\"", ",", 
                    "ColorXL", ",", "\"\<Line\>\""}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Model perimeter found by the algorithm\>\"", ",", 
                    "ColorX", ",", "\"\<Line\>\""}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Model perimeter used to set the mask\>\"", ",", 
                    "ColorXS", ",", "\"\<Line\>\""}], "}"}]}], "\n", "}"}], 
                ",", "1", ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
              "\n", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"ImageAssemble", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "modelMask", "}"}], ",", 
                   RowBox[{"{", "tipM", "}"}], ",", 
                   RowBox[{"{", "tipMaskedM", "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "410"}], "}"}]}]}], "]"}]}], 
             "}"}], "]"}]}], "}"}], "}"}], "]"}], ",", 
       RowBox[{"\"\<Setup for Dynamic Tracking : \>\"", "<>", "setLabel"}]}], 
      " ", "]"}]}]}], "\n", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.657545005441923*^9, 3.657545009513369*^9}, {
   3.657625438561914*^9, 3.657625439848507*^9}, 3.65762552648532*^9, {
   3.6576263684515247`*^9, 3.657626397713997*^9}, {3.657637556289344*^9, 
   3.6576375863487062`*^9}, {3.6576376484647007`*^9, 
   3.6576376556555157`*^9}, {3.657637690071888*^9, 3.657637697286769*^9}, {
   3.658061594427363*^9, 3.658061600240429*^9}, {3.6580616928225393`*^9, 
   3.658061697197337*^9}, {3.6580755036486387`*^9, 3.65807550927181*^9}, 
   3.658075588067128*^9, {3.6580756189929743`*^9, 3.658075674195208*^9}, {
   3.658075722609791*^9, 3.658075723367618*^9}, {3.6580763219603577`*^9, 
   3.658076325511631*^9}, {3.6580782464477797`*^9, 3.658078271188819*^9}, 
   3.658078359794832*^9, 3.658078735780917*^9, 3.6580788100214977`*^9, {
   3.658086978076414*^9, 3.658087023623412*^9}, {3.6580952710600367`*^9, 
   3.658095275905761*^9}, {3.6581010645361357`*^9, 3.658101097935542*^9}, {
   3.658102123509965*^9, 3.658102142974208*^9}, {3.658102181324114*^9, 
   3.658102231999859*^9}, {3.658102314730855*^9, 3.6581023254334993`*^9}, {
   3.6581025811717873`*^9, 3.65810258921877*^9}, {3.658103373037614*^9, 
   3.658103423122038*^9}, {3.658105659717884*^9, 3.658105674789497*^9}, {
   3.658105707182757*^9, 3.658105734069035*^9}, {3.658105799543445*^9, 
   3.658105814048415*^9}, {3.6581338485696983`*^9, 3.658133852400996*^9}, {
   3.658135084007647*^9, 3.658135088189434*^9}, {3.658136170752194*^9, 
   3.658136172686331*^9}, {3.658138558992152*^9, 3.6581386824590816`*^9}, {
   3.658138715201517*^9, 3.658138759050559*^9}, {3.6581389749378653`*^9, 
   3.658139146282826*^9}, {3.658139200208764*^9, 3.658139300100863*^9}, {
   3.658139753061593*^9, 3.658139782424391*^9}, {3.6581399201030073`*^9, 
   3.658139931181253*^9}, {3.658140109744993*^9, 3.6581401226782713`*^9}, {
   3.658141041918878*^9, 3.658141134162169*^9}, {3.6581441271910343`*^9, 
   3.658144142271167*^9}, {3.658144579450474*^9, 3.658144585805459*^9}, 
   3.658144712282399*^9, {3.65814850488593*^9, 3.658148880888275*^9}, {
   3.658148952335226*^9, 3.6581490292827787`*^9}, 3.658149090377405*^9, {
   3.658149377829884*^9, 3.658149395245597*^9}, 3.6581495512011127`*^9, {
   3.658150364397994*^9, 3.6581504276167927`*^9}, {3.6581504679518623`*^9, 
   3.658150497117083*^9}, {3.658150536876431*^9, 3.658150537484488*^9}, {
   3.658150624210618*^9, 3.658150633520294*^9}, {3.658150703808565*^9, 
   3.6581507325731993`*^9}, {3.658150778357183*^9, 3.658150831706523*^9}, {
   3.6581508661204977`*^9, 3.658150872124666*^9}, {3.6581511745196047`*^9, 
   3.658151180654553*^9}, {3.658151334857592*^9, 3.658151341473037*^9}, {
   3.658151501505837*^9, 3.658151506170629*^9}, {3.658151576143855*^9, 
   3.658151578974382*^9}, {3.658179495775412*^9, 3.658179505606484*^9}, {
   3.6582074036802673`*^9, 3.6582074063492193`*^9}, {3.658212934811269*^9, 
   3.658212948825407*^9}, 3.658213085181748*^9, {3.6582181600743093`*^9, 
   3.6582182762042017`*^9}, {3.6582186513518972`*^9, 3.658218680699271*^9}, {
   3.658218718911447*^9, 3.65821913750624*^9}, {3.6582191813198433`*^9, 
   3.6582192386698112`*^9}, {3.658219415049305*^9, 3.658219424255496*^9}, 
   3.658220047887745*^9, {3.658220329340057*^9, 3.658220338953889*^9}, {
   3.6582371119039497`*^9, 3.658237185694075*^9}, {3.6582372606652613`*^9, 
   3.6582372700008698`*^9}, {3.6582373083472548`*^9, 3.658237356989779*^9}, {
   3.658237399192499*^9, 3.658237400053965*^9}, {3.658237460110096*^9, 
   3.65823750911235*^9}, {3.6582379924404984`*^9, 3.6582380202603617`*^9}, {
   3.65823984299184*^9, 3.658239860775071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the Blood Flow", "Subsubsection",
 CellChangeTimes->{{3.65823638604489*^9, 3.658236397102152*^9}}],

Cell["Find the channel differences.", "Text",
 CellChangeTimes->{{3.658050766212591*^9, 3.658050776909732*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "dim", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"dim", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"tipSeqLCaCb", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "tipSeqLCaCb", "]"}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"dim", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"dim", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.659376495922719*^9, 3.659376524683852*^9}, {
   3.659377170659582*^9, 3.659377175532527*^9}, 3.659377260849489*^9, {
   3.659379424831236*^9, 3.6593794665887413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"diff", ",", "img"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"diff", "=", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"tipSeqLCaCb", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], 
          "-", 
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"tipSeqLCaCb", "[", 
             RowBox[{"[", 
              RowBox[{"j", "-", "1"}], "]"}], "]"}], ",", "\"\<Byte\>\""}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"img", "=", 
         RowBox[{"Times", "[", 
          RowBox[{"diff", ",", 
           RowBox[{"ImageData", "[", "modelMask", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "img"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "2", ",", 
         RowBox[{"Length", "[", "tipSeqLCaCb", "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{{3.657885114898222*^9, 3.657885153649382*^9}, {
   3.657885233701561*^9, 3.657885248389662*^9}, {3.657885592700625*^9, 
   3.657885601904437*^9}, {3.657973121318006*^9, 3.657973131731091*^9}, {
   3.657973166058346*^9, 3.657973186640321*^9}, {3.657973540814076*^9, 
   3.657973543333413*^9}, {3.657973724558813*^9, 3.657973734638172*^9}, {
   3.6579741814310904`*^9, 3.657974217829878*^9}, {3.657987867745749*^9, 
   3.6579878880802402`*^9}, {3.6579951496141357`*^9, 3.657995150140936*^9}, 
   3.6579975792469473`*^9, {3.6579982961948347`*^9, 3.6579983145838537`*^9}, 
   3.658050752055573*^9, {3.658055508286598*^9, 3.658055522947527*^9}}],

Cell[BoxData[
 RowBox[{"chanFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "w", ",", "h", ",", "mSig", ",", "mj", ",", "aspectRatio", ",", 
      "columnTitles", ",", "rowTitles", ",", 
      RowBox[{"fSz", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{"Length", "[", "tipSeq", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "0"}], ",", "\"\<\>\"", ",", 
               RowBox[{"imgLabel", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "0", ",", "mj"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<L\>\"", ",", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"ImageData", "[", 
                   RowBox[{
                    RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                   "]"}], ",", "1", ",", "colorspaceRules"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Ca\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"ImageData", "[", 
                   RowBox[{
                    RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                   "]"}], ",", "2", ",", "colorspaceRules"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Cb\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"ImageData", "[", 
                   RowBox[{
                    RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                   "]"}], ",", "3", ",", "colorspaceRules"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\n", "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
         "\"\<The LCaCb channel values with different mechanical tip \
pressures : \>\"", "<>", "setLabel"}], ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "fSz"}]}], "]"}]}], " ", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.657645170158518*^9, 3.6576452016600323`*^9}, {
   3.657645543458248*^9, 3.657645548825704*^9}, 3.6576456122763557`*^9, {
   3.6576456474149733`*^9, 3.657645652365999*^9}, {3.6580529602941027`*^9, 
   3.6580529837932053`*^9}, {3.658053240986855*^9, 3.6580532628240757`*^9}, {
   3.658057656601079*^9, 3.658057760893298*^9}, {3.65848324036806*^9, 
   3.658483254052782*^9}, 3.6584838210863132`*^9}],

Cell[BoxData[
 RowBox[{"diffFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dRng", ",", "mj", ",", "diffLabel", ",", 
      RowBox[{"fSz", "=", "20"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{"Length", "[", "diff", "]"}]}], ";", "\n", 
     RowBox[{"diffLabel", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<Pad Pressure \>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<-\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"i", "+", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"dRng", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Max", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"diff", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}], ",", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"diff", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"chan", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "0"}], ",", "\"\<\>\"", ",", 
               RowBox[{"diffLabel", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "0", ",", "mj"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<L\>\"", ",", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"diff", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "1", ",", 
                  "colorspaceRules", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Ca\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"diff", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "2", ",", 
                  "colorspaceRules", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Cb\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ChannelImage", "[", 
                 RowBox[{
                  RowBox[{"diff", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", 
                  "colorspaceRules", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\n", "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
         "\"\<The difference between sucessive frames : \>\"", "<>", 
          "setLabel"}], ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "fSz"}]}], "]"}]}], " ", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.657645170158518*^9, 3.6576452016600323`*^9}, {
   3.657645543458248*^9, 3.657645548825704*^9}, 3.6576456122763557`*^9, {
   3.6576456474149733`*^9, 3.657645652365999*^9}, {3.6580529602941027`*^9, 
   3.6580529837932053`*^9}, {3.658053240986855*^9, 3.6580532628240757`*^9}, {
   3.658054500255432*^9, 3.6580545158372173`*^9}, {3.658054636914569*^9, 
   3.658054655225371*^9}, {3.6580548910352287`*^9, 3.6580549260330153`*^9}, {
   3.65805504398851*^9, 3.6580550746566877`*^9}, {3.658055129143778*^9, 
   3.658055157047537*^9}, {3.6580552541501303`*^9, 3.658055277637897*^9}, {
   3.658055479086081*^9, 3.6580554824296007`*^9}, 3.65805559428677*^9, {
   3.658057401354999*^9, 3.658057414337949*^9}, {3.658057526559546*^9, 
   3.658057543588666*^9}, {3.658057576506076*^9, 3.658057579705247*^9}, {
   3.658236429563691*^9, 3.658236452649452*^9}, {3.658483166619536*^9, 
   3.658483185312709*^9}, 3.6584838011338797`*^9, {3.65848900752844*^9, 
   3.658489007818449*^9}}],

Cell["The difference from the first frame", "Text",
 CellChangeTimes->{{3.65823518648176*^9, 3.658235198438342*^9}, {
  3.658236225739458*^9, 3.658236227853994*^9}, {3.6584833327077312`*^9, 
  3.6584833402803593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tot", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"total", ",", 
       RowBox[{"mj", "=", 
        RowBox[{"Length", "[", "diff", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"total", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"Null", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"total", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"diff", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"total", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"total", "[", 
           RowBox[{"[", 
            RowBox[{"j", "-", "1"}], "]"}], "]"}], "+", 
          RowBox[{"diff", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", "mj"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "total"}]}], "]"}]}], ";"}]], "FunctionalProgram",\

 CellChangeTimes->{{3.658055751882152*^9, 3.658055882669277*^9}}],

Cell["The metric applied to the tip of the tip.", "Text",
 CellChangeTimes->{{3.65823518648176*^9, 3.658235198438342*^9}, {
  3.658236225739458*^9, 3.658236227853994*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"totMetric", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"tot", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{"ImageData", "[", "modelMetricMask", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "tot", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "FunctionalProgram",
 CellChangeTimes->{{3.657885114898222*^9, 3.657885153649382*^9}, {
   3.657885233701561*^9, 3.657885248389662*^9}, {3.657885592700625*^9, 
   3.657885601904437*^9}, {3.657973121318006*^9, 3.657973131731091*^9}, {
   3.657973166058346*^9, 3.657973186640321*^9}, {3.657973540814076*^9, 
   3.657973543333413*^9}, {3.657973724558813*^9, 3.657973734638172*^9}, {
   3.6579741814310904`*^9, 3.657974217829878*^9}, {3.657987867745749*^9, 
   3.6579878880802402`*^9}, {3.6579951496141357`*^9, 3.657995150140936*^9}, 
   3.6579975792469473`*^9, {3.6579982961948347`*^9, 3.6579983145838537`*^9}, 
   3.658050752055573*^9, {3.658055508286598*^9, 3.658055522947527*^9}, {
   3.658230120488777*^9, 3.6582301268717003`*^9}, {3.65823015693674*^9, 
   3.658230173462075*^9}, {3.658230211325472*^9, 3.65823025546982*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"totMeasure", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "h", ",", "mj"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mj", "=", 
       RowBox[{"Length", "[", "totMetric", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w", ",", "h"}], "}"}], "=", 
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"totMetric", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "\[GreaterEqual]", "0"}], ",", "#", ",", 
                   "0"}], "]"}], "&"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"totMetric", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "All", ",", "All", ",", "chan"}], "]"}], 
                  "]"}], "]"}]}], "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"w", " ", "h"}], ")"}]}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "\[LessEqual]", " ", "0"}], ",", "#", ",", 
                   "0"}], "]"}], "&"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"totMetric", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "All", ",", "All", ",", "chan"}], "]"}], 
                  "]"}], "]"}]}], "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"w", " ", "h"}], ")"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "mj"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"chan", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{{3.658058258040677*^9, 3.658058450887712*^9}, {
   3.65805849782591*^9, 3.658058528033217*^9}, {3.6580585735104313`*^9, 
   3.6580586568222*^9}, {3.658059238463985*^9, 3.658059274526217*^9}, 
   3.658059315940564*^9, {3.658230325364427*^9, 3.658230333715591*^9}, 
   3.658231391954608*^9}],

Cell["The metric applied to the whole tip.", "Text",
 CellChangeTimes->{{3.65823518648176*^9, 3.658235198438342*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"totMeasure", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "h", ",", "mj"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mj", "=", 
       RowBox[{"Length", "[", "tot", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w", ",", "h"}], "}"}], "=", 
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"tot", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "\[GreaterEqual]", "0"}], ",", "#", ",", 
                   "0"}], "]"}], "&"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"tot", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "All", ",", "All", ",", "chan"}], "]"}], 
                  "]"}], "]"}]}], "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"w", " ", "h"}], ")"}]}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "\[LessEqual]", " ", "0"}], ",", "#", ",", 
                   "0"}], "]"}], "&"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"tot", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "All", ",", "All", ",", "chan"}], "]"}], 
                  "]"}], "]"}]}], "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"w", " ", "h"}], ")"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "mj"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"chan", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{{3.658055751882152*^9, 3.658055882669277*^9}, {
   3.6580582231910353`*^9, 3.658058253857183*^9}, 3.658059323461463*^9}],

Cell[BoxData[
 RowBox[{"metricFig", "=", 
  RowBox[{"Panel", "[", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"colors", ",", "totMeasure0"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totMeasure0", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"totMeasure", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colors", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"RGBColor", ",", 
            RowBox[{"getChannelEndColors", "[", 
             RowBox[{"colorspaceRules", ",", "c"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"totMeasure0", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"totMeasure0", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}], "]"}]}], 
            "}"}], ",", "1"}], "]"}], ",", "\n", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"Background", "\[Rule]", "LightGray"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Presure\>\"", ",", "\"\<Metric\>\""}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "510"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    "\"\<The Pressure Metrics for each Channel both Positive and \
Negative\>\""}], "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.658228741237164*^9, 3.6582287680200243`*^9}, {
   3.658228854716984*^9, 3.658228857685635*^9}, {3.658230404344447*^9, 
   3.658230407608041*^9}, {3.658235318348094*^9, 3.658235343474217*^9}, {
   3.658235380920074*^9, 3.658235423365735*^9}, {3.658235521559057*^9, 
   3.658235683181712*^9}, {3.6582357461523323`*^9, 3.65823583811191*^9}, {
   3.658235923929132*^9, 3.6582359322806892`*^9}, {3.658235988471607*^9, 
   3.6582360582739058`*^9}, {3.658236141248777*^9, 3.658236141674878*^9}, 
   3.6582370726724873`*^9, {3.6582388344879293`*^9, 3.658238873375044*^9}, 
   3.6583436188721733`*^9, {3.6584297919827414`*^9, 3.658429820373536*^9}, {
   3.6584302899148893`*^9, 3.658430312981597*^9}, {3.658430582657399*^9, 
   3.658430582992256*^9}}],

Cell[BoxData[
 RowBox[{"totFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dRng", ",", "mj", ",", "diffLabel", ",", "colors", ",", "style", ",", 
      "ci", ",", "ciW", ",", "ciH", ",", "digitsToLeft", ",", 
      RowBox[{"fSz", "=", "20"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{"Length", "[", "tot", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"RGBColor", ",", 
           RowBox[{"getChannelEndColors", "[", 
            RowBox[{"colorspaceRules", ",", "chan"}], "]"}]}], "]"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"chan", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"digitsToLeft", "=", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Abs", "[", "totMeasure", "]"}], "]"}], "]"}]}], "]"}], 
        "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"style", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"val", ",", "n"}], "}"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{"val", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"4", "-", "digitsToLeft"}]}], "}"}], ",", 
               RowBox[{"NumberSigns", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\< - \>\"", ",", "\"\< + \>\""}], "}"}]}], ",", 
               RowBox[{"NumberPadding", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}], 
             ",", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"\"\<chan\>\"", ",", "n"}], "]"}], "]"}], ",", "Bold", 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "fSz"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}]}], "]"}],
          "/.", 
         RowBox[{"\"\<chan\>\"", "\[Rule]", "chan"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"chan", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"diffLabel", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\"\<Pad Pressure 1-\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "+", "1"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"dRng", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Max", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"tot", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}], ",", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"tot", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"chan", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"diffLabel", ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<L\>\"", ",", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ci", "=", 
                  RowBox[{"ChannelImage", "[", 
                   RowBox[{
                    RowBox[{"tot", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "1", ",", 
                    "colorspaceRules", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ciW", ",", "ciH"}], "}"}], "=", 
                  RowBox[{"ImageDimensions", "[", "ci", "]"}]}], ";", 
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ci", ",", "SpanFromLeft"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
                    "2"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}]}],
                     "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", "0"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{"White", ",", "LightGray"}], "}"}]}], "}"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"Background", "->", "White"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Ca\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ci", "=", 
                  RowBox[{"ChannelImage", "[", 
                   RowBox[{
                    RowBox[{"tot", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "2", ",", 
                    "colorspaceRules", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ciW", ",", "ciH"}], "}"}], "=", 
                  RowBox[{"ImageDimensions", "[", "ci", "]"}]}], ";", 
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ci", ",", "SpanFromLeft"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
                    "2"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}]}],
                     "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", "0"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{"White", ",", "LightGray"}], "}"}]}], "}"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"Background", "->", "White"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Cb\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ci", "=", 
                  RowBox[{"ChannelImage", "[", 
                   RowBox[{
                    RowBox[{"tot", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", 
                    "colorspaceRules", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"dRng", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ciW", ",", "ciH"}], "}"}], "=", 
                  RowBox[{"ImageDimensions", "[", "ci", "]"}]}], ";", 
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ci", ",", "SpanFromLeft"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3", ",", "1"}], "]"}], "]"}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"style", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"totMeasure", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "3", ",", "2"}], "]"}], "]"}], ",", 
                    "2"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ciW", "/", "2"}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "None"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}]}],
                     "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", "0"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{"White", ",", "LightGray"}], "}"}]}], "}"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"Background", "->", "White"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\n", "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
         "\"\<The difference between the first frame and the current frame : \
\>\"", "<>", "setLabel"}], ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "fSz"}]}], "]"}]}], " ", "]"}]}]}], 
   "\n", "\[IndentingNewLine]", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.657645170158518*^9, 3.6576452016600323`*^9}, {
   3.657645543458248*^9, 3.657645548825704*^9}, 3.6576456122763557`*^9, {
   3.6576456474149733`*^9, 3.657645652365999*^9}, {3.6580529602941027`*^9, 
   3.6580529837932053`*^9}, {3.658053240986855*^9, 3.6580532628240757`*^9}, {
   3.658054500255432*^9, 3.6580545158372173`*^9}, {3.658054636914569*^9, 
   3.658054655225371*^9}, {3.6580548910352287`*^9, 3.6580549260330153`*^9}, {
   3.65805504398851*^9, 3.6580550746566877`*^9}, {3.658055129143778*^9, 
   3.658055157047537*^9}, {3.6580552541501303`*^9, 3.658055277637897*^9}, {
   3.658055479086081*^9, 3.6580554824296007`*^9}, 3.65805559428677*^9, {
   3.65805708319606*^9, 3.658057095452199*^9}, {3.658057254959276*^9, 
   3.658057263356069*^9}, {3.6580575917144527`*^9, 3.658057613473133*^9}, {
   3.658057646344866*^9, 3.658057648976905*^9}, {3.658228549661956*^9, 
   3.65822855038225*^9}, {3.658229285999951*^9, 3.658229286261907*^9}, {
   3.658230592900297*^9, 3.6582306184940767`*^9}, {3.658230866656515*^9, 
   3.658230915629177*^9}, {3.65823096409515*^9, 3.658230967606903*^9}, {
   3.658231126314818*^9, 3.658231158176146*^9}, {3.658231263695079*^9, 
   3.6582312839205303`*^9}, {3.658233790785904*^9, 3.658233818529592*^9}, {
   3.658233895800312*^9, 3.658233930422874*^9}, {3.658233982860434*^9, 
   3.658234018035326*^9}, {3.658234050656012*^9, 3.658234059942677*^9}, {
   3.65823409979191*^9, 3.658234119957078*^9}, {3.65823415073144*^9, 
   3.6582342179532413`*^9}, {3.658234301535524*^9, 3.658234325469895*^9}, {
   3.658234525046877*^9, 3.65823461105564*^9}, {3.658236588995179*^9, 
   3.658236688223104*^9}, {3.658236740315076*^9, 3.658236752376577*^9}, {
   3.6582367889424343`*^9, 3.6582367903408737`*^9}, {3.658236884231592*^9, 
   3.658236891551632*^9}, {3.658240108193932*^9, 3.658240139658168*^9}, {
   3.658473000652536*^9, 3.658473012586666*^9}, {3.658477093203465*^9, 
   3.6584771629519997`*^9}, 3.6584773459863367`*^9, {3.658477432530692*^9, 
   3.658477478648909*^9}, {3.658477539488494*^9, 3.6584775511193743`*^9}, {
   3.658477677744429*^9, 3.6584777598110447`*^9}, {3.6584778235818453`*^9, 
   3.658477865831361*^9}, 3.6584781071629744`*^9, 3.658478265406707*^9, {
   3.6584784088615017`*^9, 3.658478447647224*^9}, {3.658478685884061*^9, 
   3.658478693995026*^9}, {3.658478745301899*^9, 3.65847875180521*^9}, {
   3.6584787868180943`*^9, 3.6584788038978157`*^9}, {3.6584789908716297`*^9, 
   3.658479091290648*^9}, {3.6584791657543287`*^9, 3.658479182504136*^9}, {
   3.6584794146555853`*^9, 3.658479432052134*^9}, {3.658479467406106*^9, 
   3.658479469037654*^9}, {3.6584801635232477`*^9, 3.6584801640826693`*^9}, {
   3.658480471880782*^9, 3.658480508524976*^9}, 3.658480566547781*^9, 
   3.658481252483243*^9, {3.658481293407864*^9, 3.658481338756364*^9}, {
   3.6584818984796743`*^9, 3.658481904599504*^9}, {3.658481959794703*^9, 
   3.658481977297456*^9}, {3.658482007914358*^9, 3.658482018399378*^9}, {
   3.658482058767928*^9, 3.6584820848153057`*^9}, {3.6584821256245728`*^9, 
   3.6584821508610773`*^9}, {3.658482200032077*^9, 3.658482206565689*^9}, {
   3.658482304230946*^9, 3.6584823869799547`*^9}, {3.658482420767778*^9, 
   3.658482430230879*^9}, {3.65848267498064*^9, 3.6584827074415627`*^9}, 
   3.658483146039147*^9}],

Cell[BoxData[
 RowBox[{"totMetricFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dRng", ",", "mj", ",", "diffLabel"}], "}"}], ",", 
    RowBox[{
     RowBox[{"mj", "=", 
      RowBox[{"Length", "[", "tot", "]"}]}], ";", "\n", 
     RowBox[{"diffLabel", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\"\<Pad Pressure 1-\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "+", "1"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "mj"}], "}"}]}], "]"}], ",", 
         "\"\<Pressure Metric\>\""}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"dRng", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Max", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"tot", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}], ",", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"tot", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "All", ",", "chan"}], "]"}], "]"}], 
               "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"chan", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"totMeasure", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Map", "[", 
                  RowBox[{"RGBColor", ",", 
                   RowBox[{"Reverse", "[", 
                    RowBox[{"getChannelEndColors", "[", 
                    RowBox[{"colorspaceRules", ",", "1"}], "]"}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"150", ",", "Automatic"}], "}"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Presure\>\"", ",", "\"\<Metric for L\>\""}], 
                  "}"}]}]}], "]"}], ",", " ", 
              RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], "}"}], 
           ",", "\n", 
           RowBox[{"{", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"totMeasure", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Map", "[", 
                  RowBox[{"RGBColor", ",", 
                   RowBox[{"Reverse", "[", 
                    RowBox[{"getChannelEndColors", "[", 
                    RowBox[{"colorspaceRules", ",", "2"}], "]"}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"150", ",", "Automatic"}], "}"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Presure\>\"", ",", "\"\<Metric for Ca\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"Background", "->", "White"}]}], "]"}], "}"}], ",", 
           "\n", 
           RowBox[{"{", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"totMeasure", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Map", "[", 
                  RowBox[{"RGBColor", ",", 
                   RowBox[{"Reverse", "[", 
                    RowBox[{"getChannelEndColors", "[", 
                    RowBox[{"colorspaceRules", ",", "3"}], "]"}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"150", ",", "Automatic"}], "}"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Presure\>\"", ",", "\"\<Metric for Cb\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"Background", "->", "White"}]}], "]"}], "}"}]}], "\n", 
          "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
       RowBox[{
       "\"\<The positive and negative pressure metric\\n in each channel : \>\
\"", "<>", "setLabel"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.657645170158518*^9, 3.6576452016600323`*^9}, {
   3.657645543458248*^9, 3.657645548825704*^9}, 3.6576456122763557`*^9, {
   3.6576456474149733`*^9, 3.657645652365999*^9}, {3.6580529602941027`*^9, 
   3.6580529837932053`*^9}, {3.658053240986855*^9, 3.6580532628240757`*^9}, {
   3.658054500255432*^9, 3.6580545158372173`*^9}, {3.658054636914569*^9, 
   3.658054655225371*^9}, {3.6580548910352287`*^9, 3.6580549260330153`*^9}, {
   3.65805504398851*^9, 3.6580550746566877`*^9}, {3.658055129143778*^9, 
   3.658055157047537*^9}, {3.6580552541501303`*^9, 3.658055277637897*^9}, {
   3.658055479086081*^9, 3.6580554824296007`*^9}, 3.65805559428677*^9, {
   3.65805708319606*^9, 3.658057095452199*^9}, {3.658057254959276*^9, 
   3.658057263356069*^9}, {3.6580575917144527`*^9, 3.658057613473133*^9}, {
   3.658057646344866*^9, 3.658057648976905*^9}, {3.658228549661956*^9, 
   3.65822855038225*^9}, {3.658229285999951*^9, 3.658229286261907*^9}, {
   3.658230592900297*^9, 3.6582306184940767`*^9}, {3.658230866656515*^9, 
   3.658230915629177*^9}, {3.65823096409515*^9, 3.658230967606903*^9}, {
   3.658231126314818*^9, 3.658231158176146*^9}, {3.658231263695079*^9, 
   3.6582312839205303`*^9}, {3.658233790785904*^9, 3.658233818529592*^9}, {
   3.658233895800312*^9, 3.658233930422874*^9}, {3.658233982860434*^9, 
   3.658234018035326*^9}, {3.658234050656012*^9, 3.658234059942677*^9}, {
   3.65823409979191*^9, 3.658234119957078*^9}, {3.65823415073144*^9, 
   3.6582342179532413`*^9}, {3.658234301535524*^9, 3.658234325469895*^9}, {
   3.658234525046877*^9, 3.65823461105564*^9}, {3.658236588995179*^9, 
   3.658236688223104*^9}, {3.658236740315076*^9, 3.658236752376577*^9}, {
   3.6582367889424343`*^9, 3.6582367903408737`*^9}, {3.658236884231592*^9, 
   3.658236891551632*^9}, {3.65823909783086*^9, 3.658239215582451*^9}, {
   3.65823925279356*^9, 3.6582392680107317`*^9}, {3.658239309842455*^9, 
   3.65823936506315*^9}, {3.658347706700554*^9, 3.6583477119308662`*^9}, {
   3.6584304026444283`*^9, 3.658430467094934*^9}, {3.6584305277687063`*^9, 
   3.658430539289608*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Combined Figure", "Subsubsection",
 CellChangeTimes->{{3.6582369950929832`*^9, 3.658237006896044*^9}}],

Cell[BoxData[
 RowBox[{"miscFig", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "setupFig", ",", "totMetricFig", ",", "\[IndentingNewLine]", 
       "metricFig"}], "}"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.658237908590353*^9, 3.658237958092649*^9}, {
   3.658238126616764*^9, 3.658238157957774*^9}, 3.6582389052200212`*^9, {
   3.658239389502903*^9, 3.658239390709937*^9}, {3.658239525773034*^9, 
   3.658239530308263*^9}, {3.658239874589507*^9, 3.6582398990116*^9}, 
   3.658430331046009*^9, {3.6584312867439613`*^9, 3.65843129462318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the figures.", "Subsubsection",
 CellChangeTimes->{{3.659339191175456*^9, 3.659339198544611*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Final_Fig_Misc_\>\"", "<>", "setLabel", "<>", 
    "\"\<.jpg\>\""}], ",", "miscFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "100"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.658431252196269*^9, 3.658431305256095*^9}, {
  3.6584363244959106`*^9, 3.658436324857335*^9}, {3.6584839808867893`*^9, 
  3.658483983405558*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Final_Fig_Channels_\>\"", "<>", "setLabel", "<>", 
    "\"\<.jpg\>\""}], ",", "chanFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.658436190054698*^9, 3.6584361933719482`*^9}, 
   3.658436283948614*^9, {3.658483987174254*^9, 3.6584839895172243`*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Final_Fig_Difference_\>\"", "<>", "setLabel", "<>", 
    "\"\<.jpg\>\""}], ",", "diffFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.658436209341902*^9, 3.658436275843834*^9, {3.658483992885952*^9, 
   3.658483995573015*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Final_Fig_Total_Difference_\>\"", "<>", "setLabel", 
    "<>", "\"\<.jpg\>\""}], ",", "totFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.658436244510079*^9, 3.658436267861014*^9}, {
  3.658483999981749*^9, 3.658484004540709*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Improved ICWaS", "Section",
 CellChangeTimes->{{3.659339273012825*^9, 3.6593392803117113`*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "w", ",", "h", ",", "mSig", ",", "mj", ",", "aspectRatio", ",", 
     "columnTitles", ",", "rowTitles", ",", 
     RowBox[{"fSz", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mj", "=", 
     RowBox[{"Length", "[", "tipSeq", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"j", "\[Equal]", "0"}], ",", "\"\<\>\"", ",", 
              RowBox[{"imgLabel", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "mj"}], "}"}]}], "]"}], ",", "\n", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<L\>\"", ",", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ChannelImage", "[", 
                RowBox[{
                 RowBox[{"ImageData", "[", 
                  RowBox[{
                   RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                  "]"}], ",", "1", ",", "colorspaceRules"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
           "]"}], ",", "\n", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Ca\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ChannelImage", "[", 
                RowBox[{
                 RowBox[{"ImageData", "[", 
                  RowBox[{
                   RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                  "]"}], ",", "2", ",", "colorspaceRules"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], "}"}], 
           "]"}], ",", "\n", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Cb\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ChannelImage", "[", 
                RowBox[{
                 RowBox[{"ImageData", "[", 
                  RowBox[{
                   RowBox[{"tipSeq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], 
                  "]"}], ",", "3", ",", "colorspaceRules"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], "\n", "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
        "\"\<The LCaCb channel values with different mechanical tip pressures \
: \>\"", "<>", "setLabel"}], ",", "Bold", ",", 
        RowBox[{"FontSize", "\[Rule]", "fSz"}]}], "]"}]}], " ", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "DisplayProgram",
 CellChangeTimes->{{3.657645170158518*^9, 3.6576452016600323`*^9}, {
   3.657645543458248*^9, 3.657645548825704*^9}, 3.6576456122763557`*^9, {
   3.6576456474149733`*^9, 3.657645652365999*^9}, {3.6580529602941027`*^9, 
   3.6580529837932053`*^9}, {3.658053240986855*^9, 3.6580532628240757`*^9}, {
   3.658057656601079*^9, 3.658057760893298*^9}, {3.65848324036806*^9, 
   3.658483254052782*^9}, 3.6584838210863132`*^9, 3.6593397530053053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"images", "=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"tipSeq", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", 
           RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], "/", "255"}], "]"}], ",", 
      RowBox[{"tipSeqLCaCb", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"matches", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"matches", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6593472413219347`*^9, 3.659347285031742*^9}, 
   3.659347489527467*^9}],

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", "matches"}], "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.659347125510504*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Row", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"points", "=", 
       RowBox[{"ImageKeypoints", "[", 
        RowBox[{
         RowBox[{"images", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Position\>\"", ",", "\"\<Scale\>\"", ",", 
           "\"\<Orientation\>\"", ",", "\"\<ContrastSign\>\""}], "}"}], ",", 
         RowBox[{"MaxFeatures", "\[Rule]", "100"}]}], "]"}]}], ";", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"images", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "1"}], ",", 
                "Yellow", ",", "Red"}], "]"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "*", "2.5"}]}], "]"}], ",", 
              
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"p", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{
                   RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "2.5", "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}]}]}], 
                "}"}], "]"}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "points"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "images", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6593484726487713`*^9, 3.659348487585927*^9}, {
  3.6593485237115726`*^9, 3.6593485669084263`*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"images", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", "#1", "]"}], ",", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
              RowBox[{"{", 
               RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], 
          "&"}], " ", ",", 
         RowBox[{"keyPoints", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "All", ",", "1"}], "]"}], "]"}]}], " ", "]"}], 
       "}"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "images", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6593465651796427`*^9, 3.659346620042967*^9}, {
   3.659346669008664*^9, 3.659346680254477*^9}, {3.65934674686957*^9, 
   3.659346754924451*^9}, {3.659346796001924*^9, 3.6593468493677187`*^9}, {
   3.659346884359654*^9, 3.659346891311878*^9}, {3.6593471690970917`*^9, 
   3.6593471779218273`*^9}, 3.6593488670503407`*^9}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"images", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"tipSeq", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "/", "255"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "tipSeq", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\n", 
    RowBox[{"keyPoints", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ImageKeypoints", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Position\>\"", ",", "\"\<Scale\>\"", ",", 
            "\"\<Orientation\>\"", ",", "\"\<ContrastSign\>\"", ",", 
            "\"\<Descriptor\>\""}], "}"}]}], "]"}], "&"}], ",", "images"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"colors", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"Length", ",", "keyPoints"}], "]"}], "]"}]}], "}"}]}], 
      "]"}]}], ";", "\n", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"images", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"colors", "[", 
                   RowBox[{"[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"Point", "[", "#1", "]"}], ",", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], 
                "&"}], " ", ",", 
               RowBox[{"keyPoints", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "All", ",", "1"}], "]"}], "]"}]}], " ", 
              "]"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "images", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FindGeometricTransform", "[", 
        RowBox[{
         RowBox[{"matches", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"matches", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"TransformationClass", "\[Rule]", "\"\<Rigid\>\""}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.65770489930829*^9, {3.6577049862226133`*^9, 3.657704986550344*^9}, {
   3.657706671818416*^9, 3.657706682113214*^9}, {3.657707977815845*^9, 
   3.657707994262559*^9}, {3.657884574630006*^9, 3.657884586870388*^9}, {
   3.6578847617672653`*^9, 3.6578847634708033`*^9}, {3.659340559272963*^9, 
   3.6593406448023777`*^9}, {3.659340682848237*^9, 3.659340686015761*^9}, {
   3.659340731078765*^9, 3.65934080663422*^9}, {3.65934084842626*^9, 
   3.659340851632503*^9}, {3.659340887104905*^9, 3.659340935373991*^9}, {
   3.659341035634199*^9, 3.659341039482019*^9}, {3.659341084625062*^9, 
   3.659341108326558*^9}, {3.659341172805101*^9, 3.659341180235776*^9}, {
   3.6593412482900057`*^9, 3.659341251945238*^9}, {3.659342312119884*^9, 
   3.6593423612923326`*^9}, 3.659342413449688*^9, {3.659342529548602*^9, 
   3.659342544227289*^9}, {3.6593462730480957`*^9, 3.659346303725984*^9}, {
   3.659346336845955*^9, 3.659346352012869*^9}, {3.659346493167542*^9, 
   3.659346497278407*^9}, 3.6593487207996492`*^9, {3.659348802548574*^9, 
   3.659348831676139*^9}, 3.6593488777444983`*^9}],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Length", ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"correspondingMatches", ",", "1"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.659352378113181*^9, 3.659352424847311*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"colorsForward", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Length", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"correspondingMatches", ",", "1"}], "]"}]}], "]"}], 
         "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"colorsBackward", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "1", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Length", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"correspondingMatches", ",", "1"}], "]"}]}], "]"}], 
         "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.659352320387458*^9, 3.659352322074602*^9}, {
  3.6593524448075647`*^9, 3.659352446959095*^9}}],

Cell[BoxData[
 RowBox[{"FindGeometricTransform", "[", 
  RowBox[{
   RowBox[{"matches", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"matches", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"TransformationClass", "\[Rule]", "\"\<Rigid\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.659353772416936*^9, 3.659353777504239*^9}, {
  3.659353872557983*^9, 3.659353947010888*^9}, {3.6593541423066187`*^9, 
  3.659354180218336*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ImageDimensions", "[", 
     RowBox[{"images", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]], "Input",
 CellChangeTimes->{{3.65935371151712*^9, 3.659353716954867*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"images", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"tipSeq", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<Byte\>\""}], "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "/", "255"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "tipSeq", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"shifts", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"ImageDimensions", ",", 
            RowBox[{"images", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "images", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"correspondingMatches", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ImageCorrespondingPoints", "[", 
        RowBox[{
         RowBox[{"images", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"images", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Masking", "->", "modelMask"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "images", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"forwardMatches", "=", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"correspondingMatches", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"backwardsMatches", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"correspondingMatches", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"colorsForward", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"Length", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"correspondingMatches", ",", "1"}], "]"}]}], "]"}], 
          "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"colorsBackward", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "1", ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"Length", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"correspondingMatches", ",", "1"}], "]"}]}], "]"}], 
          "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ImageAssemble", "[", "images", "]"}], ",", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cf", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OddQ", "[", "i", "]"}], ",", "colorsForward", ",", 
            "colorsBackward"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cb", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OddQ", "[", "i", "]"}], ",", "colorsBackward", ",", 
            "colorsForward"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cf", "[", 
                  RowBox[{"[", "p", "]"}], "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{
                   RowBox[{"forwardMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "p"}], "]"}], "]"}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"Inset", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{
                    RowBox[{"forwardMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "p"}], "]"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"forwardMatches", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cb", "[", 
                  RowBox[{"[", "p", "]"}], "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{
                   RowBox[{"backwardsMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "p"}], "]"}], "]"}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"Inset", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{
                    RowBox[{"backwardsMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "p"}], "]"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"backwardsMatches", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cf", "[", 
                  RowBox[{"[", "p", "]"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"forwardMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "p"}], "]"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"backwardsMatches", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "p"}], "]"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                    "0"}], "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"forwardMatches", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"cb", "[", 
                   RowBox[{"[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"#1", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], "]"}], ",", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#1", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"shifts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], "}"}], 
                "&"}], " ", ",", 
               RowBox[{"backwardsMatches", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], "}"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "images", "]"}]}], "}"}]}], "]"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "DisplayProgram",
 CellChangeTimes->{
  3.65770489930829*^9, {3.6577049862226133`*^9, 3.657704986550344*^9}, {
   3.657706671818416*^9, 3.657706682113214*^9}, {3.657707977815845*^9, 
   3.657707994262559*^9}, {3.657884574630006*^9, 3.657884586870388*^9}, {
   3.6578847617672653`*^9, 3.6578847634708033`*^9}, {3.659340559272963*^9, 
   3.6593406448023777`*^9}, {3.659340682848237*^9, 3.659340686015761*^9}, {
   3.659340731078765*^9, 3.65934080663422*^9}, {3.65934084842626*^9, 
   3.659340851632503*^9}, {3.659340887104905*^9, 3.659340935373991*^9}, {
   3.659341035634199*^9, 3.659341039482019*^9}, {3.659341084625062*^9, 
   3.659341108326558*^9}, {3.659341172805101*^9, 3.659341180235776*^9}, {
   3.6593412482900057`*^9, 3.659341251945238*^9}, {3.659342312119884*^9, 
   3.6593423612923326`*^9}, 3.659342413449688*^9, {3.659342529548602*^9, 
   3.659342544227289*^9}, {3.659349022555477*^9, 3.6593490256340637`*^9}, {
   3.659349076416954*^9, 3.6593490888965178`*^9}, {3.65935195708329*^9, 
   3.65935198840061*^9}, {3.659352117772285*^9, 3.6593523091961107`*^9}, {
   3.659352434129566*^9, 3.65935243728141*^9}, {3.6593525526283827`*^9, 
   3.659352636639741*^9}, {3.6593528265518103`*^9, 3.6593528271348343`*^9}, {
   3.659352859382642*^9, 3.659352927459167*^9}, {3.659352961892042*^9, 
   3.659353010751862*^9}, {3.65935305222279*^9, 3.6593531297792273`*^9}, {
   3.659353313444919*^9, 3.659353316236001*^9}, {3.6593539940983477`*^9, 
   3.659354108020721*^9}, 3.6593541847482433`*^9, {3.659354398194127*^9, 
   3.65935463656992*^9}, {3.6593546894003563`*^9, 3.6593547813001747`*^9}, {
   3.6593549005113297`*^9, 3.6593549036576443`*^9}, 3.6593550501939383`*^9}],

Cell[BoxData[
 RowBox[{"FindGeometricTransform", "[", 
  RowBox[{
   RowBox[{"images", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"images", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"Method", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<ImageAlign\>\"", ",", "\"\<MeanSquareGradientDescent\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6593668327211*^9, 3.6593668917517967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Junk", "Section",
 CellChangeTimes->{{3.6593392474812317`*^9, 3.659339263751917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mdlTipXCM", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointOnPath", "[", 
          RowBox[{
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"pathLengths", "[", 
              RowBox[{"mdlTipXM", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"mdlTipXM", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointOnPath", "[", 
          RowBox[{
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"pathLengths", "[", 
              RowBox[{"mdlTipXM", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"mdlTipXM", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"mdlTipXM", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.658229758914482*^9, 3.6582298033740883`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlTipXCM", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointOnPath", "[", 
          RowBox[{
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"pathLengths", "[", 
              RowBox[{"mdlTipXM", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"mdlTipXM", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointOnPath", "[", 
          RowBox[{
           RowBox[{"mdlTipXM", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"pathLengths", "[", 
              RowBox[{"mdlTipXM", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"mdlTipXM", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"mdlTipXM", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"modelMask", "=", 
  RowBox[{"Binarize", "[", 
   RowBox[{
    RowBox[{"tipMask", "[", 
     RowBox[{
      RowBox[{"tipM", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "mdlTipXM", ",", " ", 
      "mdlTipPosXM", ",", 
      RowBox[{"scaleM", " ", "lFrame"}]}], "]"}], ",", "0.5"}], "]"}]}], "\n", 
 RowBox[{"  ", 
  RowBox[{"modelMetricMask", "=", 
   RowBox[{"Binarize", "[", 
    RowBox[{
     RowBox[{"tipMask", "[", 
      RowBox[{
       RowBox[{"tipM", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "mdlTipXCM", ",", " ", 
       "mdlTipPosXM", ",", 
       RowBox[{"scaleM", " ", "lFrame"}]}], "]"}], ",", "0.5"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6582298281977577`*^9, 3.6582298566924458`*^9}, {
  3.658229919807508*^9, 3.658229921134481*^9}, {3.6582301819259253`*^9, 
  3.658230183445841*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"lFrame", "=", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"wt", ",", "ht"}], "}"}], "=", 
     RowBox[{"ImageDimensions", "[", 
      RowBox[{"imgsL", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"imgsL", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"FaceForm", "[", "None", "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lFrame", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ht", "-", 
                RowBox[{"lFrame", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lFrame", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"ht", "-", 
                RowBox[{"lFrame", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}],
           "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "2", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657977864358838*^9, 3.657977972883513*^9}, {
  3.657978015909299*^9, 3.6579781230548973`*^9}, {3.6579781613263063`*^9, 
  3.657978208791465*^9}}],

Cell[BoxData[
 RowBox[{"FlipView", "[", "tipSeqLCaCb", "]"}]], "Input",
 CellChangeTimes->{{3.657972778590356*^9, 3.6579728012705812`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Image", "[", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"tipSeqLCaCb", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "-", 
        RowBox[{"ImageData", "[", 
         RowBox[{"tipSeqLCaCb", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", 
       RowBox[{"Length", "[", "tipSeqLCaCb", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mj", "=", 
   RowBox[{"Length", "[", "tipSeqLCaCb", "]"}]}], ";"}], "\n", 
 RowBox[{"Panel", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[Equal]", "0"}], ",", "\"\<\>\"", ",", 
           RowBox[{"imgLabel", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "mj"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<L\>\"", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ChannelImage", "[", 
             RowBox[{
              RowBox[{"ImageData", "[", 
               RowBox[{"diff", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "1", ",", 
              "colorspaceRules"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"mj", "-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}], ",",
        "\n", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Ca\>\"", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ChannelImage", "[", 
             RowBox[{
              RowBox[{"ImageData", "[", 
               RowBox[{"diff", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "2", ",", 
              "colorspaceRules"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"mj", "-", "1"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], ",", "\n", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Cb\>\"", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ChannelImage", "[", 
             RowBox[{
              RowBox[{"ImageData", "[", 
               RowBox[{"diff", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "3", ",", 
              "colorspaceRules"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"mj", "-", "1"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\n", "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", "setLabel"}], " ", 
  "]"}]}], "DisplayProgram",
 CellChangeTimes->{{3.657884996844799*^9, 3.657885095938115*^9}, 
   3.65788512617785*^9, {3.657887823619162*^9, 3.657887824882347*^9}, {
   3.657887917979169*^9, 3.657887990448798*^9}, {3.6578880324078712`*^9, 
   3.6578880644620657`*^9}, 3.657912398446231*^9, 3.6579124619320393`*^9, {
   3.6579124972696867`*^9, 3.657912503524392*^9}}],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tipSeq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6577046372759743`*^9, 3.657704686879067*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageAlignTransform", "[", 
   RowBox[{"template_", ",", "img_", ",", "mask_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "matches", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matches", "=", 
      RowBox[{"ImageCorrespondingPoints", "[", 
       RowBox[{"template", ",", "img", ",", 
        RowBox[{"Masking", "\[Rule]", "mask"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FindGeometricTransform", "[", 
      RowBox[{
       RowBox[{"matches", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"matches", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"TransformationClass", "\[Rule]", "\"\<Rigid\>\""}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.657705066255742*^9, 3.657705139474493*^9}, {
  3.6577080251468267`*^9, 3.6577080518243856`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"matches", "=", 
     RowBox[{"ImageCorrespondingPoints", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tipSeq", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
        "]"}], ",", 
       RowBox[{"Image", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tipSeq", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
        "]"}], ",", 
       RowBox[{"Masking", "\[Rule]", "modelMask"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"err", ",", "trans"}], "}"}], "=", 
    RowBox[{"FindGeometricTransform", "[", 
     RowBox[{
      RowBox[{"matches", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"matches", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"TransformationClass", "\[Rule]", "\"\<Rigid\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"tipSeqLCaCb", "=", 
    RowBox[{"ImagePerspectiveTransformation", "[", 
     RowBox[{
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"tipSeq", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", 
           RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], "/", "255"}], "]"}], ",", 
      RowBox[{"DataRange", "\[Rule]", "Full"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.657705176883613*^9, 3.6577052510164337`*^9}, {
   3.657705546424426*^9, 3.657705548471386*^9}, {3.657708061264875*^9, 
   3.657708066167883*^9}, {3.657877723192876*^9, 3.657877730816289*^9}, {
   3.657877854979555*^9, 3.657877890449733*^9}, 3.65788036731826*^9, {
   3.657880426557377*^9, 3.657880462202567*^9}}],

Cell[BoxData[
 RowBox[{"trans", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input"],

Cell[BoxData["frame"], "Input",
 CellChangeTimes->{{3.657876377622952*^9, 3.657876378732485*^9}}],

Cell[BoxData[
 RowBox[{"ImageTransformation", "[", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tipSeq", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
    "]"}], ",", 
   RowBox[{"trans", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"DataRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657876439547646*^9, 3.657876441298987*^9}}],

Cell[BoxData[
 RowBox[{"ImageDimensions", "[", 
  RowBox[{"Image", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"tipSeq", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{3.657876947945075*^9}],

Cell[BoxData[{
 RowBox[{"tipSeqLCaCb", "=", 
  RowBox[{"ImagePerspectiveTransformation", "[", 
   RowBox[{
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"tipSeq", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", 
         RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], "/", "255"}], "]"}], ",", 
    RowBox[{"trans", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"DataRange", "\[Rule]", "Full"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.6577055260405397`*^9, 3.657705565263577*^9}, {
  3.657705607191636*^9, 3.6577056082390747`*^9}, {3.657875481666007*^9, 
  3.657875496312059*^9}, {3.657875674058032*^9, 3.657875698864112*^9}, {
  3.6578763052433853`*^9, 3.657876343248448*^9}, {3.657876914769189*^9, 
  3.657876923663991*^9}, {3.657876964739053*^9, 3.657876993489317*^9}, {
  3.657877152249537*^9, 3.657877154057189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{
    RowBox[{"ImageData", "[", "tipSeqLCaCb", "]"}], "-", 
    RowBox[{
     RowBox[{"tipSeq", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", 
       RowBox[{"4", ";;", "6"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.657877281649417*^9, 3.6578773118556623`*^9}, 
   3.6578776911786757`*^9}],

Cell[BoxData[
 RowBox[{"ImageAdjust", "[", "%981", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["modelMask"], "Input"],

Cell[BoxData["tipSeqLCaCb"], "Input"],

Cell[BoxData[
 RowBox[{"images", "=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"tipSeq", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", 
         RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], "/", "255"}], "]"}], ",", 
    RowBox[{"tipSeqLCaCb", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6578846393718233`*^9, 3.657884659001107*^9}, {
  3.657884713376171*^9, 3.657884756430105*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tipSeq", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
      "]"}], ",", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tipSeqLCaCb", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
      "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tipSeq", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", 
          RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], "/", "255"}], "]"}], ",", 
     
     RowBox[{"tipSeqLCaCb", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matches", "=", 
   RowBox[{"ImageCorrespondingPoints", "[", 
    RowBox[{
     RowBox[{"images", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"images", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"Masking", "->", "modelMask"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"#1", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Yellow", ",", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#1"}], "]"}], "&"}], " ",
            ",", "#2"}], "]"}]}], "}"}], "]"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"images", ",", "matches"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindGeometricTransform", "[", 
  RowBox[{
   RowBox[{"matches", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"matches", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"TransformationClass", "\[Rule]", "\"\<Rigid\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.65770489930829*^9, {3.6577049862226133`*^9, 3.657704986550344*^9}, {
   3.657706671818416*^9, 3.657706682113214*^9}, {3.657707977815845*^9, 
   3.657707994262559*^9}, {3.657884574630006*^9, 3.657884586870388*^9}, {
   3.6578847617672653`*^9, 3.6578847634708033`*^9}}],

Cell[BoxData[
 RowBox[{"matches", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.657704955333228*^9, 3.657704968150342*^9}}],

Cell[BoxData[
 RowBox[{"FindGeometricTransform", "[", 
  RowBox[{
   RowBox[{"matches", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"matches", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65770497439154*^9, 3.6577049797180567`*^9}}],

Cell[BoxData[
 RowBox[{"ImageAlign", "[", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tipSeq", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
    "]"}], ",", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tipSeq", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6577038553020287`*^9, 3.657703859509994*^9}, {
  3.657704209512388*^9, 3.657704211418486*^9}, {3.6577047281470947`*^9, 
  3.657704734301276*^9}}],

Cell[BoxData[
 RowBox[{"findSpectrum", "[", 
  RowBox[{"a", ",", "b", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.657701378091135*^9, 3.6577013828977003`*^9}}],

Cell[BoxData[{
 RowBox[{"Range", "[", 
  RowBox[{"1.2", ",", "2.2", ",", "0.15"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"findSpectrum", "[", 
  RowBox[{"1.2", ",", "2.2", ",", "0.15"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657701418244576*^9, 3.6577014255329323`*^9}}],

Cell[BoxData[
 RowBox[{"Definition", "[", "findSpectrum", "]"}]], "Input",
 CellChangeTimes->{{3.65770145329538*^9, 3.657701464659658*^9}}],

Cell[BoxData["Range"], "Input",
 CellChangeTimes->{{3.657701397518387*^9, 3.6577013982781057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChannelImage", "[", 
   RowBox[{"img_", ",", "chn_", ",", "colorRules_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"toLCaCb", ",", " ", "fromLCaCb"}], "}"}], "=", 
      RowBox[{
       RowBox[{"setLCaCb", "[", "\"\<\[Theta]\>\"", "]"}], "/.", 
       "colorRules"}]}], ";", "\n", 
     RowBox[{"\[Mu]", "=", 
      RowBox[{"(", 
       RowBox[{"\"\<\[Mu]\>\"", "/.", "colorRules"}], ")"}]}], ";", "\n", 
     RowBox[{"dstMax", "=", 
      RowBox[{"\"\<dstMax\>\"", "/.", "colorRules"}]}], ";", "\n", 
     RowBox[{"CMax", "=", 
      RowBox[{"dstMax", "[", 
       RowBox[{"[", "chn", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"CStart", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"\[Mu]", ",", 
        RowBox[{"chn", "->", "0"}]}], "]"}]}], ";", "\n", 
     RowBox[{"CEnd", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"\[Mu]", ",", 
        RowBox[{"chn", "->", "1"}]}], "]"}]}], ";", "\n", 
     RowBox[{"pts", "=", 
      RowBox[{"findSpectrum", "[", 
       RowBox[{
        RowBox[{"fromLCaCb", "[", "CStart", "]"}], ",", 
        RowBox[{"fromLCaCb", "[", "CEnd", "]"}], ",", "CMax"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"min", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\n", 
     RowBox[{"max", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\n", 
     RowBox[{"rng", "=", 
      RowBox[{"max", "-", "min"}]}], ";", "\n", 
     RowBox[{"rgbPts", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "-", "min"}], ")"}], "/", "rng"}], ")"}], "&"}], ",",
         "pts"}], "]"}]}], ";", "\n", 
     RowBox[{"ticks", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{"N", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "CMax", ",", 
             RowBox[{"CMax", "/", "10"}]}], "}"}]}], "]"}], ",", "CMax"}], 
        "}"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ht", ",", "wt"}], "}"}], "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "img", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"chanColorAxis", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rectangle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"wt", ",", "ht"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{"rgbPts", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"wt", ",", 
                 RowBox[{
                  RowBox[{"(", "i", ")"}], 
                  RowBox[{"ht", "/", 
                   RowBox[{"(", 
                    RowBox[{"CMax", "+", "1"}], ")"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"wt", "+", 
                  RowBox[{"ht", "/", "10"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "+", "1"}], ")"}], 
                  RowBox[{"ht", "/", 
                   RowBox[{"(", 
                    RowBox[{"CMax", "+", "1"}], ")"}]}]}]}], "}"}]}], "]"}], 
             ",", "\n", "Black", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ticks", ",", "i"}], "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"wt", "+", 
                    RowBox[{"ht", "/", "9"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "0.5"}], ")"}], 
                    RowBox[{"ht", "/", 
                    RowBox[{"(", 
                    RowBox[{"CMax", "+", "1"}], ")"}]}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "CMax"}], "}"}]}], "]"}]}], "}"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"rules", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"rgbPts", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "CMax"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"chanColorAxis", ",", 
         RowBox[{"Image", "[", 
          RowBox[{
           RowBox[{"img", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "All", ",", "chn"}], "]"}], "]"}], "/.", 
           "rules"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "->", 
        RowBox[{"{", 
         RowBox[{"wt", ",", "ht"}], "}"}]}]}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.657701661998406*^9, 3.657701688295568*^9}, {
   3.657701728860907*^9, 3.657701731659231*^9}, {3.657701895139728*^9, 
   3.6577019586266127`*^9}, {3.657702166931264*^9, 3.657702203545472*^9}, {
   3.6577022900959053`*^9, 3.6577023653406677`*^9}, {3.657702678860787*^9, 
   3.657702679283628*^9}, {3.657702724656001*^9, 3.657702754926478*^9}, 
   3.657702828081019*^9, {3.657703423045087*^9, 3.657703502676206*^9}, {
   3.6577035454124804`*^9, 3.657703549331732*^9}, {3.657703608568486*^9, 
   3.657703680102619*^9}}],

Cell[BoxData["colorspaceRules"], "Input"],

Cell[BoxData[
 RowBox[{"\"\<dstMax\>\"", "/.", "colorspaceRules"}]], "Input",
 CellChangeTimes->{3.657702986621702*^9}],

Cell[BoxData["CMax"], "Input",
 CellChangeTimes->{{3.657702842162228*^9, 3.65770284318407*^9}}],

Cell[BoxData[
 RowBox[{"Length", "[", "rgbPts", "]"}]], "Input",
 CellChangeTimes->{{3.657702808104211*^9, 3.657702812327772*^9}}],

Cell[BoxData["ht"], "Input",
 CellChangeTimes->{{3.657702233912663*^9, 3.657702234103353*^9}}],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{"tipSeq", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.657646112686277*^9, 3.657646122774006*^9}}],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tipSeq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "/", "255"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657645874513329*^9, 3.657645883952853*^9}, {
  3.657646131637882*^9, 3.657646132844983*^9}}],

Cell[BoxData[
 RowBox[{"ChannelImage", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tipSeq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", 
      RowBox[{"4", ";;", "6"}]}], "]"}], "]"}], ",", "1", ",", 
   "colorspaceRules"}], "]"}]], "Input",
 CellChangeTimes->{3.6576458561432247`*^9}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"tipSeq", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.657644339703352*^9, 3.657644351071*^9}}],

Cell[BoxData["tipM"], "Input"],

Cell[BoxData[
 RowBox[{"iScaleS", " ", "scaleM"}]], "Input",
 CellChangeTimes->{{3.6576307668709917`*^9, 3.6576307736617107`*^9}}],

Cell[BoxData[
 RowBox[{"mdl", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rescale", " ", 
     RowBox[{"model", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rescale", " ", 
       RowBox[{"model", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"rescale", " ", 
       RowBox[{"model", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"model", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657630084052622*^9, 3.65763012518106*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"box", "=", 
   RowBox[{"fixImageDimensionRanges", "[", 
    RowBox[{"img", ",", 
     RowBox[{
      RowBox[{"modelBoundingBox", "[", 
       RowBox[{"model", ",", "modelPosS"}], "]"}], " ", "rescale"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"mdl", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rescale", " ", 
       RowBox[{"model", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rescale", " ", 
         RowBox[{"model", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"rescale", " ", 
         RowBox[{"model", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"model", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
   ";"}]}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"mdlPos", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rescale", "  ", 
       RowBox[{"modelPosS", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"modelPosS", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"imgData", "=", 
    RowBox[{
     RowBox[{"ImageData", "[", "img", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"box", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ";;", 
        RowBox[{"box", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"box", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], ";;", 
        RowBox[{"box", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}]}], 
   ";"}]}], "\n", 
 RowBox[{"  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Image", "[", "imgData", "]"}], ",", "mdl", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mdlPos", "-", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"box", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"box", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"modelPosS", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.6576301355184937`*^9, {3.658136182397201*^9, 3.658136184773798*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], "=", 
     RowBox[{"cropTip", "[", 
      RowBox[{
       RowBox[{"imgsL", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"modelB", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelPosB", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"iScaleS", "/", 
        RowBox[{"iScaleM", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"modelMask", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
     RowBox[{"tipMask", "[", 
      RowBox[{
       RowBox[{"imgMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"imgTipMasked", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
     RowBox[{"maskTip", "[", 
      RowBox[{
       RowBox[{"imgsM", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelB", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelPosB", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"iScaleS", "/", 
        RowBox[{"iScaleM", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"setLabel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<  \>\"", "<>", 
       RowBox[{"imgLabel", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "mi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657629870148189*^9, 3.6576298748173857`*^9}}],

Cell[BoxData["imgsL"], "Input",
 CellChangeTimes->{{3.6576254630872593`*^9, 3.657625467350947*^9}}],

Cell[BoxData[{
 RowBox[{"ImageDimensions", "[", "modelMask", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", "tipM", "]"}]}], "Input",
 CellChangeTimes->{{3.657637601650691*^9, 3.657637637885027*^9}}],

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", "=", "1"}], "}"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"model", ",", " ", "modelPosS", ",", "width"}], "}"}], " ",
           "=", " ", 
          RowBox[{"buildModel", "[", 
           RowBox[{
            RowBox[{"imgsS", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"colorspaceRules", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"sFrame", "=", 
          RowBox[{"modelBoundingBox", "[", 
           RowBox[{"model", ",", "modelPosS"}], "]"}]}], ";", "\n", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dColor", ",", "tColor"}], "}"}], ",", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dColor", ",", "tColor"}], "}"}], "=", 
             RowBox[{"Colors", "/.", 
              RowBox[{"Options", "[", 
               RowBox[{"modelToGraphics", ",", "Colors"}], "]"}]}]}], ";", 
            "\n", 
            RowBox[{"Column", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Panel", "[", 
                 RowBox[{
                  RowBox[{"Show", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"imageGraphics", "[", 
                    RowBox[{
                    RowBox[{"imgsS", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", 
                    RowBox[{"modelToGraphics", "[", 
                    RowBox[{"model", ",", " ", "modelPosS"}], "]"}], "]"}], 
                    ",", "\n", 
                    RowBox[{"Graphics", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Transpose", "[", "sFrame", "]"}]}], "]"}]}], 
                    "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                  
                  RowBox[{"setLabel", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<dWidth = \>\"", ",", 
                   RowBox[{"width", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", "\n", 
                RowBox[{"easySwatch", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Distal Trapesium Fit\>\"", ",", "dColor", ",", 
                    "\"\<Area\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Tip Elliptical Fit\>\"", ",", "tColor", ",", 
                    "\"\<Area\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Trapezoid Points and Ellipse Center\>\"", ",", 
                    "Black", ",", "\"\<Point\>\""}], "}"}]}], "}"}], ",", "1",
                   ",", 
                  RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]}], 
               "}"}], ",", "\n", 
              RowBox[{"Alignment", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}]}]}], "\n", 
          "]"}]}]}], "\n", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
   "\"\<The model overlayed on the source image for a selection of \
digits.\>\""}], "]"}]], "DisplayProgram",
 CellChangeTimes->{
  3.645172302104376*^9, {3.645172406675255*^9, 3.645172476827759*^9}, {
   3.645172521835741*^9, 3.645172540685832*^9}, {3.645173306697838*^9, 
   3.645173318297184*^9}, {3.645778113456067*^9, 3.645778134577303*^9}, {
   3.6457781872616034`*^9, 3.645778284858857*^9}, {3.645778433752969*^9, 
   3.645778452200252*^9}, {3.645778490877515*^9, 3.6457784932073517`*^9}, {
   3.645778635858747*^9, 3.645778638137537*^9}, {3.6457788198459663`*^9, 
   3.645778849243641*^9}, {3.6457789263670883`*^9, 3.6457789378819523`*^9}, {
   3.6457789768684464`*^9, 3.645779068615349*^9}, 3.645779198334917*^9, {
   3.645859053532652*^9, 3.645859060549239*^9}, {3.645859123889189*^9, 
   3.645859141812591*^9}, {3.645859289580391*^9, 3.645859297722432*^9}, {
   3.645859378847106*^9, 3.645859421746017*^9}, {3.6458600405750427`*^9, 
   3.645860042919221*^9}, {3.6458604525025043`*^9, 3.6458604865467043`*^9}, {
   3.6458749818856087`*^9, 3.645875045389719*^9}, {3.64587509613906*^9, 
   3.645875109259544*^9}, {3.646117642415515*^9, 3.6461176772343807`*^9}, {
   3.6461178091318893`*^9, 3.646117811903618*^9}, {3.6461180662559853`*^9, 
   3.646118186733354*^9}, {3.6461182603573027`*^9, 3.646118265730956*^9}, {
   3.646118461070159*^9, 3.646118529925408*^9}, {3.6461193492854013`*^9, 
   3.646119365064869*^9}, {3.646121548714394*^9, 3.646121568283443*^9}, {
   3.646132950146729*^9, 3.646132961566914*^9}, {3.646133038402584*^9, 
   3.6461330519494057`*^9}, {3.646133281033408*^9, 3.646133294783103*^9}, {
   3.646134061885724*^9, 3.646134183866703*^9}, {3.6461342562554626`*^9, 
   3.64613426348046*^9}, {3.6461344083238993`*^9, 3.646134446527607*^9}, {
   3.646134515846368*^9, 3.646134616289501*^9}, 3.6461346555435677`*^9, {
   3.6461347205789423`*^9, 3.646134745023799*^9}, {3.6461349633992777`*^9, 
   3.6461349714393387`*^9}, {3.646135020325109*^9, 3.646135068396549*^9}, {
   3.646135124235669*^9, 3.646135148284542*^9}, {3.646135207715357*^9, 
   3.646135303454281*^9}, {3.64613535022366*^9, 3.646135385542493*^9}, {
   3.646135436498982*^9, 3.646135437028399*^9}, 3.646135529037711*^9, {
   3.64614142822092*^9, 3.64614159656501*^9}, {3.64614165171143*^9, 
   3.646141667435902*^9}, {3.646141734718729*^9, 3.646141764408636*^9}, {
   3.646141811790646*^9, 3.6461418640717783`*^9}, {3.646141968278103*^9, 
   3.646141969682333*^9}, {3.646142677657086*^9, 3.646142697045299*^9}, {
   3.6463870007947607`*^9, 3.646387004810705*^9}, {3.646389803477787*^9, 
   3.646389998527505*^9}, 3.646390122455628*^9, {3.646472385246169*^9, 
   3.646472443950597*^9}, 3.646472675415904*^9, {3.646473311741893*^9, 
   3.646473316366518*^9}, {3.646473452411298*^9, 3.646473467962792*^9}, {
   3.646473564360135*^9, 3.646473565879107*^9}, {3.6464736211923113`*^9, 
   3.6464736385694838`*^9}, {3.646473698930275*^9, 3.6464737439412603`*^9}, {
   3.646473923905506*^9, 3.6464739909963713`*^9}, {3.646474055014839*^9, 
   3.6464740827866287`*^9}, {3.6464744969620667`*^9, 
   3.6464746141373777`*^9}, {3.646476029464438*^9, 3.646476031784934*^9}, {
   3.6464760715797977`*^9, 3.646476083702898*^9}, {3.646476432350984*^9, 
   3.6464764679490147`*^9}, {3.646477612444269*^9, 3.646477646975904*^9}, {
   3.646477708304059*^9, 3.646477710911724*^9}, 3.646477792055236*^9, {
   3.646479748961883*^9, 3.646479766689069*^9}, 3.6464806373806334`*^9, {
   3.646481393055846*^9, 3.646481394071327*^9}, {3.646482208731804*^9, 
   3.646482272202284*^9}, {3.646482305948872*^9, 3.646482329521943*^9}, {
   3.6464823639354973`*^9, 3.6464823951119432`*^9}, {3.646482521866275*^9, 
   3.6464825250511503`*^9}, {3.646482631856936*^9, 3.646482652528473*^9}, {
   3.646482738615252*^9, 3.646482740541131*^9}, {3.646482869997048*^9, 
   3.6464828978624372`*^9}, {3.646482969777811*^9, 3.646482976641756*^9}, {
   3.646483037023897*^9, 3.646483085124886*^9}, {3.6464831228995533`*^9, 
   3.646483124955854*^9}, {3.646483274137187*^9, 3.646483275179474*^9}, {
   3.6464833238832407`*^9, 3.646483324854849*^9}, {3.646483517205018*^9, 
   3.64648354004146*^9}, {3.6464836013737392`*^9, 3.646483609678315*^9}, 
   3.6464926579993153`*^9, {3.646492797416938*^9, 3.64649280849583*^9}, {
   3.646492911821784*^9, 3.646492924429031*^9}, {3.646493019300213*^9, 
   3.646493081049966*^9}, {3.646493150847024*^9, 3.646493157230186*^9}, {
   3.6464957645092697`*^9, 3.646495848720737*^9}, {3.6464961176139097`*^9, 
   3.646496138649378*^9}, {3.6464961882498617`*^9, 3.6464961906327667`*^9}, {
   3.646496238008945*^9, 3.6464964347373533`*^9}, {3.6464964820446453`*^9, 
   3.646496486960383*^9}, {3.646648221160059*^9, 3.64664825576717*^9}, {
   3.646648292839595*^9, 3.64664829948582*^9}, {3.646648350776016*^9, 
   3.646648393235729*^9}, {3.646648424313884*^9, 3.64664842879712*^9}, {
   3.646648482681213*^9, 3.646648518015975*^9}, {3.6466486374218388`*^9, 
   3.646648640997197*^9}, {3.6466486791487217`*^9, 3.646648714155486*^9}, {
   3.646649377131647*^9, 3.6466493871150303`*^9}, {3.646649592271596*^9, 
   3.64664960514799*^9}, {3.646739586955611*^9, 3.6467396035799723`*^9}, {
   3.646739637216873*^9, 3.646739655176125*^9}, {3.646739717648613*^9, 
   3.646739721646688*^9}, {3.6467397967722473`*^9, 3.646739806578072*^9}, {
   3.646740172564397*^9, 3.646740177674082*^9}, {3.6467405688129377`*^9, 
   3.646740610183022*^9}, {3.646740704890518*^9, 3.646740720411722*^9}, {
   3.646740808612431*^9, 3.646740810400076*^9}, {3.6467408417438393`*^9, 
   3.646740844456847*^9}, {3.646741561880102*^9, 3.646741639567019*^9}, 
   3.6467419693859587`*^9, {3.646742049849931*^9, 3.646742097464649*^9}, {
   3.6467421790617533`*^9, 3.6467421902802067`*^9}, {3.6467529319668016`*^9, 
   3.6467530017977247`*^9}, {3.646753036490356*^9, 3.646753069247944*^9}, {
   3.64675310768047*^9, 3.6467531227508793`*^9}, {3.646753164929173*^9, 
   3.646753314980201*^9}, {3.646753347627425*^9, 3.646753449391103*^9}, {
   3.646753506951953*^9, 3.6467535577641897`*^9}, {3.646753597765582*^9, 
   3.646753625620055*^9}, {3.64675442727281*^9, 3.64675443283003*^9}, {
   3.646991786670833*^9, 3.646991797719287*^9}, {3.646991859846489*^9, 
   3.646991896500826*^9}, {3.646992418185563*^9, 3.646992565257115*^9}, 
   3.646996480723385*^9, {3.64699678516195*^9, 3.6469967870889463`*^9}, {
   3.650704845956533*^9, 3.650704867388996*^9}, {3.650704901107019*^9, 
   3.6507049835310173`*^9}, 3.650705044705318*^9, {3.6507051451647863`*^9, 
   3.6507052011146317`*^9}, {3.6507053277698793`*^9, 3.650705424883134*^9}, {
   3.6507056228972797`*^9, 3.650705641136104*^9}, {3.650705685164844*^9, 
   3.6507057083094387`*^9}, {3.6507314273189993`*^9, 
   3.6507314365349607`*^9}, {3.65073156072911*^9, 3.650731578689479*^9}, 
   3.6507316333595133`*^9, {3.650731706923792*^9, 3.650731725138711*^9}, {
   3.650731765515663*^9, 3.650731833128057*^9}, {3.650777751051704*^9, 
   3.65077775261089*^9}, {3.6507782993529778`*^9, 3.650778338914524*^9}, {
   3.650778417406209*^9, 3.650778446785727*^9}, {3.6507784920319157`*^9, 
   3.650778495255159*^9}, {3.650778924409314*^9, 3.65077892692208*^9}, {
   3.650779543856691*^9, 3.650779612422317*^9}, {3.650779655018848*^9, 
   3.650779679612788*^9}, {3.650781138925511*^9, 3.650781191898761*^9}, {
   3.650783031133781*^9, 3.650783037030695*^9}, {3.650783190656126*^9, 
   3.6507831952072477`*^9}, {3.650787040117303*^9, 3.650787104893977*^9}, {
   3.650787197362088*^9, 3.650787206327207*^9}, {3.6507872639438267`*^9, 
   3.650787277237204*^9}, {3.6507877132986813`*^9, 3.6507877216210423`*^9}, {
   3.650787808177011*^9, 3.65078782467972*^9}, {3.650788002923182*^9, 
   3.650788012506844*^9}, 3.650788086464929*^9, {3.6508005377468243`*^9, 
   3.650800559720922*^9}, {3.650800638167145*^9, 3.650800652439403*^9}, {
   3.650800995651978*^9, 3.650801006416806*^9}, {3.650801050880103*^9, 
   3.650801056342462*^9}, {3.650816055932259*^9, 3.650816057557377*^9}, {
   3.650816105346779*^9, 3.650816216463915*^9}, {3.650816454539031*^9, 
   3.650816458037239*^9}, {3.650953753955399*^9, 3.6509537780933523`*^9}, {
   3.6509560100355473`*^9, 3.650956070934277*^9}, {3.650956107989575*^9, 
   3.650956116848523*^9}, 3.65095659596607*^9, 3.6509566671223707`*^9, {
   3.650957351484906*^9, 3.650957368682796*^9}, {3.650957431067031*^9, 
   3.650957476006783*^9}, {3.650957522880651*^9, 3.650957524502964*^9}, {
   3.650957557957285*^9, 3.6509575686833887`*^9}, {3.650979795398287*^9, 
   3.650979808232497*^9}, {3.650979873913197*^9, 3.6509799024317837`*^9}, {
   3.650979981148963*^9, 3.650979983451921*^9}, {3.650980147763156*^9, 
   3.650980449668915*^9}, {3.650980497012702*^9, 3.650980508746217*^9}, {
   3.6509805499522*^9, 3.650980584965811*^9}, {3.650980634157543*^9, 
   3.6509806834010277`*^9}, {3.650981578759799*^9, 3.6509815809812107`*^9}, {
   3.6509816181065197`*^9, 3.650981699698704*^9}, {3.651416399685089*^9, 
   3.6514164304110537`*^9}, {3.651418827722896*^9, 3.651418850242416*^9}, {
   3.65148034942048*^9, 3.6514803516549683`*^9}, {3.651480385281938*^9, 
   3.651480386345064*^9}, {3.651480422999976*^9, 3.651480423503274*^9}, {
   3.651480457359618*^9, 3.651480544973225*^9}, {3.6514806025389757`*^9, 
   3.651480606321413*^9}, {3.65148063637022*^9, 3.6514806370740557`*^9}, {
   3.651943899423814*^9, 3.651943923156602*^9}, {3.651943954239893*^9, 
   3.651943962924465*^9}, {3.651944008363142*^9, 3.651944010961693*^9}, 
   3.6521836029292507`*^9, {3.654527502397414*^9, 3.6545275124995413`*^9}, {
   3.654527994086615*^9, 3.6545280208136787`*^9}, {3.654528107936162*^9, 
   3.654528112938035*^9}, {3.654531047990615*^9, 3.654531051660668*^9}, {
   3.654614513450902*^9, 3.6546145307700167`*^9}, {3.654614721406047*^9, 
   3.654614774857471*^9}, {3.654614835680964*^9, 3.6546148417672*^9}, {
   3.654619432729764*^9, 3.6546194394094553`*^9}, {3.654619487127555*^9, 
   3.6546194998943996`*^9}, {3.6546195563477783`*^9, 3.654619569978901*^9}, {
   3.6546196375707283`*^9, 3.654619655606003*^9}, {3.654621872897097*^9, 
   3.6546218850100718`*^9}, {3.654622289714634*^9, 3.654622307941155*^9}, {
   3.655461851712249*^9, 3.655461855230941*^9}, 3.656874716513844*^9, {
   3.6568747772515697`*^9, 3.656874841796749*^9}, {3.657448197609099*^9, 
   3.6574482289572287`*^9}, {3.6575262505241632`*^9, 
   3.6575262582641582`*^9}, {3.657526292325924*^9, 3.657526313564629*^9}, {
   3.6575264159238443`*^9, 3.6575264303236837`*^9}, {3.65752657608103*^9, 
   3.657526640594983*^9}, {3.657527279495948*^9, 3.657527352722397*^9}, 
   3.6575275726109257`*^9, {3.6575291223574867`*^9, 3.657529136891613*^9}, {
   3.657529321077195*^9, 3.6575293252705173`*^9}, {3.6575303124606953`*^9, 
   3.657530332159108*^9}, {3.65753037071768*^9, 3.657530391736307*^9}, {
   3.657530875383231*^9, 3.657531000875964*^9}, 3.6575313328683233`*^9, {
   3.6575313709437933`*^9, 3.657531396917617*^9}, {3.6575314326765223`*^9, 
   3.657531436916317*^9}, {3.65753150146284*^9, 3.657531509613768*^9}, {
   3.657531613819126*^9, 3.657531642293042*^9}, {3.657531692683323*^9, 
   3.6575316940506687`*^9}, {3.6575355272686768`*^9, 3.657535599358938*^9}, 
   3.657535680341167*^9, {3.658136186550447*^9, 3.65813618807369*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ICWaS", "Subchapter",
 CellChangeTimes->{{3.6436250175791817`*^9, 3.6436250352669697`*^9}, {
  3.657535165655632*^9, 3.657535174555265*^9}}],

Cell[CellGroupData[{

Cell["1.0  Find Frame", "Subsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
   3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
   3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}, {
   3.6451745177618113`*^9, 3.6451745511597767`*^9}, {3.64517499670475*^9, 
   3.64517499947962*^9}, {3.645175080948804*^9, 3.645175090868601*^9}, {
   3.645439136219509*^9, 3.645439144449575*^9}, {3.645439215592917*^9, 
   3.645439259606365*^9}, {3.6464709862831783`*^9, 3.6464710074329557`*^9}, {
   3.647950418103414*^9, 3.6479504208311663`*^9}, 3.648106995780456*^9, {
   3.648256254564239*^9, 3.64825626716313*^9}, {3.6482583759171753`*^9, 
   3.648258406090315*^9}, {3.648258491672133*^9, 3.648258495048208*^9}, {
   3.652690011812333*^9, 3.652690021723233*^9}, {3.653328412667326*^9, 
   3.6533284293607597`*^9}, {3.6575352590631123`*^9, 3.657535288758717*^9}}],

Cell[BoxData[
 RowBox[{"modelBoundingBox", "[", 
  RowBox[{"model", ",", "modelPos"}], "]"}]], "Input",
 CellChangeTimes->{{3.65753547467775*^9, 3.6575354842915363`*^9}}],

Cell[BoxData["iScaleS"], "Input",
 CellChangeTimes->{{3.6575351942531977`*^9, 3.6575351970689707`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["10.0  Set the midscale", "Subsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
   3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
   3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}, {
   3.6451745177618113`*^9, 3.6451745511597767`*^9}, {3.64517499670475*^9, 
   3.64517499947962*^9}, {3.645175080948804*^9, 3.645175090868601*^9}, {
   3.645439136219509*^9, 3.645439144449575*^9}, {3.645439215592917*^9, 
   3.645439259606365*^9}, {3.6464709862831783`*^9, 3.6464710074329557`*^9}, {
   3.647950418103414*^9, 3.6479504208311663`*^9}, 3.648106995780456*^9, {
   3.648256254564239*^9, 3.64825626716313*^9}, {3.6482583759171753`*^9, 
   3.648258406090315*^9}, {3.648258491672133*^9, 3.648258495048208*^9}, {
   3.652690011812333*^9, 3.652690021723233*^9}, {3.653328412667326*^9, 
   3.6533284293607597`*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "wMin", "}"}], ",", "\n", " ", 
   RowBox[{
    RowBox[{"wMin", " ", "=", " ", "100"}], ";", "\n", " ", 
    RowBox[{"iScaleM", " ", "=", " ", 
     RowBox[{"findMediumScale", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"iScaleS", " ", 
         RowBox[{
          RowBox[{"width", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "wMin"}]}], "]"}], ",", " ", 
       "midScales"}], "]"}]}], ";", "\n", " ", 
    RowBox[{"scaleM", " ", "=", " ", 
     RowBox[{"1", "/", "iScaleM"}]}], ";"}]}], "\n", " ", 
  "]"}]], "FunctionalProgram",
 CellChangeTimes->{
  3.653294702509996*^9, {3.653297944472849*^9, 3.65329794633565*^9}, {
   3.653297985487896*^9, 3.653298033936674*^9}, {3.653298254025009*^9, 
   3.653298302973393*^9}, {3.653298338620874*^9, 3.653298339859557*^9}, {
   3.653299429558894*^9, 3.653299486764221*^9}, 3.6533287206609087`*^9, {
   3.6533288203859863`*^9, 3.653328820704228*^9}, {3.653375877066133*^9, 
   3.6533758776976643`*^9}, {3.657379878331846*^9, 3.657379901798677*^9}, {
   3.65744825830344*^9, 3.657448258305632*^9}, {3.657531997051799*^9, 
   3.6575320314740257`*^9}}],

Cell["Scale the images.", "Text",
 CellChangeTimes->{{3.6573798614625883`*^9, 3.657379867899733*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mi", ",", " ", "mj"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mi", ",", " ", "mj"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Dimensions", "[", "imgsL", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", " ", ";;", " ", "2"}], "]"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"imgsM", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageResize", "[", 
         RowBox[{
          RowBox[{"imgsL", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", " ", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", 
            RowBox[{"iScaleM", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], " ", "]"}]}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "mi"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", "mj"}], "}"}]}], "]"}]}]}]}], 
   "\n", "  ", "]"}], ";"}]], "FunctionalProgram",
 CellChangeTimes->{
  3.653294702509996*^9, {3.653297944472849*^9, 3.65329794633565*^9}, {
   3.653297985487896*^9, 3.653298033936674*^9}, {3.653298254025009*^9, 
   3.653298302973393*^9}, {3.653298338620874*^9, 3.653298339859557*^9}, {
   3.653298604158449*^9, 3.65329868165825*^9}, {3.6532987330113583`*^9, 
   3.653298776799399*^9}, 3.6532989848413677`*^9, 3.6573799086887712`*^9, {
   3.657448276040903*^9, 3.657448276042932*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["11.0  Bounding Box; Tip extraction.", "Subsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
   3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
   3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}, {
   3.6451745177618113`*^9, 3.6451745511597767`*^9}, {3.64517499670475*^9, 
   3.64517499947962*^9}, {3.645175080948804*^9, 3.645175090868601*^9}, {
   3.645439136219509*^9, 3.645439144449575*^9}, {3.645439215592917*^9, 
   3.645439259606365*^9}, {3.6464709862831783`*^9, 3.6464710074329557`*^9}, {
   3.647950418103414*^9, 3.6479504208311663`*^9}, 3.648106995780456*^9, {
   3.648256254564239*^9, 3.64825626716313*^9}, {3.6482583759171753`*^9, 
   3.648258406090315*^9}, {3.648258491672133*^9, 3.648258495048208*^9}, {
   3.65185278413431*^9, 3.651852799697557*^9}, {3.653328434745035*^9, 
   3.653328435784506*^9}}],

Cell["For tip extraction we use the axis oriented model", "Text",
 CellChangeTimes->{{3.654967073243224*^9, 3.6549671173495903`*^9}}],

Cell[CellGroupData[{

Cell["Find Bounding Box and Set Mask.", "Subsubsection",
 CellChangeTimes->{{3.6502023946323*^9, 3.6502024076331987`*^9}, {
  3.652429992491721*^9, 3.6524299956739902`*^9}, {3.65243022182093*^9, 
  3.6524302251793957`*^9}, {3.65495064407915*^9, 3.654950658445051*^9}}],

Cell["Make fig elements", "Text",
 CellChangeTimes->{{3.655470826774259*^9, 3.655470837040169*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "modelMask", ",", "imgTipMasked", ",", "imgMTip", ",", "modelMTip", ",", 
   "modelMTipPos"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj", ",", "null"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mi", ",", "mj"}], "}"}], "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"null", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "mi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"modelMask", "=", "null"}], ";", " ", 
    RowBox[{"imgTipMasked", "=", "null"}], ";", "\[IndentingNewLine]", 
    RowBox[{"imgMTip", "=", "null"}], ";", " ", 
    RowBox[{"modelMTip", "=", "null"}], ";", " ", 
    RowBox[{"modelMTipPos", "=", "null"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"imgMTip", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelMTip", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelMTipPos", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], "=", 
        RowBox[{"cropTip", "[", 
         RowBox[{
          RowBox[{"imgsM", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelPosB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"iScaleS", "/", 
           RowBox[{"iScaleM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"modelMask", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"tipMask", "[", 
         RowBox[{
          RowBox[{"imgMTip", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelMTip", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelMTipPos", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"imgTipMasked", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"maskTip", "[", 
         RowBox[{
          RowBox[{"imgsM", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"modelPosB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"iScaleS", "/", 
           RowBox[{"iScaleM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
      
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"setLabel", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<  \>\"", "<>", 
          RowBox[{"imgLabel", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], " ", 
       "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "mi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "FunctionalProgram",
 CellChangeTimes->{{3.6508871799283*^9, 3.6508873371332197`*^9}, {
   3.650887527907961*^9, 3.650887538647142*^9}, {3.650887998939023*^9, 
   3.650888003697496*^9}, {3.650977240494955*^9, 3.6509772439025784`*^9}, {
   3.650977279805933*^9, 3.6509772946533327`*^9}, {3.650977794577709*^9, 
   3.6509777966242237`*^9}, {3.6509778522547617`*^9, 3.650977867207032*^9}, {
   3.651417995361123*^9, 3.651418014575984*^9}, {3.6514184166448402`*^9, 
   3.651418452436104*^9}, {3.651478993385542*^9, 3.651479011264614*^9}, {
   3.651479457811528*^9, 3.6514794581934433`*^9}, {3.651944634457674*^9, 
   3.651944634830879*^9}, {3.652264543896248*^9, 3.652264606359559*^9}, {
   3.652278127128878*^9, 3.652278133725854*^9}, 3.652279411548327*^9, {
   3.6524596462019463`*^9, 3.6524596873507433`*^9}, 3.6524597197833977`*^9, {
   3.652459765798341*^9, 3.652459815170445*^9}, {3.652460206617886*^9, 
   3.652460229169609*^9}, {3.652524241994453*^9, 3.652524243966701*^9}, {
   3.652524297343742*^9, 3.652524324154127*^9}, {3.652531494940555*^9, 
   3.652531499395862*^9}, 3.652531568503333*^9, {3.652537451011351*^9, 
   3.65253745557975*^9}, {3.6546247074771347`*^9, 3.6546247153659897`*^9}, 
   3.654625016959997*^9, {3.654931700123962*^9, 3.654931725146372*^9}, {
   3.654931810824533*^9, 3.654931830486768*^9}, {3.654931882528163*^9, 
   3.65493188367026*^9}, {3.654931913679278*^9, 3.6549319368713512`*^9}, {
   3.654932084697658*^9, 3.6549320989668293`*^9}, {3.6549321391670237`*^9, 
   3.654932140126646*^9}, {3.654932186309062*^9, 3.654932256306649*^9}, {
   3.654938822922357*^9, 3.654938828783987*^9}, {3.654946165443699*^9, 
   3.654946235546165*^9}, {3.6551143992652187`*^9, 3.655114564343535*^9}, {
   3.655115757866417*^9, 3.655115807376543*^9}, {3.65546193302982*^9, 
   3.655461946370739*^9}, {3.6554892435980473`*^9, 3.6554893078018103`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "modelImg", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mi", ",", "mj"}], "}"}], "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"modelImg", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "mi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"modelImg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Show", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"imageGraphics", "[", 
             RowBox[{
              RowBox[{"imgs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Graphics", "[", 
             RowBox[{"modelToGraphics", "[", 
              RowBox[{
               RowBox[{"modelB", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
               RowBox[{"modelPosB", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
            "\n", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                RowBox[{"Point", "[", "\"\<pnts\>\"", "]"}], ",", "\n", 
                RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"modelBoundingBox", "[", 
                    RowBox[{
                    RowBox[{"modelB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"modelPosB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                 "]"}], ",", "\n", 
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Orange", ",", 
                
                RowBox[{"Point", "[", "\"\<pntsR\>\"", "]"}], ",", 
                RowBox[{"EdgeForm", "[", "Orange", "]"}], ",", 
                RowBox[{"Polygon", "[", "\"\<pntsR\>\"", "]"}], ",", "\n", 
                RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
                RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"extraBoundingBox", "[", 
                    RowBox[{
                    RowBox[{"modelB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"modelPosB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                 "]"}]}], "\n", "}"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<pnts\>\"", "\[Rule]", 
                RowBox[{"modelBoundingPnts", "[", 
                 RowBox[{
                  RowBox[{"modelB", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"modelPosB", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"\"\<pntsR\>\"", "\[Rule]", 
                RowBox[{
                 RowBox[{"extraBoundingPnts", "[", 
                  RowBox[{
                   RowBox[{"modelB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                   RowBox[{"modelPosB", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], "]"}], 
                 "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], 
         "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "mi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "DisplayProgram",
 CellChangeTimes->{{3.6508871799283*^9, 3.6508873371332197`*^9}, {
   3.650887527907961*^9, 3.650887538647142*^9}, {3.650887998939023*^9, 
   3.650888003697496*^9}, {3.650977240494955*^9, 3.6509772439025784`*^9}, {
   3.650977279805933*^9, 3.6509772946533327`*^9}, {3.650977794577709*^9, 
   3.6509777966242237`*^9}, {3.6509778522547617`*^9, 3.650977867207032*^9}, {
   3.651417995361123*^9, 3.651418014575984*^9}, {3.6514184166448402`*^9, 
   3.651418452436104*^9}, {3.651478993385542*^9, 3.651479011264614*^9}, {
   3.651479457811528*^9, 3.6514794581934433`*^9}, {3.651944634457674*^9, 
   3.651944634830879*^9}, {3.652264543896248*^9, 3.652264606359559*^9}, {
   3.652278127128878*^9, 3.652278133725854*^9}, 3.652279411548327*^9, {
   3.6524596462019463`*^9, 3.6524596873507433`*^9}, 3.6524597197833977`*^9, {
   3.652459765798341*^9, 3.652459815170445*^9}, {3.652460206617886*^9, 
   3.652460229169609*^9}, {3.652524241994453*^9, 3.652524243966701*^9}, {
   3.652524297343742*^9, 3.652524324154127*^9}, {3.652531494940555*^9, 
   3.652531499395862*^9}, 3.652531568503333*^9, {3.652537451011351*^9, 
   3.65253745557975*^9}, {3.6546247074771347`*^9, 3.6546247153659897`*^9}, 
   3.654625016959997*^9, {3.654939134886352*^9, 3.654939158842568*^9}, 
   3.6551503250241747`*^9, {3.655197781022586*^9, 3.655197864309442*^9}, {
   3.65519969534748*^9, 3.655199700168095*^9}, {3.655200478160756*^9, 
   3.655200521320286*^9}, 3.655200625941136*^9, {3.655203330969808*^9, 
   3.655203368313354*^9}, {3.655203411959384*^9, 3.655203469892538*^9}, {
   3.65520358280401*^9, 3.6552035909794207`*^9}, 3.655203815756497*^9, {
   3.6554619517082663`*^9, 3.6554619751315823`*^9}, {3.6554691182973127`*^9, 
   3.655469132261796*^9}, {3.655469239122614*^9, 3.655469244692546*^9}}],

Cell["Make Figures", "Text",
 CellChangeTimes->{{3.655470843283696*^9, 3.6554708511756973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj"}], "}"}], "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"modelOnDigitsBoxFig", "=", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Column", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "w", ",", "h", ",", "mSig", ",", "aspectRatio", ",", 
                 "columnTitles", ",", "rowTitles", ",", "toStdIJ"}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Panel", "[", 
                RowBox[{
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"{", " ", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"Table", "[", " ", 
                    RowBox[{
                    RowBox[{"modelImg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], " ", 
                    "}"}], "]"}], "\n", "}"}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"setLabel", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], 
              "\[IndentingNewLine]", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "imgs", "]"}]}], "}"}]}], "]"}], "]"}], 
          "}"}], ",", 
         RowBox[{"{", "\n", 
          RowBox[{"Panel", "[", 
           RowBox[{"SwatchLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "dColor", ",", "tColor", ",", "Black", ",", "Black", ",", 
               "Orange", ",", "Red"}], "}"}], ",", "\n", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Distal Trapesium Fit\>\"", ",", 
               "\"\<Tip Elliptical Fit\>\"", ",", 
               "\"\<Extreme edges of the model\>\"", ",", 
               "\"\<Bounding Box\>\"", ",", 
               "\"\<Bounding Box for Extracted Tip\>\"", ",", 
               "\"\<Image Clipping Box\>\""}], "}"}], ",", "\n", 
             RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Graphics", "[", 
                 RowBox[{"Rectangle", "[", "]"}], "]"}], ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"Rectangle", "[", "]"}], "]"}], ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"Disk", "[", "]"}], "]"}], ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], 
                ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], 
                ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}]}], 
               "}"}]}], ",", "\n", 
             RowBox[{"LegendLayout", "\[Rule]", 
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "pairs", "}"}], ",", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{
                    RowBox[{"Flatten", "[", "pairs", "]"}], ",", "6", ",", 
                    "6", ",", "1", ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                  RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
               "]"}]}]}], "]"}], "]"}], "}"}]}], "}"}], ",", "\n", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], ",", 
     "\"\<The Model Bounding Boxes\>\""}], "]"}]}], ";"}]}], "DisplayProgram",\

 CellChangeTimes->{
  3.645172302104376*^9, {3.645172406675255*^9, 3.645172476827759*^9}, {
   3.645172521835741*^9, 3.645172540685832*^9}, {3.645173306697838*^9, 
   3.645173318297184*^9}, {3.645778113456067*^9, 3.645778134577303*^9}, {
   3.6457781872616034`*^9, 3.645778284858857*^9}, {3.645778433752969*^9, 
   3.645778452200252*^9}, {3.645778490877515*^9, 3.6457784932073517`*^9}, {
   3.645778635858747*^9, 3.645778638137537*^9}, {3.6457788198459663`*^9, 
   3.645778849243641*^9}, {3.6457789263670883`*^9, 3.6457789378819523`*^9}, {
   3.6457789768684464`*^9, 3.645779068615349*^9}, 3.645779198334917*^9, {
   3.645859053532652*^9, 3.645859060549239*^9}, {3.645859123889189*^9, 
   3.645859141812591*^9}, {3.645859289580391*^9, 3.645859297722432*^9}, {
   3.645859378847106*^9, 3.645859421746017*^9}, {3.6458600405750427`*^9, 
   3.645860042919221*^9}, {3.6458604525025043`*^9, 3.6458604865467043`*^9}, {
   3.6458749818856087`*^9, 3.645875045389719*^9}, {3.64587509613906*^9, 
   3.645875109259544*^9}, {3.646117642415515*^9, 3.6461176772343807`*^9}, {
   3.6461178091318893`*^9, 3.646117811903618*^9}, {3.6461180662559853`*^9, 
   3.646118186733354*^9}, {3.6461182603573027`*^9, 3.646118265730956*^9}, {
   3.646118461070159*^9, 3.646118529925408*^9}, {3.6461193492854013`*^9, 
   3.646119365064869*^9}, {3.646121548714394*^9, 3.646121568283443*^9}, {
   3.646132950146729*^9, 3.646132961566914*^9}, {3.646133038402584*^9, 
   3.6461330519494057`*^9}, {3.646133281033408*^9, 3.646133294783103*^9}, {
   3.646134061885724*^9, 3.646134183866703*^9}, {3.6461342562554626`*^9, 
   3.64613426348046*^9}, {3.6461344083238993`*^9, 3.646134446527607*^9}, {
   3.646134515846368*^9, 3.646134616289501*^9}, 3.6461346555435677`*^9, {
   3.6461347205789423`*^9, 3.646134745023799*^9}, {3.6461349633992777`*^9, 
   3.6461349714393387`*^9}, {3.646135020325109*^9, 3.646135068396549*^9}, {
   3.646135124235669*^9, 3.646135148284542*^9}, {3.646135207715357*^9, 
   3.646135303454281*^9}, {3.64613535022366*^9, 3.646135385542493*^9}, {
   3.646135436498982*^9, 3.646135437028399*^9}, 3.646135529037711*^9, {
   3.64614142822092*^9, 3.64614159656501*^9}, {3.64614165171143*^9, 
   3.646141667435902*^9}, {3.646141734718729*^9, 3.646141764408636*^9}, {
   3.646141811790646*^9, 3.6461418640717783`*^9}, {3.646141968278103*^9, 
   3.646141969682333*^9}, {3.646142677657086*^9, 3.646142697045299*^9}, {
   3.6463870007947607`*^9, 3.646387004810705*^9}, {3.646389803477787*^9, 
   3.646389998527505*^9}, 3.646390122455628*^9, {3.646472385246169*^9, 
   3.646472443950597*^9}, 3.646472675415904*^9, {3.646473311741893*^9, 
   3.646473316366518*^9}, {3.646473452411298*^9, 3.646473467962792*^9}, {
   3.646473564360135*^9, 3.646473565879107*^9}, {3.6464736211923113`*^9, 
   3.6464736385694838`*^9}, {3.646473698930275*^9, 3.6464737439412603`*^9}, {
   3.646473923905506*^9, 3.6464739909963713`*^9}, {3.646474055014839*^9, 
   3.6464740827866287`*^9}, {3.6464744969620667`*^9, 
   3.6464746141373777`*^9}, {3.646476029464438*^9, 3.646476031784934*^9}, {
   3.6464760715797977`*^9, 3.646476083702898*^9}, {3.646476432350984*^9, 
   3.6464764679490147`*^9}, {3.646477612444269*^9, 3.646477646975904*^9}, {
   3.646477708304059*^9, 3.646477710911724*^9}, 3.646477792055236*^9, {
   3.646479748961883*^9, 3.646479766689069*^9}, 3.6464806373806334`*^9, {
   3.646481393055846*^9, 3.646481394071327*^9}, {3.646482208731804*^9, 
   3.646482272202284*^9}, {3.646482305948872*^9, 3.646482329521943*^9}, {
   3.6464823639354973`*^9, 3.6464823951119432`*^9}, {3.646482521866275*^9, 
   3.6464825250511503`*^9}, {3.646482631856936*^9, 3.646482652528473*^9}, {
   3.646482738615252*^9, 3.646482740541131*^9}, {3.646482869997048*^9, 
   3.6464828978624372`*^9}, {3.646482969777811*^9, 3.646482976641756*^9}, {
   3.646483037023897*^9, 3.646483085124886*^9}, {3.6464831228995533`*^9, 
   3.646483124955854*^9}, {3.646483274137187*^9, 3.646483275179474*^9}, {
   3.6464833238832407`*^9, 3.646483324854849*^9}, {3.646483517205018*^9, 
   3.64648354004146*^9}, {3.6464836013737392`*^9, 3.646483609678315*^9}, 
   3.6464926579993153`*^9, {3.646492797416938*^9, 3.64649280849583*^9}, {
   3.646492911821784*^9, 3.646492924429031*^9}, {3.646493019300213*^9, 
   3.646493081049966*^9}, {3.646493150847024*^9, 3.646493157230186*^9}, {
   3.6464957645092697`*^9, 3.646495848720737*^9}, {3.6464961176139097`*^9, 
   3.646496138649378*^9}, {3.6464961882498617`*^9, 3.6464961906327667`*^9}, {
   3.646496238008945*^9, 3.6464964347373533`*^9}, {3.6464964820446453`*^9, 
   3.646496486960383*^9}, {3.646648221160059*^9, 3.64664825576717*^9}, {
   3.646648292839595*^9, 3.64664829948582*^9}, {3.646648350776016*^9, 
   3.646648393235729*^9}, {3.646648424313884*^9, 3.64664842879712*^9}, {
   3.646648482681213*^9, 3.646648518015975*^9}, {3.6466486374218388`*^9, 
   3.646648640997197*^9}, {3.6466486791487217`*^9, 3.646648714155486*^9}, {
   3.646649377131647*^9, 3.6466493871150303`*^9}, {3.646649592271596*^9, 
   3.64664960514799*^9}, {3.646739586955611*^9, 3.6467396035799723`*^9}, {
   3.646739637216873*^9, 3.646739655176125*^9}, {3.646739717648613*^9, 
   3.646739721646688*^9}, {3.6467397967722473`*^9, 3.646739806578072*^9}, {
   3.646740172564397*^9, 3.646740177674082*^9}, {3.6467405688129377`*^9, 
   3.646740610183022*^9}, {3.646740704890518*^9, 3.646740720411722*^9}, {
   3.646740808612431*^9, 3.646740810400076*^9}, {3.6467408417438393`*^9, 
   3.646740844456847*^9}, {3.646741561880102*^9, 3.646741639567019*^9}, 
   3.6467419693859587`*^9, {3.646742049849931*^9, 3.646742097464649*^9}, {
   3.6467421790617533`*^9, 3.6467421902802067`*^9}, {3.6467529319668016`*^9, 
   3.6467530017977247`*^9}, {3.646753036490356*^9, 3.646753069247944*^9}, {
   3.64675310768047*^9, 3.6467531227508793`*^9}, {3.646753164929173*^9, 
   3.646753314980201*^9}, {3.646753347627425*^9, 3.646753449391103*^9}, {
   3.646753506951953*^9, 3.6467535577641897`*^9}, {3.646753597765582*^9, 
   3.646753625620055*^9}, {3.64675442727281*^9, 3.64675443283003*^9}, {
   3.646991786670833*^9, 3.646991797719287*^9}, {3.646991859846489*^9, 
   3.646991896500826*^9}, {3.646992418185563*^9, 3.646992565257115*^9}, 
   3.646996480723385*^9, {3.64699678516195*^9, 3.6469967870889463`*^9}, {
   3.650704845956533*^9, 3.650704867388996*^9}, {3.650704901107019*^9, 
   3.6507049835310173`*^9}, 3.650705044705318*^9, {3.6507051451647863`*^9, 
   3.6507052011146317`*^9}, {3.6507053277698793`*^9, 3.650705424883134*^9}, {
   3.6507056228972797`*^9, 3.650705641136104*^9}, {3.650705685164844*^9, 
   3.6507057083094387`*^9}, {3.6507314273189993`*^9, 
   3.6507314365349607`*^9}, {3.65073156072911*^9, 3.650731578689479*^9}, 
   3.6507316333595133`*^9, {3.650731706923792*^9, 3.650731725138711*^9}, {
   3.650731765515663*^9, 3.650731833128057*^9}, {3.650777751051704*^9, 
   3.65077775261089*^9}, {3.6507782993529778`*^9, 3.650778338914524*^9}, {
   3.650778417406209*^9, 3.650778446785727*^9}, {3.6507784920319157`*^9, 
   3.650778495255159*^9}, {3.650778924409314*^9, 3.65077892692208*^9}, {
   3.650779543856691*^9, 3.650779612422317*^9}, {3.650779655018848*^9, 
   3.650779679612788*^9}, {3.650781138925511*^9, 3.650781191898761*^9}, {
   3.650783031133781*^9, 3.650783037030695*^9}, {3.650783190656126*^9, 
   3.6507831952072477`*^9}, {3.650787040117303*^9, 3.650787104893977*^9}, {
   3.650787197362088*^9, 3.650787206327207*^9}, {3.6507872639438267`*^9, 
   3.650787277237204*^9}, {3.6507877132986813`*^9, 3.6507877216210423`*^9}, {
   3.650787808177011*^9, 3.65078782467972*^9}, {3.650788002923182*^9, 
   3.650788012506844*^9}, 3.650788086464929*^9, {3.6508005377468243`*^9, 
   3.650800559720922*^9}, {3.650800638167145*^9, 3.650800652439403*^9}, {
   3.650800995651978*^9, 3.650801006416806*^9}, {3.650801050880103*^9, 
   3.650801056342462*^9}, {3.650816055932259*^9, 3.650816057557377*^9}, {
   3.650816105346779*^9, 3.650816216463915*^9}, {3.650816454539031*^9, 
   3.650816458037239*^9}, {3.650953753955399*^9, 3.6509537780933523`*^9}, {
   3.6509560100355473`*^9, 3.650956070934277*^9}, {3.650956107989575*^9, 
   3.650956116848523*^9}, 3.65095659596607*^9, 3.6509566671223707`*^9, {
   3.650957351484906*^9, 3.650957368682796*^9}, {3.650957431067031*^9, 
   3.650957476006783*^9}, {3.650957522880651*^9, 3.650957524502964*^9}, {
   3.650957557957285*^9, 3.6509575686833887`*^9}, {3.650979795398287*^9, 
   3.650979808232497*^9}, {3.650979873913197*^9, 3.6509799024317837`*^9}, {
   3.650979981148963*^9, 3.650979983451921*^9}, {3.650980147763156*^9, 
   3.650980449668915*^9}, {3.650980497012702*^9, 3.650980508746217*^9}, {
   3.6509805499522*^9, 3.650980584965811*^9}, {3.650980634157543*^9, 
   3.6509806834010277`*^9}, {3.650981578759799*^9, 3.6509815809812107`*^9}, {
   3.6509816181065197`*^9, 3.650981699698704*^9}, {3.651416399685089*^9, 
   3.6514164304110537`*^9}, {3.651418827722896*^9, 3.651418850242416*^9}, {
   3.65148034942048*^9, 3.6514803516549683`*^9}, {3.651480385281938*^9, 
   3.651480386345064*^9}, {3.651480422999976*^9, 3.651480423503274*^9}, {
   3.651480457359618*^9, 3.651480544973225*^9}, {3.6514806025389757`*^9, 
   3.651480606321413*^9}, {3.65148063637022*^9, 3.6514806370740557`*^9}, {
   3.651943899423814*^9, 3.651943923156602*^9}, {3.651943954239893*^9, 
   3.651943962924465*^9}, {3.651944008363142*^9, 3.651944010961693*^9}, 
   3.6521836029292507`*^9, {3.652279491845992*^9, 3.652279500389803*^9}, {
   3.6533753914223433`*^9, 3.653375516523843*^9}, {3.654943026477323*^9, 
   3.654943031626975*^9}, {3.654943092507135*^9, 3.654943098875334*^9}, {
   3.6554586887320547`*^9, 3.6554586897508993`*^9}, {3.655468982227573*^9, 
   3.6554690400064697`*^9}, {3.65546907749613*^9, 3.655469079712306*^9}, {
   3.655469145123672*^9, 3.655469173372978*^9}, {3.655469333128039*^9, 
   3.655469336494297*^9}, 3.6554708003147593`*^9, {3.656785648066629*^9, 
   3.656785676240388*^9}, {3.6569646602225924`*^9, 3.656964675394257*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj"}], "}"}], "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"digitTipsFig", "=", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Column", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "w", ",", "h", ",", "mSig", ",", "aspectRatio", ",", 
                "columnTitles", ",", "rowTitles", ",", "toStdIJ"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Table", "[", "\n", 
                   RowBox[{
                    RowBox[{"{", "\n", 
                    RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"imgMTip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{
                    RowBox[{"ImageDimensions", "[", 
                    RowBox[{"imgMTip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "2"}]}]}], "]"}], ",", "\n", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Image Size\>\"", ",", "Bold"}], "]"}], "}"}],
                     "]"}], ",", "\n", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"ImageDimensions", "[", 
                    RowBox[{"imgMTip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Rows\>\"", ",", "\"\<Cols\>\""}], "}"}], 
                    "}"}]}]}], "]"}]}], "\n", "}"}], "\n", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], "]"}],
                  "\[IndentingNewLine]", "]"}], ",", 
                RowBox[{"setLabel", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "imgs", "]"}]}], "}"}]}], "]"}], "]"}], 
         "}"}], "}"}], ",", "\n", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], ",", 
     "\"\<Extracted and Rotated Tip Images\>\""}], "]"}]}], 
  ";"}]}], "DisplayProgram",
 CellChangeTimes->{
  3.645172302104376*^9, {3.645172406675255*^9, 3.645172476827759*^9}, {
   3.645172521835741*^9, 3.645172540685832*^9}, {3.645173306697838*^9, 
   3.645173318297184*^9}, {3.645778113456067*^9, 3.645778134577303*^9}, {
   3.6457781872616034`*^9, 3.645778284858857*^9}, {3.645778433752969*^9, 
   3.645778452200252*^9}, {3.645778490877515*^9, 3.6457784932073517`*^9}, {
   3.645778635858747*^9, 3.645778638137537*^9}, {3.6457788198459663`*^9, 
   3.645778849243641*^9}, {3.6457789263670883`*^9, 3.6457789378819523`*^9}, {
   3.6457789768684464`*^9, 3.645779068615349*^9}, 3.645779198334917*^9, {
   3.645859053532652*^9, 3.645859060549239*^9}, {3.645859123889189*^9, 
   3.645859141812591*^9}, {3.645859289580391*^9, 3.645859297722432*^9}, {
   3.645859378847106*^9, 3.645859421746017*^9}, {3.6458600405750427`*^9, 
   3.645860042919221*^9}, {3.6458604525025043`*^9, 3.6458604865467043`*^9}, {
   3.6458749818856087`*^9, 3.645875045389719*^9}, {3.64587509613906*^9, 
   3.645875109259544*^9}, {3.646117642415515*^9, 3.6461176772343807`*^9}, {
   3.6461178091318893`*^9, 3.646117811903618*^9}, {3.6461180662559853`*^9, 
   3.646118186733354*^9}, {3.6461182603573027`*^9, 3.646118265730956*^9}, {
   3.646118461070159*^9, 3.646118529925408*^9}, {3.6461193492854013`*^9, 
   3.646119365064869*^9}, {3.646121548714394*^9, 3.646121568283443*^9}, {
   3.646132950146729*^9, 3.646132961566914*^9}, {3.646133038402584*^9, 
   3.6461330519494057`*^9}, {3.646133281033408*^9, 3.646133294783103*^9}, {
   3.646134061885724*^9, 3.646134183866703*^9}, {3.6461342562554626`*^9, 
   3.64613426348046*^9}, {3.6461344083238993`*^9, 3.646134446527607*^9}, {
   3.646134515846368*^9, 3.646134616289501*^9}, 3.6461346555435677`*^9, {
   3.6461347205789423`*^9, 3.646134745023799*^9}, {3.6461349633992777`*^9, 
   3.6461349714393387`*^9}, {3.646135020325109*^9, 3.646135068396549*^9}, {
   3.646135124235669*^9, 3.646135148284542*^9}, {3.646135207715357*^9, 
   3.646135303454281*^9}, {3.64613535022366*^9, 3.646135385542493*^9}, {
   3.646135436498982*^9, 3.646135437028399*^9}, 3.646135529037711*^9, {
   3.64614142822092*^9, 3.64614159656501*^9}, {3.64614165171143*^9, 
   3.646141667435902*^9}, {3.646141734718729*^9, 3.646141764408636*^9}, {
   3.646141811790646*^9, 3.6461418640717783`*^9}, {3.646141968278103*^9, 
   3.646141969682333*^9}, {3.646142677657086*^9, 3.646142697045299*^9}, {
   3.6463870007947607`*^9, 3.646387004810705*^9}, {3.646389803477787*^9, 
   3.646389998527505*^9}, 3.646390122455628*^9, {3.646472385246169*^9, 
   3.646472443950597*^9}, 3.646472675415904*^9, {3.646473311741893*^9, 
   3.646473316366518*^9}, {3.646473452411298*^9, 3.646473467962792*^9}, {
   3.646473564360135*^9, 3.646473565879107*^9}, {3.6464736211923113`*^9, 
   3.6464736385694838`*^9}, {3.646473698930275*^9, 3.6464737439412603`*^9}, {
   3.646473923905506*^9, 3.6464739909963713`*^9}, {3.646474055014839*^9, 
   3.6464740827866287`*^9}, {3.6464744969620667`*^9, 
   3.6464746141373777`*^9}, {3.646476029464438*^9, 3.646476031784934*^9}, {
   3.6464760715797977`*^9, 3.646476083702898*^9}, {3.646476432350984*^9, 
   3.6464764679490147`*^9}, {3.646477612444269*^9, 3.646477646975904*^9}, {
   3.646477708304059*^9, 3.646477710911724*^9}, 3.646477792055236*^9, {
   3.646479748961883*^9, 3.646479766689069*^9}, 3.6464806373806334`*^9, {
   3.646481393055846*^9, 3.646481394071327*^9}, {3.646482208731804*^9, 
   3.646482272202284*^9}, {3.646482305948872*^9, 3.646482329521943*^9}, {
   3.6464823639354973`*^9, 3.6464823951119432`*^9}, {3.646482521866275*^9, 
   3.6464825250511503`*^9}, {3.646482631856936*^9, 3.646482652528473*^9}, {
   3.646482738615252*^9, 3.646482740541131*^9}, {3.646482869997048*^9, 
   3.6464828978624372`*^9}, {3.646482969777811*^9, 3.646482976641756*^9}, {
   3.646483037023897*^9, 3.646483085124886*^9}, {3.6464831228995533`*^9, 
   3.646483124955854*^9}, {3.646483274137187*^9, 3.646483275179474*^9}, {
   3.6464833238832407`*^9, 3.646483324854849*^9}, {3.646483517205018*^9, 
   3.64648354004146*^9}, {3.6464836013737392`*^9, 3.646483609678315*^9}, 
   3.6464926579993153`*^9, {3.646492797416938*^9, 3.64649280849583*^9}, {
   3.646492911821784*^9, 3.646492924429031*^9}, {3.646493019300213*^9, 
   3.646493081049966*^9}, {3.646493150847024*^9, 3.646493157230186*^9}, {
   3.6464957645092697`*^9, 3.646495848720737*^9}, {3.6464961176139097`*^9, 
   3.646496138649378*^9}, {3.6464961882498617`*^9, 3.6464961906327667`*^9}, {
   3.646496238008945*^9, 3.6464964347373533`*^9}, {3.6464964820446453`*^9, 
   3.646496486960383*^9}, {3.646648221160059*^9, 3.64664825576717*^9}, {
   3.646648292839595*^9, 3.64664829948582*^9}, {3.646648350776016*^9, 
   3.646648393235729*^9}, {3.646648424313884*^9, 3.64664842879712*^9}, {
   3.646648482681213*^9, 3.646648518015975*^9}, {3.6466486374218388`*^9, 
   3.646648640997197*^9}, {3.6466486791487217`*^9, 3.646648714155486*^9}, {
   3.646649377131647*^9, 3.6466493871150303`*^9}, {3.646649592271596*^9, 
   3.64664960514799*^9}, {3.646739586955611*^9, 3.6467396035799723`*^9}, {
   3.646739637216873*^9, 3.646739655176125*^9}, {3.646739717648613*^9, 
   3.646739721646688*^9}, {3.6467397967722473`*^9, 3.646739806578072*^9}, {
   3.646740172564397*^9, 3.646740177674082*^9}, {3.6467405688129377`*^9, 
   3.646740610183022*^9}, {3.646740704890518*^9, 3.646740720411722*^9}, {
   3.646740808612431*^9, 3.646740810400076*^9}, {3.6467408417438393`*^9, 
   3.646740844456847*^9}, {3.646741561880102*^9, 3.646741639567019*^9}, 
   3.6467419693859587`*^9, {3.646742049849931*^9, 3.646742097464649*^9}, {
   3.6467421790617533`*^9, 3.6467421902802067`*^9}, {3.6467529319668016`*^9, 
   3.6467530017977247`*^9}, {3.646753036490356*^9, 3.646753069247944*^9}, {
   3.64675310768047*^9, 3.6467531227508793`*^9}, {3.646753164929173*^9, 
   3.646753314980201*^9}, {3.646753347627425*^9, 3.646753449391103*^9}, {
   3.646753506951953*^9, 3.6467535577641897`*^9}, {3.646753597765582*^9, 
   3.646753625620055*^9}, {3.64675442727281*^9, 3.64675443283003*^9}, {
   3.646991786670833*^9, 3.646991797719287*^9}, {3.646991859846489*^9, 
   3.646991896500826*^9}, {3.646992418185563*^9, 3.646992565257115*^9}, 
   3.646996480723385*^9, {3.64699678516195*^9, 3.6469967870889463`*^9}, {
   3.650704845956533*^9, 3.650704867388996*^9}, {3.650704901107019*^9, 
   3.6507049835310173`*^9}, 3.650705044705318*^9, {3.6507051451647863`*^9, 
   3.6507052011146317`*^9}, {3.6507053277698793`*^9, 3.650705424883134*^9}, {
   3.6507056228972797`*^9, 3.650705641136104*^9}, {3.650705685164844*^9, 
   3.6507057083094387`*^9}, {3.6507314273189993`*^9, 
   3.6507314365349607`*^9}, {3.65073156072911*^9, 3.650731578689479*^9}, 
   3.6507316333595133`*^9, {3.650731706923792*^9, 3.650731725138711*^9}, {
   3.650731765515663*^9, 3.650731833128057*^9}, {3.650777751051704*^9, 
   3.65077775261089*^9}, {3.6507782993529778`*^9, 3.650778338914524*^9}, {
   3.650778417406209*^9, 3.650778446785727*^9}, {3.6507784920319157`*^9, 
   3.650778495255159*^9}, {3.650778924409314*^9, 3.65077892692208*^9}, {
   3.650779543856691*^9, 3.650779612422317*^9}, {3.650779655018848*^9, 
   3.650779679612788*^9}, {3.650781138925511*^9, 3.650781191898761*^9}, {
   3.650783031133781*^9, 3.650783037030695*^9}, {3.650783190656126*^9, 
   3.6507831952072477`*^9}, {3.650787040117303*^9, 3.650787104893977*^9}, {
   3.650787197362088*^9, 3.650787206327207*^9}, {3.6507872639438267`*^9, 
   3.650787277237204*^9}, {3.6507877132986813`*^9, 3.6507877216210423`*^9}, {
   3.650787808177011*^9, 3.65078782467972*^9}, {3.650788002923182*^9, 
   3.650788012506844*^9}, 3.650788086464929*^9, {3.6508005377468243`*^9, 
   3.650800559720922*^9}, {3.650800638167145*^9, 3.650800652439403*^9}, {
   3.650800995651978*^9, 3.650801006416806*^9}, {3.650801050880103*^9, 
   3.650801056342462*^9}, {3.650816055932259*^9, 3.650816057557377*^9}, {
   3.650816105346779*^9, 3.650816216463915*^9}, {3.650816454539031*^9, 
   3.650816458037239*^9}, {3.650953753955399*^9, 3.6509537780933523`*^9}, {
   3.6509560100355473`*^9, 3.650956070934277*^9}, {3.650956107989575*^9, 
   3.650956116848523*^9}, 3.65095659596607*^9, 3.6509566671223707`*^9, {
   3.650957351484906*^9, 3.650957368682796*^9}, {3.650957431067031*^9, 
   3.650957476006783*^9}, {3.650957522880651*^9, 3.650957524502964*^9}, {
   3.650957557957285*^9, 3.6509575686833887`*^9}, {3.650979795398287*^9, 
   3.650979808232497*^9}, {3.650979873913197*^9, 3.6509799024317837`*^9}, {
   3.650979981148963*^9, 3.650979983451921*^9}, {3.650980147763156*^9, 
   3.650980449668915*^9}, {3.650980497012702*^9, 3.650980508746217*^9}, {
   3.6509805499522*^9, 3.650980584965811*^9}, {3.650980634157543*^9, 
   3.6509806834010277`*^9}, {3.650981578759799*^9, 3.6509815809812107`*^9}, {
   3.6509816181065197`*^9, 3.650981699698704*^9}, {3.651416399685089*^9, 
   3.6514164304110537`*^9}, {3.651418827722896*^9, 3.651418850242416*^9}, {
   3.65148034942048*^9, 3.6514803516549683`*^9}, {3.651480385281938*^9, 
   3.651480386345064*^9}, {3.651480422999976*^9, 3.651480423503274*^9}, {
   3.651480457359618*^9, 3.651480544973225*^9}, {3.6514806025389757`*^9, 
   3.651480606321413*^9}, {3.65148063637022*^9, 3.6514806370740557`*^9}, {
   3.651943899423814*^9, 3.651943923156602*^9}, {3.651943954239893*^9, 
   3.651943962924465*^9}, {3.651944008363142*^9, 3.651944010961693*^9}, 
   3.6521836029292507`*^9, {3.652279491845992*^9, 3.652279500389803*^9}, {
   3.6533753914223433`*^9, 3.653375516523843*^9}, {3.654943026477323*^9, 
   3.654943031626975*^9}, {3.654943092507135*^9, 3.654943098875334*^9}, {
   3.654944578797139*^9, 3.654944580436475*^9}, {3.654944611187867*^9, 
   3.654944611530677*^9}, {3.654944704705646*^9, 3.654944715288694*^9}, {
   3.6549450099671307`*^9, 3.654945030832061*^9}, {3.654950024333283*^9, 
   3.6549502422459173`*^9}, {3.654950491857395*^9, 3.654950566387022*^9}, {
   3.654950840372965*^9, 3.654950845009924*^9}, {3.654951530661159*^9, 
   3.654951553980648*^9}, {3.654951587076195*^9, 3.6549516301784763`*^9}, {
   3.65495557003633*^9, 3.654955571689226*^9}, {3.654956013909182*^9, 
   3.6549560328608923`*^9}, {3.655114537846101*^9, 3.6551145423879633`*^9}, {
   3.655114584523576*^9, 3.655114602425489*^9}, {3.655467324134409*^9, 
   3.6554673315556726`*^9}, 3.655470750358034*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj"}], "}"}], "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"masksFig", "=", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Column", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "w", ",", "h", ",", "mSig", ",", "aspectRatio", ",", 
                "columnTitles", ",", "rowTitles", ",", "toStdIJ"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{"{", "\n", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{"Table", "[", "\n", 
                    RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"modelMask", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}], "\n", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", "}"}], "]"}], "\n", "}"}], "]"}], 
                ",", 
                RowBox[{"setLabel", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "imgs", "]"}]}], "}"}]}], "]"}], "]"}], 
         "}"}], "}"}], ",", "\n", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], ",", 
     "\"\<Tip Maskes\>\""}], "]"}]}], ";"}]}], "DisplayProgram",
 CellChangeTimes->{
  3.645172302104376*^9, {3.645172406675255*^9, 3.645172476827759*^9}, {
   3.645172521835741*^9, 3.645172540685832*^9}, {3.645173306697838*^9, 
   3.645173318297184*^9}, {3.645778113456067*^9, 3.645778134577303*^9}, {
   3.6457781872616034`*^9, 3.645778284858857*^9}, {3.645778433752969*^9, 
   3.645778452200252*^9}, {3.645778490877515*^9, 3.6457784932073517`*^9}, {
   3.645778635858747*^9, 3.645778638137537*^9}, {3.6457788198459663`*^9, 
   3.645778849243641*^9}, {3.6457789263670883`*^9, 3.6457789378819523`*^9}, {
   3.6457789768684464`*^9, 3.645779068615349*^9}, 3.645779198334917*^9, {
   3.645859053532652*^9, 3.645859060549239*^9}, {3.645859123889189*^9, 
   3.645859141812591*^9}, {3.645859289580391*^9, 3.645859297722432*^9}, {
   3.645859378847106*^9, 3.645859421746017*^9}, {3.6458600405750427`*^9, 
   3.645860042919221*^9}, {3.6458604525025043`*^9, 3.6458604865467043`*^9}, {
   3.6458749818856087`*^9, 3.645875045389719*^9}, {3.64587509613906*^9, 
   3.645875109259544*^9}, {3.646117642415515*^9, 3.6461176772343807`*^9}, {
   3.6461178091318893`*^9, 3.646117811903618*^9}, {3.6461180662559853`*^9, 
   3.646118186733354*^9}, {3.6461182603573027`*^9, 3.646118265730956*^9}, {
   3.646118461070159*^9, 3.646118529925408*^9}, {3.6461193492854013`*^9, 
   3.646119365064869*^9}, {3.646121548714394*^9, 3.646121568283443*^9}, {
   3.646132950146729*^9, 3.646132961566914*^9}, {3.646133038402584*^9, 
   3.6461330519494057`*^9}, {3.646133281033408*^9, 3.646133294783103*^9}, {
   3.646134061885724*^9, 3.646134183866703*^9}, {3.6461342562554626`*^9, 
   3.64613426348046*^9}, {3.6461344083238993`*^9, 3.646134446527607*^9}, {
   3.646134515846368*^9, 3.646134616289501*^9}, 3.6461346555435677`*^9, {
   3.6461347205789423`*^9, 3.646134745023799*^9}, {3.6461349633992777`*^9, 
   3.6461349714393387`*^9}, {3.646135020325109*^9, 3.646135068396549*^9}, {
   3.646135124235669*^9, 3.646135148284542*^9}, {3.646135207715357*^9, 
   3.646135303454281*^9}, {3.64613535022366*^9, 3.646135385542493*^9}, {
   3.646135436498982*^9, 3.646135437028399*^9}, 3.646135529037711*^9, {
   3.64614142822092*^9, 3.64614159656501*^9}, {3.64614165171143*^9, 
   3.646141667435902*^9}, {3.646141734718729*^9, 3.646141764408636*^9}, {
   3.646141811790646*^9, 3.6461418640717783`*^9}, {3.646141968278103*^9, 
   3.646141969682333*^9}, {3.646142677657086*^9, 3.646142697045299*^9}, {
   3.6463870007947607`*^9, 3.646387004810705*^9}, {3.646389803477787*^9, 
   3.646389998527505*^9}, 3.646390122455628*^9, {3.646472385246169*^9, 
   3.646472443950597*^9}, 3.646472675415904*^9, {3.646473311741893*^9, 
   3.646473316366518*^9}, {3.646473452411298*^9, 3.646473467962792*^9}, {
   3.646473564360135*^9, 3.646473565879107*^9}, {3.6464736211923113`*^9, 
   3.6464736385694838`*^9}, {3.646473698930275*^9, 3.6464737439412603`*^9}, {
   3.646473923905506*^9, 3.6464739909963713`*^9}, {3.646474055014839*^9, 
   3.6464740827866287`*^9}, {3.6464744969620667`*^9, 
   3.6464746141373777`*^9}, {3.646476029464438*^9, 3.646476031784934*^9}, {
   3.6464760715797977`*^9, 3.646476083702898*^9}, {3.646476432350984*^9, 
   3.6464764679490147`*^9}, {3.646477612444269*^9, 3.646477646975904*^9}, {
   3.646477708304059*^9, 3.646477710911724*^9}, 3.646477792055236*^9, {
   3.646479748961883*^9, 3.646479766689069*^9}, 3.6464806373806334`*^9, {
   3.646481393055846*^9, 3.646481394071327*^9}, {3.646482208731804*^9, 
   3.646482272202284*^9}, {3.646482305948872*^9, 3.646482329521943*^9}, {
   3.6464823639354973`*^9, 3.6464823951119432`*^9}, {3.646482521866275*^9, 
   3.6464825250511503`*^9}, {3.646482631856936*^9, 3.646482652528473*^9}, {
   3.646482738615252*^9, 3.646482740541131*^9}, {3.646482869997048*^9, 
   3.6464828978624372`*^9}, {3.646482969777811*^9, 3.646482976641756*^9}, {
   3.646483037023897*^9, 3.646483085124886*^9}, {3.6464831228995533`*^9, 
   3.646483124955854*^9}, {3.646483274137187*^9, 3.646483275179474*^9}, {
   3.6464833238832407`*^9, 3.646483324854849*^9}, {3.646483517205018*^9, 
   3.64648354004146*^9}, {3.6464836013737392`*^9, 3.646483609678315*^9}, 
   3.6464926579993153`*^9, {3.646492797416938*^9, 3.64649280849583*^9}, {
   3.646492911821784*^9, 3.646492924429031*^9}, {3.646493019300213*^9, 
   3.646493081049966*^9}, {3.646493150847024*^9, 3.646493157230186*^9}, {
   3.6464957645092697`*^9, 3.646495848720737*^9}, {3.6464961176139097`*^9, 
   3.646496138649378*^9}, {3.6464961882498617`*^9, 3.6464961906327667`*^9}, {
   3.646496238008945*^9, 3.6464964347373533`*^9}, {3.6464964820446453`*^9, 
   3.646496486960383*^9}, {3.646648221160059*^9, 3.64664825576717*^9}, {
   3.646648292839595*^9, 3.64664829948582*^9}, {3.646648350776016*^9, 
   3.646648393235729*^9}, {3.646648424313884*^9, 3.64664842879712*^9}, {
   3.646648482681213*^9, 3.646648518015975*^9}, {3.6466486374218388`*^9, 
   3.646648640997197*^9}, {3.6466486791487217`*^9, 3.646648714155486*^9}, {
   3.646649377131647*^9, 3.6466493871150303`*^9}, {3.646649592271596*^9, 
   3.64664960514799*^9}, {3.646739586955611*^9, 3.6467396035799723`*^9}, {
   3.646739637216873*^9, 3.646739655176125*^9}, {3.646739717648613*^9, 
   3.646739721646688*^9}, {3.6467397967722473`*^9, 3.646739806578072*^9}, {
   3.646740172564397*^9, 3.646740177674082*^9}, {3.6467405688129377`*^9, 
   3.646740610183022*^9}, {3.646740704890518*^9, 3.646740720411722*^9}, {
   3.646740808612431*^9, 3.646740810400076*^9}, {3.6467408417438393`*^9, 
   3.646740844456847*^9}, {3.646741561880102*^9, 3.646741639567019*^9}, 
   3.6467419693859587`*^9, {3.646742049849931*^9, 3.646742097464649*^9}, {
   3.6467421790617533`*^9, 3.6467421902802067`*^9}, {3.6467529319668016`*^9, 
   3.6467530017977247`*^9}, {3.646753036490356*^9, 3.646753069247944*^9}, {
   3.64675310768047*^9, 3.6467531227508793`*^9}, {3.646753164929173*^9, 
   3.646753314980201*^9}, {3.646753347627425*^9, 3.646753449391103*^9}, {
   3.646753506951953*^9, 3.6467535577641897`*^9}, {3.646753597765582*^9, 
   3.646753625620055*^9}, {3.64675442727281*^9, 3.64675443283003*^9}, {
   3.646991786670833*^9, 3.646991797719287*^9}, {3.646991859846489*^9, 
   3.646991896500826*^9}, {3.646992418185563*^9, 3.646992565257115*^9}, 
   3.646996480723385*^9, {3.64699678516195*^9, 3.6469967870889463`*^9}, {
   3.650704845956533*^9, 3.650704867388996*^9}, {3.650704901107019*^9, 
   3.6507049835310173`*^9}, 3.650705044705318*^9, {3.6507051451647863`*^9, 
   3.6507052011146317`*^9}, {3.6507053277698793`*^9, 3.650705424883134*^9}, {
   3.6507056228972797`*^9, 3.650705641136104*^9}, {3.650705685164844*^9, 
   3.6507057083094387`*^9}, {3.6507314273189993`*^9, 
   3.6507314365349607`*^9}, {3.65073156072911*^9, 3.650731578689479*^9}, 
   3.6507316333595133`*^9, {3.650731706923792*^9, 3.650731725138711*^9}, {
   3.650731765515663*^9, 3.650731833128057*^9}, {3.650777751051704*^9, 
   3.65077775261089*^9}, {3.6507782993529778`*^9, 3.650778338914524*^9}, {
   3.650778417406209*^9, 3.650778446785727*^9}, {3.6507784920319157`*^9, 
   3.650778495255159*^9}, {3.650778924409314*^9, 3.65077892692208*^9}, {
   3.650779543856691*^9, 3.650779612422317*^9}, {3.650779655018848*^9, 
   3.650779679612788*^9}, {3.650781138925511*^9, 3.650781191898761*^9}, {
   3.650783031133781*^9, 3.650783037030695*^9}, {3.650783190656126*^9, 
   3.6507831952072477`*^9}, {3.650787040117303*^9, 3.650787104893977*^9}, {
   3.650787197362088*^9, 3.650787206327207*^9}, {3.6507872639438267`*^9, 
   3.650787277237204*^9}, {3.6507877132986813`*^9, 3.6507877216210423`*^9}, {
   3.650787808177011*^9, 3.65078782467972*^9}, {3.650788002923182*^9, 
   3.650788012506844*^9}, 3.650788086464929*^9, {3.6508005377468243`*^9, 
   3.650800559720922*^9}, {3.650800638167145*^9, 3.650800652439403*^9}, {
   3.650800995651978*^9, 3.650801006416806*^9}, {3.650801050880103*^9, 
   3.650801056342462*^9}, {3.650816055932259*^9, 3.650816057557377*^9}, {
   3.650816105346779*^9, 3.650816216463915*^9}, {3.650816454539031*^9, 
   3.650816458037239*^9}, {3.650953753955399*^9, 3.6509537780933523`*^9}, {
   3.6509560100355473`*^9, 3.650956070934277*^9}, {3.650956107989575*^9, 
   3.650956116848523*^9}, 3.65095659596607*^9, 3.6509566671223707`*^9, {
   3.650957351484906*^9, 3.650957368682796*^9}, {3.650957431067031*^9, 
   3.650957476006783*^9}, {3.650957522880651*^9, 3.650957524502964*^9}, {
   3.650957557957285*^9, 3.6509575686833887`*^9}, {3.650979795398287*^9, 
   3.650979808232497*^9}, {3.650979873913197*^9, 3.6509799024317837`*^9}, {
   3.650979981148963*^9, 3.650979983451921*^9}, {3.650980147763156*^9, 
   3.650980449668915*^9}, {3.650980497012702*^9, 3.650980508746217*^9}, {
   3.6509805499522*^9, 3.650980584965811*^9}, {3.650980634157543*^9, 
   3.6509806834010277`*^9}, {3.650981578759799*^9, 3.6509815809812107`*^9}, {
   3.6509816181065197`*^9, 3.650981699698704*^9}, {3.651416399685089*^9, 
   3.6514164304110537`*^9}, {3.651418827722896*^9, 3.651418850242416*^9}, {
   3.65148034942048*^9, 3.6514803516549683`*^9}, {3.651480385281938*^9, 
   3.651480386345064*^9}, {3.651480422999976*^9, 3.651480423503274*^9}, {
   3.651480457359618*^9, 3.651480544973225*^9}, {3.6514806025389757`*^9, 
   3.651480606321413*^9}, {3.65148063637022*^9, 3.6514806370740557`*^9}, {
   3.651943899423814*^9, 3.651943923156602*^9}, {3.651943954239893*^9, 
   3.651943962924465*^9}, {3.651944008363142*^9, 3.651944010961693*^9}, 
   3.6521836029292507`*^9, {3.652279491845992*^9, 3.652279500389803*^9}, {
   3.6533753914223433`*^9, 3.653375516523843*^9}, {3.654943026477323*^9, 
   3.654943031626975*^9}, {3.654943092507135*^9, 3.654943098875334*^9}, {
   3.654944578797139*^9, 3.654944580436475*^9}, {3.654944611187867*^9, 
   3.654944611530677*^9}, {3.654944704705646*^9, 3.654944715288694*^9}, {
   3.6549450099671307`*^9, 3.654945030832061*^9}, {3.654947302730236*^9, 
   3.654947326246758*^9}, {3.6549476920686817`*^9, 3.654947696241682*^9}, {
   3.654947839336213*^9, 3.6549478399830313`*^9}, {3.654950855204609*^9, 
   3.654950858841298*^9}, {3.654955219392898*^9, 3.654955219893138*^9}, {
   3.6554673391312113`*^9, 3.655467343570737*^9}, {3.65546891697188*^9, 
   3.655468928931611*^9}, 3.6554707440472317`*^9}],

Cell[BoxData[
 RowBox[{"tipFigs", "=", 
  RowBox[{"Panel", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"modelOnDigitsBoxFig", ",", 
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{"masksFig", ",", "digitTipsFig"}], "}"}], "]"}]}], "}"}], 
      "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}], 
   "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.655468598016055*^9, 3.655468615372607*^9}, {
  3.655468652268491*^9, 3.6554686540378428`*^9}, {3.655468696811414*^9, 
  3.6554687282750273`*^9}, {3.6554687923947363`*^9, 3.655468804984169*^9}, {
  3.6554688763968782`*^9, 3.65546888317279*^9}, {3.655470882641725*^9, 
  3.655470887152042*^9}, {3.655535393775756*^9, 3.655535397126678*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Model_Overlayed_Boundary_with_Tips\>\"", "<>", 
    "\"\<.jpg\>\""}], ",", "tipFigs", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.654596868843508*^9, 3.654596881648217*^9}, {
   3.6545974976548223`*^9, 3.654597521430067*^9}, {3.654598864505104*^9, 
   3.654598880888825*^9}, {3.654598939741497*^9, 3.654598960001548*^9}, 
   3.654614416155332*^9, {3.654614848784699*^9, 3.654614867917218*^9}, 
   3.6546215811030397`*^9, {3.654622352133923*^9, 3.6546223548890867`*^9}, {
   3.655458660471603*^9, 3.65545867611062*^9}, {3.6554708988432617`*^9, 
   3.655470914175274*^9}, {3.656785072699565*^9, 3.656785073228557*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mi", ",", "mj"}], "}"}], "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "imgLCaCbDataClassified", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Panel", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Column", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "w", ",", "h", ",", "mSig", ",", "aspectRatio", ",", 
             "columnTitles", ",", "rowTitles", ",", "toStdIJ"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", "\n", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"Table", "[", "\n", 
                   RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"imgTipMasked", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "120"}]}], "]"}], "\n", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "mj"}], "}"}]}], "]"}], 
                  "\[IndentingNewLine]", "}"}], "]"}], "\n", "}"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0.1", ",", "0"}], "}"}]}]}], "]"}], ",", 
             RowBox[{"setLabel", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "imgs", "]"}]}], "}"}]}], "]"}], "]"}], 
      "}"}], "}"}], ",", "\n", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], 
  "]"}]}], "DisplayProgram",
 CellChangeTimes->{
  3.645172302104376*^9, {3.645172406675255*^9, 3.645172476827759*^9}, {
   3.645172521835741*^9, 3.645172540685832*^9}, {3.645173306697838*^9, 
   3.645173318297184*^9}, {3.645778113456067*^9, 3.645778134577303*^9}, {
   3.6457781872616034`*^9, 3.645778284858857*^9}, {3.645778433752969*^9, 
   3.645778452200252*^9}, {3.645778490877515*^9, 3.6457784932073517`*^9}, {
   3.645778635858747*^9, 3.645778638137537*^9}, {3.6457788198459663`*^9, 
   3.645778849243641*^9}, {3.6457789263670883`*^9, 3.6457789378819523`*^9}, {
   3.6457789768684464`*^9, 3.645779068615349*^9}, 3.645779198334917*^9, {
   3.645859053532652*^9, 3.645859060549239*^9}, {3.645859123889189*^9, 
   3.645859141812591*^9}, {3.645859289580391*^9, 3.645859297722432*^9}, {
   3.645859378847106*^9, 3.645859421746017*^9}, {3.6458600405750427`*^9, 
   3.645860042919221*^9}, {3.6458604525025043`*^9, 3.6458604865467043`*^9}, {
   3.6458749818856087`*^9, 3.645875045389719*^9}, {3.64587509613906*^9, 
   3.645875109259544*^9}, {3.646117642415515*^9, 3.6461176772343807`*^9}, {
   3.6461178091318893`*^9, 3.646117811903618*^9}, {3.6461180662559853`*^9, 
   3.646118186733354*^9}, {3.6461182603573027`*^9, 3.646118265730956*^9}, {
   3.646118461070159*^9, 3.646118529925408*^9}, {3.6461193492854013`*^9, 
   3.646119365064869*^9}, {3.646121548714394*^9, 3.646121568283443*^9}, {
   3.646132950146729*^9, 3.646132961566914*^9}, {3.646133038402584*^9, 
   3.6461330519494057`*^9}, {3.646133281033408*^9, 3.646133294783103*^9}, {
   3.646134061885724*^9, 3.646134183866703*^9}, {3.6461342562554626`*^9, 
   3.64613426348046*^9}, {3.6461344083238993`*^9, 3.646134446527607*^9}, {
   3.646134515846368*^9, 3.646134616289501*^9}, 3.6461346555435677`*^9, {
   3.6461347205789423`*^9, 3.646134745023799*^9}, {3.6461349633992777`*^9, 
   3.6461349714393387`*^9}, {3.646135020325109*^9, 3.646135068396549*^9}, {
   3.646135124235669*^9, 3.646135148284542*^9}, {3.646135207715357*^9, 
   3.646135303454281*^9}, {3.64613535022366*^9, 3.646135385542493*^9}, {
   3.646135436498982*^9, 3.646135437028399*^9}, 3.646135529037711*^9, {
   3.64614142822092*^9, 3.64614159656501*^9}, {3.64614165171143*^9, 
   3.646141667435902*^9}, {3.646141734718729*^9, 3.646141764408636*^9}, {
   3.646141811790646*^9, 3.6461418640717783`*^9}, {3.646141968278103*^9, 
   3.646141969682333*^9}, {3.646142677657086*^9, 3.646142697045299*^9}, {
   3.6463870007947607`*^9, 3.646387004810705*^9}, {3.646389803477787*^9, 
   3.646389998527505*^9}, 3.646390122455628*^9, {3.646472385246169*^9, 
   3.646472443950597*^9}, 3.646472675415904*^9, {3.646473311741893*^9, 
   3.646473316366518*^9}, {3.646473452411298*^9, 3.646473467962792*^9}, {
   3.646473564360135*^9, 3.646473565879107*^9}, {3.6464736211923113`*^9, 
   3.6464736385694838`*^9}, {3.646473698930275*^9, 3.6464737439412603`*^9}, {
   3.646473923905506*^9, 3.6464739909963713`*^9}, {3.646474055014839*^9, 
   3.6464740827866287`*^9}, {3.6464744969620667`*^9, 
   3.6464746141373777`*^9}, {3.646476029464438*^9, 3.646476031784934*^9}, {
   3.6464760715797977`*^9, 3.646476083702898*^9}, {3.646476432350984*^9, 
   3.6464764679490147`*^9}, {3.646477612444269*^9, 3.646477646975904*^9}, {
   3.646477708304059*^9, 3.646477710911724*^9}, 3.646477792055236*^9, {
   3.646479748961883*^9, 3.646479766689069*^9}, 3.6464806373806334`*^9, {
   3.646481393055846*^9, 3.646481394071327*^9}, {3.646482208731804*^9, 
   3.646482272202284*^9}, {3.646482305948872*^9, 3.646482329521943*^9}, {
   3.6464823639354973`*^9, 3.6464823951119432`*^9}, {3.646482521866275*^9, 
   3.6464825250511503`*^9}, {3.646482631856936*^9, 3.646482652528473*^9}, {
   3.646482738615252*^9, 3.646482740541131*^9}, {3.646482869997048*^9, 
   3.6464828978624372`*^9}, {3.646482969777811*^9, 3.646482976641756*^9}, {
   3.646483037023897*^9, 3.646483085124886*^9}, {3.6464831228995533`*^9, 
   3.646483124955854*^9}, {3.646483274137187*^9, 3.646483275179474*^9}, {
   3.6464833238832407`*^9, 3.646483324854849*^9}, {3.646483517205018*^9, 
   3.64648354004146*^9}, {3.6464836013737392`*^9, 3.646483609678315*^9}, 
   3.6464926579993153`*^9, {3.646492797416938*^9, 3.64649280849583*^9}, {
   3.646492911821784*^9, 3.646492924429031*^9}, {3.646493019300213*^9, 
   3.646493081049966*^9}, {3.646493150847024*^9, 3.646493157230186*^9}, {
   3.6464957645092697`*^9, 3.646495848720737*^9}, {3.6464961176139097`*^9, 
   3.646496138649378*^9}, {3.6464961882498617`*^9, 3.6464961906327667`*^9}, {
   3.646496238008945*^9, 3.6464964347373533`*^9}, {3.6464964820446453`*^9, 
   3.646496486960383*^9}, {3.646648221160059*^9, 3.64664825576717*^9}, {
   3.646648292839595*^9, 3.64664829948582*^9}, {3.646648350776016*^9, 
   3.646648393235729*^9}, {3.646648424313884*^9, 3.64664842879712*^9}, {
   3.646648482681213*^9, 3.646648518015975*^9}, {3.6466486374218388`*^9, 
   3.646648640997197*^9}, {3.6466486791487217`*^9, 3.646648714155486*^9}, {
   3.646649377131647*^9, 3.6466493871150303`*^9}, {3.646649592271596*^9, 
   3.64664960514799*^9}, {3.646739586955611*^9, 3.6467396035799723`*^9}, {
   3.646739637216873*^9, 3.646739655176125*^9}, {3.646739717648613*^9, 
   3.646739721646688*^9}, {3.6467397967722473`*^9, 3.646739806578072*^9}, {
   3.646740172564397*^9, 3.646740177674082*^9}, {3.6467405688129377`*^9, 
   3.646740610183022*^9}, {3.646740704890518*^9, 3.646740720411722*^9}, {
   3.646740808612431*^9, 3.646740810400076*^9}, {3.6467408417438393`*^9, 
   3.646740844456847*^9}, {3.646741561880102*^9, 3.646741639567019*^9}, 
   3.6467419693859587`*^9, {3.646742049849931*^9, 3.646742097464649*^9}, {
   3.6467421790617533`*^9, 3.6467421902802067`*^9}, {3.6467529319668016`*^9, 
   3.6467530017977247`*^9}, {3.646753036490356*^9, 3.646753069247944*^9}, {
   3.64675310768047*^9, 3.6467531227508793`*^9}, {3.646753164929173*^9, 
   3.646753314980201*^9}, {3.646753347627425*^9, 3.646753449391103*^9}, {
   3.646753506951953*^9, 3.6467535577641897`*^9}, {3.646753597765582*^9, 
   3.646753625620055*^9}, {3.64675442727281*^9, 3.64675443283003*^9}, {
   3.646991786670833*^9, 3.646991797719287*^9}, {3.646991859846489*^9, 
   3.646991896500826*^9}, {3.646992418185563*^9, 3.646992565257115*^9}, 
   3.646996480723385*^9, {3.64699678516195*^9, 3.6469967870889463`*^9}, {
   3.650704845956533*^9, 3.650704867388996*^9}, {3.650704901107019*^9, 
   3.6507049835310173`*^9}, 3.650705044705318*^9, {3.6507051451647863`*^9, 
   3.6507052011146317`*^9}, {3.6507053277698793`*^9, 3.650705424883134*^9}, {
   3.6507056228972797`*^9, 3.650705641136104*^9}, {3.650705685164844*^9, 
   3.6507057083094387`*^9}, {3.6507314273189993`*^9, 
   3.6507314365349607`*^9}, {3.65073156072911*^9, 3.650731578689479*^9}, 
   3.6507316333595133`*^9, {3.650731706923792*^9, 3.650731725138711*^9}, {
   3.650731765515663*^9, 3.650731833128057*^9}, {3.650777751051704*^9, 
   3.65077775261089*^9}, {3.6507782993529778`*^9, 3.650778338914524*^9}, {
   3.650778417406209*^9, 3.650778446785727*^9}, {3.6507784920319157`*^9, 
   3.650778495255159*^9}, {3.650778924409314*^9, 3.65077892692208*^9}, {
   3.650779543856691*^9, 3.650779612422317*^9}, {3.650779655018848*^9, 
   3.650779679612788*^9}, {3.650781138925511*^9, 3.650781191898761*^9}, {
   3.650783031133781*^9, 3.650783037030695*^9}, {3.650783190656126*^9, 
   3.6507831952072477`*^9}, {3.650787040117303*^9, 3.650787104893977*^9}, {
   3.650787197362088*^9, 3.650787206327207*^9}, {3.6507872639438267`*^9, 
   3.650787277237204*^9}, {3.6507877132986813`*^9, 3.6507877216210423`*^9}, {
   3.650787808177011*^9, 3.65078782467972*^9}, {3.650788002923182*^9, 
   3.650788012506844*^9}, 3.650788086464929*^9, {3.6508005377468243`*^9, 
   3.650800559720922*^9}, {3.650800638167145*^9, 3.650800652439403*^9}, {
   3.650800995651978*^9, 3.650801006416806*^9}, {3.650801050880103*^9, 
   3.650801056342462*^9}, {3.650816055932259*^9, 3.650816057557377*^9}, {
   3.650816105346779*^9, 3.650816216463915*^9}, {3.650816454539031*^9, 
   3.650816458037239*^9}, {3.650953753955399*^9, 3.6509537780933523`*^9}, {
   3.6509560100355473`*^9, 3.650956070934277*^9}, {3.650956107989575*^9, 
   3.650956116848523*^9}, 3.65095659596607*^9, 3.6509566671223707`*^9, {
   3.650957351484906*^9, 3.650957368682796*^9}, {3.650957431067031*^9, 
   3.650957476006783*^9}, {3.650957522880651*^9, 3.650957524502964*^9}, {
   3.650957557957285*^9, 3.6509575686833887`*^9}, {3.650979795398287*^9, 
   3.650979808232497*^9}, {3.650979873913197*^9, 3.6509799024317837`*^9}, {
   3.650979981148963*^9, 3.650979983451921*^9}, {3.650980147763156*^9, 
   3.650980449668915*^9}, {3.650980497012702*^9, 3.650980508746217*^9}, {
   3.6509805499522*^9, 3.650980584965811*^9}, {3.650980634157543*^9, 
   3.6509806834010277`*^9}, {3.650981578759799*^9, 3.6509815809812107`*^9}, {
   3.6509816181065197`*^9, 3.650981699698704*^9}, {3.651416399685089*^9, 
   3.6514164304110537`*^9}, {3.651418827722896*^9, 3.651418850242416*^9}, {
   3.65148034942048*^9, 3.6514803516549683`*^9}, {3.651480385281938*^9, 
   3.651480386345064*^9}, {3.651480422999976*^9, 3.651480423503274*^9}, {
   3.651480457359618*^9, 3.651480544973225*^9}, {3.6514806025389757`*^9, 
   3.651480606321413*^9}, {3.65148063637022*^9, 3.6514806370740557`*^9}, {
   3.651943899423814*^9, 3.651943923156602*^9}, {3.651943954239893*^9, 
   3.651943962924465*^9}, {3.651944008363142*^9, 3.651944010961693*^9}, 
   3.6521836029292507`*^9, {3.652279491845992*^9, 3.652279500389803*^9}, {
   3.6533753914223433`*^9, 3.653375516523843*^9}, {3.654943026477323*^9, 
   3.654943031626975*^9}, {3.654943092507135*^9, 3.654943098875334*^9}, {
   3.654944578797139*^9, 3.654944580436475*^9}, {3.654944611187867*^9, 
   3.654944611530677*^9}, {3.654944704705646*^9, 3.654944715288694*^9}, {
   3.6549450099671307`*^9, 3.654945030832061*^9}, {3.654947302730236*^9, 
   3.654947326246758*^9}, {3.6549499951331053`*^9, 3.654949996499393*^9}, {
   3.654951014631538*^9, 3.654951018140272*^9}, {3.65496799715344*^9, 
   3.654967997920422*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["10.0  Bespoke Gradient Filter", "Subsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
   3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
   3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}, {
   3.6451745177618113`*^9, 3.6451745511597767`*^9}, {3.64517499670475*^9, 
   3.64517499947962*^9}, {3.645175080948804*^9, 3.645175090868601*^9}, {
   3.645439136219509*^9, 3.645439144449575*^9}, {3.645439215592917*^9, 
   3.645439259606365*^9}, {3.6464709862831783`*^9, 3.6464710074329557`*^9}, {
   3.647950418103414*^9, 3.6479504208311663`*^9}, 3.648106995780456*^9, {
   3.648256254564239*^9, 3.64825626716313*^9}, {3.6482583759171753`*^9, 
   3.648258406090315*^9}, {3.648258491672133*^9, 3.648258495048208*^9}, {
   3.648258548672113*^9, 3.6482585975813313`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"imgLCaCbTip", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"processImage", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", 
           RowBox[{
            RowBox[{"imgMTip", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "\"\<Byte\>\""}], 
           "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"newRules", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Unit", "\[Rule]", "True"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"imgs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "imgs", "]"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6424894985204077`*^9, 3.642489555067124*^9}, {
   3.642489721867859*^9, 3.642489723167103*^9}, {3.642491369213069*^9, 
   3.6424913743347797`*^9}, {3.642491499909544*^9, 3.6424915023372307`*^9}, {
   3.6424916073566637`*^9, 3.642491608195093*^9}, {3.643104166002541*^9, 
   3.643104223258341*^9}, {3.643109541065351*^9, 3.643109606195429*^9}, 
   3.643184700143141*^9, {3.643721706402083*^9, 3.643721729713887*^9}, {
   3.654970650000658*^9, 3.654970680405628*^9}, {3.6551159212511387`*^9, 
   3.655115932026335*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"j", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"imgsM", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.65510619240309*^9, 3.6551061964389677`*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"j", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"imgMTip", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.655107218390442*^9, 3.655107227579657*^9}, 
   3.65547178791485*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgMTip", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
  RowBox[{"modelMTip", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
  RowBox[{"modelMTipPos", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"imgLCaCbTip", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6551465953640347`*^9, 3.6551466261496363`*^9}}],

Cell[BoxData[
 RowBox[{"modelMTip", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655533332423067*^9, 3.6555333338299723`*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"j", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{"imgLCaCbTip", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "All", ",", "All"}], "]"}], "]"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"maskTip", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{"imgLCaCbTip", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "All", ",", "All"}], "]"}], "]"}], 
        "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"maskTip", "[", 
      RowBox[{
       RowBox[{"imgMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.655106001271559*^9, 3.655106028620522*^9}, {
  3.655106158426187*^9, 3.6551061654591293`*^9}, {3.655146118469253*^9, 
  3.655146162994318*^9}, {3.655146629659377*^9, 3.655146632417643*^9}, {
  3.655146920452553*^9, 3.6551469207470293`*^9}, {3.655533279284837*^9, 
  3.6555332798026*^9}}],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"imgLCaCbTip", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"imgLCaCbTip", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.654970757019341*^9, 3.6549707594739532`*^9}, {
  3.654971533108086*^9, 3.654971537305925*^9}, {3.654971687029961*^9, 
  3.654971690782649*^9}}],

Cell[BoxData[
 RowBox[{"imgMTip", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.654970011467245*^9, 3.65497001320124*^9}, {
  3.655496278185061*^9, 3.655496286242159*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"j", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{"imgLCaCbTip", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "All", ",", "All", ",", "1"}], "]"}], 
       "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"maskTip", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{"imgLCaCbTip", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "All", ",", "All", ",", "1"}], "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"iScaleS", "/", 
        RowBox[{"iScaleM", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"EdgeDetect", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{"imgLCaCbTip", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "All", ",", "All", ",", "1"}], "]"}], 
         "]"}], "]"}], ",", "5"}], "]"}], ",", 
     RowBox[{"maskTip", "[", 
      RowBox[{
       RowBox[{"EdgeDetect", "[", 
        RowBox[{
         RowBox[{"Image", "[", 
          RowBox[{"imgLCaCbTip", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "All", ",", "All", ",", "1"}], "]"}], 
           "]"}], "]"}], ",", "5"}], "]"}], ",", 
       RowBox[{"modelMTip", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"modelMTipPos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"iScaleS", "/", 
        RowBox[{"iScaleM", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6555297467422533`*^9, 3.655529766637638*^9}, 
   3.655530215212586*^9, {3.655531083395794*^9, 3.6555311067001123`*^9}, {
   3.6555313805639963`*^9, 3.655531463908689*^9}, {3.6555332404289713`*^9, 
   3.6555332426413517`*^9}, {3.655533815831843*^9, 3.655533828422728*^9}, {
   3.655533871869376*^9, 3.655533881103917*^9}}],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"GradientFilter", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{"imgLCaCbTip", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], 
         "]"}], "]"}], ",", "4"}], "]"}], "//", "ImageAdjust"}], " ", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LaplacianGaussianFilter", "[", 
      RowBox[{
       RowBox[{"Image", "[", 
        RowBox[{"imgLCaCbTip", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], 
         "]"}], "]"}], ",", "2"}], "]"}], "//", "ImageAdjust"}]}], " ", "}"}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.654974673260721*^9, {3.655471837207601*^9, 3.655471847169393*^9}, {
   3.655471890656838*^9, 3.655471901861474*^9}, 3.6554719351905622`*^9, 
   3.655473620060989*^9, {3.655496303728198*^9, 3.655496308006822*^9}, 
   3.655496354469768*^9, {3.65549639139625*^9, 3.655496393755313*^9}, {
   3.655497133427655*^9, 3.655497208026469*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"imgD", "=", 
    RowBox[{"ImageData", "[", 
     RowBox[{
      RowBox[{"LaplacianGaussianFilter", "[", 
       RowBox[{
        RowBox[{"Image", "[", 
         RowBox[{"imgLCaCbTip", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3", ",", "All", ",", "All", ",", "1"}], "]"}], 
          "]"}], "]"}], ",", "3"}], "]"}], "//", "ImageAdjust"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6554973290221786`*^9, 3.655497342139042*^9}, {
  3.655497969256341*^9, 3.6554980304845657`*^9}}],

Cell[BoxData[
 RowBox[{"Min", "[", "imgD", "]"}]], "Input",
 CellChangeTimes->{{3.655498174281378*^9, 3.655498189041835*^9}}],

Cell[BoxData[
 RowBox[{"EdgeDetect", "[", 
  RowBox[{
   RowBox[{"Image", "[", "imgD", "]"}], ",", "19", ",", "0"}], "]"}]], "Input",\

 CellChangeTimes->{{3.655498395504704*^9, 3.655498419851347*^9}, {
  3.655498456207428*^9, 3.65549846369343*^9}, {3.655498607864574*^9, 
  3.655498627232236*^9}, {3.6554986607738743`*^9, 3.655498744476019*^9}}],

Cell[BoxData[
 RowBox[{"Binarize", "[", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{"2", 
     RowBox[{"Abs", "[", 
      RowBox[{"imgD", "-", "0.5"}], "]"}]}], "]"}], ",", "0.2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655498059484252*^9, 3.655498152871703*^9}, {
  3.655498208674564*^9, 3.655498218077703*^9}}],

Cell[BoxData[{
 RowBox[{"Blur", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsXXlUT1/XrzQqY9FgLiKJCqnvPQOazIkMmWUeIkOSsUmlgZCkKJkaRMpU
3+/d1xzJnCFkKlNlSmWm1+7551n547eexfM+v/d9nLW2te3pDufe79md87ln
t/OYP2y6ipKS0iLNH/8Mm+zTZ+HCyb7D1fE/0ybP7W49F5Vt6ykp9UbmT/vT
/hfa+ceZttPCqWyvebasZLKPTPf1Qzv9I5bkzeaTRM87hNxsdEm8tTgDXNc+
g7zR7aHzKjP2bHgly73Un7ebu4zP/O7DdxT15e4ZD9iU7lU0yDgdlFo2l+aH
3IZx7z+JJZuSyYfAT6R8mh95/v2t7D99vb/a8BrwWvCa8NpYymcxWOUOjIrQ
l/o1OQAL9D/QRpaPWeNtDnxCzVL+StWXL8p34MKLx6yn+ic6svognI5sKWl+
fwYhUxrAoC43ybj7LjTD1ZUed+X0XF4vKm/dhJ602Ut2Tj4q0OV+inbZDxUr
LXYoPOrlyLGPsK+wz7DvfvX8kJBHGerQBm3RB33r9l/+o6eytpWLCVV+TW4U
JhJNgzfigZrLELOusRSttRdGZZbTXRdvsfZhAj8V4FlLyKMMdX1WJsGTUZ+h
LDkQsk9uVPR5vk58Gn8B6osdpTN7L0OebTM2+7sGn7zUky+eGFNLyKMMdQOX
XYZV300lG8U5sO4SIm5QOak4lRYJh8xUpeqg1L+8vkGD0yButYYUmhQHxzqZ
ikjIowx1v3p/ZhvqC37KSeSpV0uaanyddOjUCoIbaUpfNZn0xfEu3Co3Ym0t
G/DBYUv4qVbbagl5lKEObdAWfdAXY2AsjImxf/X5zbxSlTNiXoCiv883hZGQ
prDWaUlueJvTON9QenVEJ3q7cg7ErHSSCgZvlWzc4qVXb7pIi3efpb4TilmF
x0B+1jyCF23ay40fZ3Azw7080S2cX3J35pbd77JTR1/Rpv3SQG+goXR15XNQ
tWoMcTMukJCM5rRDs3gyNqyJgIQ8ylA3zbkhlI98CO4Tm0iTdifC48El1Khj
IQtv259bTIvgEQN3853uafz7nV08tTiee5pv48Od9vLWjTK4uXcyr3wXwvf3
tOCePuuZ8nANioQ8ylD3FpL5ouWZ/MqXNK4zIpF7em3h659s5scsYrmzaxz/
3CeO99+3hRs8j+bWuTG8o/MOflflAN+2/Ah/WZ3Kh9wO4hd6N+exs17RkWr9
pcaNfCQH68tiTLrIDL4M5lm6m7nL9Qzu+uwwH2qQzNvfCOPj4hz5sqzb7PD1
MjrEPQXEu/pSjsoz0C1s9NP9+NX+/Lu3ur9HQ2PLRe3SbDh47C24dAkCD89s
Ou9NGvuc3Zr3pFO4aUU414mL4//p8/7T/jva/DfmtqznMbsV9axlx1u+sXsW
vUXWRX8McV7xgLxqEEs6JD4RV746A8frqUuNUvxhxIkmbGxVKcts7cyTM3x5
18Cl/Pppez7780OWl1lNzY33g9vd5pLrwEJwGvbz+PCfvt5fbf9qftFQxZd/
yHLgTdY+ZuvUP9K3SzJg5wdDaeGZh2CkrwZftwFp8LI9HTVCnV4/fIKU7M4k
px0iiENKW3K+n6XgPvGj3I+OVqReN1Ko3LCWYx9hX2GfYd/96vn9q+P73MRy
WZemy8m9ykridXsXSWhSLVaY34DJ5npSfrc0MN9cQS91LmJldr15r4WLagl5
lKHuYZO94JKoIhl8Wg/M84OiZvo4McHhIJz/3kzqtUMOK5pqMC/r96y4ciS3
aRVaS8ijDHU5YXKw2NVM2vLoABi+dhMflqiL+69Eg6OSujSu8j+f/5h5qgsz
6Xpy3EKbnnonJ+euakNng3fwqLGZZG15ChILtFhWry9Mc+RYnlcSVkvIowx1
aIO26IO+GANjYUyM/avPr/u9CTk3fV7Je4vTFR/eGynaXDogJD98TJro9KYG
w6tI9Fxz6LJVR7rxaZD00tVKyhOfiG8vTmetL2jxGc1H8zH3w7nx3URe02w3
90zbwpe7L+ODVaz4V7sTrP2Cq7Rw9GaYZ6UhuTy8BCtSlMHF5hjJmqZJN02K
IHOgnoCEPMpQl5SnBF5mF2BlTD2pnX8UdDpxieqlnGb2DW24c+dV3P1YNF9k
HcejhkbzOKNIvnRcJG8aEMOTvBN49+gtfH+rJVwvryW/WeTP2n6tIkjIowx1
TW5t4e2Td3B+No4Ps4vig/XW8o/7Q/ju42t5v4xw7poSzp2C1vI4WQi/nhvK
Y5OjeIbpNr5l2U6+5E4sz3NaxNsPbsrHV9swi7Ox0KDrGXjpf5d2uVzKqmJG
8HN+G/iUIXv5tdBkvsAhlg+878sbd7bko1SPsxXaV6g4KxrmrFaXjDpdAr+V
P9+PX+3Pv3v7k//8aX/n5vJhTnbB/C85d4cslkfqtZd/T+opPMiOI1t0G9Hy
jSJpbqsD382roOeIblJ8VhkUZ+TQ93CDbbjUmwuxPjyuhy8fMNORa8wvZt8i
P9IAjQxwtTOQrm35x/ig4phM1jT8RJab+ZGlkb8//3nzwMMmX6ro1fnJbFv/
k61sh/64noUDBuUsTVuXE3zfJKfetpl2zt+Gy/Sa58hGzSirJeRRhjq0QVv0
QV+MgbEwJsaue7y673PHpM/i7MpCSF2pL0V92w/vPr2nwc0fMyHMgbetXsoX
1Pflaw458BFLHrPtEZ/o0LgUcP3SVNLZdRkKrz4RfR6uJSfT1pPY8EJFQsQt
cesP2Vh2WBxxZ7B44cgkRZR/S2FfszVCm8c9BaujVFZqfCJnlVFkdneVFTId
3xLZucIyWcP7oix8n4fMWj3UTifrhsw3fSlxEqrJoJA9pHPTj2L927egX34z
6b1uGpwY9Jmarn7MghY78MOxS/nL1Uv5QQsHHpL+iO1e854m7fuRv9roS46R
hWBu/nP/Wb/6IBP0g8iq0Uo0eVo6uflaCex6PwT9Fy2kgqaHYLv1d/ox9Tnb
aD+A99fzqyXkUYa69ooMqE5pIA15nAxvZGPEomnnFY8W+0GE2ksgu2Lgvts9
6l1yjk1d05V/UhtfS8ijDHXVUgw8qngJxr0DoDz9nqL51YFi/K4k6DlYS9qa
89f5y787/xn77bIseP04kjLkFvF6vZ5k9r8tzp0ih1dmKtJ0/82QaXeDRsw6
yYrvd+JnikbUEvIoQx3aoC36oC/GwFgYE2P/6vti9eMZ6VvRWGA3I4Q4cyoU
fGut6LF/q2yMYE7IID3yqNEw8YqLBoyuWSuqW4fTawXzmc7312zmGlv+svsC
vrV3BHefF825/Xo+OnM5vzDJmWvt0eT9e25gvtPiaaOCCdDi4UVwjU+EAUpX
xO4nokn68vukw7spZG/5TRkS8ihD3ZS218R7xrthfvpNOL9nNpzRSabS3QR2
64ou3zZ2CN+2YgH/7LGMH77pxXu1nca7hE/jK6ct5nOT/XiC8RIed92ZV8d8
Zw4Ph7HA57kECXmUoW5T5BI+dH4Ad3ddzrtazeY9tkzgo13Hcc/9E3nv6x68
T4kHn8AmcZU54/lEt4k83GQW//Tah7tY+XFotJjnDB3I3brp8OERscw4rwXb
6WHFNDOymNK3VjxAZwqffiaM9ymO5mbD1vOJnZdzO+1+/PIlLc4fbGTDh26n
k6dMhpxzl+FkzA5wWvLz/fjV/vy7tz/5z5/2d261437GHfmwwOEKlYYNFcHh
e4QJ4++StloCTZe/Jpvk3aA42Eia5D9TKu7BpZHRfqTy2yH2OrYnX3h9Afef
7sNLwxx5l5kl7M69T7T/uQwYusygdnzQG/5RXFW5m1yMqybeZ1eQl71e/fb3
HfOUjhf97HYN+Gznaphih7kcXo+KmoHicfwBebeiD7JxJY+FbbaOJOmsby0h
jzLUoQ3aog/6YgyMhTExdt3j1X2fL8/5LMr9C8G6kb7UbdZ+UG75nk4a+Yhp
qzrwxilL+RwvX25Yz4lPqnjKnttrMXPLtXB7rrIUH5wB2oPTRf+76sR3CxWv
7vCAfU0yQdnkEDQKjYBxmW2g9Yku4lmpXJCOcWK34pXgtkohe3PF1nZCboig
q9WVjGrgQ/zZMvKN9ScaoRUCjmsX9tYcGbBOIL1qbhClljFk5LYnYr/AXBge
qylpNoqAMbZazOl6CasaYM9tor355xOLudmb3vz65SIWRd7R4wfSoHWGnvTN
6CY0WvX+p/7bPqmekPEtnMSraVJ25Cip2K0JC+NegpXQQdp9HmDEIXWmtKaa
eY8byYdBSC0hjzLUvV+oANG5hRTw6iysmZIqDvYYI7TSVYPrL2OhcKcLqHTf
SiclhLMzFytZyGQjjoQ8ylBXNnQonL4eDzCyMZQeOCUrPrlR3DIiC4pjG0hx
in3/8fzHYdhqWYGGJlnZJYiohFkR13NBYvGLaRC6bgd0nm0LeSUB9P7GeezL
wKus97N6HAl5lKEObdAWfdAXY2AsjImxf/V9CfuRJ+OzUnlgNjmzvRU5XDpA
HNZKHQ42bAbrFFGiz73z5OuzyzSqciLzZSdZelkTrjnDidPri3hun1B+3DqC
W1qs4W2fz+AjJtry0tZqfFdQCju/vBM7NdCCrvn6UXx4fT48NnSGx1/DxOyL
LgQOxZGxvdoQ7zmbZUjIowx1tOlGsXjANBjCN8OhpybwbNwsqlE2nlWsuMy6
mDTmiemduPqTrlzbthMfU78tbziiLX9xuDPfndOdF5Sb87iN2jy6IJNNGqDL
pr0OI0jIowx1oTZdeICNDV8T1o33jTbh53xb8HElhrwVackd57Xmb/e25hZt
WnODda04e9uKt2vSln9h7fkS0pHPLjHhgUyfW3ypx+3fP2Oh6iVs+XRV/uBq
R94vZSjfHrWAd07y48fGLOPgPYH3nNqTm3hqcKOIg6zll+5s0SYZNZmoBnra
K2Hc88GwZHPET/fjV/vz797+5D9/2t+54dwHjv87jmxSWM90UsRevCz0rPpK
GqUPo3NPqVLNvX1h211zqXdqoGSSN0N6UV0kOhrvYBbVFnzv7bm8587F3Fvm
wFPGFrN3tz5Sxw//GB+iTW/Dgt7Vop3vTjKjrIL4f1pKcpNLf/v7jnM1mK98
sVokk40wkeE8FuZyeD1hKWaKLje9hBvLx5IOSceJdPBdLSGPMtShDdqiD/pi
DIyFMTF23ePVfZ8vWn8WBc1C6LC1uZRwIR0KulZTzbUP2Z7F9vzIiKVcq9iX
O2xw5k/cytmaOfrMoJEb7DzwFD6+2wo6x8LEJVsXCNnProvKHolwxOkFaEsv
4ND3I+D4bTA07DVe7DJTj1xoM5M4dFch+k2DZJuC9sra32hLMtYeJMHlb4ml
aSVxCTtNqn6MZ/g3vfxqiTxneZWwOSKLZCatIUuvXhEjGx+BE5+r4E3VKFje
ujmzH/KMvdfpy/ePWcgtT3jxbT6Ud95fyDqnvKLuK5Nh6ZcmUru512BE1Luf
+s86VV2YvHI9eTFHm3InBbFtpAP9g97B5HFmUnnwKbBoUp+VJH9hX4+N5Vfb
hdcS8ihDXXPHk7BHqb1UevA+fDJ/JI7q6kIWjMqQW+xSgemJt8W0r+1p8Ljm
LMg5kHn33VtLyKMMdQlT74gvutYH2iFJkZDXkeQeOSWadjsD8ZZNpUVX0v/j
+c+UkKt2U7pPEBKe3RbmKW0Q1pQUKkiuQjzarh4oJcSIBy/dJIo7p+joNp1Z
8aJRtYQ8ylCHNmiLPuiLMTAWxsTYv/q+4Fwh5stDfzwz54cHkl5xh8REq2B4
eC0ZvCy7w0rRl97R8WQtMp6wlhu6cFutKfzx3BA+KnkTZ3GbuOHpEG6SMIVv
7tmZN1d9yF7vW86eOJfT/jmm9OrO90LPnMOK27eXi09dNor3DqmJD/MeCjVx
piTUZ5+wr6ytDAl5lKFupUsrceqb92IrRVtoFnBQ3Oz6hXT/9pr2nTSBucni
mWHyEVY5WmQRZkfYqTHprNe+dDbn9jGWH3mS9THNYYUuMcwtgLPdiQlUObEZ
QUIeZag7uiSHpQpnWF8dYBM7H2ROXslss3wPi+qTwj4lpLFbY/ex0PADTFaZ
yQL3ZLD4FbvZu6QtLPD0RnZQNYHNPy0yVekV23m9GVff3YtXvxvNe7VfzNtw
f77k6Wr+fc5cHtemP99XbMQ7Wt5imU5BLLWJDqtXPZ0qAhxJ8nttcfidnWLw
0D1iN7P6P92PX+3Pv3v7k//8aX/ntua+SQ7Ogaz9kQeklJTI7wpRwuGIc8Rb
bkEbuz0ki8+0h4CoxpLHgFFSgxdmktWSJrS6k4JtUe3FJzkv4HdOePPrl+05
s3rMKsf9Y3wYbagvrRl0G0ZceS+6mu4mg2dVEe3w5eRe45e//X33O9nKFuds
MG9ZP/WeHa7h4TyW1Y9cDq9H83g7wWumLvE45Ec8v++sJeRRhjq0QVv0QV+M
gbEwJsaue7y67/N498+i55hCUCltLpX03A/9rlTTSt1HLOWmPZ8buZSP3OrL
ZyQ78US7F2zBhoZsnJM/UG8l6braISj0yxF9DLoTt6bL5KVZuvCswwpw5ath
aUdnWHzxkVja/a0iQEgUJlRWCH1O+wovgnzsIhbFyOxnPBOa3vAim9R2kiGD
d5FzP8Yx/Fse1zM6yHXlqz1NScjdPLLwXBQxLb4vjn9wAqimqjT9gD+ETW3A
VHY8YfpP+vLOaxdzX+9FvMFVzjOW3mNDT76lI/amwuQrutK30gLIsa3+qf+c
nJQEh4xQ0u2KKg2fmkVOzlaD4nrPobNbO8lscA48C6rHQrLfsEmDXHl8aFAt
IY8y1I15nw2di9tIt6Y9Bifpi1j/ejwxWqQgJg3GCYvT5ApPFWtySmZMLXZH
0jeTD9US8ihD3f1ISTHulKGQNXof8VDeQJQ3lIvLphbAKKPmkq98/388/zE9
42Cbk3bN7mX2QFnEdU3Z+uRB8sNdrRRkqY9Co01DRX+pv6Ba1IscDd5BUgfl
1xLyKEMd2qAt+qAvxsBYGBNj/+r7kltYJvNjy/6RN/94duxkT0Q+OBPcqp+A
e8Nl8Hr2Adpr1k624b0+b1A1ll+ZuZZ7+Mfxs5e28+lxG7nNniV8XpANd7F/
wFbtZ2zmjnBi4+0Fk6gnnDDdJQ70mEGOe20j3xqVCSq9XOUXFlXIlpzsLghK
ObJuCRZ2SMijDHUmcjNFgI2a+Hi2hbjbS1I82aRBjF8p0Z2v5tOny5Lp9m+n
qWiTTzsuOU2nVudQ60Fy2mlMLj1/4yqde/oc1bPYSZV3DKEF7feRfvPaCUjI
owx1gtF5eiG7gFp/zKcqTSW6KfkwHXkli05ee4Ruap5N359UUKtrN2hx7Bv6
bNl9enRMEG0+tRO5wSaLk5Zr0ORtFmxCvbPsBDXh+eUTufuYEL59fDSfMjOa
7zoYwttXTeaOAaZ8U2E+E0f3YJ0u55IZbwjkufeD24WR4q2nA8gBIYSozZKE
KV2X/XQ/frU//+7tT/7ze9v/Nt7j/3tT+XFPcB3I4qaXgPnAxIpy+bYnY4Tp
N8eRzPOWJDwhTPQ2nQbd9RfDEq1q8tzeh62L1ObWd0Zxpwp/Hhq6kk/KdOSD
Wz9mJrve03uqB+BUewMpb9I9sFNXAsSIIFYEMSOIHfnd518Xv6Tp6S1rttxN
2OsRLTjN7yz0e7NA8WrFODHB/4SofqmylpBHGerQBm3RB30xBsbCmBi77vEQ
A4NYGMTEIDYGx0DEOiHmCbFPiIFCLBRiohAbNWSXD68278OvdbnFZq0FKl/8
FjIH20ma9TSlvT27wP4sbdrJJe7Hb/wxuj1bpE/3HKFLf4z32061odt8OpMS
9lhxKdNMPJGepnjQf3xOzopX8vSkrmLnI4fFQ7PfiSr2VeL4+WfEeyfniDbL
IhVRjzIF5+OnSVCXtvTjhDzSMqEpeGd/hXpLekjRJm9hHD9JHyTdYwnXnPgu
m9Xcf5YfHzV3IH89rJSJDZXYtzGHYXpRSylVeAQFZso/9V/WnbuyN9azyMiY
YpJrEUtOJZaIUU3OwpBELcmvaQLc9HhEs1ddZDVh1vxlK49aQh5lqDs6NAF8
U+pLZgZ5MNvrtVh/bAopHtyANi48RVYvLhOOdKhRBIa8EGtUB8LZdX61hDzK
UHfp2xshcPdlcuiMAe148hhZJKpAW637ELDZQFrt8tf47n93/tPs3TDbPbmP
7LrNGCPbfaCpTHXGWPnYSqo4uzdI8WicgUKr32ihsIUj0TdIJ20q79QS8ihD
HdqgLfqgL8bAWBgTY9d9Huv+Hk7OG5+9tWnXnKfxHjkD737MTjOzskta2km2
5dS22r6r8PUWPhyLJLPWKdM+K7PI4mm3xfojssBsQxmUdFoNxxsq6CeHNDbs
Tktus2UCX745hG87s4mPGLGBb7jkxxu+HsCvTVDnvUJWMHe9cFJxqRrOf2kl
7Sh/CNfH14cBrc4Sn9kG9FlCOvlya54QVH+/XChQUkRuDpIP+HE+SMijDHU7
nCplI95Kwsmoj8LC5aFCA7dTCs/8bPH5O3No2dALrnhHgOquDaDQi4DejmvA
O3ANNOm4DhJSN8Nns/XwfNFMKNLTg2VDvEVPj+dyJORRhjrLmeuhWrEF0iw2
wo5eodBhqT8c6eAHnwwDwPB1ICx38IOwU46gXakOuguswFL7JKTptJOUW1Fp
52w1SeflfZJsFMkcXzThNc/deUD+Wj5oeTw/q5XAcx2iuFmbWdxRuTXXmL2V
jb+kTN9vVZOi4yyl8PWfwUVhCDq775DArI7UwF0ki7au/Ol+/O7fw79b+5P/
/N72v433+P/eMC/Ee4PrQTgnkrtbEGUXKsSvW1Tgs46PaDQ7icREJdKqlB5M
Y/M+5mnZiIcJrrz8bSA3Dl3Hp1QF8PgsRx6Qcp81uF1BY8bug8WB+hJZ8QC+
uqkBYkQQK4KYEcSO/O7zr4tfwjzGuboXWezjR8av0yVDvF3F6hIGsrS9UN60
oJaQRxnq0AZt0Qd9MQbGwpgYu+7xEAODWBjExCA2BjFOOBYi5gmxT4iBQiwU
YqIQG7Xh6wL+ocaGT1iQwyw7KsiKTgOk7r1CJM/VLlLR4WhYoLORllkMYm30
t7Brew+yb3fT2aa3waznbAM2qaEJLb1cKBY96QDn3h4QB465LzdLzFbs6KcL
1Qvi4fPJa9DEtwA+NE6Dzi0HwZWPi8X+a2aRJ7160GS2hD5f04C2L3EEezcz
ab/9Munujn7StyGlZOHdfNZz3gA+0yiYz38Syi0njeFpDl9YH7X6TM/uFPC1
naRuym9BWKD1U//hOJqp1ZEMHryT6KiMIXO0d4k+nSJhS8ezMHuRB+zL2UHZ
so3sdm4Na/ChHUdCHmWoUx85BbxfnQfPldFwDo6Kdj5hxLyzKu2kVkzmOvYi
TqNmiruk4eDxMBuaGpfVEvIoQ937i31Iq0Ua1O9sN9q8/lky2EIDVox6BE7z
DaWYgP98/uOy66Hdi0HzhH7hz4V6AfFCQNwLhfXkPFF9pw5IIUniooFPScWH
q7R4oQ0jjWfUEvIoQx3aoC36oC/GwFgYE2PXfR7r/h4+H/4yx2lFjnysT4Uc
x1ibc6JsYNAhAfsM89Y9vaNJhuE7MvtKBzpkmgpdnvlEwUdMh6rNSbDLsDnI
Yo5Q9yUbWGa5MlcSe3CVklH8luZ07tdrHD+2jfBl4xvwHeZpbJ7vc2pfthjm
2LeSum80lUof3ofEw2qw6bZELk83oMXhOcRLa7tQsrGV4mTCbAWeD+ZkSMij
DHW3Q8YLnR5akNejPcipHznQ0GpLsdCpEzhEbwP1rXdh3pUaWJqgKu1oXQPu
x97Bnk6VwBcqS5X9NKV6E1Sk8+kFMLEwGGSTH4rHDw1TICGPMtSlxqhIxeb1
pZyWahJt9hEM88tB7lEKBRUvYYrTW9D2eAUnBtyABctyoE9CPrS41ETKv+wg
ZU4fLY28ZC4N7egIq442YZXDTrOgPBP+tPdUvr1NJH8bFs8d7bfwR3NX8TtW
XflB2x3s8t0YRUfiKF1vPlc6uq2tVPGCgUGMGh0tc6VlGlWkcFn2T/fjd/8e
/t3an/zn97b/bbzH//em2zxHhvkh3iNcF1qaniE+vhAAx5rsgg0KC6jwnU9V
dk5iq4beYQvLTHnc8cl8z6wwHmiwlRt+j+H3cgO4RiLjI75dY5XKT2jTMTuB
zGwi9bx/B0Kd1AExIogVQcwIYkd+9/nXxS/hXA7mM8c8DxGiP4T0d9ooXhyy
BvadewHtZuhKSMijDHVog7bog74YA2NhTIxd93iIgUEsDGJiEBuDGCfEOuGY
iNgnxEAhFgoxUYiN0jD15G4bLHkL5zR2oXSiGNV5hTS+cq/U40cOlBNxHR4b
ldCTV9JZg3wNvjfahF9p3Y6/d/7KJnxZx45/2EqbP3cBudYe0I3rDT1q3ii0
m21WvFtiB97PCmCbRVNpyQFdqSDkFZiGrQMX3X3ivE/biFPmZMozNlL7Iyb0
Uexk6BXSW+rQOEp6WbFY4hObiR+9TzKThgP5scJQXgMRfPbwyXz/bWXe93BD
ZiE/Dw0/W0gLHD5AZJcGP/UfziXgeOrm2ZUsHlgm7LXrJrY+rA8WxcNh4IRK
MVzRhSbNacX6L1jLdjY+UEvIowx1XvIqsfEBd5A+GMO4FYNF5VnGZHTMHvJ8
VByZ01eTnPe1FtcmG4NpvXXQ6+6hWkIeZaiT7rYgx4tekYIKExrcUyIXn6jC
yN0PYGiNgeQ68z+f/zgohcg63W1EGuSGk5HHBXJ+VoSo324RFOelQpaqPSyc
HUbjB6xgDZyKWO5ybY6EPMpQhzZoiz7oizEwFsbE2HWfx7q/h7E7psm/2fWo
HWNxnkHds1dtX2G+inN27dto0uEpHemGJ4zGWXegZp/CSI98R9G53lXxcu9X
OUrxMbT8aG92a9lO1tL3HmtiqMTHuKvxktyPbFPsZbZwVDS78syE7fFrRBMP
eEOT70UwIeEuDG+2DsaeSRXjHy0kq/afIQH+S4i9+UThYLN3teeDOVls0645
SMijDHUV5p2FG+vVCOZAI99KwsXXGmK0vTIErPMCq/Jk0PA/AzVSPth8Og16
C+XQKk8OHR/mwpVJ12BC//NwfetOiOjsAtFb9onBd9spkJBHGeqm7zgPJ5xu
wHu/i7B4gwSH2x4BwfkQGNU7Ciobs0Gz7Cg8eZIMJ29vgb2HdoKHz004YKgi
ZZmrS2eGPIYlawIhtpyRAec1WeyjXWyvuS6f9nQc7zohgr/R2MLNA0K5bxcn
/n1uLht4VZ+m7+ghPbGfIX3q3Fqq6GoHY1gNMaxypLLcx+TNwcSf7sfv/j38
u7U/+c/vbf/beI//723kjDIZzpFhnjjvx71iZ0pEo+cHIW36E1gx2xeuJe6n
tk5JzPFZc95WfSxfHbqWXwiP519nJPLXkZv4nOeLeOzCLvxSpZyFN79A10VG
QdPvKpJF/jlo0O2riBgRxIogZgSxI7/7/OvilxzndxZwTgfzmm9HXwrbVDqJ
91sZwuiMNTBpSGotIY8y1KEN2qIP+mIMjIUxMXbd4yEGBrEwiIlBbAxinBDr
hJgnHBsRA4VYKMREITbq0uEFfEqqjI8dlsd0I8dTtXFO0ubSbdIL/UgpZ/Fb
eNVCh2nYFLNp52z5NDaFQ9JkrhVmxfNXXGCj/Yuo+vFYmDldSUoZsg9UFqaI
b0ZrkgsD2ohVTVzhc/EeGLojFc7NCoXp2SbQdLWD+FizD9E82ZJuth1PjbyU
aXCYDdT3aik1XDtNEpdYSYVLBJo56DILkDvzGNtAPsx7DYcgN/7ZrYrt6qrO
sotEuPjZRHKVSiGxoTrU7T9cT8E5BY0f4+qtye9lJfa2ikMhbcSNVyeIgS9r
FPd39yTHwjrQNaFRNFL7WC0hjzLUad9QEq26TxfhsYWodH2CYmhRD0G+4bhw
MVUuaDqYCyHTpigMqItI3h4Wo0yf1hLyKEOd1+gIodx+F/GgWnRo3gGisqxG
PHfpLvirGEjKFv/5/GdGeYFs6NXJxHXWPaIybhMZMbtILCqQYJ29mlTVeCuk
Ot+hV1Rz2cqSLjy7akwtIY8y1KEN2qIP+mIMjIUxMXbd57Hu76G3rZE848cY
W7yxVe360s0ffbToR56qrTKGnLWIJad7HiYqZy6Qkis3SMj2E+Tul2DCb6qR
DKWNwsqljGQ1V6eqK9fQq28v08j7amzQAn1WWc+QPehXn804ep+WCLF0gaMR
XdN/oXB5yn6xjaQO8RuUgDnsEYe7nVV0yYwUAro+F1QbbBJqlq+V4flgTvZs
+MucSXnjs5GQRxnqvl0dLcMc6FbIeAHXwvpZWShaZrUX+/Ktoum7m+KN8Z/F
b/nKkHfwk6gX+Ur8+OWVaOjxTfTzUIOt3WrERPMr4ulPgeKgHXcVJb2GyJGQ
RxnqViTUiJ0EDVjnrALipXdiRO4zceCcJ6LS8+fiHLNysfvoUpHOKhT3DM0V
9627LkYYK0F+vwdi+K0wsexLrKgV0Qt86u2F4KVJ8GHWIXLP348dDdHlx1Km
8jPj1vIYvobP7T+Ya7Ji9so4n041qIBV/XpJfSUl6Wq/ZjCwMI8E5RtQH6fd
JHMmEerej9/9e/h3a3/yn9/b6r4/m/ZPl8076ix89wkXPK3a/uXvJ9qgLfqg
73/b81i31c1/5rR5Jka+PALpnV7Dm76B0MfzGL10KpWtKGjJvT0n8MatQ/hI
2MgHaUTV7u3StmoQ75XZgH/P2cKi5++iuIfH3I234F7hHhj86YaIGBH8uxPn
3hF/8LvPvy5+CTE9Lt6uIs7tbP+R37BV88g3d3cafQao1Yi3tYQ8ylCHNmiL
PuiLMTAWxsTYdY9Xd/8bxDgh1gkxT4h9QgwUYqEQE4XYqFlWAXxf63E84K4u
J+eD2ahJXRVSiKV0bvsYKb/qHiAmunvie+bQcRhPHBzETzwK4iY5w3jDje+Y
lpM621V0AlbP6SrJL6hJM+d0g5vX9OgWvQw67e1DOnVUFV2d95aq7T5JXWfM
pEo+4cTWpL+4dEaweNnNXmEn3yIEuFqKlxXtoGtPE6jx7EDrjZvJ7r/5whLb
9uZPb0/jxSsn8ksfLXjDyrNsbEEhDVXdCp/uqUltrE9C2OXHP/VfXfyG8Wxl
IafZI6HbypZEVzokuGvVKHQHvhCdLgyABsv9wCHdDwZcGwgWp8pEV2MV0YeJ
wuVvXUmlRxNiqbZWSJrTIaf7SGvF3kPDFRfH35J389cXWlY2JHE9V5GFof/A
d9/o5E9cHuuSEx/aCZ8PXbO9YOVCep16TviinSRd9kEsUtyGAbb/2H/pX81/
1hqZinM3xsFLLw0p2i7tp/2bXjTw5Y2uOfAOpY9Zw5Of6b4ZaWBu1FwKH3Mb
1G9/FDsN2ksG9/9A0uNWki6JpbK4L6rCvtBwUq+3BnULO0LCRA1oXFMG5/Tb
S018RHh4Wo3Vv1HJnJ67cYNbwTzoYTBf12YEXx9cxeaHaLAtodlwTdtY6lj5
DNKVlGCAwxmiNb8hzX62lQzNXybgePLPZPHjmJXGWbLqA56ypKoEWbt3VkLo
jc2C2PegELXQR+jYc4F81eSGoqPNRvFTTIG4c/53sV6CDmzZ3hjyxmnArCOP
xdkTM8QPAVvFOSZnxU9rjSHGKABCrx2Fo2UP4aZXJQSpvoKn5pch91ECGLi5
QnXBObF8lqc8zWs10V0vkgVGWWTYmWlEsT1MaO7TT3F0+y7F+dFDFbe62f/0
9+W/mq+lNcsid/Zkk+i4TKL3MYVUOaWSz7LDJPAEEBp45B855nGBqATEC4iV
QkK+VvZD1/L6EVI66QTZOSKHhBxOJ0N//M2C87a4do34Pedve8hxrTjS0SGS
NH+xmXQtv0yaRtvSBztX0SMuvamK7xZxoN4b6PGASzS9tZRofIDk3E5iSUfa
8c9Oo3jr5uN5bk9r7jf3OtNbWY+9azUD7hu8AQPFAeiumic+vxxE7pieIm8L
KMmc7y/7b/t7+0/+83tb3fnTFg16CuOPtyQpr8aQU95fhL+aP0cbtEUf9P1v
m4+s2+qufy0+clSsl7cBRvc4AV0fuIFceTOtTl7L8g5/ZQZ6Vjxo2HDuQybV
7umSmGHHjfs04eXRZ9nkRFe21noyzTE0rt3L45zKLKi/bIuIGBGce0f8AWJH
fvf518UvIa4ZsT24vvWglSFgnhPYzInpvktnlhr3agl5lKEObdAWfdAXY2As
jImx6x6v7v43iHFCrBNinhD7hBgoxEIhJgqxUT756/ijrsG8/zt3vqN+M95W
N47ReE9q0ekQTO0SB4re1RS/jU8zc+MhaWt5uykRPKt0Ek9Rq8czW+ixtc0f
wIRm7lJYqSCFx2yE9avi6aq3M1lp6REWqFfEui24x3b4HmR9Lg1nhj1WUdVR
AyHq4RVYZCFCjGgIUw90oep2DdjiiavYKePj7FKcMjc72oZfnGnF90d0492m
GfD2ix4wP8GbNey8hg7ZSqFVdioE6q0C/znbfuq/uviNzZlzBL2Gg4iL3zpi
tN+EzHgwQ6wPw0D/6TH45FsKAa3KoY2TCJVsPJzqvEoM2mRPXIsvkBfkKtm/
KJF8bmFPuk3aJ3RZ3VB2Mmq+nIQYCpuW9SSW6lnk+6nXxMS1uvZb7Z4BE0la
9kJh9G4HuXqFDYnUfUjmViSS6Mhq0bjl7dr9l8or//X8pzCjgyi2jQNvFQ2p
+57Un/ZvGrTcl9+e6MRvuD9nup20WXThOrhkqy0NfXIBlncuFzukbSOjAp+R
l5unkXc/8pD5i1sJawZtJoccG9Kqr0DG5TeAu7bVcLOluZS84AwkztNm2X2/
sxkdJ/Di2xFc1imSd9GYxPsYqfCPPkbszaudMCTNUJLJr8NrxRZR7XQruixg
INUu0aC7e22onWf6Z8K8C4+tUj6QjOw3nvRvu5XMOnWRXAgsJlUXjpCgwdeE
8Nm7RLZxGEhPd0LXuRdANqUYQraXwQS/Ypg96xJEeB6FjhPToarPCcg78AUW
2ZlLo3eOkcbXWyHdOhwgneu5SLqY1F9681FXMr0th3kdusLbjv0UG6JF0ver
Dr02WYNONDtEpr9/IGDu4xegKvq12asoWxbzE77gX12vWxKtSof5aNEbtqp0
eMwXclr7K5lloU6NHBrQ/HYadNise7Xrg4iRQpw4EvIoQ13QOA160LYRtfys
RXttUqI4b4tr15fiqklww0+kqOA9sYgrJjVfLxLnbffI9u/NqbPNHBoXGk2T
qqZR47sPFN/KrsG+hoKkM4BLPtZ7wV6qpAObZLK5bVT4sWfaPD7lBSu6v45l
x12kb4QkMSZnBXysYmBo6y7O0tMh7x84kidP9wsZrTbY/rfhLf7kP7+3/dXv
71/hJ9EGbdEHff/b8Gh1W938YUq1qzhnUSfoqzIRHqR8EKPDLeiKTm3ZJe+N
bOC1fJaU8JY9Sf7CdFa8ZMVCHnv+Mo51EYay/tPu0STbcqKblira1msFuKfH
9U/tRMSI4O8ZYkYQO/K7z79u/obfdiG+GTE+uM6Fcz2Y74yuac5dBF5LyKMM
dWiDtuiDvhgDY2FMjF33eHX3v0GME2KdEPOE2CfEQCEWCjFRiI26wLdw337x
/HrqOu7oPYObTGrNi80SGP+RA43S14Hi0KN004mLDPdITPoexKe/XssnzZvI
596ox18LBky79BUMiVoqNcycLV1VvgBPFpTTc++AOU5swQ9KnN/bwrlMz4ib
vsxmnhX36eVVh+Fqy75Sq+tE0jRPBtv65+nO6j1M/5YOf/G1F9fUGMB7j2H8
gFULfs7/Pru4O4LBqtZMyyKa+lbHkmsjpok2Ji/E1/kXxSfNDX7qv7/6++PJ
OiuxKqstnGoZARGbsuDGqSPQJzEaaOueUF4yTtSZJSOve90nNVWadMonNbor
6SGpWBVP6g9sTZrubSjkldrIfce2FM6PakwO+c0my775E3GOW+3+jq7da2Q6
uaqyzRfGEJXSctJ+7y5yR+Nj7f5LFQP1pS4q//r6VwHtINLkrTAzQl3aqZ76
0/5N3d/68hqtfrxd51fs6mNDZnXBA6ZZ1oD2JoDYyCLx+oSNZH3Mjdr8o/KA
p+yOZ2fBMXMD+d5Ok849eJgUrVeHC7NfwIz6xlKHNzlg8LkeE86/ZRlrh/HM
PWv4tT7BvF7XkTxoxFcWaN2Ozd+2ABKNlSQnjz3wrO9luckwN7rNeDXtc4fT
/B2qFMeRfyace8L8C8+h4ugjYv++Ab0aakXH9uxNK4e3o4f6bSAmOVvEfiWr
QPX2VVjYQ01qnttcmr2zlRTft4XkpKkrHelSX1raTl1yFhtIbn4dpKSq/pK7
5jwp3sVfMri8SursNEmy1O0qeWx/CW6f1sK3+LeiZ/0Bim2mfckyqw1k6JEo
8th3EEmwXCvkjR6qwNwnf3N/RRQxk9f9vuRfxWvfWBhKLJdFkjV6oeTWEn/i
eMifHNUPI2OmbCAy3fDadcGOdxsRxIfjN3JIyKMMdaku4SR8+ibySGkdSRse
RHTCl9fuZYXfMKww8yOX2q0k4esnk3QDBxKuMZpkZyQRj5dKVLtNO9qfVJG9
u7YqRsTOgeGRt2FSxDtY6bYbZD2WCNOf3qTzrtixKzZu7KWhDas58JRmz+9G
F+UGKU50ThefNg0SXy/fqMh9ZCM0clwm3B51Rma6+0n2f9v3Nn/yn9/b/mr+
/a++n0UbtEUf9P1v+x6xbqu7fnSgaLpiZpGd6JK5RPSw0RKdPHuTJkutaEBZ
Ep018hHFPVw+OmiyNT2/Ubd7N6id9k767NUoen5MMWk+7J1Qo5OhcI43Fi0i
lETc2wMxIogVwd81xI787vOvu36H37fjN16Ic548JBVwvQvnfDDvOdttYS0h
jzLUoQ3aog/6YgyMhTExdt3j1d3/BjFOiHVCzBNinxADhVgoxEQhNqosfxN3
X5rE161L5M1lEbz7h2F82ddq5r7blLlM6qqYtNKfDo46wDJMe9TWyrh/N4B3
PTGCW+36zsoHN2N66m8hNztASgz0l/LPlsLgYw1Yn6blTGucPRf3LeSfdi/k
04ztObUuY9PDdFiD0qeg6bNcKm66TGoxsxhGpWqxmp5PmUky5233ePHR6t78
y6b+fJhZDZt4cDgTr98TRMcYWD/YD2I/x4px6k5kcb9AUrT8sODVNlhet//+
av3Z//UkxZCv/cVNNzPE79mPxZ7OZeK3zFxx4xw/8cC+NMUWvSRhyHZ3srNN
HFEEpJEDR7eTDffmk5VRGqR+fT2h09Vc+cOZTRSPtJ3kjcfHyuiOxsLoSWrC
R9VoGdZusAkskgWMXEE8yj+Q563+sf+S2dNCyAvSlwIa/ev5T3VYB3H+p63g
WKQuPV+Q+tP+Ta2SfHlWqRN3FEpZcHkjtt91DZR7a0hLN+fCeK9nYuqIrbV5
B8697KhKkN1v30x4cymYmKV/J7c2p5J2T76KNyPvwpKFBtKVTwcgYOpHuj24
mL356siHdFvOVZVXcMP5/fjpfmXM+noj1oQEgup+ZSkxdD9kx7UTdx01pav6
utDJw3Wp9oqjtWPIPxOuv7VP20au/cjDUn6ci+VABXl9tYScdakiN5tdI9o3
RxPL3e8UA6+qQs47D7CZuAkM+6ZAuE4mLPY/CAV6+2Av2wPKo3aClWMynPtw
DM6fuQbjOpfCPP0KmMuK4WmyAsqsgiFtuDGU6yeJXkH3FTrNU3L2HHkgsy+q
kuVKOsLNT2qC1GqW7HY3eznO+2DuM/rRk5/2F/lXv9df10BJOHxWVTCaXSPr
WPNOttmrUhYeqyw4LtAUNgepCIiJslcKqf3uDvcHQEIeZagbBCrCabf6QgsH
NWHnhI+yosYvZfgNw6ter2S4l4VkUSr7OPaALEtpomyzepwswVQmHFiaIazc
+kBw/bxVGNG6qaLJNDexaYfTYvfS96Ji9mvxmNo+0fixjuisbCtMP9uSLOnQ
jSTc+yrsHTpLeNNAX9Yqu4FcZ8f1nEMHWLbJyVXHehgFZG98eCRbzLX5r9tv
5U/+83vbr+Iv0QZt0Qd9/93j89+91cUPL0oxFvZ9USGexRZk3OKTgl6KhjjY
5rM4lU+F1U0TQOydA3bXjsP8JllguH4zpAVPAcvV+jDiRIKo+zpVMSzMWzAy
fSKcmHdYiB79Wvbvzi/r7ueG++E09i0A/C4KscGIj8E1ortbeG2ugIQ8ylCH
NmiLPuiLMTAWxsTYdY9Xd/8bxDgh1gkxT4h9QgwUYqEQE4XYqCEufnzy9w38
y7oYnnpgLV9wciRvaa/CN7Tj7FvlFSFpxHj6oGoHk18w+6Gfy+eu9uWDhEHc
y6SKWT5tzBqNKgGVo8slldnLpXEbi0E2tiGzKiljR13tecrBhdx6+0JO9Oz5
spZlLGyFDms79xnolq+URrxcJalXvYBGUQ1ZdNYrNibakXvrLOZZVl78w8de
/Pn+k6zf4Yl0+Dc9adFYJ0nxWF3Sn28E5sevkR3nTOgO3xNEfHFEGLCo2u5M
2yZy52NuOYrxhbaDfvTh+SUDbWVrfvyt/RTsYkYYyqtWaSpM7vRWdAl6IFeL
NRKSb2iSGVvmkTdPtpGmaunEaMAOYuXsRRpvvCccNJmk8Dg8S2za9IT4zfuF
mKNUItLGWeJSi8HixISpCnz+zg2OFF5u7S8sjJrxEz7vV+u7NnVJg04hGtJT
KQ58c/+Bfy6wiYfoLppSsP2+n/Zvwhp3WOsOa95h7TusgYe18LAmHtbGwxp5
WCsPa+Zh7byHVTtkkLKIbEr5QAwDUohK92+iXf49OHvKUJqXfxCU3n2ml5c+
YSlmzlxr43I+dvQy3tjfnn+/X8iOkBN0j+07cLguSO02NJJGD14N2m0MxYOa
a2XDQ2aLQ1XKRbzefybEIOE6HM5FYT62zEUbsr50hCOx3SEoxQiIdrI4a0xj
0mZqT+q9fzvd3PMy3arxkrbL/UhLBn6i2nOraKTTG2rm+ZKOO/CWGo9WYiNB
h/WJas4sGjZnPQw02MbhBTT9QyidoKpFw1+ZkUVuZ+RZZmsUTqNuyiMXxcg2
B+2VqV+1tcXadP/X8C118Ui3NLXkk2+myFddTJfbPDKSz7rgKPO+11+ICKoS
tHyWkvbf75Bdu9rTit5utEx1Fh050p1u8+xIDb+eJuoflEnj1x0VsfMuKfYW
bFcc1zwuL/rgL3N0F2Wpy7rLOpxxsP2T//zJf36l/er3t2iDtuiDvv/u9Zm/
e6v7/TiOPd+Oe5CHhjEkMMuUdNkxS9SNG1W7v4tLFy1p88t20urhZpK+fhvp
uruGZD7xKlTVi4DSAF2o6tBaxNznSofhpEDHlDgXuf/b1xfr7uePewHifjj4
Tfj5WaGA2GDEx+Aa0XRj+1pCHmWoQxu0RR/0xRgYC2Ni7LrHq7v/DWKcEOuE
mCfEPiEGCrFQiIlCbNSi9jI+pvcYnp8/g7tMH80vrzTjk4XzbNoDJRZ0zUAc
3zOIJkSmMvNX5rx4wRy+utMS/lijPz+1oIK1idJnThePgPHjYdKMHgOkPaMT
IdpLmXnXP8m6yFryXTq9edQIzlfFG/JU62xmqHafVsUeAbF1f0nDZKAk7JfD
5yFPacyg44yEtubrTfvym/ECDynQ4nEVK9mmmwdEz+m20tPgYdLd3fWl1flt
IEujmJgOtqcFic3o1LI95MWkYeRlVH0SvGaPcCj0nuyEQ3LtWsXeLr3l9t7N
7chhA7lv2/aK6ZpLFcUnmyo0g52Eyc3NiOOP52f3nkLSdKYOvUlMaPCL1vTZ
3Tsko8FzWfOr9UDbPximlmTC18FHoKwoCub5dYQps+3E9B+5Nz5/0tm2JPat
zU/4vF/Nf2aOSwOlExpSQXw8BMwyFz1Wtav9/muTp6Y0uF76T/s3YY07rHWH
Ne+w9h3WwKuthRdsJGFtPKyRh7XysGYe1s4bv35aTs9+Y0nWrc+kRvkgUdqh
BnrTSmFjuYl0tVyEuw3VWcv1lWz3+uF8z/Ug7ncogHd+4sRVJ+azkm3KNOm4
i3TjTYQ0bdAsqf7NxtIC8xRQHhAFKTGHICfhBuC1/jMhDhuxSLgeh3NSqkHv
4JyPrvTAuLX05cf7eX9ZBOzwbUnds8zZcdjIli+X2Ohthay5ZgmbWlPMhts+
ZDvO3GOT7t9hm7KL2ITq5+x6008sm6jwnCXf2Lzw+8xy6B4WqG/PenyMoXPh
oPzMVHXYpPxOVAwyFnEvcpMbbQnWpAszisz+v4ZvqYtHMqrIzFnU6I0s+d1+
oXP3QEF+Jk9xtiZZjLI8LSZN7CjcHBZOk6Z3ZI2mBzF5ZhLrZbKDlTxdzUaZ
GzH3J+501hUi+vdtCA8m3BNbpSmLSyalC7l7qmvrlxhXvrT9s/71J//5lfar
+6+hDdqiD/r+u/G5f/dWd/9A/Lsbx55Zj4aTIVvKBE3r9rX5ZdCgcFg/9jS0
9yiFmm8foJ33K3ikeRnmzEyCjRfGgpdbqahx9LPi5LzDAuY+i9Yqk8X9Ov3b
8eV16znePTlHxL0AcT8c/CZ86IyZFLHBHV5mM2JdVkvIowx1aIO26IO+GANj
YUyMXfd4dfNvxDgh1gkxT4h9QgwUYqEQE4XYKCOzC8zGo4qd91Pjd199Zl/m
iuxunIwdfM/I+WhTCA04RM9OPMFGN7PhiS4LeNqQpXzo8P7c7FgF+zyiDdt+
KAAm2LWRZuZpSHOa6UBev0t0RJulrHkDOSsfe5+tnX+XTdl9gLl/Hcq2bF9G
b40fAsNPPIWBM0uhwaZRsORUEO21dTxr4HqMqU98yHKW3WSH78UyYw0l1uKS
NhR3UpbUP+hIhspymHuwSBySvpe4+bavzVlMP2nQKetLyDPDVDJwkAOpVzVN
0DnbUXE/JVzx/UefWvdtKx/U1dUutWFwjijOlzv1MJeHneorw/HDdq6/kPu+
I0ldlE2SLFtQzKlCVDrTHJsZ5ETRZ3HPrR1wJ6YE6LnXsKDtSeDVE8HNxEec
V2xRm3vj82c6fv5P+fOv5j+ps9Pg+FcN6WXINtCeYCm2cm8hbj4bW7sm1r/7
vp/2b8Iad1jrDmveYe07rIGHtfCwJh7WxsMaeVgrD2vmYe28Lw6B8ihDV6L6
uoZYzjlKDvTUhkP3K+HzVnMJas5Cj5U67PSH76yl/njOZ4Tx3V4h/MPUgdzr
Vi7b/VKS99juJ43qkiJ9nbpOspjHpPeKz7Cv3WP4tqKeVG7VTMLr/GfCb9EQ
j42YJFyXq19iId2yGCeNnTBfet/dWUp1ToYTQ+7RvQb7WFXP+tzrWVduYmLP
t9H+fNh9J+62ri+flcR5m5WMr2/Yh6fe6c8/hY/kN7eN58MvuHHV1za8majK
4403sbQdh+gSzaaw5ONu2D8wEOwmpYq6N7xqa9FhPd7uKitk/9fG97p4pJg3
/WRmBU1r8/dNQweTsy+3ipc/BcLqoiwgFZ1hwdkz9FGb7WzIPTU+ZGMnvt7d
jN/X0+RrYBdrYVpCr6wrFj1+PFuNHObB09Bw8WWObW392pVD3wmDMnfb/V/L
D3+1/cl/fm/71f330QZt0Qd9/93fZ//dW936EbjmgH93d/gx9nR6XE/ANcJh
6zuLCbu2i4W5D8V7LTWhWWM9GLOlCdAsZUgpvCJuur1edGttJDrVN1XgmpdT
kbuw6Efu0/r1qH/7/gKICcG651j7E+tfYQ0I3AcZ9wLE/XDwm3D8LgqxwYiP
QUIeZahDG7RFH/TFGBgLY2Lsuseru/6KGCfEOiHmCbFPiIFCLBRiohAbFb69
kFYkNmR5P/5mDPE0YFH3k6h+x0LRNeQGDLoVDc+cn1Cv1oXMX96bnx/kwy0O
+fKiOc78W6sypkhrzHr7h8CURtpSg+gL0PdbjNh5pzvtVXaGbsgvpzb3P9AR
zV7TecdEuuvWJEr3BBNd/wlizJZP4vrIGrFHkKfomb6RZBcvpmvGXqDa+dUU
BpdS7TW7aY/5ylSqdBP7tm8DJiu6gMy0VEy91kQ8frtCuJ8eRio7ptauXaV1
SSAKnUXkqpoOKXZuLdguLJEfCnJQLPCor8C+vbH9mp2Ti4Nsr46l7IvF9tr1
gyXuLRQeB2crbgbvlc/pelHQGBhJnmy4STofv0bC7tqTza3cxK4fTCGW+MC2
+kGQZzkKCnQ+i9VntURcc8V5R8y98fmru376q/mP6uQ0SC7QkKxfxMO9ehbi
kyWtxZDyWIjX+cf+P3X3b8Iad1jrDmveYe07rIGHtfCwJh7WxsMaeVgrD2vm
Ye28XYrJdsHLp5Ou/Dt5c+kgSSpQgy6jS8HnkImUFybCmnw1NolUsrWrhvMT
ymt4syGBvMStP2+hVMC+q7lS6/Z2UodO/pJl92HS4bRq2P5xOURVDgIT2Vp4
JaUCXuM/U9qMNNhUuA4sL3hAuusa+Kb5HEJju0nai/pLPLSZtKzrd1klWcks
92px56oBvK2LN+/YKIhnVARyS/NVnNxazDere/GgOfN5Uv3FfNnJ1XzbihAe
1CKcf8gO4mlJHnxLqDE/1j2DLTVTUIt5y2DqxecwOTYLRuSXiNFqO2vr8I5s
4EO0fUtk/9fWd+rikVwNi2SFVvNJo/6lteu3/j5lYvs1F+BRtY5041wi+MaX
076db7BpKna8067ZvGnCHB53ReBVq4pY49eaTLVyCURe/AYN3eWQNLpQ9Hq9
nhw6ep34PxxCzs7b8Of79z/5zy+1X62/iDZoiz7o++/en+/v3v5qPw6s14c1
i7MvupDuJ6LJEJtjJG7GhVpCHmWoQxu0RR/0xRgY69/9vrvfm5Bz0+eVvLc4
XfHhvZEi5MIMwXh/P+LcPoIM/dCWzFs1VTSgQ+HElSOws8+zWkIeZahDG7RF
H/TFGBgLY2Lsuseri7/HfA+xTrjuh9gnxEAhFgoxUYiNKrm4ARppbITYSH9Y
MX895MmLoPuNDtLcBb2kSy+Og3FPFXZkzXM2tIMzr9nly9/O8OHNbvXmabk3
2fJ8iX53KIV3C6ylU16qUqvEGdA+MEK8efWWmPvKGwYM2QdO/nvgwWs/GN/f
AOqr24jnh+sTxdV95FhNJln5zJSMOTFEdNraBbS2r4MH3fZDu3G7gYyfCeOP
ZIvHRuqRgzOfkja+SrTw8lEyac4HIXjFU4Wt3RZx2q0Ccd+tl2Lu84diSs9U
MfyOtZjufVsekRUmBEKOcOLICmHA7CjZXB1Xecn6a/Loeefkfjds5Nqz18ku
FUcLvdu+EEIvRQpHb1xSTPc4Jtp3aQp3opqCsVuYaN0hhpzp40knv82gBg1E
qtZ7K22tbk2PNnIgeVu1xG2dPcVhZaailkL4CZ/3q/nPJqs08NLSkJxvxYLl
mpZi2wpLMb9mG6gZaEoPe6f9tH8T1rjDWndY8w5r32ENPKyFhzXxsDYe1sjD
WnlYMw9r51VsDhFaHd5IDPXeke/ftxLcQwn3UsI9lXBvpf9h702gcuy+PuAG
lahMFZmnNJBkaLivM0hEhpCiyCxDpkgIUWmSkDlTRKZSGUJ1X/syT5lTRKbI
kAwNJCGffb/r+9a78j2vZYnnef5/e62z1nWfs/fpuuvuXPs++3d+P+Q4fPHi
LNue357HNBvF/d+O4ymDKW+V8Pbr97NRbOPrgbSP9NjGKq42Teh9hvrU0GLm
jXSZuXl1tlSnnOJ7+N+t1olyiufy8Wwa4rP93YAaz/lMDt00Eya+G0P1tg5l
/TyLmOv87nz1ogB+YfkqPtlsLTdvtUzxusB7BvfIncRzUjz59eUzuYmHP4cu
YfzcyKX84YogxfdH3ENHHAFiKfE8CZ6pRV6RlW2efPe8wL/Nxri8kU1WX0Qm
XHxPlKbsIivcP4hJ07NhzPj60ui6iRDU4T3N/Zof3xnSnb94NocPGjebl6p2
5V6DMlmwgUjXGD2FC03NpArPImifUAPaz0wjh5y1qeq8KKI/2OIP/+Gf/Oen
rPL5Y+taWuAQVAyj3U2kgpCTYFanBnu8+yP7dHQYv9ZiqaLhNfbhGPqgL8Zg
7K/WZ/in2/f4OFCrWGlTGwKHNpJ98++RAx7VaViSvqLhNfbhGPoodI2/xmAs
zoFz/er93gNX36a6TAuUO8z5LG8oxMk7bKsQGsy8S9YVG9DLGftJodJH8ezx
PChO6SmtK1ygaHiNfTiGPuiLMRiLc+BcOCfOXfnnVeZfQIwT1vsQ84Q5EGKg
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
uAviqK/5suuLZ8z6QFNu36M1N3qmyvNtor5+h9hN+zhPhoOnLkLnFZGgFPst
nu3vfr+/2irvV/SZnCcKPQ9B2ph8OGzoD4OvHqTr0nYy98cG3HWgOy9LCOWR
eWv/5D9/YZX307p1LBdHb84GlR71JbdjCYrzq7XPPmTBvDs3DZ+raHiNfTiG
PuiLMRiLc+BcOCfO/Xe/vz/2Y/a79S9+FC91WzlQWPFwI8l6pk1t7p4kZhfe
iDdDz8GsUdWk5y9Wgd2y6/Sz4VlmMd2Sjx07j788vpzPXr+cB18I5DWyp3L2
cSK/sG8ON+sexDe9CuStao3j01wM+U31Q6y2wTFqYL4IrLsUgKVRMjh9eSwe
7RpDFt17TVo1m0kKll6RdVQPs1kaP0aGudy5r+9nocko4ZnufLK+UR6ZvHId
OXjsodi82ynQFqtLG523wFPvB7TV5IuMfujAE6eO4Ikaw7ixrRHPCkxkHSK6
0JwwbemVvY2kdKocerSuBYOGXyX3TQbQyb3t6enUw2Ru1wfirLQ9MHzyTRhj
OBHWdIqhZ9PXsjFDtHiQWV++YLs/T6q3iusOWsc7bV7KextO4Hq9WnF/up+1
SRBpzqQgcAh/CqsXbIFPLRqIth8N6Z3WjGq3vUj6bV0mlB+6bp1u0Z9YnXxG
uPd2sk/2XrwrvwW9retLkZ+/n/8cSkmAC3X1paY9b0CLbgXiVvdV5CFNJU1G
i8KSjR7f8Dehxh1q3aHmHfJnoAYeauGhJh5q46FGHmrloWYeauc97tlU2N97
kJBXM1iGehDIEWCXESP0LlImQtk2IczjsRxzINwHwloY8gEgJlozI4Ti2fh9
aurs1RQdZp6hycq+fKHVswppyJlXNKFPMZ0cWvrN+ffiD6UUNesz27+jqF22
yKuMej4so86vS2m6bild+PX17EXv6aKRBfRuiysKDQzUwkBNDNTGCJ7aELJi
LGC2aWswOlYdLux8JRLzEnHIgGpgGFgNTmx9LCJPLHLlIxcYaiaibnRD7S4C
ar8hZxhyhyGHGHKJ/R1rQFVaZT60RudNhTvGK4j/LVWaOD9BgTc1i3kIgUkt
pBNqOYp6afTs40zLwJx/bjuau58fw88c6sQTja6wpH6P6N6hW2HL6hrSF62z
AHrf4tn+7vf7q60yXiXi7FMxuflhMLhYAIZzA2D17mTa02s3O+fbiHdaP4L3
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
gTRxsjn0WfWKVDhb05mzM8jZoWv/485LfM+qmk/M1WaGYHRoDXnYUInGhu2s
cn2uP/nPH/sn2Z/616+1ynoScHiH0GnWTeJKrKjKtnzimt8WMq3rS4cej5W6
LifS6JLuRLdlAnuyyZy/JJ7847Xp/OEyzvtF3GXmLsW02rw42HG3nkL/Zsv+
QjEzeyuhyq9J85JZ5OLDJ/+638/P6o01V+lPHg0+SqrVCSP9Lu8R3kKA3GHO
Z3mLlAfy237Cb9db+d7/05RjZXTL0Tz2RbMXV+o3n3ue9OFRM2RcSDnLIt+J
NEW5C2zT0iVt1DhT1jzGyuaVsve9P7F+qU+ZStYd9qBOIeuvVYsvm2fIUxu2
4wuONORrlz1hl6kfO9QgjC4WZJB5eCVEhRvAW6ojTy3rKT78FA4Jg+5CcmY/
ONVelx0++4jpljG+3nsaf5M+hVfk2/CRA26wlnfz6HCPLbD4joo0wCMONC9t
Fk8lJwo1FqSKFV03QmT405/GTyEGBLEgiAlBbAhqs8/o/h50ys0ks7Tz0C1Z
hyXcUuaeg0bzLxDBj2aH8VY6fXiZzwnGR+qJ6+JmSY0eLpfC8wVpeEcXeGNc
h55q6UE9yzUoP3rrP44v43tW1Xxih4bWJZMP3SDgUYtWiLurXJ/rT/7zx/5J
9gf//Gut8vP99p3LQrWicjLv6ABqM1OVGid1BWpkKln6BkoFk8dL8d4vxZSN
m1mfh6Z8ReFE3kzuxVcZ2vKGmfdZwPu39CbZp9C/uXnsBhx0KvrX5z8/qzdG
NXTJznmBZPM5TvjCScLn+WZyP7NtcpdpgXJzw/O/XW/3e/9P6R8/0Ey3Z8xg
Q2/+oZofvzvEm+/L6cityg6y4jUrae/cueIemk+XfTnJUoOM+SZvN84vTOZT
6Tg+/Xp/3mSgDe9t24JPcFfnib7XWfqhNazXIUs24UoC5Ua7iaXPANF6yWyx
pPdjWc9zdchEjZ3ilXrxkEk/w5tFwaDmo8Ymlt5lBf0o318xla9qPpWPXivj
/uGZLPLVU1o3dSvM76EumbU4BMYVSeIDK22SuKm9GHRhBCR32//T+CnEgCAW
BDEhiA0RZmiCuXIh8CXGkq7NSbBVq8Hiun9kHUYN5dPzwvjEhiG8y7TefOad
i+yzYz45N7WX5Bg5V7JUbyN1V6FgyZSoi20vOqjsGbn9Kv4/ji/1e1bVfGKa
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
2knjJvtq14ePGhrIL54O4q0uuvMyz1K2aqUuKws7A/Wqt5DG+b2HqoN0/3r9
m3J8B8Q+8WUC2T56BWlxzYRk9HcXZx7pAWM9E2BYxh1Y0O4aaKzeBFcj9aFX
F3Ph+94LJNXoOVk4N4JsaB8vFA2fILc6d0Le/5C7HDGQ/j1dAZ/fm94Vkb0n
dv5yvJ7mq46Qli0cqEcVgY6yVeEflf132+9ej4Ou7yEtVpaROi4rSLS/vvCv
6zl+1ZT1z+OKB4hT57aAruqj4HH8ZzEixIYuamHGMrzDWe8bl1lM9Af2Yk8Z
q77oLXsmXGI5b6OYtdCf9ZyQRWPs84jRvr2ifdVGMP79J/FmiXml+ZZU9mft
d+c/HeSYApPDZZJlhq2UGPANqg89Bx/NL8PT1Dega/8WDp4Roe/DWVDSJlls
/ThJ4LnHydDYiyQwM5B0uxkjOIR3kh/sc9dhR3ttcnlrrnCJOojS5ybQc8gE
mNdKAx5fFOjIpq2Yx9RIdlAARcFrrMO2gz014OnQiTDobTOIWMLEBie/CV47
KClucVZ4btnpp9eXcn6qcTaJwtQVxcRg/0A6MVSLVrNwhAw7W0n3lb+01HWw
ZKoWT/RmZTDDRf14kwGruNWU1fx7q9HcSkONFyXrM/+5afBQy0ay7PUJbhf8
mF/zT3zGv2LK8b/w3Aexj5O2nIT1GUqSczeLr96EgGbVQjirX0e6Emsg2Q3N
AM0MK3hzuzOxfWxNZ6x0oCM75JPoiVpkpM7pirmMRMRAeA7UfXZjodfXAMXz
+8Pk3b8cr2da1eMEsY97kUDHTFLhH5X9d9vvXo+lUXvIpJQSMiLLjxS9LZb9
63qOXzVl//eDDyfKJz90EF2OzBPHdtQVHad3JrV87aj/mxg6ZfATivqML911
WECHcuqadZs66O2kr94NoReHPSN1BhYK36sfkjttaSLarK4iNk1qWWm+JZX9
WVPWd+z4GC0b7DyCFJx8Qva6bSYjZr0SfSMvQJ63tnRgQACkPTRgU77msuj9
jtzEdz43SfPlJ4K788F5T9nmByVUyjwKg4eYS33rfoeM7tOg5gM38fLALPnN
iMPiSHN1eHngoVjtUoQ4UagpTl22OOnqtnmCi+kuYVp1T6GXZ5hs2ss6Sd8+
1ZIdN2gvnKUGQpWbI+UuZl3F7C8rxVXjG4rba48kt8b3oiNPHKYtLmcrCl5j
HbadmtNQdOkQJLbX6yZq9RwjX7ytjuDWdbQQnPFKVi1q6E+vL+X8VO0z/YSj
x1PIwvxWtKZrNvF1sYCn4TUlT2NX6fO7hpL2wkCaM+Qua6bTi89btZy7kwDu
Jg3ij+2L2NpgTTZITQSfIU0l+zqvwTZHE/52/Zty/K/er6yF5tdMyNoK7OM4
vVR42a2tCN/MIepZCLx/tB8md94FESsmgnvQEZGVNiI21o9JleQcMnHhetK8
bpwQ/3ycfEQFBiocPkGer9c3qd8xI8GiewB5c7BM8fz+1Xg9yHnZJxGaeJfQ
pK0q/KOy/25Trcc/a8rPv7nxTYSEMnUy/ZkN8fA6I9SO1xb7diwVx/PxsNQw
GsTOieBwIxlm1joK9dZGwr7AcdBmaV1wS4kWjfL3ygcGewv1LV8IKTOOCxFD
82WV5VtS2Z81ZX2LeaGd0NNsM+n6SZ+26S0n+b31INerEIbftpF6FL+C0y5A
g1feYevqdeEfT/nwIYbz+RTDHnzGraesYEIJHbliDzRPMpCa5gD4NnYWL2+2
pfJto2nnRc2o1aXzpLZBJNl6qj+Jlj8RHF4WKD7/Z+GN5IeMCxX3v+a1zOHm
9+FJnewt5Mfsi5NWGguC7xdz0tphLJmQp0bINHtR26gFrJXCYUpmoqLgNdZh
G/bBvjgGxyZbliaNEWTywH3JSYuz21Xqf6mshzrR+aX923nbZc3fmgv1vzyU
HfceW/E+jwsmpX5kX5f+xPqDj7i/8VjwKlwO7xrZkqmJPVm9c+9ZTgzhjs/G
84tWozmzaM0vb09jZckP6JE+UeB8XUtaa5MKAd2f/fX6N+XfP6j3Qc5Lce5T
gX0M7iwmh2Im0uRqaTQhvpieOp9LP7ffSUe0LSQZDeaLVjlNoWhcSzAtuSs6
vy+QIwbCcyDkwlAPhD4m6GuCPifoe/Krz+8bsSdJwUdCseC1Cv+o7L/ZVOvx
z5ry+Xda3zVCefJYkl1vA1l+1JJY75giGkUNUcSgd7HWlSLfmktLB7WU6tZt
LN1015ZajboOH6uuhtf+RvDRwlRE7HPNYhC5Vd2SOD10rzTfksr+rCnrW4Ju
RwpTUq+Q60F2NP/6c7LgUXMY08lIOnJ4uLSwe2vp/rcSsmV1Iluk1onnNp7D
Ewf48Nnqjlzj+SvWVbcam+kcDAVcTYo8GQu9bx1JCvd0oy7fllNPIxe6LlOf
GjZ8QnK3RpMxMVbk464OAmJf/Pzx/ojBPOMWOQw8YCI/kZYsN56/Sj501HUh
ceJx0vRzGSk/FkZWTs4Q67STQ/fZTSWLb/0UBa+xDtuwD/bFMTj2cb8Q+ahp
1+Q35rvJ+ZCLla4vZT2UxuXqDpPregrJm6uQnCbHheiI1/KN1yJFswdrxSO7
Ojl45NaiezudpkOrtWIv8oJZ99QM9tC5Gj+hb8GnNLfm0y7W57aJr9i2xX5M
/VEIbb3AETq5Hobvs/yhjkb0X69/U+a/Ues860gPQM5L+mYOiH0yIwaw4JLj
LDY2mwUuvM0ijCNZht9Lmnm5D7y7biAt/2osFT+XoFEFBpq0cD1BLgz1QKiJ
xhgjyLdizBGMPaLCPypT2f+9qdbjnzVl/ePbzT0F6bwZmfJkEOm38Y2g07aZ
Il/hij4hsHb4WWg29jV8L/8M5t7v4InOVZg6OQbC04fDLNfXovbJUvmZGccF
xD5zV6kRL+cWleZbUtmfNWV9i9j1sJC+/BkZ3qEzveDykXwd0Q4SdzeSWk6d
IZ285izl9XkpWxG5j5UNa8PvtpvO71324kIzR04gj9U9Z8LudPaAoPBCeH4n
DkJn9BRH3qxODXXb04Xm5WTz0PXEt/kMstDTlrRrKBc8hqTI8NwP74+ff86g
t4mnPvudXtSmo3zbqDR54xHB/3H8o6yH6mw2zKHGgdvCvtVTyYaxFsTIeJYo
XOKwfto0aDnDXyz/nEzzY1awEdZPmOcpI75xeTOeXc+MDziuy8nzW8xu0noW
l92BtelxgkYsl8h7nxDRJUgLQq9ki51WN/zr9W/K/g9OYqqIWmfU+yDnhec+
iH3ORzXk++d25Y32yvgSNy3e328CG240EDLYYCkhbbICA+E5EHJhqAdCTTT6
hWGMWYw1i3p7jD2rwj8qU9n/vanW4581Zf/XOWGTZJs+dBQsRswUWjytKjzv
Zi8fuNZKjI7dJmZeyBazGuqAcc3aMGxjLaBH1SA+85q4/t5a0dW0vuhYzVKO
nJfjQ3dhbgX2Mc0fUmm+JZX9WVPWt4TN8RE+pp8ghYPM6V3jG8RoWX14r6kt
xYQ5SmvqG0sxk0fTuw1S2aK19nzX/Nm89TtvbtW7B9fUyGV1exuw+Y1XwH5J
Uzr89Axkvr4tnhsVR9ZnvCNNPBeRkyn9hQljtQTDOjky189esrU13Bx6V9wf
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
nsza4yor0bDg94+P4l17reQD+kfyc0038Ckjgvj0vcO5WY3a/Oj9Nex5owwS
7VpFCntmIc3wfgUGHjrQddkxMvtoDuk0X41cu7tcvrqqGRlysBkdvCeabm/2
hGJOIYyrj7FlMb5aZXocrMM27IN9G+VXYYdd6rAek1qw4y/qMrt6e6i7Rj2x
z7n1MOj4IMDXuRlxzNKmMV8pG8MX3l/BhagQ3qtsJQ9toMI//1rJ1Z/P+yyc
r8gtjfkVSxr4cp8O87jaSG9upObDJ6ct5BF7lvFsw0Be3j6Yfx+zhl+0XKso
eI112IZ9sC+OwbE4B86Fc+LceA+8l/L9T1Tsx3gmgbwMalNQn4s+SuinjbFq
/D6O5xdSrbk+v8vsTvVmI+yDactUI9pv6UZasjyf7lvzkNrPbUl9Al3FXY/q
U3X9eYz2rcHvDx/DrW4G84uzQnjzruP5CbdafOHtheyl32tiLZsEC/3bwOde
ToJL+3ck6vhWMjFPV6w28bH4xjpb3LbzkGh0fpCY92Sx/Ps2QYh7tl3YlOgh
JKyaJdvgVi8pxnBk0pjPVxOTDfxOWW9/LdsftZj07flZEQ9G694XMWTYPWhV
v46UMGkf1DhTSi1eP2UGN7or/n7EgHgOhlwg6qFGlO2FM5O0pJshG8Bhfk2x
83JH8cXOeJjuVEuyWXWi0vxh2Af74hgci5oS1JagxgS1Jr97f/vX8M/vtl/F
E+ljK35jZmlLazW3wrYYG7HVu4Ziz0cbocBcSyppvBcW7SimzRKyWXZCV37s
vhd/O3c2P1hsz23SU9nl6mOp8yhjKeato/TaUlsKnF4fii9cJw71zOmK0BMk
08Hnh3hNKvyjst9pmBc8yCdB+B5lSbIvZQuupvXFma6vxVx/I3BNiRZ5nxxi
mf+SpmUNZx9abmFHTE+yxTdS2ZLcS8zC8S7bfuU9KyyvxpPmmPMv2fa8p35/
br15LK/tNok/sh/M99rZ8KttnrC5tnbsTkIH6PPNUnK6bieVz3kI8ZOyxQt3
3Yip5RrZu/uPxfdLk8VVRxpQyzP1WFrQOjZ+7BXFsxJzC6kFFLPPeyvX42Ad
tmEf7Ks/LpddOFjGyq5X5dLZz+x46zPsTeEI9uTzMmr+2lh0zrCm+PrV7Dym
1681V48axPMsRnFiNpSv81XxX/9awX353ihH/l3XmWOO6YajuvCNs2XccnQn
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
7Vn0Xpqw5rOk/uma1G7JOingG5XWjG0iVc+bKPlrJUk68ldSjIsmXJmrBU07
fJEuqOdLhQOeSIELJ0tl2+c72n+zlGIKF0HKwCri+YO2Ysmzs7DX2pD5rytl
5xqM4C/frOSh+oE8bI4LLwjLYEe8Qin80VDYzB4uFAdMRMvcZvDHrQ8k9cYU
2sJnED12M4XsnJQpDc+PhRE5N8F6pgd47t9Cj0MYK7Q34M4FvZQxr53tInnm
mU38wuowJf4n5HlL3nieYBmNrlJpyRpwysmBFYtXgX4z25/Wr/hP+z9/Vk+r
z8PilPPzezvIlmc57n4BjqNG1khbLXLTJiTVV9TcmFAhXkc1vo6aI433bSY3
RoeRPUM2kta9FeTt9WxyxqWA3Kl1gxjeGU5a7/qo6H1dC1I/ukNK53DY2z0O
3lglQW/HJCjITgDbon2Qe2MvyMfHwx8dD0KJvwQ3Mk/AbMdUJaYA11wQY4BY
g8vl77wXuUkOt25AjaIVhJT/1i66ZMKanDqio0fF/gTyZWDOKOZNIHZw0qq1
BNeQq5bPoy6U9yWPd9mTY8FN6PKVa2mo4TFlxW3ch8eWln8H9MNw3ot9v6re
l+rzqvR/KsuvLKr6p6c+VZOvfl6FnAkdTG5W+S5v8KKjtFqnCdxaEwgNzCLA
I6onPLK1SC1tOoNeuX+N6uvmUa1up2nwpInUeqYP0a3ZVjrmEiW92DJIelB9
imLJFlP5kC5j5cFXXsoMooc7/ll8X0V4HNyHx/AcPLci/B/+T/zf+B3wu6jy
Tfzu5/Oriyrf28oJHorz3m2l7sMmS0eafFdklPdJOC9LSN1OMT7/s/jz312b
236mq9I/0waji+ndj5+pWnYhre/yiT60+UidPQrop8kl1CVajbU6o8VObTZk
ddRMWU81C2Yx2oolT6vHZl/QYF0PpdFzh3vQobcGEdv2taTvjwMlH6m/dOvL
MkW0LZWzOyHyLh9qyNvorPyhf1b9fRvWapY2ONJUoVc6VJHetCRNt5a9vH2I
NVkweC25FZBAMv0jCTFvTJ70n5ay3vK1wkL6qoieDWm7LxuRcz4bye4PF0im
+y3yofpJUthiP3m27xAZEFOdako96buGVrRHJ31pQv+d0HBzMZhdDYOIzJvU
KOEEq73Ohoc9GcG/fB7DX+g48s2t8pmRrCd77DSe7NP2hpXH3CApYal0dFNP
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
6q2h5ohBtp2SexL5l5CDAPPwjpfbG33OAnsDHvq8pRJ/hc/H5Xx3nhnfhaPW
KOptPejfmTdf0pMj9yDy72AOOr7T+G7jO47vut6SrvDqTBQMcGoIm87cSUvJ
mSvRenvhavl3eNeiYn8VuePR30QOMeTRwFxSxFIjphDj6ri2jPMr7GM6Pjyk
rLiN+/DYSc9S+Z43I8io9AakflX7H/S+VN+vSv+nsvzKgpoqqK2Cax8Y/yns
by0/cjmUPC/QoLcDEkjHzmowfMwTiF9mIUwS74FvaBw9tPEEW7+vFVckjeMD
23nwhd/a8cZeV5nvrmf0SdQ2cLpsIPTHn4Wdy55LsYujyHnDbHItfgpp1PuR
7M/yu1e0Xo378Bieg+dWxP+O/xP/N34H/C6qfBO/+/n86jJ0Uq4MMZyYx/LH
t51kXdMXEvZJOC/DtWmMzyNGEfM0MFf1Z/VHfnfFeEgXdW/luHin/O+rUi++
pMCLt/9QfuyzF9eO9OJLO3ny1Ydn83ED5/FmQ/14HZ2VPHLqKr7w4jL+bKU7
P9XZktcZl8hGuh+jXy/7wdjwXOjU5jDMj3whufSNIa2bfiJ+bCE5ez+3QjzJ
kiftUrOGRad9+VpN0TxKUsaX3WO/y+/2kpELNsVyq+W3FGbzciRvexfYxvzA
ZMdM2P3YHLqqt5WSFo0nF4syideZx8Rq8FpyOeqyvH3fpWnjjlxNO251W9ah
fQ/5ovFLZXUH35Gf2riQNBvWgUzcsEr6cnEyeH1YDoe3NCc8vyer9+4dW5NM
eKuX4/mAZmN5WKNWXGvzOWYvHtKv09fDyeh86K8eAIsX3VM03tRfCoyLgfYL
DMSLK/GAMRVcV8Acd8x1x5gX5r5jDjzmwmNOPI7JmCOPsZnXBfOJyz09mpBn
Sh0NthPEhCA2BDEiiBX51f4PPmP0c3GtD+Odqd2SIGBWXWH27l/xGLWSo2Sq
YT36YeIbcpjG/XQ8vaKqyndwe9pxkhhWSCau1qE1Bj8hPSe0Jk6jVkhfm3eD
YodoGKQuQcDcc1C69gQ4OR+GwbF7wXVJHKQn7oMd8fth36R9EH5/NbS+6A4J
A5YDao4g7zZyTyL/0sJye6PP2TpWXxl7xJgkrss9LPdN8fkcejBPqbOOWqOo
t7X9qC/3nRyo5B5csnSZ8p3GdxvfcXzXwyO9IUrvIsz9OBVSehUpdgxqJQ0d
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
Pwb5CuxPLePz2w3hEdnfGLZ9ef1H6N55kSgJmyyaOJ2C5F3ZNGifYIGkKW+3
9dfzOWDMCv1KXFvDWBbGtDC2hTEujHVhzAtjXxgDw1gYxsQwNoYxMoyVYcwM
Y2fop2Is7eOXIqreoIjebllIe1wrpL6ziunUrGKKeXjIRYB4LNS6QF5u1L5A
DQzk3UZNDORfWj6jHtzZ0Qbm2zQG63Q9uLD7jURafZKG9deCJgFaP/y+I3O8
5eYZW8gVYz2K3D3Pzn+XGuc9hOoGdcS5ln8/f6LS/6ksf2VR9X9sbUsk5GVH
blLk58I+E/tO7EOxL8U+FftW7GOxr8U+F/te7IOxL0Z+sEe3ipQ88WCXI/tv
5xf8u5e/Wn/tZ2tJdBwZeD2ODNHfQ049iyOIn+xXups4uu4m1n1iSf0Je8mV
donEqckhMlx2VFlxG/fhMTwHz8Vr8FpsA9vCNrHt/7Q+nGo+Qd6qq7LS42OJ
RudHxMsrnDh0uCypPd0EzQvOgF/tgbB8STR94xLKag7U5lZ9u/F9kg9XPx7B
/T228JBLkbxa6WLeaJU91zl3lkW2fkgNPCOhx2o9MbT+NfCZoQ4B306TgYuc
aWmTLjQi8pgSb4xYVMSkIja1Ir0sY5d9sJSU+z/jN0JszYaSxYfWUueO26Dl
FAMh2x1fIV7ndr1DEO7SQIz5mgUtBmtCYo8TZIeFMz1/xomePahQ5k+0+5IJ
Q6iFaDzyHrSpG0cPtzrBDPu14oGycdxcuPN3O9rxJtWusjatn9HgR5vAL/sz
9BseCidP1Ja+ZJtKJdNCgNcpgrpx0YD4Xcxhwjxu5LJpFO7OTed04Kf3PmKO
67SYVfn/mBriIW5sHCaOzE+F03Ue02tUYsu2NeE3Qt151oplfGyDVZwdDeQT
a/jxJR/n8qLw2XzvRE8e9dmL7/L15rorvHl6gDcfssibT/L05m3nefOS8r+7
F3jzTJXavtiLr+/oyTXtZ3P/vLl81E4/7l2ykvsmhPAli5dzv1Vj+eJ99fhs
0zBmHNqLGFc1E01Ch4qPXx1Ea698mJDoD28LhoFe9RAoMtkHa8r2l9t+P2y5
mADZ9vvh4qdEaNUwCaKT9ys/o8Ypap2i5ilqn6IGKmqhoiYqaqMWnL1OxiZ9
IE5HM8mWx8fINOutxM5vB/EfmUyuNzjww+/73GtdmdkkV7LZPZc0PLmTIIcP
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
JGPrdZY4bfxi5NNTnFfpLybKfbsd9RV5o+Ckx7znxAuwuLOcML82FlhOO8tt
ZznuLNed5byz3HeWA8/OwlhOPMuNZznyLFe+69WTaNsrMTxhaSDSCBHj0Lt9
RhZWipzPcnfOIqcvt335UpEatuZRfSa/S/sNH3bwDf+5KIuX8VvI240JFD0o
nMuFfXvDiWe+4AJVOO5F11WiYStm8rcbRPyrqY38rHvNvNiEF/ysTbn8oNrH
/IKLvaHTyE0w620aKB0uBMOPH8Frn5iQufELlPINcEO3EpTXVcBbsXewatXP
518DLathfvNbUFv5BiruVUBzQhMoG4kL77ylhAvjv0BB3FM4fHIfeOzVAKmU
7vzAKb3RG00fZP10CjpXmcxp5yjn5Nwvy5l+9PtZhdOP/3K82t/Nn/i7fd8O
+3sZe57YnoLFVa8N34fW4VJ+U79LEHNRRmgxjIEt8fl4QuB1skpZn4ZoLKb3
65fR8qeI6nvVE+PwKeT56imor6IvnL+3EPhpzvzo09NQ0VYvpPk0ldMZ45Sj
Xf7KOGvvIO4tPmqcOrvasP3z+Wf4XP3Y4UYn32kYM11tpi3J+OXmh3RrK6zO
2lgfG8PGtl8PNtTpGt54daqtsPqf4X/DFcS4zKtSXO/V340Hf29sK6zO2ljf
r64//+vWXo+VYXqsXWx4Fts59MO/IVvXoa9z5+LIK4ANZtW3FVZnbayPjWFj
2Rw295/VJ/1XG7sH2D5c1nEc93RJs3HR7TGiykm9eXLAljce2ygqdtJBugFq
ONkqED++noHXeF3And+dwRNxGKbK6lhf9bKxpo8yeJT4QeaE3eCgMRMqj/fi
4x/q4FidRPxowGX8dGECjiuaiAcfskOr62pF1sZlhlc3x6GwiJ1Ic2IV38/8
EeR1VxXOZP2Mf9ZUdKelvcxot15lRNPoC3b7chbeFQ8S0nqICy2Lh0PuSjU8
83wOVpjxHtt5i5NNXV7jLtsDcczgHdyiKFOQfRUFfHwILHLUgWOfEN//2wDU
5PUBiaUPwf1WX0EMA82w0AwTzbDRDCPNsNIMM82w0wxDzbDUDFPNsNXhO3aB
gLsJj6MfQ9yhZn6kyzEETk1onpIbWjXvjbFa8NzsFU43c2SXG4gOfHiZw/6+
G1YqI4czPsjxWzyymnYUXZ+5DV05pI5idDHX4K0mCsg+LNp4P0p0s8f3HDx4
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
klVOoxcJWSgy5hTq0ZLUVlidtbG+X80//V83uxXvjNl7jO3l132LRyy/neV4
MZzzEqsTwM67WMyH+T1X9Te2FVZnbayPjWFj2Rw2l30G+yz2meyz/+rf0/78
+OS+Mt5Z4ioc2SUn3Ph2CA7plODeQ2+TS3Qk1ahZQnc+cqC+w8bRHjuLSFaY
LPm+Jh9EJ1wFpVYfoaxCVsh8eBtvGHOPdC8fSU2PLaFRFxzogYRRtLrbXdJs
UIo/+B2ApfXvofzgduha1SBqfG/K188/AkNaOwmvEpJ/eh/IubpTnX0W9FpK
PTGaq0TWrKyGnqW+wqMmX2EDXw25IUpE82Y9kZtnQVcvdqMzl22mzZLj6YaZ
j0lALx5HDi6HvH7DhW+rG0AvVR7EGvKQzWJr7BM1Fa/adQkxDQymhcE0MZg2
BtPIYFoZTDODaWcwDQ2mpcE0NZi2xthV6VDl0lug+4ra8D+Sg06iS6e/IbX3
fsjf84Nx7JqD51fu7pbdU907W36GRrbkwZVGLK7X44dvO/vH3/f683fGzG8I
PelgPFImyKjIel721TNvsodtepbdunpc9lSQ4Dod9EOzs78gjTMZ6Ib6E77m
WDooyJaD5kJ3uC/KwZaf0sgJxwF0VLQDLbjiT5UWhtI9rdtp8HQf+m6RM51d
6kSv73KhyRI/619s/NH2OtyFprx0opsWOFPTGT5U8vt2Omh5KM294U/nhjrQ
dWYDaPGyNKK57Dz+ctsHFu95B+MNMmFz1BveetrRthiWzw8/7trzv/5+/bv5
E3+379thfy9rj998LvLhJrpdQJfO6GJ96WJUPWUQtDxREs6esRUMF6kLPR5v
x7O8npHgS5b0few2qrDLnz4ZOJ0WelcQ3dkPsFzre9BJMxIKpogLwaXKUDfg
GkrTVMU9iuNQqz7iOqsMyTkcEZRTc18vx6t4VDbDBL2U0DVKWhtixPyjpiwj
bkXlQc7mzFnuXKUHV7tuTY50iwx/yz6ED9G7yyetkoDxk5TBq0AFdFs6QW5i
ET8xPJrPaOrOi6UH5Dzu4c6pvU/g3tWt4bILdhkvvTUvRyytMCcj7GGO654J
OSeDNxifzDLkukc5cvnxP+t/XtaXhjlq8nD2kRTIwheeFVZnbazvX62X+b9m
/23+T/v8AaapynTlh9pqCjrTsuFSuCQJL60jY1xs6Ixof6qR6U/fis+ik4Rv
5PH3nqT7s2aYcC5AGI78hO/1D6Hfx+HkUaskrfebTaWK/amcij911JlOHUfW
kpOJEiR/XiZcnq8kJEQeh+2tpvyQQd34KVnR8NVLRihQ+tn/6ePkTg8ut6BT
3tYRK5uuJEOzEuYc8BKO5HsIN2RL4WRhJ1JaV0pyBURfSayhL86toetUEY20
KSKHH8gT4+vrYbf0Z9C/kAU+4U/5SysOoesagzHSGI4nXE9BSlca+KZ+j8Cx
Uw9h25zkP9VP7fs8EULElIU+7x6Cw7kmPvplPDqq14hK57ohjVOvf1kvsP39
tVv7Dc/yxljuPOMPYhyKjEeaaWkwPbF/Vh912Y823d4u1N/RiZZWbqLh3X1o
6fntVNQ7lGb5+9NrQxyoRf8BVDExjXBLc3DmKzfIjXoDr6elQ1naY37Iggzk
IvsFab/zRQxP+FfjB9v7E4x/kXFQMx0Oxp/J9FiZJj0XYtqGnX+r4E67PjCl
gypfEcWLn/DJFcmg21tVCLV/BjLPWvghUxPRtMkfUUqMFxp2+F+v99jh/3TY
77T2+bsJXBZn7NuEPM5Px6OJNMaFprCiYbiwqd82YWOBnfBtYDpyu3uXlD+0
ol3mBtEUpWB6rHoG/fo9n2wNM8cJk5EwL8lJ2NtngLBi/zjIyf2IbEdPwHKX
i9HX1ce5WVGqIqUtQaIH7rNExbNjcirwUWOGDcq2ec2tSzdD8avi0MsXBWhn
n1pkuiUbiWnc5Xaf3ct3XmEKNoWHIFH1AfBx70Ht2Heo6FQD0o8F6LTSDeDG
Tb5BLYU7FnQebQu7jc4VBCGJK/FcjMZG0Tf9apHN/qeio+ONRfuy53Ondw9E
Lj2mIzfZV9yZ7f159cye4DpkB+zsdhX4Q+UQol4Hs7+9gZv38tsKq7M21sfG
sLFsDpubrVLCKStORQty+6J158z/7Xw0/+n233b+1Z4/gunKT/ZvhCXzdYSq
wEtQ0F+ebC7/TPLez6Pc2FB6wiyUWk5fRL+YSNNJ3v3IOBkx4ez+YEF7kL/w
dnAe2JZg0nRZnr4PW0yl3gVTpxdBNN1zNrV2bybaw2XJk4s5sPCLimByKR1y
rObweVJSfNGkSOhWJC30rjrx0/ugk407HW1rTtMuVpFPIEfuzn8OTbMXCxVX
bQSLM6fBfPNdfDIzgZz2k6UR44bQW8OG0hMb5GnrhWTSP1WcXN83nd+f7w+c
3EzQ2unGr+wzHsUm1aA8JyVM+8UhC8UqvkHqHrSe6SZsrDsOc6Jqsa/HCyIh
S2hIdyd67Y0Tveswnn7wKiHCMlkyPTQYNA7ICGMtroBUUBnvuXMvul75Eu29
vAA9uJX8y3qB7e8vXJ/Js9x5xh/EOBQZjzTT0mB6YkxTlenKfzk/j7rMt6O7
TSypS/R4KnuYUL3tE2gANW17l/5jWTXBlJrvnUCnC4S6nfwxVtuSnv8+i46n
86iKvA31rhhJ7Y3FqdSacHJTJhWfeywFar0jINvTChJJvMglpRGtipXFDE84
uLMR91fjB9v7E4x7multMP0U/VWpwLToF9uVEMaZoJTkRqd6utNniybRx3Mr
iPKQziTyeTjcMewsTH99EzyHVvGDkg+26fFVRy1HjQNO/8v1Hjv8nw77ndae
v015SQw3yvkpwu+NsbRbPbpsOxK+hqoLeyavEXrGGQqp10bivKAHpDnJkjY/
3kZnq2+jhjsnUdPZV8mC/QHo9ciZgvpLb+HOEh1h/14Klk3ieJfjNNz/7AfU
on6Tk/tsJ1q09p5oXOopUesXRdH5vYM45bWd2jBC7Jxss6Qq5keOx5/dpmCX
dwPxwJfhqHJlEL84cjU4e+TBOht54UhXbaHHpRHCc7dBQsJVKSH7wXF4eqKK
H52yBYlJa2G/oqH4rXox0i+UQNJNF0Ql54z4N/xA/kBSiCix9DB3XWM18lgV
gXqsVEcR9xfyw0tnwr7BV8HqsJzwpIumMO2LthBwSENwvavWVlidtbE+NoaN
ZXPY3BFefZG1TzhKqrFH311D/+18NP/p9t+Gf27PH9pwrBNsjKkGA26QcOwG
QFmODBmV8IEInnb08fXtdHPNdjphhD2VWydBNwT3IQozv0BcVJAQMyVAGBhV
BBJLdcidSgnaf5sdHbfRn769to2uuG5NN96rIRYbJYhl10yIV1YSdvQ9DgZp
JvysPt35vuXRcD1YRjis/HP8Z7S2O+1TYUYzxpaT91MkSInqJXh7zUiweNtH
0DuxCiQmOeJaW12SNWEbERwPk5FzjpJE9WAS7DiGtAaexIv0dqIXnyx40mMp
75gbJhqWH8FdeRmN7tU3o084Fn0LruXvX3gAgZ7KwrmyE7DUugF7iheSS4vG
08PrnKm63Gaq/sGURsZXErXGnmTGrAWAN3wCq2E58OLwc95R2ImWp95HR16b
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
QP2MpaDQl7BXtw6c7nmStG2lSaP7bCUfVi4XlPmPennnyVDjHHU+UesK9R6Q
8xh5/5D75kd8Q6/bHoWjN/Wk/Y9T4P2lbaLF4Fuyzjp1YL3LQvhYqU4mjBjN
XNur8LDQQfzigBX8tyWLeaxE+KbOd1jdm4X02+IYuHNaTzJQvwm6676ITWYf
IWNpXWr7OJn4TDwnfCeb5EWDr8vbtQyXnz69XKxn0B9exqbBQYvToOE1Xv7x
oDP73FyDB40aw0/ZefI6i5fzibwXd+6XxPpsfEX2dGwlyWItpLqnvKvPQkF0
n1ZrNndGL2bQrDXTPlSLFa4sot42b+jmtcW058i/vv69pLyMqjYvo7mdP1HM
vXgs+kLn5H+hqBuK2lmVwV/oi1VfaIsB72idOddo0/xddKi+OdXIixM8rVPE
/m3rw+CLGvCl8Ih47tsledjWzcIUmyJh59odwqA5Ib8cP4gaE6g1gWcf/Ps3
LukmDGy9k/Qrq0e7DpaTVcN1QL06ftd6aiFVar4Ej/FAscYNcd6IdcqLWsk7
Th3In+qWsH7j9Fi/KUVwb6i3VP+St5T6uBh2eeqzj63KmNWxIXxa8RoFhxvy
2DZKuMAyOy6mld2MpKK3QyTXVvWkcVPbgVfPQlL36kD6waYBLTToSd5FUVGv
ozEknPKD7UGHYMaGaEjvOBj0HhfIO7QzJR6rMsS9PAMWO+hKVyEWCvxKqZT3
mGXZ2ipykzXxT439EesSYdFbUEmTrTjVXbi49IMsSbuPPD27h7j2jY84Y2AL
8cyJKaSj72BauTKODv5wWvH3Lb/4mNTVqY5P+h6E/M5XYHjRUdjrNgoSuruI
hvYm5NbCIFLpbkfu6cwQvI3ay5+77ZJHDfaQF3w+/UP8zUe7Q+Sr7CTxzgRC
vZOIcb0tJNC9F3Fu7Ccs/aDfG/X2FmjcFeq3nUbiOkWQqrkx1X9PvkR2yIjo
9mr7j9OLUjZlPVDEUCOWGjHViK1Wxmfj/op3DJhnQaxJhN4nUdPovcKxjX04
hnNwbg1e+9eaMp/K4R1PxWVqZ2BfiJZ0/vseaG6fT8tmX2a311jy9oZT+Vmz
qVx2wpK3bXSF+aQ/pVs/7oS24zUk6psJjcxuip5B0UT3XSEJ77uUILeQcnxd
+vaTbOIDTzIrs5x8Df8xH9z2z278zHhb7tI5n9lP+0j7tY+BLE0Vab+dLwwd
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
FUr8nu0n/UOCicaD+eRdkzkKfEqMu9dP41X+bkct720XnUidD70UexCewzEX
gXgMxKTqvdMQrBP1oYVuNBi3K4X59nrSgeFNpOWdDaTxD3SkqJbq0r11KgrH
NvbhGM7BuVPDSyHmUyyo5bWB263vpe0bUkjuLOhB967tRo+HPiWeAZmyGbNV
wPnoemgRnwXWhq+h/aAymOb5HoI75UPl65vQet51qGx6C3AN+ZE+AHLHIn8+
agihjqJJ6EfoI2suYc1q+vmGku5hR1hndoI+nTqfbTp7QOHYxj4c63SqoWTz
qrPUDJpJ2m9K4WCzc9CnIYC+7nlY/C33b9cXUNa7uFFuLE5/XyZa12oB+nGH
xLHXK8jN09+p6s4lzNY1hk1TS2ODg9JYrGMay+95mVVEfGeTZ5nydkVj+f09
XjzHYRvfPCWKaxhG84CNO/juo2t42UhLvi4/g6U+ukxrR20Gtwh1qUq6BN8v
qcL5pHNkQNxA2sjDhu7slPrT8U9haTygflWb5ndga/Ancd6HvSRY/7Hi++dY
HYP/UX4CZX4AvAfCXBiuJ3imwntllV3tFfhCrLE4NkOT+icaKhzb2IdjOAfn
/qflu/9p9rPxjzKf1JueR+DgFW2pIC8K7oWOEO++uClvNt0dCg0fQ+9+zr/T
D5sy3o0XbbHh+9XymfvyMiqcSADLl02kMJsn8P6EBnx5c4YERPagLb4Y04Cu
anTttkqyvIcR1elkRme0TSVXFn8T36XmwNn2daWsOhsh8YEWezz4GWNzbPiT
7cv518xlvMP7PvzG1TwWQkpoRkIctExsJOH6hWc4vMe+HP5JsT+8rT4j/93/
/zX2zzLl/H3n70uEWZNDiGn6O1JXLYwkPHggjj2YDWyLkZTeWkuyf5IkNrCx
YIOSJFbkV8XO+H5jZ0YmMad+DZjZyHFwfmwr6b1bK6ngeCpktYkV3QcXCGkq
O8WYdrvg9Bd1ydjbRDofYy4t82wjtdBoIp3PMJImtW4tNdNqL3m4tJaKfLSl
2RcuQpOgqTCltoe42HEQKU9+TvQKNGjHdDXqeL1YgU/Zrl1JRq34Tn4Wr/J3
+9TCz0TtdaFiD8JzOOYiEI+BmFSsy2mZeYjU33xHXrqxBWyujlGeRcbCIJOT
sKx3AgiP90HJxTA4GhGicGxjH47hHJy7Y4If3K3VAVxv24oL7gaSnhctaGD2
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
XQN2qaqB7pAY8WVKthxjoDTH5wLmwhAPpIzX/dm/D+SkQl4GrE08bHCcNEyr
EDVnnANIVpP2CiHQe8EVKuzPYhkl3fnnNDfees8mHha6hd/qH8RfdFrHtYcv
4avbzeey9EU8/84qrj3Ml88OD+b9b4bw+YF/fvyjvF8h/jkvpbGUu/QeGO2v
EJFDSDz3nTSy3ECGvp3xh/mf/ttcmf8w8rcvsma2tYXTo7WFIfDzes3ao1qn
NW7hkTZ7s15axNzdKZn1PVNanHiRWne6bZrD6Q9/evz4s/GPcjw9ZGgchHto
SP77wyHFrL2Ijm3sw7EfPa+MT0ZNO9S2Q4071Lr7vr+noKm7h7if06O5czNJ
53b1Ic+0HFqtt5RcJ7yF8lfZ9KNTHouoY88t+nvwqdM9uZfTYD6j92vF+oVn
uNQrzSXM5Q9orwq4h2ENqdDYh+D3+1fsoTX272vK+fu5tkdlz4N9yK7amrT7
0HTSwEsLNjV4AUVXjKRoWRDs+q0TMy7S4FbRLtzs1jYujdnLxyUH87kZo/jV
xO9MXWc6e63D6BCjQtG3Mls8uVufdmhYn+1dGsDGdTnPUj6XsMwtlayH6wdW
PPUp6/SpgC299o4NX1nG5lkWsXa6V5ls8nbm1cmcLQjuSxPaNYfJaUlA1jwC
y/JHcHNbLlxtdEfxM9vxEAxDc2HuzBtwYdctmLL7x3iVv9vxHI65CMRjPJDf
AazLwdpk5GdBjrqW9jfhQY/T0H3hUSiesA+KwrdB6JAtkFq1Fexv74BNtXeD
ldcehWMb+3AM5+Dc68MioM+bCLDrsB/2uYiwonMlbNvfRkpS6yZ5uelJDXWm
QpewRLrLx4NdDzjHHlmXMnN1Vf5tzlc2vXoNOVp9jsK75JtX85j/kXyG69b/
5njWw/tuzPkj7vGT6S22zjeFtf0ew3pnZ7DwEZpcT8+eH73kzQ+/3q5wbGMf
jh2Ny2DL28awVY+S2D2dXLZ6+huWFVvEvjR/yfiXfDbLv4Ct3VjAsnLvsgNP
JNalfShz/2TG+mU3pdp+K2DIhgcQnn0HnsQGKmIgvAdyyM5U4IHO2k/8Xb32
z/59IC8nclMhP8P96FQSO1wd3FbcBjPN+lLU3r1g3voZbfD5Njt+xYan7/Tm
l0w2c/dhgTyx41JucGo49znKufYtez71ymSe+daDd7u7kbOdO7lN9C7+NuTP
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
EZVb2IHN/ZJIuy79jNufKyJy580hScYLDOS9QPGOOWQpFpMto79g/zEnKDqg
w+JVXtCdjp+EByE30bTKPnhJgwIeonPpL5//RFaTqDlyKVIa/R5lXU9GQw4U
C0tN7lF5OQ12b9lxWqv3EZe65ZMZbUaCyxoPyIxaDcZqY+BhWAnZ20GaBG64
RG86EXb1iCkLGt5IH98No+us+9EgxweCwRs9YfcnadQudQGaXdId7QjBYs55
JaRtkaAHKyW6Wg+zVCTtxMfSv4nr5o1Alu8axLtu3Jc06rwWCqZOpE5SPhRP
XUUDvA3o3v0Wgle3sUj34110uf8d5DvHB8nkhYrVpCwlb7OPSsatmShpshn9
lzw7o6FuWdsm3BenWe9Cqo9nIKQSL7xcH0ITreLptAHfRLznnfe+8x54zoWN
OLoZvG+Ng88WdUQwUicOJTX04TU/5pHnxzqbvKUrdNVJV/F7ckOwBvsNfx//
1H1qwKbvC8nXueYw84knZCIvCF5lAVG+JaTK5Su+fCSD9rIzZOt2ybEY0Tpq
4a4rLFIqFceK1cWJr+qyWuOXf/d696f+s+tX8U/kj1F/0ByWmBWRvv0asc+4
UzRiqC5zn/2CvnSUoiE9TyPPvcr48eB4lO6aKn7ZcWpW+6fKQrfnYYJWn4dC
ztpmoWChArU0aEPNRklR7s/FPUq5T3ufo58Fw4AmQSnjjdB3Sr5g6VwuaA9X
pbuzBlLF46Pp6qs9afChIKGjy1H03ssV5x5OxqNWnMNZ0ntwRLAxtlwxEmkl
KAj9jzgLioN7CiVjhkt45lJL7oBUZov/3O9+3v/r9bMf0JOBY7JyZkyWnD14
TKK9zlrCMRA/B3otZCKuB3JYuxJdeH5MIvL+LDwNdKTeHmH0iF0gTYYl1GnH
drrPuJwOchrIvn0ay3w+dWChbfuKpXK9ieJJZdi0b3yLJvr9cR9wct0INVVr
4b6XNyRdC4KF1hHgeyy8xV/o2Nwx4JRSTbjW+t77bYhM20iV/Ne2YK87uu6o
oPA0urByKOrm9lyUtbEmq21UD+GJ13ahARsKZPNK1DxzJo64SvEg+9qWwef8
Gr/Xmj7TbUgb8SepUNSmXhkXHctCA5KVacSDGjqsjSEbn/sP/8OyER9JtxnT
QTkpELy0QmDYtcXQfrM6lNz0IqvnKuE7fWSp0fjOKF0qDTv11SKLdvciaWP0
SVinNmTp9JfYdOJ+/PSpBna8YSUOWeonaEgnCdeuuAu1sZESpO4grnA6KV6a
OUPc9cQLEW7oIW5/I0icHXhMrDXYRLxNz01y1mWaoDTxvLBkT7kwe02JIG+W
IpT3Ews13lVZXJPHtXlco8e1eoO3HBJ977ZEdP9WksjgTOkv6/Prf2Amfm7E
uTOuH2ptPTr1xRNiNprD64xCwrM9V/Y6SZeJtNhs4R61n1UmfLYPRD4WwWix
mZSgS0v/os8aP2m32G55Inr9vC2unZeODLNk6dedRbRncic2yi+NDtf8jq9+
fk3m+YyHwVE+sEnwhtrdVnA07BXZo1uFB8REUtf+D6ncVYlAhh3Ghhvlyedv
tdjOajv26LYJnXPvJEwaGiAMURkjtBk7X6Jz2kDcNPWwuNx5jzg4S1F8sV4s
Gbywt+DTYaUQbKYsJH8xR84PBuPTd/djhXkC1tyYgu+9d8b3dwehyM/7BM3S
jrT+gw6dLMOEvR0fS3Rzw8V9O9aKZ7juF2e+CBM9/fF7+ix8yxo6qpsEXNKz
wtzXiT/czEB1tgb4SYf7aEuCHv0yU4E1mFoxCOjAuOch9z7kHojcC5Hrf/ar
WMGC5Hek6Gt7Uveqih7b4MusXH3Z4jNVdIuaGoldW0tQkDUsXfP38Q/fQzrM
KiJlV83hlp5XCwaSaWcOcOwVKfavx5NlE2mufTt26vF5etR2oNBnrCFO1se4
h97NFvzaWn/B717v/tR/dv0q/hkl7QVGJ80hZmURCbrQiC8tTKGnUvXY5kUl
9MRMZZqudxtddRyBp8jpY9d2mei1e524g22EMPu6DXX5dJQe3HaTzjn4kn4q
LqLDZ+dT7k1q3f8J5Rk1PKfPPfUJlX9zg4IGpbO3X6ff+32gxdv12IHn/Zhf
mBpb3Wsx3RN2GMvEOJLhlkfJ7cuJ5GN8INnYpxtR9xyEJwz7LGhGTadd0nXo
lFAjgedOfo/qhQLWnRBzD97f/bz/1+tnP6A36/dm+XQ9LvHxkxM4BsqaUSa2
u3qxRQ/ENdF6C4+ivTdXC/GHPegVlXs0YLAcc0xVYnMKZFicjBLLuN2fxYoc
2MB7rmzUAysmNzOWzrKtwjqmqWS0vyr0H9mvpTfecNBQWCkvhrgAW9hRsBFe
xIZDRuOBFm9F7i/Ee+x5nxnXWjfurcAWV/XwLoM8cQeHQEn1M1khzS5K0kZb
SbTk1F3JEWtN2t54Nf2yQZtynLOlgyXRrDtJTBRetAw+59f4vdb6c6uHdhBP
/nYITdqoh8397qHJRTq0Y9Q32u+9Mdvc5RqdoKjakn/hM2IJ6AbshZBph6Gv
0w7wSrSDhZtVQTQnkzTl7iemIUmkm+I9cquhluQekAFnG1nYoFlPHHJzyDyD
beT02QI8TiZUmDE+lVY53qJmTcE0MClZGLrZFzn3KUFGm86jEMctaHBWINqk
HouQUQy61bcbKk2ZJAj1g+ilgXtoc8VZKg2naWSuL1XOfifo5cwWc00e1+Zx
jR7X6q27NxsdLbVCkVfmoOKZnr/sz8DPjTh3xvVDtrmtr0f76zxh+EBzUAx8
RaTj67Dringq21aVJZaep2pFp4V3i76IP4zZKlwI205rJ977iz5r0ashyAgp
YL9GM9ym7CE6vVGTjj3YQGMn9mUjKi/SIbOUyOCOX0ne0tkQkRIERaYBEN59
EriNyifmBvewNbagOm0WiLs+GUyGvD5BFO/nkJik42RDCSLdOpvjU2PlaNGM
JdS2uieN2EyEyGIlNOFMMKqQCkB99kmhXJfBwj7fLnSh3nzaJkyGIlkR/vim
D7nkuYt0SE4lTVvjyZ6+C4micQQe5+JF4aMCS5igyJRtTtD10y8KqrO2oi6n
nqKzLwIQ2b9ZfNGsk4T/noZKTkiCphtJhNGnxTe3FCOHoSPx9UkfUMY+U/qq
exfmMNeVqXiMZTzzgmdf8AwMnoWh6ra6Rf9TZFNL4p3VSNKsajpkhy8jU3yZ
gnkVLXzenpydWEsavK1h8Oq/j3/uDmnEfC8peGYOpn28YNxlT+Bc2PCil8T4
5nt8OOg4jXqkxLBeItWo3Zw1ufsEvDN8dgt/OTkpvVV/id+93v2p/+z6Vfyj
LPsDo0vMISGxiOjPbcJDlp2mtrQTexJeSZ9kq1P1N4XIsOcc/PW2He64uPNf
9q+MWHlWKa/N/O7rMfWOHRn3ZefZNDyf75iRLnuytgM7YKHM9IZ9o3ipAhtm
P5A5+jqxkYlb2MJx05mpzmr6IWEI8Z6cRyzKtWHjw05wI/0rubMmnPi9OYoX
wyIa2fsa3WYTTA8dOyjw7G2eP8kzmHgOwe9+3v/r9bMfUBjqm3Vrz9iWNfvG
jMkSzoVxPdC5mAzE+8J+xs8xBTm0t3cu9fa4To3e3aCVhrU0QVWDeRZ3ZhoH
FdjytwF0tjAJl5aPIfR2FLlzKJU0Ljzd4pGYuvYKoRXycHUGtGCgwEsRUOkb
3eKtyP2FeI897zPjWmvvj33ImIXG+GnNW8F3ymgaXpUnVA+VlphI9xZuG2+k
a8sf0oloC+VnPRzvzPiuDZPE0DL4nF/j91rzZ8tboSmepnsQdY7VxVKKd9CI
nZr05Yta2m+dAXt5K52uD5Ii+2RrW/JPn37eBf4OR+FDTBTcfbAVutrPgHXm
wyD2VV84v3AANHVFsN59ArRLng3Pl86HxCxbQM4DoUeHSnIwcwyROJUKxKgj
K8sbyKK/19FIZx16+GMJii2xwc+SBmB9VRm8POg7mqapiLddaUB92ixFmTvC
hEZPN+qRe52OU6+lUt1KqF2/o3TpMSk6/uIcxDV5XJvHNXpcq+c9qhAtTs5F
2ZUvUeyAul/25+TcGdcPcQ017yNrbT0KrPEEFTnzlv1yYGkt7nIrljptUmC6
vU/SI9G7hQfLjcQHX7SlJqdyaI9t6n/RZ604uQoZuPTALqsn4d1eZajRshN9
ZSzNus8yYc8X5NA9HdoTg7eykFm+BDqeCINTk0Og67FJ8EApl7xKj8fjqkME
Dc2v2C8hm3Qq7ARGRf0gr0oFhg4/TK5UJeBxr5fSCxU36JDQMGr06bjQ94U7
miz5hKY9bkREcyXqYBknHH69i75fcJe+zVtJn3xPxGd9o0jeZnlwGWgILxZ1
hp4eL0l8mAnZq7WdfpG1YUcbp7EYsRJ7nqBHY1UfIb8CI2zz9SGy2S0RO4yd
Ijmjdbnl99S7UFkS8GiP2PnybZQbMAi/zS1BqV960+x1muyJ8WwWsG8g45mn
PPuUZ6DyLNQ0/3Wg2WANtFcdObNAnZAbNdQM/FhUuS97r11N+xipESGwlhiG
WsOXf8L5z45ejXj05CLC95T5Wl5Q++ofeJZroqXnfMBPByVRtEmNeThcpC+C
NgizxBot+vXLL8+j4BWrxa35i/7u9e5P/WfXr+Kfx9JeoHnGHLJ8i8iTukac
EJlCs+7osfmohIa9UKITztxEtX2HYxf1zvj4hdy/8BedOkdQux0JtM3tFCo7
IYXyTJqo08mUZxPfrD9FLUMSaeWuHfSb13z6AW+jB1Lf0OIhwLrfWMravu7L
vJQ+IoU9J4j7m17QrY0DrFkxFzpqDQKb+7eI87RC7KNxiE7qr8RCHa7QZ9df
CaYXIxDP4OY5lDyL6Xc/7//1+tkPaEZh6XmOgfg5ED+753qga1ZzxLwvjPfG
/8yfhsV9ERrGfhcqer8VdoyrFiLESlSjrSF9PWkwbYrVo+Ud9gnrtl1DDisi
8ZOV13GaYQSWnXgdTVdzEg0ERxw9cRYx0agh5WEAuV7eLZkaS5OiW7wVub8Q
77HnfWYmvcIJ1xtFD5tJ2z9MoeuixtEDxy9KfImZYL8iitY9lGOfi+Mo57v4
mQ/HPdcGurcMPufX+L3W/Pl7NMiKZQ+GoGVHFLHJtnNIXCNN27jepb2PKjDF
oj00ZtJjXBR3g/RTFUHJRB8IyNkN8/pHQkzMTghq8gXHi6vA9pATSKU5Q2Af
dxgV5wNW6oFwIywEosk2iDFxhIdf9eBK1h5iqFCNtIVv1H5fHzbPv476nNKl
pKwIXWs/Ek/9oI63BJ9Ft5oS0Mj0E2iX1B7kbKmAnqYaCnUiRdruwhyqG7yV
pqWto2hAPzrotpvgvmQQ4po8rs3jGj2u1ctpsx8tZ6FoQ2gk2vMy5pfzWeSr
NcVcQ837yK4Wt74edfvoCZfNzYHl/4MvuUsTqJttO3YYLlDv9ReEvoa9kfqr
YklWv/F0cVDcX/RZD5R1kJVDHdIf2R+36XYLDdJrT/deqqUytwxZ/ABKvS4r
kL5Hv5BZLrMhYG0gkK1bQO4YAi/HFHJqiQNOrQxFMQvXECmvDuCqOQvOjHIC
2zliSD34mLSrKcWuiw7RY+VKLGPdNUo7lAqjjI6jIw/64a5n++F1xXFoU0Wp
8P1WNq21UGXtYo7SyWfLcD/9+2T2laEwq3EhFG+aBwaf+kCxxgnyaEo+WnW6
B/u81oZBriILyNWn2xweos+5PfFxR4bavw0W199/k9XG1EqifVZNwn9PBnWD
xGO77UejG9pik/EStH6SCpXbWkeVSoxZs2IF9Z5Jcdt1j8kumVFw7fg6yI/x
gtiZY4HWvG/R/+QdrKH19n5sZh8/tiuzms5crUaaLtaS2QetIW7d38c/Zh0b
8RPTIiIcNm/ZWzifOT7UHBapFhHeG/85OpnOOq/NBnR5Qm9IVwvcv+BkkAx+
LO+PhigpiFvLl/nd692f+s+uX8U/P/Pth++doC45Gmxyl5u045gnwsK+zujb
wI7o5IBQYWK0AvUZfk5QyE8ST9A0wnqFB3Abl3u4s3UNLl/fhJt3NGGex8cz
iV0Km7D3qiZc7vkJXzVVJrqLOpLs/PakOCUTT4/wQa8/5gsma9VxxZh1ZIVJ
ezhwYT54BwSCWhd/2DbVFmIO1ZLyrbJEGJlJ91QbsJ4LKumLTop00rBzKHWx
It7t+GOPobLi3/28/9T/X7+aD5fb6QzynX0aGfscRct6H0IHC84h87MvkWPK
e/Thei76aLAWBXpIIbbZTOLnoU6fFd6iSZlGLLGLFds8UItdrdeQrHm2kNhX
fCX9Lo4BfRdv2B8SAfJxBwCHhrd4wtlID4TYIkZ0dO/hzR5hNEOtmq7M20Ez
aocIDbkygu2JMDpiigwbYPP38Q/H5Bybc4zOsXrCs3vCMqejtN+8XHpi+0I6
QiUGV1RHke6j1KHbBxuIrfCA29l+IGrwg+9Bm+De1DXwXNkNKtxXQffg1bBX
zRumjNsO510DYeyVLbB++mJ4Mr0/bHO+T3JvDyHTTt9HK+73p0czTemLqJWC
18r2aG2fHeIKo7UCjaoWLNkXwb37VyFw81NhxYpRgo7SMlSpMxKHxx3A+jMy
cfz0kzgjYRl22HgQ+WsFC5UXe9Jc/9H0ufdAelztH/6JK4c/F05dLhM6f/sg
jGgjRb/aydMAyza07cCvgs2nR4Ly+kjh/icDoUdWX0nEjLciy/yZYg/rPuIu
b6eLkouPie64uaP4Bx8R9xJrbT163dYLvulYQKZ6CXE2/Ide9uSxnkw3ople
t+tNfZ3b4+a2J3D7lwWY50X9rM8y2dZW8PPcJrGbsxgNRi5o9eAcwXTCOfrE
VpYdj95H88cW4Kuhd4mbyVDI93cE1UNTQVpWDVZnuBCFR94o9b0DvqidTErd
RkCdti+oPNkOJ3rPAOXsBkL7y5O+EzKpkZ0BK5atoJdc5Kndisvofq+xmA8+
N/STo249S+jjsM5sEKTTqeu/44L+lWRAlg3sHb4F9i3eDlLFc+FJRHvgWbZd
uuWjiyVb6bXk1XTh3t3C+usI9T+9EpXFeovlp5ZktRvWU9yv2k+85EpPsXVe
b9GRD4dE3EeE99Im2u9H/PvhHt885yR5yjbK824txJUktdKyxX+wWt4Lnj6z
AtOT70i35//Q/3TP8GXZ+b7scHw1HbpZjUzKqSVw2Bpe/hPwz9/11/3d69ef
+r9dv4p/fubbo/odp5Zn2rCx6rHUpMBNyJ9bkjXo9jBqOjWXyn9voCM2RtFh
1Q/QwnIDYjtgFxkZdoHclntO+juVkDHZxaRHh0JyNL2Q8EyazfbFROlOIbmT
WkbcJ1cTwaCSNNJH5ENzGrHofoQ09JGQnTtUIEg8BeKcg+BG8AGwp+GwDjlC
SfwX0mSuSEbcv0A32/Zl35obaQc1LRq19CbyT9HGhh0OIIcg9T/45z+sfjUf
7vkZWRxZJY1zO1ehjyUVqMZJBSsKxvj6SIJHdDTAWs+jkb3HI0mGRlfaL+k0
3Z+ix7R07VgwLGXx80ax0HJKlZzccKnzVpL44iuJ9oGW3njtwHCYOHoPPP6+
BXg2wJVHz4hHZjX+khBHud5IK+PHOqy1U3iwrHdW8OtR1Pb1Vdp+ve/f5r84
J8u5Wc7Rcq5299NQIfymA/0gG0JNvHVoec103F88mVRHXCNmZ9rChtX9oVsK
gbL7FrDgugVobhgDSe1Hg1XYKPh4czQcdrCCJW8mgLBzCjQXTAD9jJGwr3sf
SLJRgOkjbxKT/B1kPzElCiskeHvxc6TzKEcoUAykNt0v0UPtnlIzp+f09ekC
GuJ/kd77MIAmOEzDy8xMyOGloeTKshOkk9ER8sF2DsnrG40v1i2mHwLU2NCo
fkxQ0mNlW+rpFaNsqrqb0jmKN2hw7GOa4/iCoo0v6dCCPGp8K5u+eBZHs2Wc
6aJ3DYJxiJRwaWW6+KFqL+QRKI1W/8BAgxepnJtObVs8xJjZ8db3yyE/9ut5
lvBW5TUZeVmOlB250dIvndhnIPs2PJg27tqLZS0XE7emdGLS9Fd9Vn6ZFm0b
v4QWSNcJsxtkJF2XyQvdRyOafOIApelAhcM7cc/O/iQorYY02avDgywZ+BJ7
mLjnx+Eit0JB+kgqdhl6n1Rts4G+tQEwaX8IGGs7wixNKRjQVYVUbb9M58/u
y8ZuraPD26vSxfq30T4jW8wHn4+5oEg1l5TS2Fh9VtDxNBXCm/DiWyWkR7vx
UDRjOxyp3gUph7bDFxs7KFFQgzWLk8hVfxNy4fh+HLwnCjW+WSHMW/hNCBz3
Vjj6QCTY2WqhvhMXors9pdCoRImo/tQKEfcm4H4iD+aGI+7tzfNNeMbboJsL
aG5RR2JgVNOSP2Fa6wVD73rCo3VWYG3wjpQHtifJq6ta9D+iHF/2+eAf/POn
/rvqV/HPz3z7qjUxtFzzC+27fhvVyDslea+5RtB5mE41Zhqxd4vM2KSnWTT5
1Dk8YlQske+qBB+TBsJqkTlMPzsWej63BBfFMS37TWmdOayZZgHxyuawbLgF
fHazgvynlhB+ZyS83TcUjD8aQ6ScGQzKmw5VtVtgi+5++Lr0MNgohMGa2dNA
ZWM12Tq0Gbuqp1Idna6s25oaOitS/Q/++Q+vX82HS9H2R8uLfVGw3kL0IWkR
KvXei0heDoryKURbd2Yg4ztVYqcSe2Fsmj497RlGG6sKqdt0Faao1I7ZsAa6
3z+d4qVa9Fn0Stxm8UKyybKGXM0AOLV2M8iP2wFej7bAw2Jr4Hj8olYTVul5
ii69rMm43shu52UhtEYNLfFyEC4eMqePKtT+tv6Za/K5Np9r9LlW366LnuBq
Vym89tOkdhcPCdmzipHV4hfY8fAU0pwZSXp+ySKvxQ+IfveXpMm1iGwpLiT3
ehWTtNcl5Om3YtJw/iW5rJ1HzO48JW/vlpAVlVJg66YFd/17wOHSnuAUrQm7
2r4i5nk+JNEwEo+oXE27fVdgNtmdWM4HXXajix47ktaLCVb6LNIhgjonS3Di
yYOk21wZGPW1M+R31YYE6aek0HowCRyyhqaLp7Nkly1swM6lrOjMAFbWXZH1
3y7FeH5q//gO7HJPXbZmiw5DTupM45sMWx7+hE6EPXS4bGdqdaC7oNerVHzP
0BZxDGSVP1NMJ2hlce8w3+Vv0Im7ca2uR5UOXlB32gq6/9jDDWNUSMqgl3R1
kUuLX57TzKt0R2IF5nlR/jL6cC/tr/g0495Wam5fRLcN2kc7H90vbO3YFuVI
RWex+LPCnIY9gv+5j2hOYz0eu3oGKSnfRKQqzMmU8T647Ks7zV6zlUrkyvCF
2hKyTH0ynH+0HR7NCIDgfjMgan4j6d1DgcTmUDpIbMjco6rp+1hFOsUgG3nI
TcR88PnIfBk6t/4hbWvVlt06cJCOsSzA7s9vEe8xIyDr6maI3r8bLrjsherC
AOj52hHEfr1Be/4LUrN3IRle6o415ExowdVYejdpCw3qcFp48M4HTYu9hN4r
T0BOnUpEdd1TRdxPlnuqGSZFI55rwrPd+PcT8Wwn1eyjQnj+KMeQNhu8IKyb
F4gUrOHI23dkk5QaIZrVlGMfrv8Rn/yDf/7Uf1f9Kv75mW/vuiSOTtKSYmmF
/tSkMknSO8RTmL03hW79rMcKjquw6kVOEgMZD2KeogDaduMg7+IaUFq4FXz1
t0Lj4M0tfENIkwcMab8OZht5QcMBT4i97wll+7zg1V4vQPvWgccDNzj+dDk4
WrmB5Xtf6BGwEzp+2wvvduyGsVo+cCRlBBSLbxC7F49wx9A99MFMBVakeJfi
VOk//Nd/eP1qPtyD/p9Ermvviu7uDxFVFceJ9DcMFF/8tlvcPDlF/GzEOnHv
dmZZ72+9lICZk6Az74Lge16eflB4J9Q37REcGmKEYUbmdOHKDHpv5QWa1HuA
5FbeLPLKsw0M7GLfkpVRp7QZ1A9aglNAMdm8qgmffXaKzuyrw0IfP6Jcb8R6
70T2DZGovLY4q0FO6W/3v3NPBu7NwD0auFeDpXIvSZuznyX1hl0EjbeJkg5T
68RHhlehwMHzcYTrMWxudBOrJpXi853rsf/mRmzU1IRP+LUhKy6qk1FhyiRu
xk3cuFuEYwz2o6Y+e/BpDXeyfmUj0f4oglmqjtBvpAM8W9YfzGOzSZNQhEeM
Pk5n9tZj0kPlWYdhEqqsJtBvjxVZ3BAD1lOSQp8ZvMPyox+QqQtMoVRnHgyI
mAU3RvaC5eVJRLhUjwa97Mu01yxlIbsIG/a0klZYbaeDhy2hYSyUJi1Nos/l
TtG9DieoxqwYumNHGM2Jc6GZHbtTjaRE4ZtqimRq0Boxx0AXV6aLORd2/bWC
SCHSER0SvUdKB1o//wlf7QW9tliDvkMt4VxOoFwVLQ/yYYtee7fkJfC8qFWH
35DNZAxYJPyVn5QdkkhZgwbrPPc+3WX2ThjWIxpNrXuOiLsZehirmjWla5K4
d1w5Clo0DS/sPwabJB2WDBGl01l727Pdk0/Ss66f8JzIMnJ421jIfO8Nh3v5
QP/146BvcQX5avMNP9RIozqv9dmIka/o47dS1KtUgvQXjcZ88Pkws3phm8JF
+q3HFzrcNojOhksYl6WSG86GcP2bC0R3DIU9JQegV8B+UP0SAMvuOMDYUbrQ
3ewYyS5IwW+dN1KZmHLaqW0qNZ1YKmyTP4aMa+rQttPr0QL7d6L+hytF3FOf
+8pybzWe6cZzbfvpabMTP76fdpc+Y8PKItL+vnkLl3hkhRe47LCG66dqyVpX
NcI5r7XffVkb2X/of/7gnz/131S/in9+5tuf+J2hUTqaDOZnUuIRKYxe7SDe
VRUszJx2ReirhfGYfQuIQnITAQurFuxSicNBKiMChpeFwERP3xbPCd53OX+i
e4v+jmMejn04BuJYKGqIF/guWQdDY1a3YKeAgE2w6IMfvLjuB8sqPFo0EVwb
wTUSXCvBNRNcO8E1FFxL8Uf//N9VremFIqYXi0R7L4jv+JmgZSQI7Yx/jK4O
AJwX6YevzhqDj4w9JIw8WUd7bSQsPF6dpTYuxJ2tL5OYM8OhwsENit+shleX
R8NRySuSsfcj7tc9mZpt0mGuG1/Qu91k6EzDTLStoAtOjyhFy+9por/rf/hz
HhrHABwLcEzAsQHHCBwrcMzAsYNVYhhdYnmMPu2VTMePSKEaj+Jpc7kfndZV
TBOmuNFpj5vp/sfzWfKhnazMaQbb+SEfvQi5R3JVJ8Dar9uhQ0IAnLGdDpOC
60hI/XcsbXiUmqVdpomeimj+4DzcWfs57t3DAp1oSKNTIJJ+rnqP0x0ryPPP
k+DT4e0QWxgIrmULoFxRDQqmepEVO3Wx5dTHwp4e3kgh/zx+vEmNpHzVIxcf
qRCNys/4xdkG7PLhPW6vXoqn6N5swXAcy3FMx7Edx3gc63HMx7HfjBFuYr2X
e1FzoAzu+q71/q9/Nf4R94kXu9sWotSRk/F5VcBPj82WqIUk0k/dFJnXhWM0
3LIGm/g9J37PAHad9gBt1dXQ/s5IaL6dT572qMOZvkn0rLsW0w5/RKP8Pwpz
K1KRs84IzAefGxaVCwtmZlA8opp2uexLh2tnYPXceHJS0IdDdC4ofgoAhbaR
8OLyXlg/PAB2vpoNR7vowYniODK+PhXfMfehb9MqaeDRNPpJpewv+jKeqbih
rw/a1u5Ti7/s6MGfhfnRz6iMhQ6beSGZ9jjWgNWuF5JtYA5GQZ4tnpLpo61h
8txa0s5cjTg5V9PuJb7MvMaXPTv4z9c//8E/f+p31i/7P//Et4drXaOni01Z
9kYlNpAMontC9HGpdgG+lTeOPPJIIdZGbaH9OZsWzkr/wV5oezgK9l4Jg8j6
DUCW2gH33eq0cBDw/kveg8A5L859cQ6Mc2HjnSygMsiihTN7cHcMzDtjAdGp
FqBwmMA+9/7ANRFcG8E1ElwrwTUTXDvBNRRcS/Gn//2/q1rTCw3d0Fu8xl0V
qY31RRnOt9H7GZ2wsboP/n4uDm/J2YDXRiwXapRkWNtR05hH0lDWqLwETa08
SbLnDIQ3PVygudgV3sYANO7KJ7kmdZjmJ1GpTtqso88LWnVWjm56fxXNQGY4
tl4b2z90+dv5Fz/noXEOiHNBnBPiGIhzRJwr4pwR544i+8qyoS802Bw7PVaj
qMfizqmzKV/e0buyl2jntxV0vrkN+/Y9nsmvfcgK+qQyi+9RNC2TkYxNM+H0
wgh483wvvHB2hsAln8mO0dVYX3oazap7iopOeRJxwCOycuBjcu61L8H+o3H0
K3266/tl7Ls+jww+awsZz8JgV200+MjsgMFa0yA2sT3sL7hMHNzjyPqXGeTc
/kfk6K1KMmTwW0JPVBCvE0XE1rqIdKgoIAGdH5CIxqwWDo9zeZzT49we5/g4
18c5P8793ZZrh5alPUQ1Jhp4+IGTv53/qi2rRwY6tXjgaTuycN4GsiXFmszw
jsLZN/vSCcVz6bMB2bj2Qg5pth0Ox/a5Qv4Rd+i8ciTcNMkny1bVYrmrCTTp
rQZbtuQBzZavFzI0z6AIUzPMB58vWV0hzLiQSVU+fqT9IgPo/FUXcEziaaK+
3QBq0hxh6K6toBgSBOe1/MDJeA7c624Es/xLyfvTq0gPWV+s1V1E1SecpErB
/rR7xZm/6MuqzWpEPFvxdtTHFo9976wG4caBx3RM/w7s2bQTVGp4PfZLKCAD
/EeBle4ayA5bAzxb5PLIGrJpZztSIfWGXnniw7oY+7KKC1X/9P73P/jnT/3O
+lX88/N6Mzsuj+Zuns7MRoiZ74Vd1O/oQRzXYROZ6FBEEjJ7ww6b+S1a5Yuz
DsDh/YfgkclusMtaB2OWIPANlAfuPcr9t7gHBe/D5Jpnrn3mGmiuhVZwLW7R
Ssc7FBMYVEQmdCki/Pdq33yf3KlvfT3943/431Wt6YWU9iSJDGiI+KuDNLpc
OgndponoK+uJK+454ZJaIzxk1HmhbXMttR4pYnf6tmX1RYvwajtGClYNAcOQ
ZaBYthIyazDc7PecEJ93eMn7BHqiqxZz9X9KSaEUNXPKQrXNPbHc+89o7TiT
v51/+nMeGtcAcy0wx0BcG8w1wlwrzDXDXDu8AeVQjWMFdPD9MjpvQiH1+XqT
3vTcTfsUWNInOjupf2IPVlW+l9mT68z6cQI7W+BLj8VeJYTNhi1T90DB1j1g
Z+UI9upFZMOcVDzUdpzQZsxAstyvmRxsFsNlTwQfn8tAefdJRH+QKuokXoY7
HjtNLs8bCW6nQ2BIyVH4fucgFHoFwJhb88A64MfPcpYpuL8yg++NI8Fc1QpW
3LeC80YWQK+PgSHPLcDpnQVMZgTGrG39fWVP9Qr0KKQtfhDaE0e9Of3b9c9T
u+7EXirbSdbhKrLgmBrUXZMF/VfHySl0F+89s0VIyNiFlYalkU72g+FT+iqw
UPjxmcoswLZ3MZGx+4g5xuBYg2MOjj2+Xk9DV76NwHzw+R69WmH3pmy6fbUC
u1m5jy5MeIplb18jdgUm4LJ9GXyY5guhqh4wboIF7HujAusHnSbF58wJhJ7F
mz5JELbeIQzKbU8HLv4u1P5YPn/Wl12PrxTxfGmeschzhjgG41iMYzKOzXLC
3mETu+eEv08+c3aDGcVuMCxmNPCM2cIsVaK5soLWuHqz6/N8WOaDN/90/8M/
+OdP/c76Vfzz83nzwfJyKgl0ZY1357B8oywq9HuCKyxPk5lX9MDYx6GlR33y
tQPQftkRWNhjL5hWbIIHZQgMoiuJ5c0ZhPuvpz0xFvdZ14x8ZlLMe9557zvv
gee98N92NOHnLz7huidNuH52I+bntW2fvsf10qU4WLv18/Q/+Rf/XdWaXsgs
uvOIi1HNI3YEO4lCEy6IznTcJnZ9txep6StidZ0slF7xTng2OY9qaOgxuYVZ
tOp2IT558xk5CwAdjT3gbYwHdN45EsqO5pMenerwtONJdFGVFrsx4wm1nPpZ
eOZ3Ah0epYAvHo1Bm7uGibmmh+uaeW8X72//OV+htXyin/PQeA847wXnPeGc
C+M94rxXnPeM897xit7NwpBlytRkQVu6Y6U8XZr+WLiUmiYRUmejfu1UJDee
RdCxt4cylxUbWFDOSHY5xQRbuT4nFgF28HpCIKwZvQ36vQOY7HyGBM61x/ZH
ctBar1By4VxfSJzgCrdyXWFXhwHwxe0Iyd0MuL9mIlr2bCN5vr0LDNf1hGyX
vZD87gBs2BwOeee2grb9WqjftgqWr/UApZx1sHSRF7wNWwcdwlbDnONr4MOx
TXBPcQvMvu8HxZWt89UGucfQ7doBeBsbig/Wpf/2/vdXSgV4qcJdUndiCBQO
cIRePWzh/T11iL66mowxOIXm9RTjsT0PEaXF/eHZcTdQNtwEuXrjYfejCnK/
7hPmHBPnmjjnxLmnvAlnkVQ0wnzwufL8JqFWeESTfTXZ/DMJNFHzB+YWPSe2
yQDd3qyBHuYbwfDxFDigrwhGGz1ISj95/CpoPr36cjrtUe8nOPn3Ql5hE9DR
tWJxxyn1WT/ry16oVYtUgjcgnjM9pVcs4hwc5+I4J8e5OS+lOnw7Ip+s2Tuy
RU9QNW81xO43BxXjajKisS3J6VdJm7182Jk3PmyAxz8//+IP/vlTv7P+Lv7R
OlFBO99zZyONFrET6ZfpB6NiLJuSSfYUdYNzL+bCzp7+sP5kOHRZHwqTajaC
/xRLGLpCBiJXryS9l10ZYXamA3PMGsuibg1kG3tVUGS0jVrAfHrHbwf1CUqk
fgop1Do7hVo0nqL88/yqnvJP/un/Vh1aFn1OLrlX5qj6o5m6gTMzz9uoiQtK
Q9DkzW2w/Zo0lPdent5Y8Jq+LOrB1ltm08ZvlVgruYSM7DoWFjzzhgATH3gX
Nw4eDHtNJj7+hguXpVG5Mn1WZvOSmkZ+E7iGAr17i5wjpiF7m24j+H7D37k5
77DiW0zL4HN+jd9rLZ/oV/2PXl5PQ6ka2ehVzB105ZYEJRtHIdV2l5F+Qxvs
F92E8ktixJWzpWjQAn26aYwGFpTnkkfHPhNj69FwxnUxDFa3hUHKamCwZRXJ
gJPoLBVj19gjZNX2ATD9nSsE266CiPxB0Ds6mXTM8MF+mQMk23cZEueqd6Ty
owU06XtCz/qtMEDLD/wfrYUBx1fC0bWusEDvB9ap84QN19dBFrhDO+sVcHet
G3wv8AXXZTvB7t2Pd5+Q1vsVsOV1FL/PGlvUjcZhKud/u/9hYY0CMZr1leh3
mQNlqYHwoe8WSBokgsM7EsgXVYQr37xGfT/tJNuNe0Oy9yp4l7wZ8tQngHJZ
JZlt/KVVPPDp3RehQXhBPw3WY0+PnKE889PvdhlZ8cgKbj9bDyHz1oK2qhjC
bl0g4Zn6OIL1Y9qRs5iamiaLbepNn4eXoguRpngDe4wGq98WP18zefh3UVTW
epFS1peNgcN93UpEu/J90VLd7+jEuxNocbYULej+igYW6rN26mn04OBvuCmx
goSPGdfy3QRO9oFLlhNh+OhGcktFixQL72nykK1MtHcLSw349fzTrOizKPMJ
wsOzEK61O9uq/ogPPufX+L2f8SP//XEtE9c0cW3T715v/tT/7fq7/FfZ7Rd0
X7Ij26g+gZ07l0iHWlzAfgX7SOg1aQjWHQQ7PtiC/Lf5MOX1dDD0GA6rdJRh
hnUcKbuWi8NsjtMBu6yZK3NjQ4vmsMuOA5iJpgLLFTfTofLKzNq1A5syQpdN
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
IVEp7WDypvkQvbX1vJpf5b9+zuNZ2eskXSbSYrOFe9R+Vpnw2T4Q+VgEo8Vm
UoIuLf2LPmv8pN1iu+WJ6PXztrh2XjoyzJKlX3cW0Z7JndgovzS6eqg0sder
JXj5VDCt8YOtOZ5w23sg3JwQTcb2M8COixXwDN3dxDy+D1yqXgUyizeDeZwN
jFtTSaqbPreKf0RdvggNzXn0uI8uc5uZQsfLfMLyecXk8VULuJPoBeXtPaEr
jIIjXo9JxPcsnGZTTa88GsQWX/tMB4Vr0uSO99HyPkPwjEdt8dXMTHSj4CB6
YuCO3oeooH7tu4i7WC0eseHqPHQovxFVjElGTWmy1IyW0c5SBsxtRCbl34H/
+XfE0WYKHAjYCi+uboXQSfaQPfk7WbhOlwxvbKRn32xnPf23sYTrtXTcM3Xy
8cZ7ElRkDXHereMfznmxWDGOXirCMCytVf0RH3zOr/F7P/sHcA0T1zJxTRP/
/f3u9eZP/d+uv+t/yHQS6fUH7dl69Wu0qtM9YULANFTda7q4o5oajXCLoDPD
LlFT3wLaQVRKK0LuU3fTeFqYbEdfzNkvdAnujvR6lCG9DBU8ADejTfcuI6kO
ESj+cSA6aBqJnEtjkX18AhpjloQWWJxEVQ/PINeVAloUlI1sU2+huSWX0MO3
x5Gc2Tp07rYGil/nIc5+rSDKmqCVVbRQ5RzPEmpTrSnmmdKH/NqKP1R/FPF/
75/xrxuck68xq2npO8n/sT4NrmkUHXKUFQ9ObCO2tJQS8z2c7+V8T+d7O9/j
+V7P93y+9//d/MIWT8H8RhHXgHL9zbmxchLp9Eui70EG6HSDIkLJM4XlewbR
her96baiHthorxPJn/mVGG0aCR0nLAHt+nkww34AqM65ThKt8vDaafvpxB5t
mPm+S3SbebFwfOM+lKNSgu6dcEYG41/829df/gzNUwIQz1LneaIDKuTpcO1K
um56D2YrLdDQIHnycng9sWe2MBNtg+lbt8CT02Nhr9xj4lXlh0Xmemxr/ji2
4ows23degVbMDEI6F1zEweqmVOHjMTqzLp4qa6+j82SrBP/r0ZI+UouzMm+E
Ce9vm9LtM7xpdOYGWqVpTOdm+wpskYHYNjZU/Hzf9qxXDf7C4PaOtP3WT3Sk
mQ3bLHJjvqf7Mwc1GRz09SSps+wNn9Vazyv+Vf3zz3nMHEOEXu3Icoa+oshD
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
PXyORTW24iXKo7nm5NF82Ng2/B1PYZfPh1OHgAI4NstO2vyhsUSU/MHX9Iis
aBmnVNhDN1Sdpr0XJtEU5SC6J6AD7b+wF9E/riHaHJ4ratpZikV9e/zp/It9
P/rHgw58dvdnrG37KprZMQ7mXTCSOu18CFhbbjYrmpTrKtEhVQEEtVM/67My
dfNkR5+sIWXuVUTjRiSZXvRFVNuQC27USNoNJwE5LOSykNNCbgs5LuS6kPNC
7gs5MOTCkBNDbgw5MuTKkDND7uxn/QpqYFALg5oY5MLahFeL8z7mQvQ6I2lH
zUn48KWSehs+Y4K/g0JrcELVg6d5OPC7QQXMs3MV7awfAf2e6UjH9gEMiAbx
bJAlSb5SKq/3eTAUR0XAcVk0fNu5BSJqjWHRpzbi9TUfhbdl88iHQ4PJNO/D
wsKD0fIx7gvFBs13ix1Umoth+pPJnZmOdHLiaWp9LZ9abi+iuddvUtfdR6nJ
MG2as8QSHjX6CvXBQtphlgiTsr/SPWWFbGWjfvylzu/xT0xoEjlo0pu2VulH
PdzSSNq8elCo+gLajWoptR36q/4IO27jPjyGY3AszsG5eA/B9yhcS0Yu+O++
/ura/1b7s/jnZ77d8m0cfKo0khK75MKVJpViSnQYqff+GcmPX0YuDhhI3mRr
0p6aW6j5mXT6OqSYzt2VRz9cjKHDbPvTazsWkUnWpXK7uLliaqy1eN5ETT4+
7KAQpFImeEVfFCJyTITE+r3kBpfsxB1zjomRDYvFEX3rwYa72pDsrQmOpUqK
ewq+V+Hacl+7aoVeuq7/c92mfbXYaH2lOHrHBzG5R4U44MfzWc1ZC5CnQa3K
IlooRmYeFJ3DzUT9uKCUrrmewowOyUJet1Dhe7i9EKQeIotXmiL7PCFOJnV4
9af1R/iMw/d85DpQ7/G2fYl4buJtuLBWX0r2joZdDappYrNn7IljX56c5MY3
yhdzT017fiXmHFs2+jHxjO8sNaqdKInJehJid+W+xWRGSzu61uw6qegVLFyw
qk6ZJsjk3icupKzL7/K31xP+7GeH/+OaV3dg2g09aXRkNAxPK6OnVj1mDW5y
7uG+nIcHuHHTL314bHkxI7cbsAH1vWDTHnXJ0SULPga+F3MXnSDLPuvRW7fK
yVyd0+S1bjw54q1Mb5+zpK5vUon3Uk1ofrMYlAeaSgsD9kNqdjPGmyrz7dJE
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
NWv1lK2M7M0/mrkrNM2obUaNM2qdUfOM2Ac10KiFRk00aqNRI41aadRMo3Ya
NdSopf457+yMXE7WTW1Ayw33Ec/1tnX657r2r2p/Ff+cPX8SrjQxlMwH3IGW
fUrFsIm7SAFNJs2miYJfyCx5xd4vAmKgnl9nU+TCUA+EmmisC1ut9YHGa36n
WtfVWe3g+swlUJWlfi2gd/YeozUHe9LQlqPJnaMdxBVZ18RhA7+J6GePnh7o
a4bervgZOWbU2WGtQV+7P5eVUNf/8x0zKzC7AjMsMMsCMy0w2wIzLjDrAjMv
MPsCMzAwCwMzMTAbAzMyMCsDMzMwOwMzNDBL46/qkT58qaTKTSvp3Y4VdOCN
Cvo98DN99PgL/XD/M/04sYpizW6DB+X0o3IxDTC8SvcsPkr97KbRwz1KicHI
D0KTd9Hyj63NRfVz1fL+9a3kV5eXy1akdREEpWSZ7aEOf3v+xe/8ahLH1WOJ
3lWs5JkLD9L34XOSPbnK6268Ui2SPVwh0FYt8ojZJH92Z3wrbvJwLn+VvpL3
9R3AW+8qYjPGfqL+h6Lhmqgv3emTC52eKsHhbedIdrURPbs+m9T0eCUcifos
nyq9EZNPTIRC1xAIOJoIu45cgOgWImw59EceHwuOhOTFkTBo6AlFRt/AGIAb
K9NhxuBk2NDkkKLOyXHyR3HTmz/yDUxOWpA0968KP5h9U6pTSqTN8uhLvvLu
IzTkJ+vtFpwq0kmrIW1oSeI9suZ7M/CL15b2BYyU3CraS8n8AHG4GcV2kjb8
XM0ErrdkIl+005o3eBjDur8uJNobLaUN652kmk7akp1eS7jbupikNRtAb/U0
p41jMojt4T0k59Eosrbgg3Bsio5gHA0p3Tzep1CfiORWoSqySPP9KWNvH5Jf
iNcS9c4Zi2oF2fJTJ41kjc+bENmZbeRcTTJpVXWNxK65QopbANnjeobwzzFk
3aYTBLOv2gyJJD3HRRCnrxHkRbMokr88itRzOUacjh4m3a4cIcOuxJHT/qmk
cOlV0jhETuzaBJDx92qFsIx7KUmOlfIJHSvlx77fStl5T4k0WRFADCzlZOjD
LKI+XCJ7Np4kKxyOkRmzjxHHcSfIs0nxxExHTsL6p5O2JWnkon0CKXwXQR68
f03mqJlQS/tzpN54FTgw/wmEtTSR1D7Ege/6Kio3esZ8Rznw8K2rFDXtWNuO
Ne5Y646cF9a+Yw081sJjTTzWxmONPNbKY8081s5jDT3W0v+cd7bgbDyZ3lyd
vrsSSHLjzerq3+vav6r9VfyzYVgcbAoyllpoPYHlogos8DhH7g7To8sWJ5Mi
tSThu84peZMT0WKySSvIipgHh4QdcCQsDEY2jIQh7icAM3181SXoVZkO3+ck
Q8D8Q3BxxRxo2UMFbn7RF33HlAtz524lK57GkI9dYslwq2MEPV3R1760WYzi
M9bBYC0w+qH82bzMuv6f7ZhZitmlmGGKWaaYaYrZpphxilmnmHmK2aeYgYpZ
qJiJitmomJGKWamYmYrZqZihinmef1WPtL3mJHScexIOXo2FIvuTsEnjFAzM
PAX9qv44/kgtDvZOiIEm448otGV4juK5iucsnrsj/d0FU6tiIXVRgrDH5Z3s
n84fQv8crCHHOqrLHX71q1muU0yfD7nLvFvIeIH9HL55w3h+xNqYt7m2id0f
kUdmbrGkft33smb7rXhmk/m8S/kKrjK8P88aXsiCUz9SvUfHwXWlrtRn6zVo
HZQvwk5v8nD5fpK7LEBWEHBJnnfMnmCNUmzyYYpeNfjMw/d+5D5Q/9E+qJyO
PVOq6LiN+/AYjsGxOAfn4nfgd2HGE+YcoNev76wZ8uiBtsKXZvFCN+M4gbZp
LXQ3kqe8mB8j6O/1JS++jCCutuGi3HYz5FjshlNtQ4hzp+Ws4esGvEZjCh/v
58vdL/jyudZTub9vI56nt4Zp7i8kx19vgAWz58DZbC/R9p0WaWWvIpx5HCqG
X1GCton5YuHKo2KzyN6ins8iefSs7kL+hnCh3fs5wuL2W2TVSg4pnvHvUrod
HS2ff/GKnE+zE08+DBBTK1LFnXdLxSxvFZCra8C8+vWgKKtWvFZaKbYyrhDn
XqsS+4/89f1g0rhq8aHGZ3FPYIUYK6sSC3/Mqe2qDkdStBR5dZOWlIjqn06L
518tF9GfEjtu4z48hmNwLM7BuWcuVYr3wsrF6bPKxOQeFSJqbpB3wrUXxB+v
994VJZ8AefzScOJNdpAXNa/E87a3oPl0fan/0xhYQyvoVLsC1qehA6drV/Hx
6h68i9lAXnTqPauwb8zamxXB6W2rpPtT3aUza/NAaF+PVYzOY7p53XiSxgy+
L2g671Zqx9e/yWavcgvo4pmH4GiJlpS4MgPAoFiMUQ8mWub55Nns8QS1VpoL
3WUGa0YJkdP3CP0XtxNQo41abdRso3b7Z/02jsGxOAfnIgbCdSDkwoZVza/z
P6xrf6n9Vfyzd1Mc9F9sIq0dWwBDO2jAghvppFM/K3rn8yvy2q4xGXCgldhD
tRk48SBYsOs+wDkVyVqzkZT1vInUSttAmj/7j/Vx67FtpeuTWkr7n2lJakVZ
sHnfVFhrul5c6uJIvpx7TnQLNWj7FBWKXq5Y+7uvfo0i1xDrYPBzTkgF8W74
RfF31PV/rufdqSQdQgpJ7bdsMiD0MVmfqUvV0xhtFDuSrnnXnppOnE185Crw
dtwpCElTl1aOtZDy1DtIpjrWUlJOU2naDT1p1VddyfyUvoSZ5n9VjxS9zkiy
a2Qktd5vKKm8MpRG9DSWRqw2VhwbZ2IkpVsaS+5eRgpNWZPvKhKeo3iu4jmL
5y5inxutnckdHSsyIG/cP54/hN6B6J+DNeQ6Kr/61agdOkrVjgUz94J6/Pi3
1lzpoxkf2PQ+i9rRiR0a6UIuGJjQccNXsoHj6/FPrWR87NE+PF23KZ/WLp6F
dU+lkzU2g3v0I7ggC4BrIQvF05EDhbcnt4hrlrSCVpV5ItYmYX02X72LoU8f
vvcj96G8pYJVRb9gOe3y2NHs+4qO27gPj+EYHItzcC5+B34X5lwekZwVeQcm
dJj49JE5aeN7iOgO2kcKQ3RIjZmp6HkxTkwYGSaqn/ostywyJ2t3EtrTS5lN
HRDIDFcr8dyM/vz0NS+e7baP71Hez+MMfHn70c48fVAjvtAslvW3kzE+JZ4O
cbtDsrbdFFXm7ofSMfnQzfA1+OenwiyrQJhu3g7y+riIWyd0JJeuRZIIPX9S
L/eKkJFwQ/48/Kh4qrYRHG3tDN/NA6D0UzSk61yE5o/uwNX9efB2WgGEH8qH
xZ6PIV3vATxoeR8W+zyABvd/5ePbPs8FQTMXWjV9AI/lD8Cy9BEc/jEX8+qu
DnsKeWtugfZuAMwnGTMmVNFxG/fhMRyDY3EOzk0a/QBmJd6BFgtuQbLbXYUW
HrU3Azd/UKwLnp6YBjubTwCwfyEfNKUdCV8libL9crAuqi/pLD0GLbLf0uw2
j9mITb24fYIbX1PszrtW9eNx9u+Yr40RW5yXCM4tRkjR8QMl54snYavZNbq4
/TG2db06H2lvxa0+tub7jFR5bcu9rMfxY9Tx5Ry48OIKdN2+A9p9iRRP6k4k
mw4EkzWT3wjPLVemII4ZUNGduK30JJO26RGs0cdafazZx9r9n+v3cQyOxTk4
F9eBkAtDPRBqov/u66+u/W+1v4p/RrjGwfBaY2nMsaeQXawG5aEicbFsRkcv
uENWx5UJHbYqiTPfV4qZKnPhcW4EaM7KhJUr7kPLggcwruw+NFvzBM7S11Dj
Vw5Nykvg6ugMMNffDr2YOWwJtxUvHtUgTV/uIj7F4aTfjkCFjz1m+aAHHGY6
6wSsIeiHgp/XtvVU+EzU9X+u57RcRwK2TyOxxg4kQMOFaDY8SCZPekTmba4g
8QmpxGPMbmF60WPRrmwjLDNPhx6Gr8DKsRJmeL6HQJsCqHn1x728xvQe9Av8
63queR9zIWXjH8+cheNz4da+P/bvtnoAW4Y8gKypjxVaMvRv6XAtU3GO4rmK
5yyeu2mLEgTEPsv9lInbQOt/PH8IfZPROxD9c9wGv/7FP2ajdicqrrZk1kN3
sJKYeCa3iWJBbWewFb6JdNnbUOHM6Avkc1Ndtv3rfjYj8B6bfPopWz8rnkWe
GcwKvk6gHUbrwZJh4yDDShKnRukJWqvGiGPbzAKbtBNQP3EAYF02etOgPx96
FCP3gfoP1MDu7OvIX/XsxS39BUXHbdyHx3AMjsU5OBe/A78Ls74x7xIzn2hZ
gvhV7k/27alPZ8xVo8GzVpD8zD3i/d3OUNV8HaxNUIH8kO5UY5A9azzrHKs4
0IgPsu7Hl7RcwdueDuSNnYL5jo8hvHvDIN6jcAsfHjCZj93flpcVFbOLn1ay
g+O2UU2nxTBuiq7kNKar1L7zj3eujarScksRstRmQ/7lfeL1+LXE5uFnItd6
QIqWWJGcnvbiRqoH0102woyXSbD0Ygmc1a8njXdrLNW3N5R2rDCW5r8xkU51
MJW0koylij2GklJTQyn7uqFktuJXPH5ls5FUPvgPTO7Yw0hqVN9YkVeH37H9
lbEUFmogYT5tTg9tqea9hqLjNu7DYzgGx+IcnFtRZqh4V3CIayJZz9eXsPbK
TmgtoQYHeajaaxrSHM0feOJhopjWN1uQRhwTG2SfhIND1KSHGYfgpdsL6jz5
PtuXT/j4uCV8pe8yPnB3Xz5AeMNs9M1Z1AsvCLG3lM7oGkj8wiLwsN9Ia9Md
WMutB5htDLBxgcAqioPY5sPt2T5VQuMGqcEzl9ng/MYS9qxnotu1CqFLmBEZ
nQMyj0PGclzLQTyTtPAsIUZOBD0a0asRPRvRu/Fn/0Ycg2NxDs61c+2v0AOh
Jhrrwv7u66+u/W+1v4p/lDvEwUYVYykz5xGorK4VRznHEa/+GtQt/ACBmMWC
RUpb+a0vLcX6q/eJQ77cFXWTv4rHh6lBqpcy3CitFmNqasQ7t+vB6+g/6mMz
LhSJ5h+Oit0G24k1t7gc1uoIT1/4C12SNgrMuI3Qf1OcrKrdbln/55kyzALI
a/xGhp5wb7u/VXzGv6eu/3Nd6vBK9nlCnCxeaYosSD1E9j3cXsjrFirM6JAs
dM31FPTjglKcw83EyMyD4iJaKHZ8UQ/uluuAmrMWDLBSBlzDH73jg9hofaVo
0/6v65HahFeL1+dXi9l2f3APuE/f+bO4tNePn3OjUqEp+zaqHvj2V1f4t+A5
iucqnrN47iLn1T9vnLD8B/Yxfzf2H88fwswI9E3WWNj9/7H35VE5re/7lUaZ
UxIhKqGEhN79DCiVMmcqIlHmI5RK0jxnypyEQoUK0fTuZ8sUMoeMkaIoQ6XB
lH7d73d9f39kra9lOedznPPpXmuvtd89vcOz3/1cz3Nf93VxBfPqvtOPGW9h
gnaPNcCG7XfhoK487rQuFWekLcM6NzORkrad6Gv7Qu7BIS0ceycJd9pajjMH
1uAGn/N4+Mi5uHT0SnTydGv+XLcBYrW6MBSUE4iOv7vFb7A5xg6MLmXuGr4M
NGlAlw+0icGfAfgfwIG1YSGSWujhq1bTc/7LJQuswzbYB8fAsXAOnAvXgGtd
3Ogr8fwG38stui/5XmnH0ZTzRnhcvSHu1icBdYi9w2+eG8eWR99kpw3mMblv
+/B6591ErWNHip9PpDOy1tEhN8MoZxFJz22PoH2Gb6Cj72ymNd6bafGgYGp6
dy59a9yTlrgmk47KAtby28z0tzfhjnsaQkafYjbsqi/LbaPGihou8KOyevK7
RSooa2MUUt7hi54V5nGKZ4vEIprJl13UYkvr5rPKkkiW7baPxaQlscjNyWzY
/BT2PiiV/WFwnEnrpLIBvZPZqORjrJNdMsv78n3+1r99CtOXSWEVH5IluVnw
q1vunsKq96VIrvU5JpmNX3yMvdc/yo4sPCJZYB22wT44Bo6Fc+BcyBGvMznK
yk4lsg8+RxjUn0MNFvCQgYuDHKNZwuY+DPvJmThMt0RDx17mbV3PsLQPysKV
gwfZ2cFv8RydR+SMB6Xc0tU0bYcr9Z5hSoMdSonUmfbE+Vooa4jsIMwe8oKF
X+jCjDxl8LquMXhi+lVsalSMNxwuwopfT2D509bY4eQclLGqOz/ROJQfqmzK
y4+dJz40tw3nVKPIdVSwzV5463L2mBX9OZjTAVzTkP6GA48O8OoAzw7w7mju
3wHHwLFwDpwLfKCwxH6S2rGgwj4t+Kclfil+Ff9sbvoPwzjmifg+g3x2z3Nx
KMaxHGkutEWXXimIQOMMtM5A8wy0z46onkQPD2WibdEnUOePiZIF1mEb7PuR
PloL/+33DmgTaBtoI2graDNoO2hDaMvm9wNweKGOCWq5Dzsd+8v5XHBNuDa8
B7wXvCe8N3wG+Cy/+/0HnCPgHgEHCT4b6OdADTl4TAGXeHJvGX7Uyg986L5p
bGqPQLZjzRq2SEuXvfDy43PdVLL7WsSIezeU8J9mrWDtTQ+xcJljrPp0GAsf
rckm1/TjlySqoD/elaA6rgeeMS4TXV3wgffqm8X8n7xhp4p82ZS2GXhx5xSS
9VmLzu/lSIuCA6lD9whK0kOocwdf2tF7Nf16ZDn1uL6c6heupnrTfam6fCjd
viSCrs0LpMWhjvT8qN5UfV4Kme2Ygb9e82UOW8vZyMGn2JrtL/ku09NQdjnG
N+eY4i6dzqLLaxr4vUF57NRBOaG75jYWp3IHL5tziXiNHE6vPVhLT/+xkT5d
voFWnvelC9kiGlQ7nxYZutITsQE0u9qfxvjOpzIHelOPMUeIZUYCVt87js08
588uNjhxsVnp+ER6G1I0vwF3O7AFn7TejnRWTuEdIvN5a8VsfrJMZx5zOmjX
JwWskf0H9t2QgPvlXMfWpaVY0eeDhF8vp1yPLS0/4lNun7CPy0csVVKLB42r
xZoD6nDml79ejxU0X0H7FTRgQX+wOd8qYvQLvPbMWSwXvgMrx7TC31prsTXD
G9jU2r6Ci6OYfQyWIe27VRCXAmuasNSXvjfxoZcPm1Pv0kdkjtRZfDWglO10
1hMyip6wpKmF/LKllmjS7JPirnXTmd2AU+xRGzG7FbaNpVb0Y/JWJrxThTQy
NHFEHh+1UIgqx1GVwmxtY8/s8sYOXEc/NQnfZ6LbZB7mdvY24RvwaAWvVvBs
Be/W5v6tcAwcC+fAucCJNrjnIqmNl4lZ9B+vP2iJf1f8Kv6BcQzM5UI+Gzh9
T533o4yvxUhX2xy5Irks0LiHuXrgKwBnc802WTzFXQnfHSGLbXZ8QbDAOmyD
fT/Sx2+pf/y9A9oE2gbaCNoK2gzaDtoQ2rL5/QB1TFDLHSOniEHT76/mc8E1
4drwHvBe8J7w3vAZ4LP87vcfcI6AewSfCbhIoB0I3lJQQw5eU9HXlvEfiD3j
Nc6xqdMq2avHRSzo7C62oX0NP0MqP9vjmRS/wt6UvR5zk9lltheWFaoKcd0r
WVLnMOanvI1vNHFCreSU8fg2vXCba4eQKbvO+5KdLHwfY1N7j2MHdm7G67aE
kdMyUlRm/xB6b+BkSmbNolkl06iFtBVdsmMkVXmOqIwCoSevmNIdhyfQHsaz
6KHNDtQpdRq9rDGMjnWQoX17RpLgZVvxsX4TGT3Esy6vN7PIA5n8W71t6EFA
P5wgxrhD50uocL4Cs9/7lL2WUxOmbkhkbvqVeMvAIrJ+uBW97xRMP5/cQqtn
BtO5B+zoK0N9ir51pRrX+tK3FaOo/Ttr2qgzlMZu+0hwqRNZoKWJ5+J6E+sO
eZiOCiX+226SeOcSMixbTEom2hPNZevw5JhR7FDr82xn03PNrEaZzcvVxOs8
ZYisjBPpV72PfD57jmj0fUA6ND3/+qkVk3j/IrJ3wHPivbGYDBhUTD7hIrLn
0jOydU0RGa/x1/vNgOcP6DeA/wRoMDfnW60Nuk66ivYQxeWUHF3liy/s8GaP
UvWFr6cnCbEej1kHoRNZHi9FqyNmUcs7ofShdTD1n21Ng3JvEOVULbx6whDh
beo0YXnlN3Yl/yEfk7if63toONuloyj80d1KmFQ8SdAfrSsodBXYsQs3+Ia0
zahP/ReU5XwKzZx7i1scO09cnqEimqupi9J12iLgNQO3B/JbTzW7MsA5Aarm
RKX6GBmk8FiywDpsg31wDBwL58C5UBcGtfGgDwQaif/p/19L/LviV/EPzOVC
Phv4FVDXsLU4Hhm9eYsqYhzR6fyZIpirB74CcDahbuXuqlA0aO0GFNQ5FBWs
8ZMssA7bYN+P/BFb9K9+74A2gbaBNoK2gjaDtoM2hLZsfj9ALTfo2RxviECi
LoF/OZ8LrgnXhveA94L3hPeGzwCf5Xe//4BzBJ8F8BhwkcBTCrQDQT8HvKaq
jxjzsm792Kh921iCVSabMyyZfVb8g8Xev8DPnVWf/cQ1QRyup8gmdNrK/Jdc
Z6MfF7DW446x+6lmbLfBVH7IjV7IujITbci8goxDLNHunFW88MyQaUbaMfVe
5bzLRR2c+0qTPPgQRRxvXSMZY96TFfQzOZ/6gUxOLCUTowqJl/QT8sy9iITI
lJOU9I/E00CWlhMFus9Riq6e/ois1Ykhk+/1JTdyB+HyAx/5jYscWb8KA9Z7
pz1f4UbQtiNNmHSYLo7OY8hcS559Kn7O/G5rCPLXUllR7884630pMdceTyeP
DqJEP4LOkHOhi/kB1MmjgMSfiiKrnu4mVz9cJvZ7S4lWyVXyqd6NlD/1wgvH
JfAhC9bjEXc2E4VFbeiOKo7a3B9FlytpUrfYbHLr2CP8aMNRFnpwoHChRlMw
NfBjbke24vZlbuR85n1iGa9KeygOlTz/InqNpUPjzGk/HVOqpGJKnTPM6PAB
Y6j3N1O68oQpndrHjJZu+A/4DVMzif8o6HeCD0VzvlVSRyM6fa4szX0aTVTt
zuDFX46yC9tmCCsUXYUtqTXMoUCTGEkr0Ocj51OXnZE0xiyM7jo8ntoOySML
DYJQ4O2JAkdXCK9OthO67PjCd7r9jdPM7sPSc2SF7KFjBRfXycKZbn2Fmo8C
O2Nw8zv8c6KTSPxQVsxVVB1EytpeCGq7gN8MHB/Ic8FcD+CdmY1qdCJHJQus
wzbYB8fAsXAOnAu18aAPBBqJKmpZLfinJX4pfhX/QD4bOH1Q1wD8im/aCSi/
70fkPMobjV75XAR8BeBsQt0K1O5ubCvFnbooy2ksaRT1bayWLLAO22AfHAPH
wjlwrvWjj5kw5t3d9Nyfd8W+Rf/8Nw9oE2gbaCNoK2gzaDtoQ2jL5vcD6NmA
pl+sQysOvB3+aj4XXBOuDe8B7wXvKXnvps8An+V3v/+AcwTcI5iLgnwceEaA
bjJ4TIF+jpPqQvFO9Rn8qSieN7Yo5/W8CvlHDtH8RWU5vvXD+dnpXvHZb3PU
+FvhCfzunW/4K7Ef+fiUS3zks/n8cmc3sfynEdxJ23xOK7GYs9KYy003Dhan
C6P4C0Nc+Pz1Unzs6GFIUB6Ip0vFYRF5jlPKZYiMgSJpjWXJ6vVf8Ge7Wlyb
/Am735MhMY7KRF1KjYyV6kV6zelDji/VICuvyBDTtGx86ZQlnn7HBg0Yqso3
Fobw6/lJ/J1PgeKuW2K48HEJKGqhEj4TlIKGj5JiI2Y/YR27dhVkx6cya5lP
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
3+7Lhps0shenj7JpDn34xlt6+OyuaVjqZHt8N2kIehuPeeX63izVPYzd9j/C
fC4cZLfaWLE3e9+J5ax6oegBYt6zD2Oau9sKz5YmMj2FD9jm4lMyaeVo6nbT
lc5ZtZJ+jB1BHZ6cITPk+uK1wmCh4A83weqzpcDNqGSFEX6s68YZbGtNBHvc
4cgv+9f9aLE9k8weTD/KWl1IlHjPNtc/TJ8Uy9R2OTNbXppF7VTl+1hroH1j
lLCRvTXGdh/Q9j/0WYCJinBg1TThvZqm4OoVjlWfPSXLJk+h1yYH08ed/Oje
8mF09ck4ctlIG8/UU8XX4/aSdteN6OUevnRblxB6GdlS74f15IG1HBF9yWT3
2mgJ/N5Sdt5QjsnfO45ivb6hJc4LkfSOQJNFZ3Q5I/sO6NWBsajjrjJO30Gb
f3VdlUld9WfnDx6SLLAO22AfHAPHwjlwbkzt0+xPX3XEpXePZLee0qtF/7Al
fineNPVtUA98LbpWogsHurvgPQCa6uBBuRlV4/wbT0i/9yPp5xxXOmybG62x
MqXm+SXEboQS0e4RybIeKApbvS8x8P3OUYpG+tHFEg+E+lkpor+7XvjfFv/p
+vJ/er14S/zf0fx+mqDyNCux+55shZXp2aHFJtklykGiObkh3JvNrVH+Zls0
rPNupHyqFC38po69bNRwZkYyOr7uhihr5lOxzRBd5FLqgqveK5Ns7g9SYXiE
VJs/JGfWNZDj4fLULEaKnvj8kMRFx5Ap7QcQJxkTHP+8FRt4bDlTzjBiyyc6
8PsZh5xYLfparYFpUgoC3W7Q1gD+T2zeMQbagqCvAzXmUGfVM82TrhtmQa0f
l5OBXBdi9Ggq6+T3inUv3cEmeRzJ6t55Gs4bEIS3bDbF4q2R6LhDHH8uPpJ5
LX7Hzo7rLLT+2EEoGX2ZOSV2ZHd9ikSdLcL5RS8Os6macsLRuji23fgdFk17
THo7U/q8eAX1UVhCZcYNpMz/EOlkHMvXzHQVvGpjhED7YEH9qokQ4y4lyNmX
s46FcsJIT9Vf9q/70SIzpotgqq8qHHnXSUhf9b3/Re19JcHt7WWmEenIDmkE
8M9VPJG9zGjM0gKxc0MXvCFiClt7c4igohYo3N0zXSjYnYlSLApIqMoMmmUU
SReph9LxlqOpQXgKeeA8HN+K7YjLYg6Qew9NaHpuIJ3TLZI+tJ1H1SKlqAZq
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
VFauFXVUWMy7K1ldjibncxvTINmebnp74Ie/b2vzDzSjxX0mbe6g/n+J/+zD
XUM78NHl7zP/k/m0YONuMTDRVG5smSHOaOZI/RWHSNxiLXqtzELSUk9XWTRv
Y6P7xsNdq9xNenjUIzm+We1i7y90bGMfjuEcnItrcC3uUdyruGdx7/7u56O0
/b/Vfvf7p+jv+9V8nUabnyneWe9T5MVPUsBLzeptM2Xw1dVKqf0e5fJp3kpw
OJANhYwoZEUhMwrZUciQQpYUMqWQLYWMKWRNIXMK2VPIoEIWVUnzq4rrn15/
lr6d1hI7X+kKMl1HmNg9lircOSwpmkRJJutOS2NyagmDBn6iR7vDIutUlph2
6Y0gT56I59UviO8TDogxcXGiweMDIqbiEaGXnSSs/DaI1p87CW3XxVJP3ybF
fl8XrceQuYSsUmSWIrsUGabIMkWmKbJN4SkIb0F4DKI2gOcgvAfhQQgvQngS
wpsQHoXwKsTP8C6EhyG8DEvqf1hSPhJqGtQ2qHFQ66DmQe2DGgi1EGoi1Eao
kVArzZjhx7/cc+SzjF6zMp79mHeqJx2+PojMWdKRNux3hdbfo8m2zz1F2Q5z
quriWWw9aVdY82PdE9gv+G8dbTWFTi89tRcE/LDgCQpfdPisG8ev/oFPVGf1
eoU0rZ8iQ2eHYi9/+Nv5Q0XnC/h+wRwbHA5wLcA3heYG2kR46+nF7SE33fJI
xzqmFNydL3feSFc6nBMLrhvIMQM3CwW7T0ddPs+0IpvzUbVGqjn70C3CuwH+
VUXzoYr6o/7u90/RvGfDJl+kRudOicrftORlS5eLekcv0E/HUphluZbqsXt/
CuUDGqziMc+WqOvrsCdT+ZpXk3j98Gn8yRVvtUfguUO+PGWIL5+qX3J+f7H1
T9RInjfIlu+xOcJu5jyk3xufFI8fusuDHs6TOz7/IKbGVWfigRYPaD2ITwwL
5pf6BfNJ3fvxyRvzWbSbLouOlAX/UEdO3vFSeLXVE5arU8nw9E50TkVHuqNy
4m9/v5f0/irOv/HfrjcobX92+7vrn1/N14kLn0NyVo8h8NDv22kIcam1nkxI
OU/OBmST92cPEmRCgcuBjChkRSEzCtlRyJBClhQypZAthYwpZE0hcwrZU/gZ
WVQlza8qrjddcVPEp9wRWTRbnLK/J+4/vCSMWbLolxovpmgdE67VPosTTg3l
3GuDZG41R/Y+7iePqjJJHrjWSd5U21qesL+yvGS3qZx2q5bc6U1NOe1TOblc
/kGhuUhP5DYYVSxeUxSP6+LyQZ29FLrmKnlzKIs45hvSy8HN6CD7tvRdLyuK
TAlkSwATQtYEMieQPYEMCmRRIJMC2RTIqEBWBTIr8DMyLJBlUdL8i5LykYBp
AdsCxgWsC5gXsC9gYMDCgIkBGwNGBqzsSOXVXF4wi+9zUPIh+trcn55jHfqd
ZF++32KZ856wPUsvsQtzQtjdPqn08KWhxeKJWPcE9lvL44qABgA6SHhBwA8L
nqDTLFPU2TAjH2RKvn1X/sAn2rWsH3Gt3Ja0EgOI1n3v384fKooXY24NfAEc
C3A5kKEAvTH8GaBRfDL7C/kepkfB2YmrHkJmt02UroxaI/YdPye2dxgr+mps
odffhbGDWho8scCKQ7cI7wY2M4ztSor8IR+qaD7O737/oI7E3xKYG9bkgp3L
Cvs7NwUZX0muPHCLcH38mFare0M9/s4zgerap3ub5Wp8tXOFPjzgcxv+cHgz
nmPQhm/2b8d3THHmyIow03bmjVNLzm8rDv+aZNmCNz6vwy8EbWRBZ4/T9432
iQbNRshTW82XR1XTlF+xukxxpAK33TKdO/mt4997ruOOS6fwZil63L9eVXb4
41XRzd1B9j2mIz/vay5eVb1NKl/vT227utIIzeTf/n4v6f1VXH7Hv91vorT9
2e3vrn9+NV/nT/v+Lq5PPFJVPsTN5dG3qsmhJ8zlerbGcpfhBvKZRmVlvWmG
clhWHdmhnqu8KXey7PvKT454PFtumD1ADptZVz6umS987E6Llh1Oiv1B10XY
x3viQI/TYknDEKH98JV0xX1xsXzdonzsP61+LCkfCZxmcJvBcQbXGZxncJ/B
gQYXGpxocKPBkQZXOn7ZBl5t63L+LGwGV1zuxndVbMvbhDrz6Jye/JpNdz50
SDM+xTaH3R/SmtUw8iuWTw7sF/w3aACggzx8oYZcrXw9GZ6g8EVHNgzy8ZAv
hYyZovXpNdtMcq3KGbJJI5M0S3rz2/lDRecfwBXArQCHA1wO6IzhtQKPKvg0
rLH1V9difgmhpK2VMbE2dJL+amkldiYMFPpuHyTZoDFNfWrBZq9YxCYYxzN4
N8C/Ch6e8DEvmg9VNB/5d79/wLEG1xr1G3DJL73LCDL7rvAMqCqvGbRL6M57
px4/pJYLb1k9kO98tkRd+0R+d+TNcnT5UOejrLN+DBs9NJkNXJ3Bamo8ZQ97
v2DIDE07X3J+W3H8Z5uYC6z2xI3soH4H9nLbAhqQvFBcdlXK53qOlhtPfyO2
NbdmLreMeDMHL36oQzhv3SCcT/Sazgd6GHDLL2ZsSch18XSnUq47uKzs1Ky6
aB52lzglDKS127nRSMXvr39Ken8Vl9/6b/cbLW1/dvu7659fzdf50/Cb4npq
43hxuHyCePQpQUwt/F789maXmBy/TcwYGyXGz9gu3l5NFDcT0sVJlxfC3P6t
2LAzS5xsdUhYdZoroltainHksqTTKEnyMbsutej5Qdo5K1c6/GWfdMmzmXSi
fmyxeu2ievw/DT8sKR8JmnZo26Fxh9Ydmndo36GBhxYemnho46GRh1a+Yrcw
3sZoJV+nvYi385rDF+zz5f0sAgrroEXccHkgTzsynOe6VeeVksNY5kTXYv0E
wH+DBgA6yN7bYwT8sOAJCl90ZMMgHw8ZwR2GLJBcxjT9AZ+0X7+apEQvJiav
V5EDoVt+O3+oKP4Mzga4G+BwgMuhvXG8A3zmjE2TFP3GPVfjR9teKZQDPDyU
u5L1lJJfe5Xu19qSpDlScsjWkCLatyJTTtahUWuX016Ghyn8q+DhCR/zO1vt
f8iHggYdWnSsZQHP++3rPy8/KKC1R10J/M6hrIY4MzxTpNiYyZk6/xm/vmk2
s9/izDs2mKvGvFwr9FHXPkmdJ7N3L+vS7oeXSSfXJ5IWKkGnrjBiAXersqeW
+uyGf8nzXYrTv/uuekif+56gLtc30HoqfTp/ZkPhPVRXrvumhTz502nhVas8
G5rwhbl7DeKeexbzJjGL+ZxPA/n+CwXMZ70ec7x7TIScqSeX2fdGnF1tIC7t
P0O+1HGlPu070KkDfz/+VdL7Cx3b2IdjRflE//a8mdL2Z7efff/4V4gXZwKr
yvUf3RD47kPGTFrdj2Rsuzmk/dT7iqJ8njS7T4rJMy4qLq5foniRvU1RfVYT
5dFvK5VfuycobziU/Pu2TvBHSe/gc6l+j9uS84R/nr9bXIffBrxC4BkC75D9
f+XR2MmvabOtz2m3Pq9p5bKabG8ZI9Z1b1W2ebEpq+VZllk/uEjdT/jTdo80
adchPckJVZ7y+RVGPu1crf6+3FU9RD03x/dTSb8f/zT+eEnrWXgawtsQHofw
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
6qP/tPyQkvKREvp+lgKvfpO8X7yUZjjmSKuUeqKyYR3xtFtz8XFrNTFI2i51
capE+vnbU2XCJrXGfcRgbTa3pymrVMmI9Xp8nManNqffbBKI8dWFtEYVV/b4
xDXWP9qOX84dzWcsCuDWPRaps3+Rf4cMGPigwwv04Dof/nKej9oTtMnRKeps
GOTjnUkM5g0mLOEDSRCvYjmcVx9cjdunrGDup3/MJ2k8xU+cSe4psi4vEHYL
tv+QBzWvcoSAhqrz0HeSf85/8CTz3bXJscK6AtlLvzsfoGheIDA3rDsh8wm/
f+GYUSoz2k0iuQek5baP1B3b2IdjRfOhMAbGwpgY+3fXP7gn4UUGTzLgszjn
ytqbooeDmeyvmyCAgTdsms1aN3Tiqwx8+eMr3jzCvx0H1xl8H2BeWPdB7fNB
d65oElRDOly1nULXepLkXv/FD/w1cACwDo65IN6H2ae/S99blhVbkvXUfhcj
Cx5JHcvuls5uHS0NqFxHmilTaf6a5ZLDxItS1KZ8KXzWGyl1RaK0TtNZGmXM
VZsHpCuG70lV3N5sn6z8FJ1cJ6mW0mRtPfJh3UayO+MsiXE7Rw4tiCQ6t1sT
F9lFqVvTSEV8vFUHGjdThe5wSzY9UE257/gCsuXsF+KU//v5nUVbqR6+tP3J
7WffP8j889Myk09duCW0Zn6XeveKJwHOutQzagMRuyYrayfXV135ZCXpz1wr
uX26Kl0bUiC5Vfgq9QzNkVZcfSGVGaUnznWsI2r91VwE7Pzx+6o4vs5jn0/0
RAt9ZjbanJ26/c/nd/5qPxD4qUBTDF0NuKXgVwBjwDwb2anIUMWcCevGyFb9
p++nn20l5SOVtJ5u6BwqgnoFibe9Bwrr5/6iit8LUTWqjTwts6/cZpiFHBrd
lWRVCWOWU6ups9VQw6CWQU2D2gY1Dmod1DyofVADoRZCTYTaCDUSaiXUTKid
isunHdXAkB1vbMzKepVhp1neD3xYeOjEJUVSaKlub7Un4NQAV8LaSnBhffG7
8yF/9feXW4M7Dk0fNFBkeJ108Du2qY1dYb2LNT/gnuB+gf8ODSB8EHaNixVG
xwooPMGRi4LnEXMSrMsCmwY/D/Mv6DShNQTfHhmqyFJFpiqyVYuOD74gMHOs
G2PutGnJJ1rhQxab3aIDH3nYh/eY4svThjrzNY+fsH3+RmzSaD9x31hDru68
S2h615C2ZdWhl2t0pZOeVKZXog8R8B1F6+3qbPVyG7YTxfzCz/bZTrJaxJCb
tfaQr22PkC+qNNI4+jaRK50n5VuvIz36GZLnBRnJRqu+qao8eaza0v/m/upr
bUhe8GrSJSeOhF1fSXY2tyd7jg5Q1nrZQtXc+6xqyptLKuuR7VUbDkxX2vXo
RmYnxhON9rdIzXc3SVWzOHKjuhPR69RfmTXYTHVye6Bq0Duq0hk3KHnM2xrK
g18WkMgVX8is+B0EHrXwbIBuEdx9eNjCyxbrmPC2hcctvG7heQvvW3D8oXOE
1wO8ceEhBq9caEnhnVvc/Kqkfpulfoil7e9sP1v/9BgfL7p/N5P7br0rzj/U
EW82SqS/jQXt45FOZsbnKhst0ZBGv86XTmlNEJk3tokWtVPFd/mcSCl/XCS/
Oy20L+aKC4sqq/k6kVt/xCuK4+voXchiF/Y9YtO65zDJqvi8BGRGITsKPyNL
CplSyJZCxhSyppA5hewpeODjnfur8a+S+oHASw5+KtAUQ1cDbin4FcAYaOE8
G981WC8GZl7FNOlfX/+UlI9UUjz1bkdt2XxYWdk06LPoe6uMfG5yM3mli7s8
3TJAPri/t+wx2U98bNeMIVNtfJUmagwLWBYwLWBbwLiAdQHzwncGMDBgYcDE
gI0BIwNWBswM2FnsA8J7s7r8RJ4hvxn5I59Iu9VDdjA1m43Pv80ePPhRDw0f
QT4zTK0nh6YKvOItci81vmROu0moM4AVgC8Bzujv/jx+Fr9oVlj76J5fr4ju
PFNxvbAGemu9TwG8E5yvOrEbCbR/8D+AB9SqG8sEvMCRh4LnEXMSrMsCmwY/
DxqFJhP+g7+DDwjNYa/LO0i9hZ+JabdAEuFvqCw6PrQSZZ+fEcDMsW48rb0+
G/7mEWvj5cR9C3z4nGG+/Khw5vaznrNzw6uyxtp9xZTxT0XO3FXi2LZOCtQ+
pxJn0DfvCfUYVobuTMtT8x39PJ6rM9ZfZGpS/THlaQs3c3q9UWNa1bErHTN7
Kv0SMJ9+Gz6SDnxUjtqIDofrbTEUJw+PExvnuwv3JdVFTfJU1XBPHBlypgr1
VJnRQbPvkwn965OTJ5pLLuSrFLzXQjytGCtZjH1O+txNo7q5rdhzy3GMVBzH
sqe1Ym8+XKbTXR8ReWGUVHZLedF8xBnJP/yp6uulDOUSp0Riv0+PGkzbSeDV
Cb8qeDZAt4gMI2QZ4X5GTY9aHvczMo/A8YfOEVlI8LuC5ycykpCVBD8NZCcV
h6+XNG+lNA+jtP2d7WfrnzX+8cJ5srk8u1+W6NJIV3hcSiFNnWxp+sdn5Hnz
iqTjBmupjbaF6MpXC4+wDPE4RFPeb1xGjrT8LvoalZMNpvyHr9PbbYqcm/Uj
X7U4vs4O/Q7cvY0TL5jakd++XnxeJmog/IyaCLURaiTUSqiZUDshcwrZU3jn
quedv5j/XFI/kH/6++/vbiXlI5WUTz/q0ilR0/K8WNf3iNg8+aQ4fiZffA2x
kMe+aSR/vFZRtu80SiBL7XbHeazdglMMHGZwmcFpBrcZHGdwncF5BvcZHGhw
ocGJBjcaNQ1qG9Q4qHVQ86D2QQ2EWqgonyhkYXtu/JHxF10of/bXn1f//mr+
Kmoe1D6ogVALvYufpADXC3z3tKFhBL4H8H6C/2WzsyMFclDwPGJOgnXZg318
1Pw8aBTSG+fRiLNxAnxAcG7gu9BHbyexnvSVzPq+kKT0tlIWHR86UWglwBf8
7jtCbHc3Z9um5LAOKzryp7t9ufkBH747swPve+whW99Aj12IWCx8Y3TkS+UO
CuvWHhLWfVD7VG+mTY17ryIXpk4j/UQvNd9Rd+1wkm22muRtOEEun/xKNlWt
Q4/26kc13wXSnpVC6auAqXSB7zNyYewyKS0nUGyrfFLctb4gclpuEmGOVUXK
hGuK/QXp5PFJMxrrWokeX7uQzBmzUxq2K1Ds9doj8o84iSWVQ+jRU7NZ27G3
WcwcA546y4AbOt9mGzrPZtMmLqb7dBxF9pkYUdVqujg9YYnU9X1/Ms5Kh8ov
alD6LJbApxxZ1fCrgmcDdIu4n5FpjWxrrGOilsf9jOxrZGDD7wqen8jGRkY2
/FThKYbs7OL4OCXN2y3NQy1tf2f72fpnXrd44b/aTK6ld0dMl7SEh+8hcrVb
FTptchJ5oHNY+a18gqpybIyUZG4tTm+bKHIfLBFDrQLEhaFDBHf6D19ngUFT
2aBrZ3mwtukPeuXi+Dr5G3z41is+/NE6X35vja8awwKWBUwL2BYwLmBdwLyA
feFnYGHAxICNASMDVgbMDNgZMqfwzsW8E1lUv1r/XlI/kH8a//i7W0n5SCX1
U9ifVSCdeFwgabg8ltKsn0gulQzF8d7NBbndQeS41hHIULO4f4isvL+Yzt5y
i0LDDi07NO3QtkPjju8MaN6hfYcGHvNkaOKhjQemBWwLGBewLmBewL6AgQEL
K8onyq/iyddO/4vv+TaJH53/5+Gfv16/vKkNsC9gYMDCIt9HKMBzh9Yvps96
As8n+F7C+3t3jyCB5xFzEqzLApsGPw8aBeg04VUBPiA8S+G7Ce7NiewdZLDN
F7J6fhApk1NFWXR8eGRAJwqtBPiCsXcqsIA6z1hwpjPvu96Xz1vnw1O/O/JD
e7JYguIT3dsiRgy5aCyP51fF4lvPJWBeWPdB7TPCfIFyd3a04v4og8PJXYyT
wXdcMG2C0v5hgTL1cBfi+30d8ZueQWbJ5WjFzCo0xf4dUX7vSLpvGCUtkOuK
Mc2mCa/UucJmp5tITH8sRbqkqa6EmZKVhheJV4whnanYRm60eCqdcD0umE9Z
+eHE9WLEoJvUtnwqG/HIjr95P5AnFvY5D+z4JZ1UFtPxJn1fcb1Y5lhGvp0u
iz4Tb0sVLLYQj7V2VLWzOdUds5cgowU+5fDq7LM9RuB+Tiis6bGuCWwXGC7W
MVHL4362TPET8PyE7zmyX5CnA095+KrCW6w4Pg44aaiBwVEDFuo0uYESazqo
a74eylFu1Kon3bEwF/0TgsTwrjHqjm3swzGcg3NxDa793Xy30vb/VvvZ+sc3
ebfoV81Unjk6XWiueCGFp4URr4xkctL1pHLP4EEqk55vlZFtXpBFzUfQVZOj
af2jF2ivTZosol1VNmxvBaa5WdA1Ci16t1mAcl72j351xfF1UPOg9kENhFoI
NRFqI9RIqJVQM6F2Qg2Fn8GBBhcanGhwo8GRBlcanGnUYsicQvYUMqiQRfWr
/Q+L9gFHdosbfXcJ7RM7RZJf7B/Hf/3TW0n5Qq8v7CHVpd0kYMxGcispnLT/
JhEdn1zSgpWhTcrcI/AohFchPAvhXQgPQ3gZwtMQ3obwOMS8GdgB+BP5VWJF
uQpLxKv3/cSYeD+R75sj5us4yFc39JVfmVrI8FBsaRfGtidW4x1XDufvZgTx
KWuX8E7pwXyH+3yumz+NdzjlwRMsJ3GX0dN5kMl8Xv/IQp5iHcIT/4D651e3
onxq8Nuh8Wufb0jh9QT/LnhY6D1opH4e5xXOSbAui3VdPO94vrHuO6dPNlPz
Ad/Fiy0NzGR4YYD/Y5mxndgPySMvP04ldGq04lePr3tpO0mtlUf0jKaSZgER
CnC64cUEbT/8jcB3rMUqSqm5gVLWuEtSYldjEefFxK38LqLhsHri6ZwgaXn5
GHJlylTaTeym7SYdpsmaq+mqkEbUeVJbctfwosrMvLkyrIFEjs6MIN4tNYTV
lEfC64C1XNBCEqorZdj5Z+/YlLze/PPNBeqObezDsTOLJeFlayPbGb0Qpkd1
RQWtk2R8IxdaPduJOhySSCdbTXVGS+KFGjLuZ9T0YxyeMf+Brmp+G2ryiLId
OdYxUcuDo19zQXO1VwP8quDZCd9yeMvDX7Uon73o5z23rodDw+jPCjHfU2nU
ykZZZ7OXymd7b+nt/FVSlcL/yYRa08i7mMH05c6j9OK3d+qObezDMZyDc3EN
rsUYGAtjYux/4h4ubf897Wfrn+mX4sSGppVl2yYnROrBFGm6nj0hszWVTzZv
l8bsCZVODcwmHcdk0uGbe7CvSWvZgzgVQ97Oqi3PWED9Z4z4XGM9eqmYV+94
Vnv6j3kFxfF1gHkB+wIGBiwM7y5gY8DIgJUBMwN2hp+BpUEDDy08NPHQxkMj
D608MDho5zHvxNo7+AfgYP7q/IuiXcupquxoZyLHvqosH5pm/Mfpn//0VlK+
kJW3NtV59Z3wwAfE7Uw2qa+oQNl7BZ15uDtN2d+QIqMCWRXIrEB2BTIskGWB
TAtkW2DeDOwA/AlwSDudM5F7rSsnHy14L2g5HTlDu4VskztJrmIaKG+Z1kd2
2z1HIEujr+cLlp7fnLtv68fvtx3F34YM4lMyXHmLGpwfOOvAOwUp+PZybfnq
/p25PKsvNz09iDt2/efxr1/diurpoe2DvwE8nuBzCe9S+HfhecScxNb7KwE2
jed9eOGcp0Xh3AbPNzTrE7I+UuhA4YUB/g88UQesjSbltJ+TvEPdyF+J1RN/
9fjPBkaT69+fkMiHHcmw5aok6Nqg7YcnE7yZ7nasrOY7fpo6Svht3Sd2m2rK
KR3ryiu228uDE6rIa5wGiz122+mIPiPZsWFR7HxKDMvbsYjNrleLVfJpRm3q
PZPGPjUS9hp1VYfedCd7sx5Izo+zBGO28ovrx8WZhwas5ZdvrHbkUF7u0xJ1
xzb24dhR85OiYH1DeXtSnlj1zFCstbtI3rbvRV0K7++xx08R7V566nw688L7
GTX9ooV67PPEAtbw9AB+OjFYvS75pZkbB4b7xKwFhU4RXg3wq4JnZ0JYHilz
jFHk68BjvqifQdHPm4YMUtTMfaas33UUUcaYEff+o6Upe53Ee6PFQoRZintm
I2iETRd2o/p+NuRatrpjG/twDOfgXFyDazEGxsKYGPufuIdL239P+9n6J1y1
S2SvM5TX9tknso+FSfOyqbJRJVl6d7WfcPhQQTx+2Y/aKbuznFUnWeu9hnzt
Djt+YWRbjrwdze8deU/7trza51Y8v0dzPt3yx7zK4vg64DyD+wwONLjQ4ESD
Gw2ONLjS4EzjZ3CowaWGByK8EOGJCG9EeCSCe413IuaFWHsH/wAcTOhQfnX+
adE+YuMNcWbDNeE+Nk2Yhl394/zv/vRWUr4Qv7WAzJDnkVadBpGGE4eR6Enh
pIVnBlH4vSPtfY4SZJQiqxSZpcguRYYpskzxnYF5M7ADddZptWvq7FP96xmi
U0CqWFrxoBhy96iYWfGzqO9kLc+81FwOcKgim4T0EU6WZygyVRfszmB5zTR5
C01dPilag1eo/oINU91kqRlp7KXrVVZjbSbb8vkJC/+Wx2Y8/szuHvnv438V
9VOErwG8neBvmdrtPYFv+73C5xFzEqzLJmQ0UuJ5tyic82DdF+u6mMvg+YYO
dMOe3Wr+j4tdhoAvvOaBSPImLZtc6cHI98/Wyb96/FAWSU49u0v2WjYhG+tF
J2MOgrkI5iSYm1za3VEqu8pazXc8XumdKGfhIE/oMVPePX+xXHv7IHnfnnEi
ytmBLZp/i1X7aMpnp9fgZw58YRe8wpj/8yh6u85gERu1RUS6VxQ3k1sqL8Zv
k+okpoja+uayVVaiSLqnwxKavmVdPXvx6o+D1B3b2Idjl+xVYv1Xa9l4zDOx
+mxZUbPiSWKe04WmeHen3X3PkatvyqvvZ9T0WNcEtgt+Gzj+0DkCmwU/Dfw1
S82dZF7vvmq/Knh2wrcc2S3Ir3MPzCPI2SnqZ1n082456ajijX4XclBxipS/
GESMbU5LvZ13izLab8WmL4sFcz1J31zYz0Z8qcGvXXZWd2xjH47hHJyLa3At
xsBYGBNj/xP3cGn772k/W/+sT4oV9l305A3RUcL0sqtkUiVKlWnkLPY47RH7
vw0SDgZb6JOccGbdrhKv9d6N5+VN52k6AfyiR4A6b4eP9+Rt3kziEU08+EDL
aTzc2Y8PuriEn9BczWMXFc/XgeYd2ndo4KGFhyYe2ni8u6CVxxo2tPPQ0ENL
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
Jsb+1fdnafvvbr86f2fO8gRRLctc3pNxT8x/WEbUvpdC5p9sQrswfeq+yJV0
3ztDctQaJvq3PCri6r0SsWMfisRK0eLLWi0x9tpgIs1rpM5eGkBa0/YLytO8
B0/IZYsXZO0LTXprr3YpX6e0/dFt0OJKyjomG8jCBFMaPu4sMaloLL59/SDm
9qovO1w5Ip5SXbbD+QPT+TyIz+22gtdctokPT1zO43aM4PkrjPmIWVHs5PVP
dErLUarVxlvFE08Nuf1XE9nDtrI8cUOeaLUrRdSZcUj03XFCuK25WqyfQ+Cy
gyR8fhZhN0+Th/PWkPexo0lItVHEI9uPJJgu/MfxX6zLApsGPw8aBeg0kS0B
vy5kTcC3HdkT4P8giwKZFMimQEYFsirgfQr/L2RYQAeKTAvwAYGJY124e/K2
5H41zyg7bgwhLu3diF3jTZKi52LRot1xUXHfCBG6PJJe/rZCzUdU5tbgDY6a
8tzeN5nRBQWrdddKtNdtKF8eo5Dj3XOF21ld8UxKImXDjWniloNkZ4sNymbj
m6ju9zim8q5yWfV6RW9V0fyL+EdDpHUve4iWhb/v0+dycm1Na3lg5wbqTD9z
r+qytYGJfPpRZbleuQqyOKQle4RlqLMy2mhbiI4brCVFpTvKh/ktScezGcpl
daYqxtCNitFjK5EDV+aSWOtaBOtM0XIvNd8InGt0bGMfjlUrrMPwbzE2ciPQ
CfYJu5dcf391ZfDUmoREfVD2WGEpWZ04JtVoe0IKfdNI2nZ1ELmwfDht7qDP
MmqEsvj93xjXb88d683iGZcX8cDIefzOp3Z8rcEt1rjiK/otdKeYc9xYPn3u
pqj2QbNY/Cult74yZOxKktCmAn02/CjxzKogRtX6JIwKGslNr54S/lcN2f12
mrzMwRF8Zc4ydcc29uEYzsG5uAbXYgyMhTEx9q++P0vbf3f71fk7W3XjhWV5
M9n8YqZolK8p3PolkWhbK3rk9kuytWktMu62g+QxvZ7QPrNCLM05KKo92SPu
n/UXirNvpA0PByo7dD9FdN4UqDOYfMzW/XHv69JW2v6/WtH6Z+DaSqKW10tR
tWpNeXKlfcIv5RMl1o+YRptuvHPUUm5/agtfER/NsxNX8Bmfx/IOPlb83JfD
zC/wKS3fIErYX+4sN1nrLfsoRsvnjZrJqwt05P0Z+WLhI13ZXzIu1s/TwdyK
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
Nzkp1rtkLs5uNoysCLChjrs30rIV6fRYzzT63HktXTXanN7SGEx2dLykGBg+
SLweZSw6nRqsUG8XJYR03EXeeWrQ3rEHyJiR5aKh0wPezdVQmqt6j08bup2m
/shgEfPM4YqqJ5jGjQKHBl3gQsolttz6ITUcuZU/7llXcs08xd3zHomqo9cT
9+kPidutCWRq0T8/D7O6PxtmmGKWKWaaYrZpbfNPxx7xEaKGbCLdE1Vpj6+J
Vf/fszxzueqb/9D/YIY1ZlljpjVmW2PGNWZdY+Y1Zl9jBjZmYWMmNmZjY0Y2
ZmVjZjZmZ9dUb9RU/xSXfaU2n/LYj7GOVbVPMQmAOfP7wKdVL1jC0h/UXkrl
titNpOu56tKyJwt5dqau2DD8l5BycZZgGLYyPeB2tNAp8axgw0MF9aubZB/q
D5DXv7NDvuJqV/mg0iKlHuj/OKrPz2MuImYDoT8+esQ2bWjCExs0lfbIRklW
0yyl43d+kH7JGezQ3e4Q7TwL3HJnwKcMK7iwKIUdKZkiVJT1lSwz50j+zw2l
gkHWfMLhTwT99jFzCHMXa+KDlVDid0J1frm6Hwz2kGMvOfaUY2859phjrzn2
nGPvOfagYy869qRjbzr2qGOvOvasY+869rBjLzv2tGNvO/biYK879rxj7zv2
wKN2A/uXsTcee+SxVx575rF3HnvosZcee+qxt95rAYWId6bQML0hvAv7wGKy
c1jAzZvsvdUVphWXwYhzLGu7uydbf47RxjdX8NG36knHBreT7rg3lxLzPvGt
iy9zaMr53mP7eOHH1nziJSf6R4AZk5muZj6fDrGJb1PYLfdIdr2+GTsw3pu2
NZsrBk8w5/mHtXj8GRuxgbsJOWNYQG6daU6f/kgk2qHFoqCVyxPLTCVdBwPp
k1sTvrTEjK2Zfp596q4FFVcaQuiAl6z05XLWX2cdjXnVn/+cfITHvA/go1XX
iB6nBNLwYiQxe9CIOKqs/MfXP9X92fbZWYptTujzzs+H8P5jP4uRCgsaP8OQ
9Z0XznY3PlS14Dpuw9fwPfhe/Ax+dlOfZmTj9hwSZt2MJuYkk+vW5VX/36j/
2Xk1md/tUkK1wp+yvb4OkDrMH2w+BkBFPRcw7viO3XrWklld9eKTu1bw+us5
37z6kXhnbAyJjs0iqCn6fGiWrCa+qab6x/XoVzreI48h5+U2zx94duX3RzpD
ywVv2MEWGsxLuMKPf3ORfHv0llIFbSl44F7e0KMbP3phqzguL0qoOHCRnG32
ggT6bCCx3RKFz6MmKzqeT1W4HR6pwBpIqQf6v43qfDLWKFirYM2CtQvWMFjL
YE2DtQ3WOFjrYM2DtQ/WQFgLYU2EtRHWSFgrYc2EtRPWUFhLYU2FtVVNfLAS
SvxOqK43qe4Hgx6C6CWInoLoLYgeg+g1iJ6D6D2IHoToRYiehOhNiB6F6FWI
noXoXYgehuhliJ6G6G2IHofodYgeXeh9iD4U6MWFHi7Yx4weieiViJ6J6J2I
HoropYieiuitmNC8mG121YEBqSag7ibAxG6uMPTXYPia2A8MBlnB7WgtWNxx
P4M6D+hFt928q0c/adv2+VKPEyMlUbujFP+wocTTGkvb+2hLFwpW8RPjj1Gq
2MJOmqrC0EntYJFxO/hgrgrOjjtY15xH9OzcLHFBxRaeUuDHr/EdosXEIBJ4
qyFdXPk8vt18LYHBl8QTp1O5dSN9yTvcVJoc+I7nLmFiaWw+9bk0lB355MO2
5Lmym80/UR1rDXp+qFyUt2jL70x4JJqHfVKohWwTXCLzhQLX2cKghKf/eL69
uj/bjPoJ4kKz1XyT6QXu7ePFD2bsomxRDMu5WMEalhoDLriO2/A1fA++Fz+D
ny0w9ifbRzah00I70Abjj5KbM8qr9D/4/205PYXXaf0f9Ud9dUdonOgProEB
kDPOCbJG5rNmZvXZhtw1/IZtfcnt5VUe2LFINEnaXqUlertxMilud0xWU31R
U/1zcdVXilpnrL++2vpDZqdF0PyUC4TmvWXBjesx/8gsfjV4jHQxZLJ0zau7
FOdVwm1K13CjbtnipS9jSZcnFnT2Sjs6tvt7snNKXTJWK12xK7WZiDUQzgMp
9UD/t1GdT67iqNakVnFWyF0hh4VcFnJayG0hx4VcF3JeyH0hB4ZcGHJiyI0h
R4ZcGXJmyJ0hh4ZcGnJqyK3VxAcrocTvhOp6k+p+MJghgVkSmCmB2RKYMYFZ
E5g5gdkTmEGBWRSYSYHZFJhRgVkVmFmB2RWYYYFZFphpgdkW6MGCWRfoU4pe
XejBhT6kmImBWg7MyMCsDMzMwOwMzNDALA3M1MBsDbOJrix97B32RWEK9Rwn
QPs2K8D1zFp49Xo1pG0IBPdVTnBjhBp86TGfGY/TFtyH6EkRit7SmiBDaZbd
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
QwSX/bGB3299h0+aWU+C5XWlWZOCeeuiRPrxySYW1bUBfIztD2cdg2FG7gYY
sG4bRIbGgM0QP2Bnu8Cb+5wVCTfp6A0ruEzI5juOePFfuuMVLWZuFvVdnvLV
U52k4yWmUvyOJnRAVwULrNsTtjjPg/un/eDOTQdgVs/Y59GlFJ+ZI1rqS2Gu
OXxY5tda63H/7qipXsAaEOfCkBNEbZStdgCs/eYIMZues16Py2lB6nF+2t1Y
ej/gC7+T0pp7GmtSvieZ0omv6Rirx/TXZ18akfpYFIzPcus7K/mP1Fv0ycEL
bG/LrjBi+gTYF+sFZ5gNpPe8wfZm/KufYm31nrX1P6zTdhGMv90Psq99Zcxd
n81WVZF2H1ovaY2Pl6YluEjrcybQrTZX2K5kOxC05oJNPV9I9ukNCQlP2cHE
EvrxcTI/11BPGnUjm5/RLVHWP785qs+XP1btZPeu6yJBd6YWWbxHEiYaf1ec
HLJfdPNNEgvc38gfb2xNW1tcobrutozeiWEdV2QzLaOG4OdiAiu2m4IgawRU
/xSbZdScDV4zoEoniVoBnC/HMeObyvtm3a26NH13Kkm02abM+1JCib8RquuH
ChfFyoPa7lMEhaiLWAPJR7wShp4/XXUN4zgG53Jjr/pWafqwr2HcGA0pe28z
KdtGT5pX0Vxim1tKk3NaSpHLm0vDButKZ3q3ksz76ElzphXwtL6EJ8SPplfO
UravyzHW7o42hGx0AIP2iyH8+Tq4/20D2DuEwjXmCCdsH7EAa1U2vPcCPsj+
Dk8a48rbaRyURX/IEtPG1Zds9BZKPSymSCHDHoi543cxZ40uEH5/JnTf7Qt+
MkdIHPWcFd/7RvuUHqp6dm7okMPn9SqpdT/23x21rX+2mAZARXEfyJ/0mmlF
qLKGP89ylYuCJG/ZVpq8Zh4/kryExv8Elj5/IwtTO8RONdnObpQDK2w3iKo9
9BMb2w2gdUfPZ6pJ79iGkW0hPq095CxRBUOzjSz4e/y/5GnUVu9Z2/yLw6GL
4NCJ/vBz/De2ZXkLFj+hjjTrfKy0cE+SlL3eT7oT80OcNiKEpYzQhh3GQlXt
c2Fra4goO8FOaV+iW59Hcg21Yu7lfZA7i2eV/Ndvjur3u70zI+zS3V8KV08t
Im82WZK8O8tELbWB/P2MIL7LYavYsP1lqrIzktV9X8RsOrUCMtgC2l7sAM0D
GsLal7fZq6OhzCD8G71Odcn4OhEce0XO7LrKUTOA8+Y4dhxSef80DpxPLjqP
UeZ9KaHE3wjVx0Nribn82sa+CqyBroxwUzi1ihHw2j1ZOX7BOVzksZsP2SCO
vujKvcvi+cK2V3lcj4f8qdNDfqUoh3de95B/jHzCb3d/xEe+yuX7ut/jmVqp
XD/aiy/sGiXqJQYRPs+dNrnxka5bFsTqZX1gbbJoVQ307VIUPJ8QCtPbusKq
Z2/Z1sf6rB5z4y3Mb3LHR278UrdM2/IvXBzkVM5PDvKUDrViksrhMBK18ASz
Te8Obe7Ng+ApC+FNRB+wmPaC3X9YRvteOszdFrWQ8BmqO+Rbrf34/u6obf2j
2y8A3rVwhv4PC1noKi0WVpTFw+54Sl4L+0lBsUn87bTz9Kj6TuacoAI7D7WG
XXv0wf5eHuvm6MWeptnSUX4Wova9JXTS9kGsmecephV9goW1Xs/0x5my/ClW
/5KnWlu9Z23zT+9rLYJk6AuTm31kJt8bsujMF9z91wLpBQuWvphYSjfUisXX
H5uwz612sLCZ2QznfbD2yd3gzg7HT6HSL2P+ujCSzz3ah+sfGqfUP//mqD7f
PSNzlWzO4T7E7coVEvkhnOxpcFMMPn2Yp/u8450MJvIGR+swk5mZ7Hp3KwhJ
GA9HUiZB+WECK8s+Mt1T/VlQ+UdhqrCT/7FqFzdU9ORdkyPF5m1+KVA3idoB
nD/PqBxD4n00Wjtcpsz7UkKJvw+q8+Ej8l6mYw2E80A5lg5yvGYvVI5bcO4W
+esnLQfLG+Voi9jLqWt2V7yu8lP8OVOD13dT5VcnfBejhvwQu+6qELvH/RIH
TvsuRjwoFC3DRossPl+wv9OR6EfHirZ+oTx2xC7exnKo8NZjJCsy0ICpaUOq
uLArF5fC8q8ucIUVsm+fG7Fd14P4Sbsi7uARwruelRTL1vmKdWzkfKW2sdSo
VQF3ipTT+EbZbMPzXnBs60LY2i0A+k3rA5pznrOfq7/REM3D3N2uhXR7032O
z9La5jH83VHb+meodwDkdnKBq5of2Kn2OqzR0Vc8/9FC6WNdH0ml833e/Yoq
W2yby1R62UBS2RhIHTAa+mhawMe3p1lzj2vU4+ZyXtFHzqd7nRYjc5bSrcIj
Ojf/ErVfOZa6e7mR5W8rFDG3xorHV7YVXzjYKmqr96zpfDB/zOZTHvsx1hFG
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
BL1l23ceYJO7ztcOSLum1HsZKMfbH5KNij2SlVu/kwMDXsjZNW/LL48uynKj
Lsgvdpdk89lXJO4T2fnBNXAt/TUzr40ckAtyQm7IEbkiZ+SOGlALakJtqFFf
a2bNqN3IE/1aYThvt5iySDmWZ7hsR9FyX8kKcla9/rz/io7iyYIjokITG1qR
6EJevbqSN+tHQZ08aFdYXZrSNg+tzr1ELBEq3z9xgzTv2UZNuNNPjTh9Xa4K
sRJzQ5+Lo/lbkjrSm/q1G0+7ejWkvVWSRGXvLyx0saOaWquXesy7iLr9cxX5
/HwaOx9alw8/dJqFpkT/8n48We0X6r/yoc4VXelCj1viavXXXLcjTk46ZaGO
H7BLbruwQcm16oy2/ccE5cGRxbJ4n3RZuMJjOeDWXrlG9ZAtug37YX2fv7se
Y/9jjL+K7/GI3k+eKdtfH5GN+uVRfV8Mksm2dvr7SZOINuQ6LIh6nI2g13On
0ur1ghxevhQtb/uJys43eKMx9rxDcxtWb+1rXaV9i5SIEWsU//4Fs+z3ktMi
u/mc6xffsVoxd9m3P08zt6XX2LRjNjzfQcGt4ztx3+c1uF2vIWymLo985pko
Yw7mU727VVSv56ul2llVVfecKa32P1dE9flso9onFlU7Nyiu4l6RnR9cA9fC
NXFt5IBckBNyQ47IFTkjd9SAWlATakONqBU1o3YjT/RrheG+RfLH8sqgF++U
RiZlZJFNG5VVjZ6wVoOv8ZraDuLB0xhxV3tCWE19Ku6t/yxWLX8pMpJOiyU8
RpwYLESd49P4c5dJcldqBTXX7saq24tjcltCXhEQ+UB/XouoNZF8j4+mMgPr
UvfS8SIxtZbWckIrtWefseqtCvbqrsVO8mj7DNbTuTE/OeMuU5pu/eX9mLPa
L/hl+FAncqXYY7eEXfs3/NawDbL/gQLqhbVSnj2pU74mlGYuC4srXS/2lKzY
Vtnw6g5Z2WSOnLW+gjw+ud4P6/v83fUY+x9j/FV8bx91UrOnivXtE/L9GzN1
2+QQ/fvkl3sfi1e2rWjyyWkU0yKQLl3yoG/dTCnXZ08hZ9hpv+aKk4eTw2VP
JU6xutSd7Wg5jwW3vaCt7vxbUlb9XnJaZDef4/ZlHdtvHsOquM5mxR5Gs5SR
B9iWqLdsyJx8vFDnW5nPkjrMtXeI8me15vJDoxjpkVuR0ycck58jD0pXt52y
c9xG6em3Xu7fskmu2pwgcb/Izg+ugWvhmrg2ckAuyAm5IUfkipyRO2pALagJ
taFG1IqaUbuRJ/q1wlBvo2JSNV2tiFyKW2wF5ZtVoq5Yp9fa4z3usvRn3biL
5Wre+VoKD3b+wj+4mon0IBORkO8eT+t5kPdKjeZTaufhybPLyIVT3sqTRSqo
J0btlIcqfOZn3t0R3YOa0W+9vajso9/IpZML1az/uxj2dgCnUFv1nZOb+tkz
vzpjg51Mtb3AXnuU5xknd7HI8d5/+/zmn46s9gsPPvtQyDRXInlb5Ep7y581
i5d+o4uq+dzPy0Kr05V6VcLZyPvzWPNqybrVxVKVyMr3FfZyp1KCt1dmDh6o
+1F9n7+7HmP/Y4y/CkO/r1K+jtp7/gvZs2GWfPmNPSxaay4fO7yUu07XVJfU
SpdXuiq8XK8U8XgMUbt3E6hM0fG03EpDMZ6HxfT1g3nAR1u1SbKbWmRZfvXD
Wjv59uh55lKyPA+as4tdcfn17yeGkVWeB8w39t6w+w/9ow/VnbRF+8do12r3
aq/ofpzPsez/QVHYA6X8kxRlX/s7Sm0HazmwmbO0cGghfdo7SI8zocrmkbuZ
d3IY373yKp8bZire7C8gwmaaiw/fvvEOB1/y6hue8XnsNV8X/I7jnpGdH1wD
18I1cW3kgFyQE3JDjsgVOSN31IBaUBNqW93yjrJ9S4rS+li6Ur3wB6Xqqk/K
2mIflG8nM5SJAe+UzTyXLGiST1aqll8+qPJFAc+PnUboOnAb36Tdj6ZooXE+
9NFSLbzu4Pe7YVSYy808NVwSuj1tZOSDsjcM9VYXdH+uOTBmp9au8j1tpzAv
bZHnG3VdDixX6vgXl5tCBsqSc6PlWJvt0uXCfqk03idP1YuRR50qyEdd2ms0
FTuyxvbnlXORR+WGq4VU80qb5MvbGXx4jzsiz28taKr9NJrvH0h8aWcqkG5K
tit6iK61v2o2uq2XN6dESGa5Psed13KaXo6x/zHG3xmGfl8Hvs7Xij+OMzOl
FnfdfZMVLuAgN1gVVtdqeqp1hzmqO5L/ZK3j94ktF51prtto6nBlJL3aV5eO
TEkQW98O0X772Ep1PDdW9blbRn3Yvp7sn/iKHW0seEzAbfalQ+Iv/z7ZMLLK
82DvDbv/DVr2ZDVG9GVrRscwp4mpTBP4hjX1+XE+Z0hGqpzvd0y+erdbmjkc
kterfJSl3turZ+rWVu9EFVKHLh4kT21J4JPy+4sp04+Jm43eiOp5c9OfIz6J
QS6PxFafa6J6whVx8ex1ERp/W+C+kZ0fXAPXwjVxbeSAXJATckOOyBU5I3fU
gFpQE2p7antIVpq0W7accVS2bZMqd4X+IeFl0LJmqhy1NlWWbntd1hpwRxZe
c0MG3TghscsIPQdoWr06dVTrOnUfg78LPO7g8zsmsTnb1/Ge9lmdKdoHfI2R
D8rmMPTbcbvuqb1oVZmdc/Bg6IEyHOyVR9OLyAyTCFmj73mZ7JlfLV68rOrv
UU2NflpePWOfX61RdbV8XnWF0uGkCbsWv1fZdU0ne1W1Ugu1j5P127zicXRb
tA1pSS/SZ5BjxdnUe48fOfgStR3xSrxhfuJQu2t8zeTSfFSPQjluXp/T9HKM
/Y8x/s4wvP+gR0Gvgp4FvQt6GPQy6GnQ26DHQa+Dnge9D3og9ELoidAboUdC
r4SeCb0Teij0Uuip0Fv96jyhYWSV58HuP/SPoAEJHexqGmsuMjR8yp4O/NCO
H+dzUpNt1aQrZqrl27eyda+8qn1IPfUIG6Wap09XR9h2Vovvni6Ptqsj5rW+
L6S1I3VRPehbjX5U87gnBfZwpwLniWK9OVV70Zi21nLV3zuy84Nr4Fq4Jq6N
HJALckJuyBG5ImfkjhpQC2pCbUvb5lUPfMqQoffzq4GOtuqa6iXUGl+Kq/C0
NJlUTB1oUVLt3dlO3VPYVu2b21Ttn3FevhgZIHd0WqFY1I7Q+7rA2w7+vpNM
ivEOJ06wk/unsCKjzNieRQ5GPiibw/D8NbFlVe2EWbkZeqCDY3Zq8+/+pBvX
+ZESdbKnHDlslbxtdlaW93omv315LysNeCRbVN4vu19tJ/vPcNV59+jEJsZf
VEyr/C575rNUr35cKa1fpPP9u1NFvbimlJw/iEbWiqY5U6L0PVB3X1dyjDOn
uBKbhef2GqLsoJy3r5HT9HKM/Y8x/s4wfP+sn1HN2aWfWWF2hRkWZlmYaWG2
hRkXZl2YeWH2hRkYZmGYiWE2hhkZZmWYmWF2hhkaZmmYqWG29qvvkxpGVnke
6B+VUhIYdLDhBdL0q8Ly+rxkTsKUO5r+OJ+j2G6Slewj5HrH7rLMoUDp3eup
HH2hkTqtc1f1/bPS6sjjbsz50DxRqpcdFbHvRz1YMFUfHkEn9obSgEEBNNlr
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
1DzbW6pNShfT6/1c3nZY+EzTkm9hb0ps50+LzDxoYXdTOlimh1Bm2Glzl1on
D5cOk+PTVisPPnZk5rUj2MtTR7VNbXx/ef14Q97nuWXbpNc9B+t6Z/Y+G9IG
6gpFXdOypDy867IBvM4kFz7rWoAy/eQZmXS+vHort6Xar0aCLuDhWNGgfH6y
qdGaYr286NbB6bTpYgBp90+m3Qt86V3KDLLyDKWM5TNozvRBVKZkTfot8pLQ
zMk6n/OjfhLwzIB3Bjw04KVh6K/xd39+1K/j2YgMPnZcPtFvYnGxcrW1CPCU
vGrmM25H5jkfsw7wHmBesfeDWVih9lHUqOB8Wmwyi5p4+VHI9snUrcyMzD5o
FhWIDKJWh/rRm/6lSLGcL74178TAZIHNAqMFVqvC4+nydeceMtgjWNZoMVfP
C7mfzyvrrH2ts7zUnWUcPc/6Jb5i0P1cdmMPG1llud5HGHsAYOGMvNDfG4bz
/PKv62pblVvCmr4rwOu469iU9pYyb9BraZ5WS/1i9kD6Z/4+0CPjPSFmpeDF
wMz7dfkP/wP9qNXVS6jQEa+y6pOCnfrggh+Zb7UA5jP713s+5rR+IafVY4zs
DUN+ZVfj+42eTlqhqfK0vNbuw3XNmer1kp4mPNAW/bSEtUz9jdUvuFAZcjtU
9u0WJ12Httd8LttdNHicly4e7URezJ/qlPWmj/O1VOXcYWGZPpiXqVxM3Xqg
pXopn7m6NLqMRA+FXgo9FXqrn93v63v85Z7M7yv/KSuXpuV6uPS9M0MzZnV7
7eGPL7XOJ6qzG28faDvV8NLFzcij7El5ozvB5irLvBrLRc/myTGbPeUJ58r8
uvtg8cj0s1heqiUVKjSdtjyaR67eUfR4VyiZDfy/z9/k/f3oZZtSZJMUJa6N
cM8yn/N3+4ka+qv+3Z8f9Wvd8+c6udY1VJY17SVNnwZJPONwzsesA7zHlNpf
NfA4qBNnrte64w8n0sru0ylwWYD+uzfsP29OG0SJH2tQ62KXhMPj1gJMFtgs
MFpgtWxsCoppnYqJ/r1MBHghMG/dpjvzts1t9Kwt9EKhmQ7t8wVac70GFnQg
glK+KoldPxv9x/7mMDyfrMxYrunasjd7tfs229hlCes9Ll3xiT4qn3jlVxM6
BsuQJ9aiufaR2P6oBZVZNZlGzfahDZea0Zsit0XLc2/1/E+eR8XU0T2uyN6e
v/7zMaf1CzmtHmNkbxjyK3kzn+XDio/Q7l+Siz2osFOrPj6vS/FvqthejtNt
tbFi08fq2B8NG/KW8cl8w4Gxgqc9FDMjtbT3y2Qq0SmMytv6UcLSBrRh4hax
u2ov7YgOrdXgNePVEvMrqNcHM4kZGmZpmKnhvv6z+319b//2WWavODzz+yqY
kKJdO6Yxuz03gXU4XJw3XefKvzyz5gHLHJQDDYPkiUeX5OuKj+WLZtvk59U6
XclV5sJWWS+CZ1tT0asd6O6wYHLniyi1XAz1mzGH3AdMJO85/3f+0qd3XRpX
+am407uhKF0wMMt8Djwx4I0Bjwx4ZcAzA94Z8NCAlwY8NeCtAY8NeG34Pq/B
reM78XwHBZ92zIa7Lb3Gvv15mtWKucuuX3ynvzdk5wfXwLVwTVwbOSAX5ITc
vucH4ty7sPp8van6xuujfFg2v2qRec7HrAO8B5hXeFseaHeNw+Mgw9mCcsna
9OxgE/133q3Q/50/TivEyGaTA7EwKyrc/4WeyQKbBUYLrFZCmXSxLf6BnhfS
/q6KkINRevbNeYw9P5wcLgsvy6/3voP/yyOHl7Lg7RNyx+sjEnoQ2Ik0+o/9
vWE4n36zZbQmzxN3NndhCkvuE8UWz76uWM6XcnCdb7LuyQHy/J2Sonz1Z+Kb
eUtyejmZdnXxoXUTm5HZrFviYu23fPnJeD3/ozW7Ik/X+/WfjzmtX8hp9Rgj
e8Pw/tC4XA8XPMs3RYxkCwc4sLojPZX4qdYyOrKgHDXYMulP30hexbGBMDu0
Thy6lYdaejEq19SbKDiS+i+fT2/tAym9YUMy0+4QrRJT2ZzUmuqw9T3Ues2L
qWMt60kw1GCpcT8HW/2z+319T38N78nQK+L7ittymO1JKsd3lg7ivqU28HrN
p/Kbzi2UMyE3ZcntjdSUChq1Y4k9MiHhFD+xeLeY7VWB9icMokNdZlOzUcvo
suMKUuOjqHVm73MqoiF9ic3zf/jbrbPPiTN+4eJml6N8z7k+WeZz4IkKb1S9
R+qji3rPVHinwkMVXqrwVIW3KjxW4bW6fecBNiLoLevT+yozK7iMhefvzuJL
uLLwuf3ZmfJ++vtCdn5wDVxLf83MayMH5IKckNv3/GDzNE2WT9r+Lqdv3icb
ljuqn3WA97hZwV7F3s+NKRFy5eTSHP5O+2WUvmfBd40eBr2MIX+Onge9D3og
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
dtSyEuBF0TPzd/998ubrYGTByiIHAjt7eF2aZvkMRb5er7lIGLdGuHg+ECGr
SyuhrwyU4c/ei+DWauGz2kJ8PDKNTq3zB+sX85KN3i3xabk5UOiDED7bN5zH
rQjhrmbeXF9wfir7K6vn5ssq5eZA2Af6b+eB8uOtIkYYyJP6pssxxtXF7HoD
5FOtxtANuk1Z/QvBLKDDQbaw4QY2rYvE3kl96IrhzvKw6q3p+pbDWcPYl2zR
rCa8WuV+/MmtEXxk9AB+77Yjr9u2En8VcpYN39KbLW0+nMZVryt68FBxvuQY
UXZO2F+uF4sxi7GLMYyxjH0f5D7HJkQTYtqDdO4YLF/usVjsO/9CWIw2VnDg
Nh7Dc/bdxhGSbUrf2jnSJ6vPkwMHSom5u++JoMFVFL1ykYV+fVyc/xTHfwrU
LKDFAE0GsBLQaIBWAzQboN1Q2Pc3Cxr5+Z297mopPt2sqByN7qs4uNdSqiQt
of28b7Olp7rwrM2LePlVfvxm/V48ecFz1njANVrmc5ZodMBRud9VR1n62Fjc
qXGOzNA1oRFjtpEPsY6Fjn/KG381r9Ow2y5Sf284uTY0mET2W0/sumrI26tP
yNmeWeRm1WvE8OZAYrcjU9P1qp6IyxwhYtuuEXs67hZv6h0UXR0Piif2UWLD
oSjRtM5BcfHDAe39TRf3iyZjosTK71EC81FBjkHHo8Sd/vuE7plIEee7V9yo
HC12xAvxyv+UaNQ9TiyovFmMnTZCdBn6QV74+qfGWImWqkfVIyenf5UmNDOX
wEgsjWyk7ZVZnFLvb89/8tZr0SONXmn0TKMWNsKuhqbrj5LyBWWqPO7kCXnX
cT3h8fmp/MdCPzkxJkx+HdtB3DLaLXYd2Cicy9QnX550ZIMSXrI2+7m2Fla/
VCi3XBbOeyaFcJp7P2i5kzYH4mIke9W32n89D5Qfb4Ue9aMmFeR5Dk7yqRYn
NO3Cx5P7Xn/QAZ8u0buhybRbxWnUesh2efKUTaJtG1dhnrSbdvkYwUqNNONm
cW58gusS3tp0DQ+yX8Vjqvtw86xuvPXh8vxHXBgLmbSdxu8cK8YH3xL37+wU
3T8n/eV+QRizGLsYwxjLHSZZS9j3Qe7zPea1FF6yoZxSq7oYeHCxGNZjj/bA
bTyG5zakGJP6154SVq0OdfSKI3M0OqJt67tife6aov2nws9HFOc/xfGfoqiN
j/z8zqbND5DtO3mI8ZN8RdD2HqSWcVcm/N4xp1qEr1g4kl8/Poy7uzXjh5df
YY0O6TB17jV8cP83YtThg2J5qcTfTu8nLx8A5gXsCxgYsDBgYsDGgJEBKwNm
BuwMGBqwNGBqwNaAsQFro3/7kzzX+pW8bnmy7DY5TZ7T01D8+dVKHF3XQvhF
mgliuFse41qR1BlpT6EtmWyRSBe4v6IzFnyk8yd/oher5NC+b3Po2NRPdEHu
/U5XsmlSk2yqUzOHZn7OoRhzBTnqb8+hOg4faPyqd3R2mUy6qfkP2i9an9lW
KsvS/HTZzRGpdH/cVhqosaHJO+zJUcufmo4DPOX42c3lgFEeGjCgtjcna3uB
S4Z7/u36nQX1C+t+KomUb6Gi7yrOpXrTCO1rMVVuf1iIZk0rKi7z00VFuzok
dNgoFl/nG9Nd5cSn5+Y8bW+G8K+B4dxdP1SbA2EfCLUw8EApbaoT9IWhNx76
QD2cB8kn15TV5OzYqYFfGDxT4wY+kzrWCJZWll36l+vX/N2Rd32E3wBqok29
axLkxg8Dz2hGdR4gtx20XXbZ3FQkLYgTCS0NlQ7tKyjrdweJWSmxNN12F6u5
txrXWTaYjxq8lP9ov5G/plv4a781PCt7Gg/bbcOf7NewRicS6PsnQSItUEdp
Ue+cuOn2Rb5a8zC5d1iXHjRZQq7ZfP7l9SPGLMYuxjDGMpientN7y9jb2ZSb
37D5E8n3QYNoyBlBm/V7rz1wG4/huRy9MnLa+8fqfjlhRLFaQQ5UeSs/3XlH
/EwxU3KuRxf6/piidn0rjoJFURsf+fmd1X4UQ0z2HKCf2zZjqcbBLO3MTda2
bnn+wqQBr1Xdhr/vVoNPbvCaJXgHsl3zz1PV9jDZ+cl8MVmnu9BxXfDb6f3k
5QPAvIB9AQODeR9MDNgYMDJgZcDMgJ0BQwOWBkwN2BowNmBtAl1vi15PLwrD
NULMCj0n9HL/7fmZxsqDurWVr4NKKylzgsTW2TW1niLHRTCr76Wwc253mPeK
x0wd9ZjVq5rKth1J1d6f3+8x+2CcygyWPmTD+qcyf5NHDOOuIEelc6lsYWQK
s+t7j10OSWYf9zxnOouz2ZPdX9mS2Hcsdv5lxucEs23jarFjyyzpoiUv5AjF
RSzdXVdUpz1l9MGgFxh6KNCE+7v/PgX1C2twuQZ94jOFnt8RShu0H0W/kAWa
6Z8jBOtVVun0yki567FF3D0xisZs9GXVv39l6cq/eCC3zf/KgbAPhFoYeKDE
zy9ZjmoUW3rSU6sPBI1ErU508m6tXxg8U+Eb73LmBLGYO5Wcc3Yr9PXe/CJv
fRzrgCq5vwXURM2i6hG/lr3leZNzx8bHAKHKviDW6RsqdW/WUvxm6Ssjro0W
sW2D6NQ/p7KF7x6yBq+s+PqSw/lLsZTXW7WOD720ll/XW8QTRrThZlZ3mMsm
HTbUYpH4s0op5adySXSv8F32HXKIhL3SoeMf+5JJMxJ/mR/AmMXYxRjGWAbX
DLYH9a0HtaoL5DmLqnZkxpn7mV3p+9oDt/EYnkt6XlGc2Nxe/DF7sLzyTUVy
JSNeflExSfz8Zq6USD9e6PVRitr1rTgKFkVtfOTnd7bm0TKa7LyA1V/6jNWe
YsYHbLfh86414MfdyvMpq26ySupg9titNXvY7xxlu6vTrrvD1CfuRchBY7fL
G7t+/u30fvLyAWBewL5gvgcLAyYGbAwYGbAyYGbAzoChAUsDpgZsDRgbsDaN
zUyUBAdDZZTdT/Fqemml7BNb5ZbtEGXw0ElKTgtnZY/zbnGix326q9o+lmVf
li9/2oSXMXbifWp35j3jO/KxBk7a+08z2/Pp/TvwyJtOfKeXEzfUa8+lZe21
Y68gx2LenjdZ0paX3sL49LVt+GqnLnz6kP7827HBfFi33vznsub89rmfrPOU
pWxxwCr6U6+rGPEwVjTQXSHo+yMyeoGhhwJNOGOTuL99PBfULyyoTCQZ3Kgs
lV/bUrZOh47R3645bc/EnfqbxNTZsWJl/H4xf1kTsTt7BL18ZiS7We8VS3v8
Lx4I+0CohYEHAhONvjD0xkMf6OxYL8rdNmq9MuAXNmrXBdHN47ucLscR/Q1V
aGzEURLZYmOh5/3zi7y8VY3y9tr1AH4Tp6Z/lbIcLeXa4/TFAKtRotGEbeJq
j0vi6PSL4vSWYDH8dJL8XU4la19oaE1Pzi73imI95xjxy9E9+a0mi3iK7Qqe
OH4RDzTvzEMi0tnmtqYsYaib2FL7pzhZ7rTos/K1bOuzjVyp9YosM/MgCeuD
fpmPwZjF2MUYxlhGbxf4ZjA+qHNhrwf5zsCfJrynxLUHbuMxPFdhjq9weXFG
BL5oK66Ps1J3tFsvJw8/J/pEmyvWK88Uen3conZ9K46CRVEbH/n5nc2LuEfb
+p9nY4yb8mXmw/jV9yN52i3Cm3q/Z6oVXdmdsV1JTSNfcezKUCF395Jb/tmd
pMz3Jha3oqRG9lN+O72fvHwAmBewL2BgsN8PJgZsDBgZsDJgZsDOgKEBSwOm
BmwNGBuwNntH7xVr7qwQdhdHiP29F4vvBs9FwLqmiuG0zgoPqKrMafJD9YF4
M7tdZbhzVhf+vMd0bm/kx++9W8TjGs7X3g/6NI23rDCTD7Gezccvn8Vj+uWO
uchZ3Dx71v8Zg/9/j8bLZvFO1abzO2Om8HHPp/HOVXy4i1jCr1oE8o0Bfvx1
rRG8/EcLHlHxAFtueIyeXeEjKtd9KVrfixarGzyTJ/6I0GrCQRe3/+iXf/t4
LqhfWHS7TtK01HtSlpEpce+bKPXq2EhTvYuPpsmfZ9Q3V/WXWz7rJLq5RAnP
jVtFFY9qxNTdWZsDYR/o3zwQmGj0haE3HvpA0EhMvTWaDbvWUusX5mNrqsA3
ftILfRF78CSpm1KV+vzYQ7Ldxxd6vYf8Ii9vhXow9kR/5K4L8Ns4f7+vJrit
nRx2c6188O1VedezD/KeNevlJ36DVJsevJM+B4+XnUb3EbOMRonp+3+SDaVm
sGrnynKe3T/3XPpyZ+v5XOenM/drlM7cD1dgbTosFv2NDBTNh3gRnPRKHm+1
meQ8eU6y944krx7v/OX6OcYsxi7GMMYy+tvR4wXOeXiPPQL1Luz5IO8523Sq
9sBtPIbnmnTbKRx7l1Rc9q0SOVdLyg+29JYNxu4XtTTGSsyA2ELvj1TUrm/F
UbAoauOjqPmd5Rd5+QAwL2BfwMCAhQETAzYGjAxYGTAzYGfA0IClAVMDtgaM
DVibCie/UOOGhuzqo+rM/1UF5jNI0IYzv5PoW7aSZ/YIWnWLK+s+NoMNnNue
r1ngyy+sCObjbEN503rLtffrpE/hc+Mn8OE9cufiXTN5rW2zeYv3s3m3ubP5
i/Kzi1z+k1/k5YPAIINFBpMMNhmMMlhlMMtgl8Ewg2UG0wy2uXpuDpRwZqS2
FvZvHmjtg3/1xkMfCBqJ0Iku65fOuvt0ZBvKTCPwjXdoMUP0brFR3vFoMZmb
tZ90mq1PUjNNf7v8P2/kpxdo52sqPW/0VYr41l/rZdpd/zy5oVOf3hnUh1ak
H4h+amOhemOspJm7Kh7frZUqD6tSo60y+3mjNb/pNYVzTy/ex74NJ7NuMp0t
gmJ9YDjZVtFNfC9KeZQRm1OOkTeehvTpgrWkxtymv8zH/Gr+8+XxTpF5Q0/p
N2GD8GWtZfdq3zXuvotFyui3wnj7WmGv3KN64edZsEVT3rvhMJ7zbCTfd4Dw
08/fsRGPO7N9S62JS+BisSNqtNjXc5kcb9CctN86mtRPXCUZXoxQ73QqLcWf
8JSsDB2lFeVLSHn9x+BRhj1qbZ3+47gC60sVtetbcRQsitr4KGp+Z/lFXj4A
zAvYFzAwYGHAxICNASMDVgbMDNgZMDRgacDUgK0BYwPWxjL9EUsa9JxZWL9h
HaR0Vn7mTRZrpWYDa+5nNi1Ps3JppbjlXM7djnnzbS1C+YOzG/mKOcHa+zS8
L3fs48hrejTjR4e05qtLtuV/pnfkP8t04rfdO/IK14pe/Su/yMsHoQcdvejo
SUcOhB519KqjZx05EHrY0cuOnnb0tmMfaG9uXgoeCEw0+sL+rQ8EjUSDyH95
ZcAvDJ6pLh992I3Zr2nN4HY08P0h0uaOFXnrzDTeR1rLxsdu/3b137yRn1/E
g59DpTVz7ImI3kCOPblL1MbGtGpnN9r60iIatKAyPfOxq3jS2k45FLBYGdV+
jDL02FW525dtrOu4JrzBq7G8dcYEbva1Fe/tomGhqpLU39BOWx9OXFpZueRs
KdrHPCAGsi1ld+PJiR9rfpmP+dX6Vw+ySMxIuyEu284TdjpW8qbFYzVjK1mK
+lFhwvtwG5GWEEjHuvmwjXPSmGe0Gb/d0YYvn2PJH6WW5amTE9mVj0vZdqk+
S122lfZYsYcsPzVfPmxQQhh1fiT3Xt9Inp5qRAacCyR2c5aTBi99/4f/GPam
UZ8Ho4g+jYKOp6J2fSuOgkVRGx9Fze8sv8g7P+Kaj2s/cgDkAsgJkBsgR0Cu
gJwBuQNyCG0ukZtTILdAjoFcAzkKchXkLMhdkMMgl0FOg9wGOQ5yHeQ8yH2Q
A+E+ciLkRsiRkCshZ0LuhBwKuRRyKuRWRY1/zi/y8kHQIIQWIXIgaBNCoxBa
hciBoF0IDUNoGSIHwj4QamHggW6fGEVDho1iAxP+P32grU9CtF4Z8AuDZyp8
46Pcy/J3vQ+xDq042/cxmAZema2ucsVY/PG8qsiaP+q34//zRn5+oY/6PFAF
zNwnxQ+oSMzb9Sdtru4kbQNq0jOzXOjZWp/J9TbNxe25NZSgtmMUp4Vc6bRq
Ial2MprpmLfkfgnj+eam43lO7+bcq+8BdrPZIsmwRxelb7fJysO6tRXzic3F
8IMZ5FwbRjf4pJLvvQ7+8nrqV/nnr3NNRAVbL7G1U+7f+ECixptUVjvXGinH
hyXJenf85LpGCknrcoR6vW7J/KuuYR5uSezmkrK8S1sL3sbWkre5WJlXWnmX
vWw3lc0K9qMHhzERpd4vpq70E21c98kldfzJDQc9OmZzaTq99Lf/4T+GnBO5
J3JQ5KIFHU9F7fpWHAWLojY+iprfWX6Rd38cNR/UflADQi0INSHUhlAjQq0I
NSPUjlBDQi0JNSXUllBjQq0JNSrUqlCzQu0KNSzUslDTQm0LNS7UulDzQu0L
91ELQ00MtTHUyFArQ80MtTPU0FBLQ00NtbWi1v+eX+Tlg+BBgRwI+0DwpoBH
BXIg7AOhFgYPC3hZwNMC3hbggcBE3/PYIsra1dHqA0Ej0TriXzwQ/MKa+IZr
feOdh/jylRO7ck/zcnxZ5nq2OOcM3Va2gnj54IBwC1opWr5Xfjv9h7yR93yi
5oLaC2owqMU03WzrKC/b77hB/dWxots6VZ+mIdK9PdtJ61sV6OocNTGKLytW
DskUWVOaKEez0sWHE7F0+N4bLFHi/Hvub2Vw7al8Wm0VrzftDPN5PIoO0TVR
3qc6K9t2lFYWRZqJ7HNXiWN1C+q34ii54zjzl+vpv9z/Ti3lW7P95fIb6snq
eW/U7x5FqsSWEqRb3bkk1MaWHNy/SA44NljsLTVbpLQfSeztOrO1pV6zig8c
eFCyOw8zGMwt6zTmjx1Os3oTb9E1GWGiWWoppf2j00Jv8Cu5yqdIkhlmTL32
Z5KGbof+h/8Yao6oPaIGiVpkQcdTUbu+FUfBoqiNj6Lmd5Zf/NX5DxhlsMpg
lsEug2EGywymGWwzGGewzmCecR8MNFhoMNFgo8FIg5UGMw02Agw1WGow1WCr
i5r+YUGjoDzQnVX95WmzYwV646EPNMe0PtGx+oN9Hv+NRa9z0uoBhZ4P4bfT
NvJBocFcXcmLR6xqzCP7RLOUCaH0WpUEMfprDaVG6afieEy5307/s6CR9/yC
UQarDGYZ7PIMp9dyhdQL4uMHA+XwbH9Rfl1F9j72Jcuo2pnPvjifb+joy2/e
dOE/B5TiJb4OYmKRmfSjxC5x5nqgGCzvksvdHEigkb64+zXJ2n6K+lf9wH5V
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
6qauaLhB7VSzrnqlyabYExV8jtWKTostN7J9nMvpjNhjbZ45lL5UzrGduauj
+6NFqqueVNJ03S592qRI59cslMzDN6hbB9WUTfQ2y4vbP5abPC8lkjLKCT2X
MsK5gY6AXxo8Q6CbbdO4YFqEf8Xxq3w1PCXhq33ixxqpxtymEvybEtcHqaDj
e93ms6qo8UJ5eY5s9/GSz489pG5KVRp78CTZIxmJVU9yxLpF9spDHUPlTj8r
qv8ukl3aUo+PKDOIGzQfztc3knjuVZ11PzGETZkxiq57OY+QV8Oof6f7VBnz
mXbZG0Or+upSvtxb/jmzsni/vIqYfP+EHDDqiQY5EPaBUAsDD/S7+YXlXU8g
R0GugpwFuQtyGOQyyGmQ2yDHQa6DnAe5D3Ig5ELIiZAbIUdCroScCbkTcijk
UsipkFv90+enoOu1uccPkxezfpDTRnVo86Gx5OVjHTHg7D3xdq+J8vjCPpHy
NJPOSEtms/a14Y/Tp2n9BOGpA115aKtCXwwaG+gzRa8FPBuxzwsPR3g55vd5
C9t8XxyFK4ra+Chs3zdv/zlyn8ivEtkyzI80vFKNJPQaJE863EGMGLtPuCbc
FHNaXBF6QetEYmh50aWthfRzzzlyyvgJmTsthKxtGSlNn+Wh8TwWpfk2SqXR
zI2LazzdII7cmK7u0/6aenWij/rNjC2qMaZjJaOoJGnHxDZk+ICdJMkrnVRb
UYLq/HGGPE0KkJZffij/nLxQrLA9JRxM0kWDLjnCw+edWG6TKuAVaz7+moBn
CHSzC+pH8avHr/bXw1d7g08qYXfjydMFa0nW3pEk0MyDwMMAOr5FjRfKy3NE
ttgoxUYcJfobqtB0OY4MmKMnZnV/LCofsFE0Vy2UP6L6CZt6lVnNFIW9nVuB
65ex4vEh9fhQMyO+sOo71umP+2xR5afsCM9iI7u/Z+US49neLB92I/xP2jOx
jaj27Y2Y+fijWLo7QpsD7VkdQFALAw8EJvp38wvLW09GjQq1KtSsULtCDQu1
LNS0UNtCjQu1LtS8UPtCDQy1MNTEUBtDjQy1MtTMUDtDDQ21NNTUUFv7p89P
Qev1m3aWoB+MatOGSU3pwzUnyPhaeuLstvviGDFRtu3fK6befk8vJNxjvRTG
/SZM0Xopw08QnjrQldc7EymgLwaNDfSZYp8XtW7wfuh5yO/zFrb5vjgKVxS1
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
ONJs9Bo2Pt6Mx1sP465kMbceE8QvxAbwESN9+Ozp03jT3HkKa7U3C2b9n3P0
dx3m2bl/j8hZPKbfLD5++Sw+xHo2b1lhJg/6NI0/7zFdW1O4l7uuxrUF952z
unC73GsK1tVzmvxQjetXVTl30llZ1cNGKbP5sYhcEiguPfUTiapIETMgVss8
gX0CAwUWCkwU2CgwUmClwEyBncI+BViq350Pys8f7KJ3lOp1b1kqX6U6qRR8
X/rzUqSmQpej8ldaSXisrCRcjXzkEx4lqWX7GMq7faa2B+7TpA1/0IS0NcRs
/Xi6ysSVdd72mpGM1nzDQHc+Yc9gvqeZLU92vci6ff5GNbljEHn4tr57Beqx
n3PPL3JM7LOh1vi7nU94MkB3HNqb0J96YfVdXpRyQYDFB4+Gmiz2JYNyc3OM
zwsrgvmDsxt5RItQbS0M4zU7N2c/IYIZarfg18Dwo48RWg4F9b/6pwM96uhV
R886etehn4EeUvRR9Nu1R6CefnDWfYZ1FeYW66Ve3PRpO15y61O2bGR5VvuU
r+gyRE8xsDwl4no+kk1ehBLn8PsksPRAEqq/Id/xUdjm++IoXFHUxkdh+755
8x/o+6DHHX1eY9rsEDFnX1DUvLDvg9xHSZ/O313txhuTUrxZv8nM9lZ5WvK1
ixg8opfY6+4rB5S2I6UeBpBNba3J3ZYdJD3/YM2lExGy0ZVy2uvVhe9zZNQd
sPbG9Sc1+S5Vb5pPx5qVpys8VtJvoZ3Ympc3WPdGNnzB45F8xtJFvG7vpdx9
oD+37bBAOz9hjYZ96qPr/v7850X52bzb3Nm8xfvZvNa22fzsrpl8eI+pfG78
BF4nfYr2GoKaAtbVuLbgPtbVqC2Ar0i4Npy631zjaKi+Tdx0j9GoYVWY3TMr
9m1sLaYaU5rNi7hHU2YE0pedZLJ0p5+8ijQUzTJ7CAsXLqYFVRQrrsTJ+qr+
skmJeM3YFmW0ejnoGT/r7CaBHUbOgNwBOQRyid+NX8nLA0GTENqE0CiEVqFW
s3B1gFbDEFqG0DSEtiE0DqF1OITpKnE9PZRpOQGKznKu1MjNgZrXTGHJD3vx
T15L+Bi3AJ7i0J+vj3rLMpbdpeujv4i15kyJXKCr4PxmPr5LRmyqQ7t+3EdW
ZXaVfrfziZwEuQlyFOQqFTffkO9lRYhhWVeFtZmHUF/eRCvez81tupbl30p0
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
+hZGvcQkdkr2nI0J6QwlfgtgXrdVIJ3bAGp5ydCtIgbKp40DXqcp1LPnzCbk
Bx22ZhrPXmcmtlq3Ft1OveAVtI7K8btU5U9l/StFSoFCZIyQ1tx5r5i4tET+
xjqHxJcOpxnLS2l/eSB7OOo1S0+RQZ3m8+HRhwhQTwuAwD3O8ORSEas9tD57
P3Aorxdawdd6ZvFqLoVSsE8ygZAnpFOvYWS3Y+hf9J9+tz+UrSo8UGP95/Jq
Tno0I3sedbUkNFfno7S4qJ4Y+HaKaNCxu7BMO0qCrLPZi3uOYFIcCGuTQ8H7
7WCI7FYN4jY2YykQwKd9qiWSPubwoVavVM4/yvy2jiFW0jQNDd4svTWfMZxL
TeM0qeejj3Ti9zHsy7BNrJr/CWY74grrZHGRXco+xGa1WsW2dfBk5W00mMXl
qfSO1JCYnxklnem+WPLZnqF4XyNU3n8NlzsM7Cgfemx1l4+tTsguuXmQVoVX
SNKxZcSyOK+Sb7HWx498h80QvsSsPuvep5CV1XaE9KGzof3xmZC8gEKr9Nus
Vdor6uW7nS+sqCMspl7lg2Lf/+V7+lf770835frQFo805H3WvJQHH2hOhs89
IW+apyN1d/kiBU0ZzAeahfAktQX8SavmvFtaX6naZGfy/lUu+fLuMtl2LJDE
r175j/lBVO39iXuKuLeIe4y41+ho90UanXybq/cwFl5Z6bxpahk1OFPAQsEJ
WkUtrDzwHK/hPWyDbbEP9lXer1S18f5T+7eN51dbVXxCR7o+c9C+WLuLo/nQ
Sm0H1LdCjU/UOT+7KkgOdZZkjrWoUBRc85e21L4sIb7la9/30jy/GKm4LFE6
7uLEvdNSuXlJPH/k342Mbu/EVrQsZD9mEchV+MIrjwRY1SsF8k3Ww+X+UTCi
YAjkM31oox/Ovk/aQ+L0v/JSvWZie+OXfOyKOirH71KVP5X1rxxfds1MdHsk
n5y1hlxznkG6fYyTvvqG8GyrDTzNf5lc120wiyhXh/kn+8LKWb7w9dAiUDfq
AXMtChlqiVi+DOKe+dXFxhmn+TXLIin/WBJxP/+YtJo8ihSUblI5PTBlqwoP
FD+uh9xy22bSzrw+nVNyiVxS1+Ifr73ngyfYiLzmxdx9TSbNO3OD3SzvBno7
FoHTqKWgc9QF0s6UsJnP67DrtSK4124d0XrkeW5R8Vzl/KOsb1QWYKt4YFZH
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
ka9GM9Z05+tYWzF/e5C40sNTmKmlkVozc1jdpX3Asn8ktJoUAz9ae0MrTTX4
kKXLguac5fe02ormrmU8791f+XR/tf/+dFOu/0te+1QqbHqWr9tcS+w8s4k/
DHxK67W8ws5bdYIbm8ZCctkoyDjaCnqt3M80Ix3otvO1hXarDmKt1kOePTlA
uqfbkWIMhPtAmAv7u3ggVXt//hf/qJa/fvV4VM2qwgchvuWBeusuaVOjKmu9
Dzr2ks8pyJeX6hmTUQMvy7+RFYrBH5Olgorv0tSm2nzst/XS0u8J5I5dGD05
VKIlmRto9aFadGhKgtxq8Qja+/hwdv39a3bktAN8jB8FEwKGQXxpG6jW+ALL
ufuVKiZ78duDn/GUgTu55vxz0ufAsMq6NMRmIz7pd+M7lK0qPqDIx4b8rpua
aLmni9D5XMpbD75K7/kXsRvN+oFubAiUbgiGyGxXGOR7ixnlhVOHUaYi4+BA
UX7DQJS4WVXqP2UfbE0dFx4ntxUBKoeHqsqU5xfWqGOtOtasY+366pOavEGN
Iv5xvYU4W/0ot7fSZh/DP7DzCR6gqRMK3CUYTiW6wKi8G0z2IpQ2UzQW47M8
RLchBuK1ger5R3k+DH1nLrdQDyedjpQTvjWVdO1SKnX9dIOXBJuIHm2v8nNJ
G2jR0GOs7UNrMNL2hNkFHvDttAVEpWxnN55b0qHva4h3A9qI1Ad5vGOjiZKH
qw0t7tqHxu18SN6UJsrdno2TOeWsIW+em9GVsjtk79qmPOaNvhhxwkM0etpY
aC8Jo0WDb7JmNVxhfmQweJFQGCQ84IHDB7YiqjrzUJP4gsFNhUP9F7xd0V/1
lH61//50U+Z/WnNMk582eMrnzzcTm+dkcOP4amy670tWc3VvaDM3GFbVDYPw
RcPBpH4tmHRoNKv7MVnRf1MOj+12iicf78/X3AmU5sVuVNyyf6AYVS9JUW6U
JJ/kXp3cP3RWHpFC5QYj1sqSMiu6SFG7u9hsaPsX/bAPJR9lI+4GkAnHP5Mv
SduJdcoXafKH23yHr7GI/ZbO338uo2H1HzF5lBOYf1wIz3UXgf5VJ7B68Yjp
nfhCd03YyVub1BfRQ29xrVvlEnhsIzz0E4kN9SNdlr2WbZiSfGTiyjrHjE39
j9UcYF6lvpl98D1ZkOdSMqb4Eyky3U5GeH2RWj67zc+HGIsg/f/iH2X708aj
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
3KOGe9VwzxruXfO7++d/LaTXq5WzPgrDsm9QvwMtWbjbHqqZnY+fTLtBFoQM
hqm5SyBrnB/czP0D5tmZwYdl74n1/RUkefIBrLTtgNCzIoGGZzdjPXK12LGh
Siz+wlLqd3ETHqkyg9z0TiGu8k9Ju9cPSUubo0R/pgU5tWnyv+ifP5froK+7
dyDfpDC0ebYs4mOCjw0+RvhY4WOGjx0+hvhY4mOKjy0+xvhY42OOjz0+BvlY
rFh9jA4boc5OVVymLyZkCGFvW6M5K52E9N0W9F5p63/0z7/4fvpvXw/31OHe
Otxjh3vtfPcKFSe8nYLG+WxG/dd2QuA0RXg2w5riNxJ6LKA5e5Wkz5DKkPrG
j3OnKLAJCgn0m9pnYcrLXml2e1oLBT2Nqbz7Rlo1ry+dtnMtrjm4mLQ0fkSC
R6tDtn13eGjUGcYYKIDbtSskzD+AOKzrQhzP78SuXeLRgbolQjfFN8IA/atC
h6JWwmLFPLHeva4oMOCAeKxDxyY/P/3d9B0NRUN+QPO0gHJvQ/2L81lnNxMm
d7gjfmecRT4mWENxySZYPycOYlvvggV9AmD0ZyswG6wIl/P2kYXLuxLx7N5Y
5P1ZOLRnOXW6Mpp2fbSlyfsjSYd0veyf1WfyZ1r+bMufcfmzbmP3R0P18yKv
5Yj37pLFNbkz8XPH/jiiXY6AuysySWd7divBkLGJ79H+zLNk2VUTCJm3FG5f
WAG3akfDAPk6MjVBh3QwU2JFr+PY8axU9mW2P0tRzpdUrk4i5i+NYfjYRWCy
zx08RBaQ4FRIKnI/4RE1/z8fRvZ4QJcO/Shwj2LuVcw9i7l38e/un/+1kF6v
Xo+oFear5dL44+3YhSFHaM6QD7i66jFJKxoKPrmeMEZ9DQzJGgfP7sgBkjiS
RRsXixyGnqEvc4/TVSlADZYdEWK67hGOF94SQha7C/qVO5GeixcOccrEe7dV
YCXVclzzWII7u07CVlsX/Uv+e/wdA/Gs2EPisGPbxUfTlOv3RPneKN8j5Xul
fM+U753yPVS+l8r3VPneKt9j5XutfM+V773yPVi+F/vt0nF6VFuTLb9yj3qa
vxFYz83IvjoGlbwvTKuWV/4n//0X30//7evhnjrcW4d77HCvnUXGXcUXPL6I
OxzTQz9QrjjmxmfJJveXQkHeJPrBbwc9PZZRK3K3vvHj4X1j6KQnnem3TUlp
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
vKPmWv4Y1uKdIiO5K6+24LEkEhvGmuJvN7XRub2HxB5echxgIOgDtXS9i+Tn
FTTKoFUGzTJol0HDDFpm0DSDthk0zqB1Bs0zaJ9BAw1aaNBEgzYaNNKglQbN
NGin//Q8sE6q5o1+XOBJmuFeJ/xgqc/pLlZgzr3nsT5LY9mNj1nsTWju98Ke
zG4J2zIp2964e39VYrDDgzzpfpFc0pOmldJdaRsVU3rT04SazNOmPVcVEg+h
O2lj6ItHR2LWJTWeeWtuZp6LY/46f7PmPv4/fUnmtUu9fs11lD3Hcqress86
XmxWwFkcbH2MdEGd6ZKkGfTwhQB63njP/4p/Lrb1OG/k3iqNC/dJS9U2S7uv
rywsTvRHR3NkcKuLyahsrQybPryIqTl15UerXmQxUSX49Y2n5PDoIfTz7fX0
KdlAt+ywp/JexeRR/Gc8tuAEy2inw8tp5jPlJ1+5gH3n0S6EcKaGAM/sdxrB
fDvMeIHOedboeAZ8F/R8APdcMVnZ+IDn8Br8rN/II8xyrAw/PjGYfbwjwxXu
H8u1cjnOuog1+HPOqc2ej/W79SwwEwyzwTAjDLPCMLMPs/swww+z/DDTD7P9
MOMPs/4w8w+z/+ABAF4AsYlJbMKgDvyQ7bnMyOj3+6386vfrclEcmtrzKwrz
8EXybzWEv1o/87vzOka86ivsna2Ndn7HPvZLvwh7HjXlgpK7scroQBYoc5zt
8j/C3OYtZzMcb3CZm6RRm7nvUUyaNp7bQRkP9slCtZ5bUdhsffS6e4pQp7ag
2edjf+QPtni3PHkxu5oYvh5P2w33pdVu3lRr/TDa4eZ9sq7MC9fN78gXFw7n
3TdK8V4H4jjaxxr3HboEuw+Ux6nn7wq11gwVAwa6PvEf8UMT2xY/3yv5eYUZ
dZhVh5l1mF2HGXaYZYeZdphthxl3mHWHmXeYfYcZeJiFh5l4mI2HGXmYlYeZ
eZid/9PzwMCPCzxJ69cECSGb5lr+BHGIdX8u4kE4d6LiDld4roZbohbP1awS
iHUa9glLU/pz3Sd3ZcfW6jLtbgb4ZvoCorqpjrSXtaLL7s+jRZtm0Fu1xrRN
9RUyJScX+8tFss/58nxXs3QWePv5X+dv1tzH/6cv2MNgL4M9Dfa2xX3KOJmQ
VDbb/h3TrvBmoVqp+PO+BGK3TJfSe7Opw4kg6jA26o/FP1+KjrD3OXK849Io
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
rPYXueftBqPez04L96wfw30wd+BKTSPRg6TduLhOl+Tc3kbe2jwhDy93pMIM
TEUnhtERnS1onU9rOkH/ANHQuobzDpmw8nEidmH8dqZ1MZEbFroY+R44jk7L
GCLs5iaQvL7QU4feOvTYodcOPXfovUMPHnrx0JOH3jz06KFXDz176N1DDx96
+dDTh94+9Pih13979QgL0Ic8ORYkTvGxE4NvI3gXwfw+zLCBjhu0TMDnQU+r
vWEkG2ikTtTW3SNm1X0o6TuZZmusol02rqBxnSfSr7wxLd9URTZ08CLe7bc3
O/8lqd+w6jbZEvLHIIMjfLY+yl83h9tb1pM5DrZg2wdVia/Mj8PFb2aT8HHX
GjFQTLUxlS23oVUxw+kZnaG09wArqnltAL17oyvd5CpDtRxExG/daPJg6Ch8
6TsGgj4QcGGgBwJNNMyFwWw8+AOBR2JLywuTfH/EK50FI9St0AONTHTpUOC/
6lOtTAdy8vhrcmOODfVycaVmbV2otUV/mnP4FFEWPULBo/vyn2Kc+N3H2/Ks
sgezO1eIWnHGmDy+ji7Wh7b4PLAfrT8d/0jmL2iOr208/n/Wa/PDrp1gj/M/
474Li0lp4BDqOX8NXXlvBa3YY06rv50hTrs9UNFAys/0XMgXbe3Ih4pM2HFR
BeqmJGzMo9wadOSX+3f9betPwz9dpwWK9864Jt7Yf5D4/CeP1J/Nr3x1P0G0
qUxRHNc5WiSX1CvNsPXdRv74luwTtNUoDG2a8ZxzirvM/F4q8mtYEFtvpkQW
hxUTUb01tTznSmVHLaKni/pSuyVHSLlxB/HKelt+buZ0vkYgx389PpNr238l
Pt5qJ7bp2hvfeKLxrzwi0/guwn+0fFBITg1KrDiIrslXc4vn32MJFeq83OVj
7HpwJe4/IY8o7ic0d9EK6rN0Bf2HJzTzVh5Z+egdjj2ewM4jLf5KbD5b0kWO
PQ29iAzum+DqNrp47xEpLIn3Jh62EylUDULbNZ6iJVX7EXjggBcO6OvAG6el
14em1je8L5FxnVT5ActPMou47VznracFfuOk2aF9AcxZbRBzcfDFR1LdCXtb
SOR2aNPIMSZ0WFh/ynboUv0qKbo06iJR8fEiS907kPHhHrhr7lkhN/IMZ+DL
cWNOqHDRX+8K5WLV0AJbV+Foe+k0yesLmkrQVoLGErSWoLkE7SVoMEGLCZpM
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
ZnF4PVvWZC3Te9WfOW67Low3PEDmqQ2XFh12l6ZktpH+1Pr78S6lHar6OT9b
b6u021+S/tW0Fy3leNYL3mQS08/f7u/h1krHS/34AKdAbmFbl2d05vTT/O3C
aFkltsGhIYuNsmDj738VYs9uFkbeCKJdGk3k/dtc4KGH1/OCm/vKnL7VPx2/
ev6jii8YmfjqNHIgzAPFW9oqatQ7JEMOhHkg1ML63GqqvOe5QxkyZbjS0m6G
OOFgL+73Qcnjllzgr6zGKt8MHSOYH9BiD9sNK8b/TKu2kvE9dsxyfZLQY14+
FfpGcg8DM+mJ8IRfNlPjoemhZIppEdn8xI24zX0pUw+YagOf3lrGMbIRU97J
pix1lj9V+JDZEUVEZnyEFC4pEKu2esRrLTaRHj4J549P5tIpNxKFqd16sEnr
FrOW35bVrAercSlRaLQ/l9Z8HM5bK02kfVMSuJZGkTgxhJNakj19PWAgNdO+
TmY4V+MO1T/yFnFtJc/MFP7QT6Jb9z8Qdsm6s97KJcx3yHK2dp89G3HkvXDz
oYFQO9+Lh/6hK1UfGMerfHwjJsTsIv3ikkjL6eNJ4sc9pY4fKG3/i1kpdURT
q23802QNifND/HNqJs0Y9kSYOKormyzNZ5caL2AZ07ux4a+fCdmOebSjwXG+
WtZQYqMqS4NCFvDp/euLPPCWPHtOviz6Rp7CbnZLOeZ9kPvoOC+URVg1Urw6
O1MxwPBZTMCMgFNlHf9W3uJXw8Oojk93Wn+SRRp7kYRj6hT+cn5fNTidlcL7
JltIJ0ec5mPHawsfM7OFodkOLNB2NRvh6cEG5tqzccIDwXvsGlrnVV1J1Boq
OfjUkN73/fvxLqUdqvo5P1tvq7TbX5L+FZ7xXd3mE/0PqcR1/UFSq/ldka4+
yxuP0pa2ftzJPRUvaeNaNwTZifbsUnMn1tTYiT1Y3p7lTr0u1O2VSK98/YPv
8dWVFlS+yEN3vCxz+lb/dPzq+Y9qlIQHur7jurz1qiKyP3witagio7uG+In1
vNL47EIq2VYylPo8GEPHHD4ntLrQhdU+O7cY/8OsbFkLlii4N8+lL63Dufoi
Y2nmgQd8gWtuiXiOH/3+fAvDeZ8uJtITZTwPk+WJVvuPkTUBHenu7Vb0StwR
ghwGuQxyGuQ2yHGQ6yDnQe6DHAi5EHIi5EbIkZArIWdC7tT9q0hayKrT/c67
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
X01i87TlD5tGxRxf+0zReMJaZXD3SmLLiIFi9RnbxRD/y2LcwQ/i+8OVuFeW
On81U60YP2g656sYYKLFtc5U4YNtNfm5oJciePHghgEf3XB6Jbn/sRny2nrW
8i3hv8usPAJluvpzyaUGOUT71qG/Hb84MG/GaehSw5sD/mRoE9qGNqKtaDPa
jj6gL/AIgk4+tGKhlxZokCPqmKYXL1jHNuzDMTi2pP7jM/HZaAPa8n976v73
qOj6LyWF6nj0o+NDWfc/Kykq2vumovWnrIUqfnCPXbZsWIYkP+ebL5+3zFt+
YI6kNHI/Kp5IbsSvHJzOG7j58okHgvh/e/2K9vup6gXoq2vxNk4vuOPQ2tKH
RpF888Y8ejQiSdhN7dmYzx5sseEGtqbPCtbgpcCOKTOE0NarhPyZb+nVy/2p
Vo2LxHu+Ghkx/55y2sthYva1Z8rlByR5rZk65EO7pfKnlVvZXJ5kKk94vYl0
1NalEZknCebkMTePOXrM1RfP2U//LGAOH3P5mNPH3D7m+DHXjzl/zP2jBoBa
gIVOLtkd3ZWm5b4gHnuPynUPjVKctGlLlr2PJ+N0d5c5P7AfvX8MRkdw31hT
iZ5+ykMOq3PZm9MkMMaYblh1jrRxuyy/deCScnDIOdHRVcYnTPbmx0eE8KLd
sTy/5R2+KSaed1zyiOvIH3LwRzfWesA3fnrK9aPe8a9rM/nq16/5JoP/0QYy
jzLh4IjFGCXKDfX7kbFn6pJZJ3vJx/sqY/a86kXii1LI29H7/3b+arEudeQj
BfzJ4NGKNqFtaCPaijaj7egD+gKfxN6eWcUa+9CMzWh1j0cU3SxesI5t2Idj
cGxJ/cdn4rPRBrTl//bU/e9R0fVfSgrV8ehHx4ey7n9WUlS0901F609ZC1X8
YLzXWHnz521I2kgnEvstB3oxvY1YT9mAD2D+fHbYfb5im7o0eryB9N9ev6L9
fqp6AY1baPOa+5/yUzWNpBC7w/zJ8lQ6KuChAM/ToIae7IW+P7tew49lbVrO
Iu/YMs3tVZjnx2PCykO2Ahu3nSpXdlZG1azPe5+ow1nnqeLb7Zbk6pml5PTg
V/KDM9fZuK60lGcabycrJujRY0olASYT2ExgNIHVBGYT2M1iDOe09cWYTmA7
gfEE1hOYT2A/gQEFFjQwTIsGhztQf+dP5FPEefnB9xMUl4x7kk0PMsir3NAy
5wf2o/dPvG8E1wwzk/xtX/DZ03V4I89LJDWyNd2VXEB84xqTaveZGHuwM/d0
DeMpmh/57VMGUryOuWTSup40Lt9M2un97XdNqynldKspmR2pJVXZWkfSkxpL
BXVaSAH9LCRoQ+9odpFDIwg8+XYr6pKBrhtJ8IfRpMjFRx7QfL/iWD1Lcvnt
M7JJ2PO365fBmwP+ZPBobT/VTok2oW1oI9qKNqPt6AP6Aq9o+CW2lzeRoJs/
sVUtadvGGsUL1rEN+3AMji2p//hMfDbagLb83566/z0quv5LSaE6Hv3o+FDW
/c9Kior2vqlo/SlroYofzGzVUn5vkyZBDjQ8Q5K7d9IUJ6fnikl9JvPHDQ/w
OS2u8tThz3/Z+R9VvYA3zQpFj6dxfHwlTel0ty3c3/ombRkoCU56lsxh+kJm
t9SPxa/czWbd3sp22bkxrW192TaPaiz3yi7BwPkS9ZhvwFuFHOVHF/ty0/Fn
RJ/0tWRQXByZHdmTzLjlLXt4vI48LW4DcaqvRWeeOE7AyQU3FxxdcHXB2QV3
FxxecHnB6QW3FxxfcH3B+QX3FxxgcIGbjXlOTlRrTRu3PEdOGbrLlRNNZEdX
OZN3B74So/uRZc4P7Efvn7kTI3ilJFNpVvtn/HpfDW7UWEmm/VaH3qx0myQ+
eyffdzhfOUF6L8aEOPKkqbu4z/5o7rfvDD/SQOSrA49z6McLOw7xmNmHuH3/
EF676DjvHcr5LZdYPqlvDF9VM5BDI7rPuGzR/X2R0lA6ITcLb0TOLSyQO1s1
kJO77l3eNhhMNq16S7Y92/e369evftooBh6ta4NbKINfvlSgTWgb2oi2os1o
O/qAvrToH8PhGQ3fRHgHXbUM4Vt1DxUvWMc27MMxOLak/uMz8dloA9ryf3vq
/veo6PovJYXqePSj40NZ9z8rKSra+6ai9aeshSp+sPD2SBlyoAdeY+WohTVS
tFCuGGgu0pp+4qQGd8S9cWp8ci/9Xzb/UdULqBF4V0z4uI9P+Hibt6w9icsj
/6DWAX6Ck34VlhffhzX2d2OFy/2ZQaMA1uuAH+ufO5/p9W3FLJTHhXeTtlJn
m+vcYGQdqdL4l3zApmr8YZ1LZJG6Md03bS/JPm0jd+EbZK8fjibayc/IC2l7
qfsbXfhjqtzUy4dcdUojZr47/3L95fsSaLc1l4VphpZsXYMJ7HbGb+z1A8Is
V2QIso19hYfT+5K6+m781K1xXOy/QOx4vD95unIFsXgQLm9hPVfhPyJJZr2s
mVzXP0TWOcDcJnBGwKmpmw1iTMxXxVQZ0iBGPWCqTa9CB1kt4xjZiCnvihes
Yxv2dfJ4InMfvpw4peaRFPPDBB6u8HKFpyu8XUu6fz4HhPOgACPp6bI7fOyc
12L7Zj7EsNcesuzAeVlBcqzyyQFrAp3nsJg9FH5frz3VhTYGVYq9k+Ef2Mo/
k444llq8YB3bsA/H4Ficg3NxDVwrukmR0m7EVPHKkvai9+RJyjsJG+WJVvvI
eBMd+rxTBOmTqsbrWT3n0x7Vkep8y6XqGX2ls3xTBG7Vh7Ws7so21nFlmxf3
YfqT3gjmaWpCp2mRPHVhbYnteMpttNT4e/NQMmTRV3JopXvx+7gkfZbK375D
yyd5sjb358h1zljI0Sa0DW1EW392//GZ+Gy0AW352c9nRRtvSopfzf+spCht
vTTk0MilkVMjt/7Zeki/ej7/d0dJ/JCr8zNlz+Oey09fH0g6nN1KBnQ6RXZN
uUr+2+tXtPFIVS8gep6f+GCLA0+b4cpXNNDi78M60TNZrQSSGCLM89RlLlE9
2NbfV7L8g35smPVWdjLalUXctWazhx0TJmy/Sbp0aC11ihol6V0xkk7etuJ9
PfKI2L4rffboMZn6NkDe4VBLhVNutnxt9DYSaz+i1P2N9CQd4q4MIRPa3iLb
1v72l+tvebGOPum1Smi8NlmoN7c2G7G/NVt+pyk7M1aPzfW9Lxgo/ISksZ2F
58MuUeGwGe17eLvibMI+cf30/eLuvp+U8m1n5AvnVSMWfL387K5CG43wpjGH
6+5WrEjVVr6+F6LAe9Hx5Qt5QJeeZO/FJcUL1rEN+6pd0pD5Xx1NKr9NJY0P
7SePtPNFuc5DntnXRGpdueT7p/+0ME5W1JCqbuFc6+NRccz9InmXbSZiuI8h
3+rySITOM7wu2FI/AZ6nXqfThZeHC4RKq3OEvCMpwo2WT4T91x8UL1jHNuzD
MTgW5+BcXAPX8vB6I+6THPjaww25GR0obu/akexUfiLa3RvT5sM4iVmjww+a
vefVpMaSTwPO/7DWEgaHfhTmXBjGQjd7MfsCLyZvMJJdjCgQIgcaCxmbAnlw
iqlElj/j1V+rcddroWRblcLiekzP5Msl6rMgj8R3eW/ZGDJnqiFBm9A2tBFt
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
+Sxhe7YzNqbyVaHhuNl0+FljScelpzTlVQFvYh0srqlpR699cafKVzb0aew1
cqvuLjLpzibifGsZCej8Xt6qo5H43OaLGO4/hHc678bP/b6Kh7j05uYpyWL7
d4XKG4Xpco8DN8mJC6a02blTZL5YmTfQfcrd/U2lVQPLPv99/53W8t8CDss3
he+Uhyp05SerdFVOrt1OnKi5SvTbbiROLhpGZm3oRluZHqCzesVS1Lzsb7Sm
Dd4aiQ5RDnzDBl/u5+jGI5rU5Xf3txHXDs+Uzx3Zh5zfr0348mol6rOUN/67
Kv4B/hnQkLaaalesX/S9eLFrqblirGE8z9lqLLVqGM5738qh2YaJQvB9WzZz
w2JmvncJO/7WjvWUvxXWpFYXwgev5qkLtaXF/peK75cjw3aSzJOJZHjvsWTP
x8Ay54f1b73kP6O86yH9W8+sWFHR8h/V8RkahdAqhGYhtAuhYQgtQ2gaQtsQ
GofQOoTmIbQPoYEILURoIkIbERqJ0EqEZiK0E6GhCC1FaCpCWxGah9A+hAYi
tBBLGw/XfuEBclw3j7RLdCdFCwzk8CyFdyk8TOFl+rZFiqhYeZFrvNWUEgrd
uYGBvjA6P1kwTe7BpC1LmNOeFaz3oEHMY6c6e3ZghJDr+y4m4Y9TfP2rSK6V
25W/n3RITF+3VUxa80o8qq5Z/E4JironjvI6JV79rWXx+/9Oz440rd02+ubh
afrb+Wj6JmgjfbilEU0+3ZHEhZ1X6n3Qltc7e4RM8fElFt1TxXq97vK4msbS
idMl4587T4rgm96aSlcHPuNkvgY32KUkUe3q0sXkT3L9W271s/X/+s3NVgzK
nqFsZTFS2XHNOQVyFuQuyGGQyxz0byMu0q7LrZkbv7/Elw9Od+D2tc3Ej5Gt
qO3lQ1RUxtKmZw/S+sN70UH95pOB/hnKwKQpom9CQzHH1Uqp6henik8pb/qH
qu9zeIjBR+Ori0/x9by+5VSmdKBIMqJE36bJxQvWsQ37apH18mXa+8mRyrp0
9tIIkjqvSMx1eMyv7zGVPKpH8pVz8umKYUnCwuE9mWPLJeziIRe2uXI3pudy
X1g1itNCnRSu+7KNpOGZxZcOrMrb9VWS7rl61L7BTmKRZVXm/LD+xcv+Z5R3
PaR/8ewVKypa/qM6Pw+PCnhVwLMC3hXwsICXBTwt4G0Bjwt4XcDzAt4X8MCA
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
D9dO4FOHBtB2Tf2EhOpV2P2cPmzLKjfW3NmfZV4JYLSxP2vSdRV79FhgN2Sp
QnbvkcKty/PpzvUpJJsH0MuHPtEazpfolMSdyscGN3hGWmBxe28sfCMscR/A
3hr/j/6fNR3CJh3NEPTOqAtt1kZz514G0qt9wbyrh504xauGmLZrG5+9SEsy
ql5y/gONRGglQjMR2on1Y/eRAKd3xHzKKHL5jbbs/rfxYP63/0RVv/3Xuvit
v8AHgiMB3suhyWFkdvx+cu9hUPGCdWzDPhyDY3EOzsU1cC3cA/COgYcMsCJS
3XSbpIkuMixYh2YhtAuhYQhsxZpqeWIzj/t8XKOaUtG5zXziNVOhpcMnIevo
ULa1xWqW8dSDqdv3Z1P6vxSKXK7TacpM/mRAZ+mkhZp0ZIkhj5l+iVgKxtTg
0F4SmmnzF3yKKj5k2zAzRdSANMWQFDPl4rrBinXz02XPEl7JA1yGk9SO28mz
SyeIxrqzZIrbWdLNUEEsHp0g6+YeJQtvRRIn7RNkh7+SJIZeIjnPrhH6eyyZ
8PggGbfLmXiNLpKvttWSt9ghKvaKrZSV3qsrqxo1V5z51ufl6u1lgvUpm9np
rUrEC6u+v5BTYV4JtTWP90XKpwesCXhm4NpDbwgL1rEN+zplnlOudWkib/jh
KGk51p8Mrpsp3t7zgHsEmUizP0bwwg35tMflJKFJgh3La7+SDVjsxoQpQ5n7
Wk1md3WkUNC5nk2l1iH8YcONfMGTYNH9tzFkrMcW8jAyXh690KnYDwia+NCF
hTba3zHGfE9U9PG2pCjv+OHyjt/+N/4zKvrzqDpfjzlyzJVjzhxz5yuWduCL
k8ylTi9mSV/r2UtRU/Xlwd1DBdNr7Vibuc5s2YIF7PaDHuz3Z68FT8OqQorL
Rr67ZxXJUP8KJ/2TxWWbtpPLb5+R7efHkjvXQmSB7npy44GepLlXAXG4Xfrf
p+r8a4MEX3HMpX78cNB8Llv1WbSd1IauymkumJiHCq+/6LK+Oj3Y2FMr2DVx
K8v4lgNFjN3KNk1fytY3J8yvmQbr6honJG25LPjVSRa2bU8XtHXOCysO2Qrv
/C7aOCtG8SVqCcXt9dwwmA33WMv29l5f7P8w17JIaJlcRUiPlfiBgWZSn0ZR
vK7RRLHQq1Dp128LDw3QlL4+PlJif+GRAa8MeGbAO+PZ73vIqS9JpGljO7KA
aMZofXvPYj4Y/UXOh3EH/NAATR0K3svj7GxCK6UVL1jHNuzDMTgW5+BcXAPX
wtiCewEYEeQhePcfanW6eME6PCvgXQFMBbwsMsYXiGc+P+KNbWpJhvvX8iXy
VkK+rRbbt9mJHfVfz3SmrmWmvw9ihq4PhKpnCCUbZFLs9NnSi1kWUua8Lvxo
o89kcLPutPrTp6Tp4z/+gk9RxYfsqzlOsaRBY+XMYX2VDffEK9YlmcmvURMS
b72FFPZLINOiq9C5TyyozhUranNQRkd0EOhJTumLKnI6MlpG3xp2o8+q96Nq
LYbQnTr2NGV7K9r0zxzCTTzJ4Dfr5JXq2So7hx9T1ljurbRLDle8/Jb3oe+T
fajsyotjJeY/qvULzCvVizIpxhf1HZctgmcGrj30hqC5iAXr2IZ9nbOSxOEv
9XijN0uV99sJJDLyjjjQ6Dofb20kGS2L4MlL82nrqS+FESftmWsdT9YleT3b
nr2M2f5OWIOAt8LOPc5CxOFY2pmq0es8SS4rvKT0PO0pbr/lL1ZaoyXCC7Fo
V1Pi7RIqhy7s3zHGfE9U9PG2pCjv/PHyzt//N/4zKvrzqIrXBEYSWElgJoGd
zD/bjO/9XFM6IBsjtc9pKx29l0OOuZ4W+lh3YqcPzGU6aovZvQm92SbvNKHf
pdqC2uvfuJaumsRqcv614JHoLG0ik8Nvkz2vepHCBr/LYodayJcVeZGGzoVk
mG5wqX+fqu+fGvFVRGOHreL2qwvEcwn7lZstHsl7XqhN87al0F7r3QT1cR+E
kFxZcQ6EeSA6czdTS/dlPtMWs6PGg1kNDcY63bJjJGA4CxnrwIYMaM3Mll8T
8ma+pZsmRIitXh2mzftfLm6v31tP1uDsWrZylGOx/6dbEx0hWEPBF7Y1khbY
RPCvMxzESq+1xdNFW/nealqSbW7J+Q88UuGVCs9UeKduSdpPOrz/QFIDnEj0
nyNlmGtAf5HzYd4L/70w/hwt9CGyb+/01jWXkQbZC4oXrGMb9uEYHItzcC6u
gWvhfxXGFtwT8JLBvAfe/ViwDs9SYCngYQov09ArlbhZ9yTeyK+u5LV8P1/4
1UzYrV2JCVsd2YHua1nh2dVsjXdvtnj+JWFP47Vk4F4H6fk2V2n5l5bSuoDu
PLmnBj3fcyCN0cgiZmtP/WV8U8WHOOXdjJHfXahQirMVUui1mLsfDGU7braX
V7rwUN7ga2+SHBBEqka9JiubmNArwzvQSqNsae0oOxqwsBuN2kTo5QeMhnXu
Qyt3GkxN3/cu9fxHNf9GbQ34ou3NLhbzzEJj9lBhqV+xXiN0p7FgHduwL15n
NO/aey/XStbnex90k0dd2itWqXKSD/CvKtnXPsTNe3+gNzQShAWyHkx3kidT
i97Ktp33ZUMVLuzPZMKO1KjMttQLEgI+mwvXhzelnjM+iltmzuQ6o3vym1vW
ifCBhhci/ICgif93jDHfExV9vC0pyrseUnnXb/w3/jMq+vOoytcFRxZcWXBm
wZ3VbV6Vpz7O5FGsjbSzzWs+3ECkmaPvCc1JV3a3owurc30JMznQi52Y8E7Q
21FDsOy4hneqpSMdrnOZ2017LV7R2klWdUski245EiuPQJnme0O5v+tq4tj4
C7mQVPrfp2r94YXZEMWbeVny2pP2EsdFs0hVv2BR12sRF4Yv57cyV5M52T2L
cyDMA6EWNtXBj33ot4UNWrmWDau5kolTlrB1Rp5sEPdhLdevYdLR0exxkRZ7
3by7ULRHT36s1zI63yJc6HulQ3Fbbfe4M9NHg1mTxemCeZqaED8gko9+XFWS
P9/Dfbd0FNutriv2erCDz9HVlrZYlVz/cq8eweM8TaQWyQ/52FGfxa+ND5M/
m+WT37utIN3nvijuL3I+vHdR+8P8M/6DBX4bh6B3MjMoVXYtMbl4wTq2Fe/7
dgyOxTk4F9fAteAZg7wDHjLwkpmT3qoL3vtYsA4MxaGV7mTIoq/kvXkoOeSu
xv1DnvMuS+pKE8yP80vZlYXJL1OFNe/6sX63XJlug5XM9UN3dtPypnCi2jKa
cclMCt41QFp1pJqkdrsBbzXsEbnq0oweqSsS5YQVf5nfVsWHxFZ3PaXboKGN
m+N9my9t/rAxevI4ZvyjPxRtJwUqTpNTNlYuy+Rat41Jh4SlZEfYYbLn1lny
Wv0y2Zt/hlQ9foqkLDpNgrViSdHSODK/XunXv1Trr7FBL0Vfg//hprnWDOTQ
G4LmInSn4b2BBevYhn39a+zi12tm8vwj7vzx+wtKTb8+onbiZl61URqPPubL
Naffol19zwgfQyzZw7ML2Vvqx/SCdrF77baw/8fedwBVkW3RkqNgAJFgAkXF
hJFw+wSVJCpGTJjBCJhBggkJgoigKGJERVRQBBMSbp82YQAMCCIIqKgYEAMC
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
Y5u1jYRE8wwG3xTwbQHfGPCtAd8c8O0B3yDwLQLfJPBtAt8o8K0C3yzw7QLf
MPAt09jxz7/59P5ojQ0PJY3Hu9n9oyhZJxgVH5fHua2Po8gGBYYXPGVDHxsK
p8ensSnTlEntmxriWDOGxlgF0fGBAXTEO3s6ldwmIVPWYoPy1gKv5CiMWd9M
eDH01+er/LeZdD4aNCtAuwI0LEDLAjQtQNsCNC5A6wI0L0D7AvhOQAsDNDEA
/wMaGaCVAZoZoJ0BGhqgpdHY+L2l8w0H3EMt00aVc9lnfFFFtCm6WBXIf1zs
wobTKNbKLI8vmXUXj/KIIZNGydOHT43oTAdDKuNdTyzyNxLNmzFY58k01nfg
Bda9Zxj7GBXL9y32RauMW2HlK73xnDVnGx2fxfeuB7yHRweMEe9N2SwOjTcR
dy9YJKnFBo4Y4MmDBdZhG+ybEGedofTGDG3Quo/c3+xBWza85Y1aF7I+TVsJ
lTXfxj9T+/nQwmm29JX6MzLgvAKp/HCZicwGCC8WGQpl0YtZgqMPbr8Lkd1+
O0jqwmskOO01eXToE5ENekveJzwlV7eUkl6OxcQ//i5pfqmMgO8fWUISy0j+
9VICOchjX98hr0ZXkCPWn8jRQlla51hLujdcJOofPUmqRjSOZiuY/iNF4eyJ
tyzffgGbPfmsuLcT5icpbmEP7F6xN7Z2TBxuSez9VGm5z2wauSuC6rqH06i3
0+haWRm63LkJcX98UYKVGXbgPQsIbsoqpp9FyRZN8frZm9F5RzVuyZBh6SOT
70iuOcSdX2YM5U5s6oj6DpyEpvvVcj61Gvy7YsYrn+/IAo/vYl3vNBd8nWYI
oSPXCHLrTYWA4XNw3NQckqVJqP0FD1oY7kHj/TGdo5lN5otnYPudPYSPm5YL
b5TGCrlITtj7xpedffqEb+ccxD95c1c8984Vrob2R1cmqSKF2m7f/L5yyh6L
2td4ICz7Ct0q2oPEDa/5sZW5bJh7C2HA+nhmtPg1jlYvJouuY6qYu4AeS3Cj
O6/1oy9szpA9SvPw9Z2agsIuKnxeLCd0aNOSVegVI3c5Z8wfmY615G+jzKym
7Jnwlqlc6Cqsvn6BQU4ZcsuQY4ZcM+ScIfcMOWjIRUNOGnLTkKOGXDXkrCF3
DTlsyGU39vr333oKf7TGhoeSxuMtXHZd5P5wDYqulMVrJh9DNX0UWVW3Z2z0
yfbCdVE8c5jchjTRU6AXX8+ghofC6HLjdVSj3IFO3nqVTNOKQ0tkxgnLDvkL
c970EPKUfn29kn+bSeejQbMUtEtBwxS0TEHTFLRNQeMUtE5B8xT4TkADFbRQ
QRMVtFFBIxW0UkEzFbRTQUMVtFQbm76b9O/7rlw3y5e9fDltdxW0Ik7g2pNm
/MzX73ilLUbs7Tt3vqa7G+52xoQUfggjq1WSibLzUUIHhhCrNAOSmNkVP2FV
/LaXo1jQCR12+WxPXilXB6mfeoIWlxpihdCzjY7P4nvXA+Yi4H0sp6grfrAz
KQPqooEbBvjxgCMYFliHbbCvySUFUVS2E5KrqEQdD+5Hd5Q/8JxKEXsztJXQ
Xe7b/FfFJB9afcyOGnV9SYxj1ck4hxL2fMNUobZqsBDRPY6tmp+B16luJzue
yNPV8n3p9GGj6OfUSdRz8ji6yWoI9dw6gCrvIbRn8EAaRK0l3AE/skDdHWDP
d359h8B39Hj3obT3dCfqOmYGZYGOdHJDD1px8x7Rft2OfBy3hY0PshEKta2F
ySNL2fEvR/npZJV5xLQxjDy8xiY97cXuLe9LLi9SoCrqU+nYqaHUudc6+vT4
eFq0/h1R7q1MRm4R2KuunQTAzNwfpMb2j01HvetUcZlMODKwVuS8D4enw7WG
eLPPXFsxmxfGqdZORb7zIlEdM0SZsjb8+6oW7GrvQLa881N2Yvogwf/QBmHJ
o71CJ26+UOK9nTM/k0p8C8xpwZlF9MXERbTrRTN6rXcK2bVbkbvpNU/YrLxD
WHR0jbBDraMwbPlhpri5C1PsmMb7XFXhkw+94jp+cEL9tLqizDOTvvl9Scc/
uXur+DPWeeyFWEtoMfww89CqxjPHlBKj2ZR2yVhIx0xxpbItetEIIYk8aheA
fHwsBHZ4ujBrekuh9qEJs+LfobRsb3zwyHysveYOcqCarKxtFQt5biyYZDMG
NQVQWwA1BlBrADUHUHsANQhQiwA1CVCbADUKUKsANQtQuwA1DFDL0NjfJ7/1
NP9ojQ0PJR2fXtseJgrVd0E32lSiHn770Iz1tfyzZrfY21bNhKvlgWzf3c4k
uI88NTCbQvv2XkfXy6+lm9SG0l5TcskRO1Os29NC2GzvJrzzaSscVvn19Wr/
bSadjzas7s3Zt9+OBr3TwL2GipHvCHWmEFjNVB/1EOpVnjLgO9HwKiCb5AbS
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
712/jDmGfTRgSXyf6MG2MGomQYsLPQoy5c6daCB/C9gqP+n2VD6+Q1/43P9H
OJ4yFAdXFRJ1n72XLV4myNOML8kpTnfk+0l64un7OsKkNxfx96sJx+eL5QnW
m8nOveNpd++99JvXUWpeOYDGhVlRj5ktiekuA7n+ltFy0cbV1fyPZv5FducD
+pSIFHFbyiqfne6L15MzZEcfQUaWaU91inehBj1jtf57Q/13C491hkrlp1vE
mecOcobbe9WbSwsEa/pRdOgWKG4NeUyPzYljGYsa85SKQ9QHHuM5vAb+r8tm
Q2VFqbPi1Oanf52fAIcNLhv7muC2wXGD6wbnDe4bHDi4cHDi4MbBkYMrB2cO
7hwcOrh0cOrg1nO731pWpTn//G3/NE3+q0vPomJal1ei+fWqipVntBjXSI81
bv6ebZnmxNtX9ONz/RfypZ0G8/Z1jXjr9UPYj2GjVF3vRAvbWYHCq8VR2WXK
eGIxNIS8nPxBelKuR67LLyqo30uT7wdGAVYBZgF2CapYTgyvra/079da2V3c
RKnatifddl5mPVY25b3YeB7Ufwqvf6Yj93iuw+2PObGOU2ZIh/yDhH+1eaJp
paXy98ThxMt0JYl3vSW5ObeOtviaYFcrxVJKmbLZ7nDLZy3yGl+dVeU2fWN2
+z3uTdxmd2nSZBJ6PY38qp7zny+rygr/NZxXRnpR57u09Udvtf6xjct5wibW
oM8te1Gfb5/JU/cGon+imSJtdFGSneorr9pVpE/NTrBmlSV+cfAUHhc/g4+7
2ZZ7xz1jr91+0Dtb9otvjS2Uz/J98e3t9//4fJr/H/wmkWYfohNXVVTff7cy
x0v3zDVj8cx169nMsVtTDxXwcKvap32sslyd1wf9757oN2TMKT2131TkhYbk
2z9T5ZUqKwE909tWPsLqYU/xcNcXeUhzQ9nF46Tkc6Am6bLulVT7SeH/WI9o
/v+2fAq2693Olbw/8piE9dpAXCc+l6cFnBOvPQ2Uvd19BTLd2kjJ7ECyI68Y
Mp2PXTqN77rVmn80+R+9e72qe0XaGnPllMkdcfH1Z9nKZz8pZdqUjl/WkK4b
vkvrv7e/SZiwuKGv3PoQIHYkl5Bb+jjKSVt3iXFtSylWCw8L+GfCQxw5KsiS
w4HHeA6vwV8KHgvoM4TW/m/rU3Pa7ya3leb887f90zT1z1+mPpKnHDwl0v2L
KtDfNRj0iF4cepH1+9KQe44bwCMM+vPa9rX4Le8I1nBJM3rf30hJdbRVdE6n
izbVS4hjkSdJ1Qdm1OtXGEkbODbfrffzW2ny/eCowFWBswJ39fl6GWGYrKvc
Ge2ojHjVUOnioSsaz+zHGk9PZ93HNOWD0jvy7Zta8oxDFnxIwm3We/V8dmO5
GTN8F0hDO+jSBkZ1pOX/DJctjy2Qj89NVL2oekg6vkGHjCrjJuld/Mc2r/HV
WVVuwz/ZnffReFjxo32EE2mSkkoUm505/vmyqqz4v4cZA6TVM5qpNTBHn94l
u8ea0FZ8EH2+ewE1cTWncaW6i97nmigVN/sppsPGKOtPRGUOsKHMq1RTfmei
B1fZzOJzbDrwBTbJ7HIDHbbI4ZDQq1tBiTj1QLxM/PEfn0/z/4O5Cr8N7j+M
k0Uy14rYL8eePdatmnqo7Q0+qLNqkNeHzOJ1JiWopaGk7vmdEm1FR9xyIT/W
6ar1TOEjksSe2m9E36YnRGvdgaLb/iny+EQr8qjcWjL6sROp6TrhP/hozf/f
x4hxdrqvO5Lla2+S6wNWkfVLE+Tiq4Va49Qodoi4+qQcs6ybyjIM2/Em76bz
w72m8R0erdV+BzcapFH7vXuETgVz5Y7lbVG1bJrsXCiSyLI1pXPq0hPjQ7T+
ez0DdonpYXpK2x6rRNMD31UVzAbLHaodEtu7llPenlIEvMORn4IMOeTo4sBj
PIfX4K0Jf6n28z+o+wz/dn9yTvvd5LbSnH/+tn+aZv97/QabZLsei0QT+9Oi
5IHBYvmKLfTqr5Us5tAPJr2rwOueMOfvet5lxpfsWJWHlqKVQT3l6nA7JWLM
O9Ep1kAky1GkSKApPbb1MNnVJCjf6T3yW2nOj9AoQ6sMzTK0y9uqK/LNhxuF
7o4UsXzCc9HoZn8RXG8S7WPTk72LiWZXh+rycY8r8V5H6/PFurW5e9tSfFbK
HfZWbw5b9DWKbtwwQv5Ye7Do99NWxLiMk9cOqUHCl4whxntvSi2rONvmNb46
q8pt+Ce7815FZ9PomtUdybyxr8juyzty/PNlVVnpv5/0eKj2P7vQpySp0qo3
qeq9k4yfU5la2vWjbmN1aI+aNqJnYCXl+pqxyrUS9sqcA6uIyZmj7JVowceq
PPm6zjN53OZ2POrtc9ZB9ZMem3dADLtnobQenSButPxP/KP5/3mRuU7H/Yff
CGtE7JNDKwC9AvbsNfVQyKpBXl9IUlsy9YoLeXgskGDua/rpBzm05DwJSnJW
65mexHoLixf7xNKUw6JwzEox1r22GJlgK+/5rkt+Hh9ClLNVyPp3zf9jvtT8
/32oesAuJWA46ePznNQI30hm1n0tQ9t0qUVxZU38MmFSuzi72e8FQ8Zbp5nT
ecld/+N3Oaj3Y1aowmdq4rxXxF02Vyb43RGjL36RSx85QKbUak5DPJpQk+jd
Wv+9Ol3CxKzl+krKnDWi6jgD+dcYJ9nDNkJ4NjBTdulFC+Sm6PimMeTn9hB+
6gOP8Rxeg694I6mGAn8peCz8bX+tnPa7yW2lOf/8bf80Tf/DyeZ15QUHzMXs
Hb3Ey4Av8szODems2lXYh0qLWKeG4Sw0Ygur+cyVPT8cTM8cbSWcv6QKs6Yf
hfn5DeLr6z3y1c3jiNOZE8Ry5mRyrq1rnsOj/9dKkx9Bj7q6V/19IYLe9TnW
h1WtThB5v6eTvHvkdvlO8ZqijL+XmH2lq3hXvTI9tn8kGzDiK+tRgfA9foN4
5SfOfKxBff66VgxrM/oHVbn1E/F9nomQnuFCb8oF+du8BWRnxBmyfXxLMvCJ
T57jq7Oq3IZ/NPeXoTGBzhYeKOi31tYv5dxLAzuDdYNIsN17YhiU+/d/sur/
h+ZFXrTHNjD6u21J1/V2jfwCpMgFO0mb4NJU76BC3psbictV0sSmK9ZK0aqv
xUubaNrJ+hbTqW/PQ42m8Uth0/mtM224/t1E1lH3G53UL1Ls9CqrfP55V9hV
+k/+S/P/Mzjz/tuQOS5iruqY+VtBIwCdJLSa0Cto6qEs9yfZIbM4o8oIu8Y+
wXbgPBYs3iGti7ss3ZNWqPVMZ7dL8tQ9kTI981QeU/m57HH4iDw0rbu8N2GE
yn1XVel856VSyob20uQVI//Dj0Lz/1d/c7LdnsDZpHP7L6R2p50EmqbFzndE
PQtzZffIcGF8Mp3WSH7CSlxzUGe9Ie9EWuTAF5g/YR++faax3/eK8lPKKMa3
44Vjj3T5ltURElqb0I13JGrucljrv3e/Yrg4lV5EqXd+vdCdWkFesbqpLD3a
IpzvF1fudIkUyIz7GvaCrWrdgbc39VIfeIzn8BoyVeArDm9N+Ev9bX+tnPa7
yW2lOf/8bf80zfwL6O/qRFWT2x0eJTsVM5Adx7UkdY40oHv7r6Uzhx6jpx33
UNPpI2k73+XEucYS+XtKKfHGuJS4FnNYPv/joirMc4kU1feZ5Fh+lbS82MJ8
5/eS30qT74dHIbwK4VkI78KEtBfSz9QStFGbWZTt70APzTot67QzUvY1H6Sc
f9JIiantSJvH3GTPX3Xm54r68Xc7/HmVsn34s7C3zK/VPfqi1nex5hNTbr7X
U/Y+KiNmk4tk/81ydHCfHeTqKJrn+OqsKrfhH837u8iapqqFvSvIrL+zvO5S
umqcbmNyyq4qtdq+lL4dfFB94DGew2s4B+fiPXhvX9tJksXDteTnQl1a+W3W
/V85jX+yquzWuzxttlfoJpsr45zjhWu/7P982a1nz2r9kd3Xc/TGIyTqNqEt
ogl91/MIadU4XYavN7JNkO9WbdtnWvLcY+bLHXjdRdPUBx7jObxmViJcdF9i
oBh5B4mkMvXlhr4VZI8ua4XfOD3F5/hOgbzcuDUJzHNtSz7mhbv6wGM8h9eQ
J4dMFfiKw1vzT/21tK2c9rvJbZXT/mma60No4qCNg0YOWrlqNw3l1u3TZe8x
fUTPSvNFYKGp4mndmsJ+V1dZx82RfEi9QtLfXyY7o+aRgDUrJfOp7VRHNm1T
XejbTXXbunWO+/0W1H8vTb4fGRXIqkBmBbIrmsXUJa12ONCZ5XfRX0UX0jP7
r8g9m1orlRxWKOVDZyijNmXYGQ+JZ6oRA7njxzW83O61vFrN0dzs1Cd2Lm0u
fVzDUWG95iklyzZQrpVvI3y36tH3bp3pTY9kouq4Ld/tD+Y2/KO5v1t7QC15
2/OS4sHgDmKpx0s5/Ed1usDFnM1v68M8W+1UH3iM5/AazsG5eA/eG6dnTMYc
vEFSG5amLYL25Pjn+9PKbr1LcOweUWODuSIVjRdxjbP/82W3n0FW/HN2X8+D
Rx4h/T5K1EVHomMLHyLw9Ua2CfLdkHGr0+Ij9d71gDXws+dty3qqDzzGc3jN
dl+o2L1RX7G23CCWeNeW11SvIB/LWCOcqhZWqpfYIS6seEsb9rzHDDYzHj96
kvrAYzyH1/TO7BLIk0OmCnzF/9RfS9vKab+b3FY57Z+mqQ+AJg7aOGjkoJVr
unGqHP95kJAtTok+E96K0UGJ4uWETaJKwgu5WbHZZEfrqhRa2U9nbpDBrd9I
wD5e3nqyV+Wdqlcz1uZ43lNB/ffS5PuRUYqsUmAgZJee+fZO6namDD1UYT69
5N+OrmxgLGb1rq0kzPZR6ls7KYsKt6B7vV+zziuH8/qfAvjQEwF81sBh/O72
F+yVnjEdPmqQMnvYYsVyv61Ss1UPYVrZmEa+daVll+nQr5uUPMdXZ1W5Df9o
6vs+jQqSXZcsEDRFJRLj+wjdJhvooODF7EzcR+Y32ILjwGM8h9dwDs7Fe/De
gJRx5OYSI3p9eXUa+Gpfjn++P63s1rtYj94rGpcoo0TPixeXx2T/58tuP8us
+g+y+3oe2OAIAfapU9uW1lq4nwCDAIsAkwCbZIVfgHGAdYB5gH2AgYCFgImA
jbLCT8BYwFrAXMBef+qvpW3ltN9Nbquc9k/T1B9BEwdtHDRy0Mq17WUn63nW
EV1OrxI71xwR59IjxeOYueLMgUR5/7plkv0JFalqclXt77th9noppm83FbDP
xYD2qhWkTo7nfRfUfy9Nvr/rl9fHgIGwD/S2eOfocVu7So+X7yVHo6vQvXXv
k+DOpcT6jMLKuLdMuT7vpyj3+ibV9UtllV704tV7+3MfDz9eJqEbXzrnIbvh
vZxeK11FmT68n+JubarUr1FH3KyRRH7Ot6a6I86Q86u98xxfnVXlNvyj2d9Z
ce5DuUrICbHXt4jy3jtQPOh5n3o+Pc+G+Tbg3/Rd1Qce4zm8hnNwLt6D91pe
3Ubi3jWgvkozuunDoRz/fH9a2a13WfFzrwibXUZx+xgvaoVk/+fL7jyTrPwn
svt6BuelbJfoxpF2lDc/SMBBgYsCJwVuKiv+ChwXuC5wXuC+wIGBCwMnBm4s
K/4MHBu4NnBu4N7+1F9L28ppv5vcVjntn6apP4ImDto4aOSglRtuNlLVanwP
+Xndo3LH8c/lvr2eyj26Rci9LVrIx4YmRC85sEjyEVHSicOz1PlOd6xbR2Pf
B9in7+OkLO+vgspdpcnHQqMMrTI0y9AuJyddkNNa7hblqr0Qm270F/16/KLj
PsSyM32s+KPQ/jzIbSDfVaYFn5H8ilVZ0o4VqjKG9Jo2RfQa6Swuu/rINRbV
IedrupCnN/0ly42BeY6vzqo05wvMgZgLMSdibsQcibkScybmTsyhmEsxp2Ju
xRyLuRZzLuZezMGYizEnY27W9n7S9Peaqm8oAuxTxavIGsrhLoqYVdqATWz8
mSV+7M2bV/RXH3iM5/AazsG5eA/eSx3PkdD17WibD63oiuLH8jz+0azchl9z
urL7+zhS+ijZcIlR98UtaYCnikCDDC0yNMnQJmelX4bGGVpnaJ6hfQYGant7
vZhoaKCsbhSe63+fnPa7ye31t++/v62nK6jcXZp8LHrU0auOnnX0rpuYTZSl
GC5Wjx0r6oz3ln9+OU7fhMxnrvUfM7ejJnydT3X+qFwV3v2QISdPb7BGI1ez
nY+asYZtDtM1Pgp5O3Wx3NW/iFgW90i2WVIhz/HVWZXm/QsOBFwIOBFwI+BI
wJWAMwF3Ag4FXAo4FXAr4FjAtYBzAfcCDgZcDDgZcDPa7qdq+rsXG1RGWBgX
VqTiNkpbdl3EtDBjbr8M+OBp47jHwLXqA4/xHF7DOTgX78F7/afeJbMTe9Nl
nTrQBmej8h0+KMA/v1d2fx+fM46SGyda0ZUt2tH6Z88S9KCjFx096ehNz6p/
HT3u6HVHzzt63ws9N1Drf0L+KaK0/hyW63+fnPa7ye31t++/v62nK6jcXZp8
LDwK4VUIz0J4FwavSVatuxIgV7m3XN6/3cbW5WUpGmZzjPYtVo8lvV7EHE5d
YgntivHDRjX46Fr1+dgLFrxB1HO2abYX032wmFrPcBQ2PfeJjInewlwvOM/x
1VmV5v0LDSy0sNDEQhsLjSy0stDMQjsLDS20tNDUQlsLjS20ttDcQnsLDS60
uNDkQpur7f1VgH+0qwL883tl9/dhOPoY2ePlQB8Ed6RWvWMJPAjhRQhPQngT
ZuVfCI9DeB3C8xDehz/9fqpWdVqt1v/8up/78U9O+93k9vrb99/f1tMVVO4u
TT4WGRXIqkBmBbIrDnkOifZscUgqm+5Fwu27kfrvpsp7Kg8RHh98RGrFBmRM
VHtW7sxb9iKEcMfEYfxC3UGc1bDmFzefZ9+P36P7OwWKdleLKMutTglfh7zH
V2dVmvcveqDRC42eaPRGo0cavdLomUbvNHqo0UuNnmr0VqPHGr3W6LlG7zV6
sNGLjZ5s9GZru79awH9pVwX45/fK7u9j98ajZFM5e1pDtw2d7nGSIIMCWRTI
pEA2RVb5Fci4QNYFMi+QfTHSr6T8JnCtmDCliFr/k9t/n5z2u8nt9bfvv7+t
pyuof6dcMtf5mOugd0XPD/qe4f0CTzXsucJjDV5r2v4+WfHVKR1rCKfFJRW5
SE+lfFIFxd91AR3AbrOun9vzPvN9eHBrX97zoxP/9P4jcx1owI70OSY6PrNU
6PgXYtUvPXG1wn5yb39hGmnuR67V/6a1viW3FTR20NpBcwftHfQ/h/3viq11
yyqxHyMEMhyR5YhMR2Q7IuMRWY/IfET2IzIgkQWJTEhkQyJzEtmTyKBEFqW2
fkkF+mft6k/HX+8SESJmfhmlzrP/8f95UTGUDHn9hXj3nkWa+yTY5bXxVPN6
1tavR1NvjGvm143mNHlgI7qpeShBBimySJFJimzSrPJL53cJFFVrfBSr9i0Q
s6zfqT58cpDfuWwRtb8VVZ7syP34J6f9bnJ7aV5v0DBDywxNM7TN0DhD6wzN
M7TP0EBDCw1NNLTR0EhDKw3NNLTT0FBDSw1NNbTVOX0/FdS/U+A4sM7HXId+
54VTd6sznYFdwDdjzxVe+9ruz2XFV18v4ihGvrdSpoR6K5N1eisDTbYTl7Vx
zCipM59ZYyG3DF3Cz74dzP8pp8c7u1Rkl+12iR4Hqyjv6r0UHxvri3ku+8i6
14Xo2MR5ZMKUy1rrW3JboccSvZbouUTv5Xbzr2r9T72fZRTrypFi9OOvdNay
RJb0wYE3KTGVD+oymR92seHHakWzmlN/Ev/11sptKxfl/FQT5cD3WuLN1afk
qn8jOvpUHPG/GaC1X1JB/7t29af4p75uhHjfsYza/+euwVe5+s5tRDf5NQmI
dSb/nNOzy2v76ZrXs7Z+PZr95qHHIwiuHb2+Jalh2FQypvg2eWrtpWJdrbPC
zX2I2B21hbIZq9idcxnM6Islx4HHeA6vub92FhWNd4gPyyqKr8al7FqELpWb
TNgn5PJGCg3eneuvv5z2u8ntpXm9oYcdvezoaUdvO3rc0euOnnf0vqMHHr3w
6IlHbzx65NErj5559M6jhx699OipR299Tt9PBfXvlH+kOd0/vCjFOh9znU5Q
TQLPX+zbALtgzsS+gbb6kaz46vCizcTn6ZWU1e3HKGUbtFB2t7WmDV2vspXF
OvLFhRfwJo0W8vLNXblf48I85EEtFpc0X6SVKam8LHlTDF78SbbyCiFXKr4m
iyyGkksblmitb8lthTEHYw/GIIxFGbGf5Pb1b6v1P0H79oqebz7TkEOPmaFJ
a77kqzufeWEcrzi0Ee9bYQ+LvG0lFXdvr/QfMEF5VLWScnh9E3Gu6yfSv1lL
GuuTSORW+7T2SyrwP9Su/hT/vP74P/4/VSvcEWuWpslj328mS00ekSLvm5O+
2x2i85qeUvN61tavR9Nv8JccSsTwEhTX0EHn0mSnrbVc6VAZYZXoJDoO+Cgv
VtWnIWMqsvaTFrKtJSPUBx7jObzm0iVJbhFpIkqtvKOq8qYyGWx2Qr7f9LRo
9q6U0ufEnlx//eW0301uL83rDZgO2A4YD1gPmA/YDxgQWBCYENgQGBFYEZgR
2BEYElgSmBLYEhgTWDOn76eC+ncK2tYuzY+qOQ6s8zHXIe8AnFVi5pwZmYld
wJ1oqx/Jiq8WP43F6blfRUxiI8Vk3mtxdctpGs/us2YtHbl0Yw63P+zFq+/q
zIMc3rPYgaYszG+x6Hj0H2Xu8UsiwvSNPLZWMPn89AVJCx9GXifuyPN5YNhz
xt4z9qCxF+3h9Vkeu/22KDzlf/Q/saafaVWzx8ytaGv+oosnr5w8idv2sOX1
m55mo9KGUO5vpnxu0lb53s9A8dllIW6bXSMfnCzpp9jDZMXkqVr7JRXkX2hX
f4p/4HHQoUUZJUF1R+yx+yJz963E5tQLEtuoK0k/eK1FXuun1byetfXr0cyb
2O6/gzy20KG1Dq4huJaetm6hOuhXWV51dYDsk5KherC9GTm6qAb19V9BlxY/
qj7wGM/htZg9p1VGqQZSpRNhZOTiFcSy1Wu5UtsbIqa0uXLw2N5cf/3ltN9N
bi/N6w2cHrg9cHzg+sD5gfsDBwguEJwguEFwhOAKwRmCOwSHCC4RnCK4RXCM
4Bpz+n4qqH+n0JsDfSo0GuApsFbHfIXMSuR2Wxg1k1bvHWGHMRXrSuytd/0y
Jsv5U5OvrhGwwW7Psj7kVs37pPmGALK13RPZZvcpEZCup2zZ7i0+ljJmNjHP
WK2trXnwEQ/esNxkHlOHcN2NV9iE/UeoXCdRmPeoo1T1eyVmORQSJvPPkeBG
pejlypvIfT0m5XX/KGgOoT2EBhFaxD1UR1TsnCCGFiundLKNVOt/ovcmsm4X
HHlU7Tl89dx5nG7syY2e63Ozzc6sd4NfdmFtQ8XDGUsEKR4q/3OrLznYbiXx
7XxNqttsktZ+Sf/X80+1rT/FP4WsIsQ83bLK+Uv3hO6MDLlbTAQZQg3p69bb
yMS+SyS/4UNVZWlXmbw7JK+o+Ux94DGew2vjGlWRfk1dLI0/0lZ9v+Z0Pp7m
9aytX49m3mjc2N1k28ivZOe3kcT1rJmdttfjpZ9vJZ/tl8nBM2VprZNHibus
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
uyZivlRv1ylp+rXlku3Ub9F1ndvIB59EyZe/v5dPmqbJ7eRTcpmIgXKNzZ6q
Ts/rS+NbrJVWD+gtveg6RWs98b9VY34ZqD17PZ6eV3u3+LmYM4ypWFduVZzU
+8flMtdQGFuwlwU+D5ombf8dTX7W0bKI+Jb4RMy7ZqEUiYsUCdW+0n0Riayi
bnv+/aEPV/hSvmbEHP7tGudfFqayH9OGsOuhQ6h5THnhHLFDFOtwQrRtFCl6
LR8nns3dKF/dPI44nTlBLGdOJufauuY5vhacFLgpcFTgqsBZgbsChwUuC5wW
uC1wXOC6wHmB+wIHBi4MnBi4MXBk4MrAmYE7A4cGLk3bfJ/s3u881dNSmpnh
R6qO+0l6GRb0f2l+Pvcre0RQw9JKTesz4tzhU3JwTC1Ca4SoXjYoJoKH3dXa
bwB9nPAugIcBvAz+9veheT1r69eDc3Au3oP3vktxJlOb7yRXSXPSZNybLK9H
q9QPpPf2k6ROl6GkXoq3ZNkgJLqCqjxJLR1HIgwCyLUSz+WUnxfELlUxxUa1
TCBDD1l6yNRDth4y9pC1h8w9ZO8hgw/+BPDkQjZfTl9/Bfjn99K83nae3yQ3
fjdPpPaLFD/qtBFTry+ingZz2coOz5iFiwU/e6o+78lq8TNpRtyI32bNTq1k
57s0ZBcj9tLdY46QNq4LZD+Vrhj69L7sFFI+3+VNZlWa+hVgn26R/VR1zxxW
few/XLW26S5ppvsacsrkKckIO0c62FtKlwOMhN6S9WJGkyvC+dItMcRtt5iw
v4241K2fXPtKWbJ50Hyy67tEgIG01RP/W4XMpicfe6u9e+Ff55s5pmJdib11
6AvAodN3h2SsqzC2QNNkYh6l9e+vyc8+GGogXDc9FMn65krPpbvEldsptJfJ
XXa7a2ve0nQ+v1s3gB/ov4r3aTCLL/DgfMPDH+z4zvnstpkP3fN5rZgRbKLc
XlRG6b0kTkw+/ktOlqNIkUBTemzrYbKrSVCe42txT+Hewj2Gew2aZWiXoWGG
lhmaZmiboXGG1hmaZ2ifgYGghYYmGtpoaKShlYZmGtppaKihpdY23ye79W7B
3kaSedf5pLbfd+J0Nf+N1386HwWqdovE9UbKul4HROLJVXJyxCk70bukOH09
SLzq1k1rv0l4WcDPCx6W8LL829+H5vWsrV8PzsG5eA/e24S+lg67NyZptU9L
7X1n2WV1Pfrum0HeF+tMLlfXISNOV5c2lXoUdTK5Bgn8fo6UnrSMNEm9K59c
L4sNkb/Et91DBDL0kKWHTD1k6yFjD1l7yNxD9h4y+ODFBX9KZPPl9PVXgH9+
L83rDZgF2AUYBlgGmAbYBhgHWAeYB9gHGAhYCJgI2AgYCVgJmAnYCRgKWCq/
5U1mVZrrX+z7APtsOWwiDyh6TBU8oggZ0OwNGe9nSxs8rE9f3WxJ9C/VFY36
XhJx20oop43MFf3CH8TzV4vF8Zcb5BWd+pK2Bio1BsI+kLZ64n+rkFuJ7Cbk
F2BMnZK5rnw3+CCFvgAaS+gIV9Z8Jo//tVW9rsLY0nvkK61/f01+9sKUn/Im
31hxaLu+UqHiGnGl3hUaXvx45hhkzZ3cPHnwnFW82twgfmX0Gh7ZZS4v+rA1
l+J/siif0eykb0uyetobYWlSVrFeFy+eVDYQxyJPkqoPzKjXrzCSNnBsnuNr
saeKvVXssWKvFT3r6F1HDzt62dHTjt529Lij1x097+h9Rw88uDD0xKM3Hj3y
6JVHzzx659FDj156bfN9srvf8WNKmp3rfS8y8sQ3kh6Y/8brP52PNkSFi2ad
DZWgbSHC/GpH+fWe+6qqLb3F4/cpIk1Zq3XeCPy84GkKX3dkmfzt70PzetbW
rwfn4Fy8B+91vPHZbn43W6lPpTN2xQP72mZ1PQ7t9dZuVIWndvZhKrt2d2vZ
vZu2yE73Rl/iUukR2ftoPZll+VwuP+2ccB1voLzo6iuQoYcsPWTqIVsPGXvI
2kPmHrL34MGFLD5k8iGfJKevvwL883tpXm/grMBdgcMClwVOC9yWmuO60JaA
8wL3BQ4MXBg4MXBj4MjAlYEzA3cGDg1cWn7Lm8yqNPUPb4p3jv7Qf7jKNRP7
7Ho6VFWrzE5pxMzVROf4C2JV/yFh6RVJP//98pr5I8SoltvF2wd7RGDiYiF+
WYpnrRvLjuPSpeWZGKjWlbKk4/P6WuuJ/636W/hHk581q31DHvMtRJwufkXE
LxwkkptvpD1frGTnrhvyq3Ed+I+18/iEDQE8OWkjD6gdwGu0nMujIxkv2+cl
m9XVgQ1N60tKmfuK3d9ni0ouu+Xr+pPImU3biHTrqzTWuXV0TusftC1Nvx14
FsK7EB6G8DKEpyG8DeFxCK9DeB7C+xAeiPBChP4H3ojwSIRXIsZreCfCQxFe
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
4FUGzzJ4l+U0P1SQd/XfK7+Nn3+7NPnDG3UKiTDpsRiRUEH56XxIyMY67E2P
ZNZnbEc+b7QX39Z8Lg++5sgfhtxnLvwkNSvyTnT82kS5cyVdxBqVFMsPniQ3
kkrTTTuDyf3uttKf6omzqzB3/P8c8MxLtUm1g+9oQskUO3w/wZkYETgb1xru
EawTsC7BvZkVfgoes/Go3t6aUfYfQ6LKLuwXNcG7lO1c+4tRS+XI6Pv1FkYv
i71ll3Z+vzTB9qw0YNnP6MyT5RrpbUWlJ0HidT9ZzDE9JnbuXi6a76kmDvdu
Is8r9lNaU8eVnHGtTPYl2ErHa6ZHD5bsVAvCj0fPftQkz+Hz/Mbv53f886d5
V+u+HZLShSUZ5PVJOnS7gnTRNCM6eKKfala/+apOkz5q7ZeT0/pMzX6HrPx6
6IFCwnldKWFW0lTcr1BUiGaP5dSeIXL/5BZqPGh8KVhq2+s4mTvZkrr0vUSa
bDMW7Zs9FbOul1NObY0RG/quoLF2kazs3dr82rLJ/GX8al56aQg37biZl3q/
mJd848R9r/5gA07YsvtOhcmkBm1obKtVbHW8BS/ftQ8PqTyIR9xuwHW7H2Fj
HxF6399ISXW0VXROp4s21Uvkunzlgryr/175bfz82/V/xV8T88f/zzGrjpc6
OwGe6/9kfi92mdhw38/FBHuMuEdwrWGvFHuyuCay4s9GriwVFVohKPrGEXPV
yEmx0W+O/bD7MSZIuqYKlqw/GkkD7JuqVjjayJtKPpKnuQ8TD07ECJ/0ssr8
yW2UGj36Kk/GtFN0dcoq/lfDRdDMaPnFP/NJ+yrJ5M2hcHLp+kXpYZfFqoFj
r6iuTe+l4n0u5Dn8k9/4/fyOf/407+rXuupkxuhVpKl9fzK59SIpcKezyrDU
I9VUk6uqdtdttPbLyen+XE2/i6z8eh4XvSwsPVNFxs8vovqQZLH+wGnh2XiZ
EF+qCuHRSu5/ojUp9qwqrT9sFHXoX5SmX7YV9ZqUUSxEH0XnXR3FynI/+fUp
nO0Z2IgfS5jDB9Zby/t7B/IS9ZfyVJvhvPUjS+7rc4QF+fyiT4pNkpzNStMt
X7qzR0/us08Ty/CzZy144a7P2IYqbdkEswqilUE95epwOyVizDvRKdZAwKMM
XmXwLIN3WU7zHwV5V/+98tv4+bfr/0q+CuaQ/59jgfE3cikwTf19ABNiXwzZ
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
wiupxxfx/sCHhm+L/y8wJ/jdqTAobz+qMClYQ4BRQSyhIDxLrSOThJMZ/qRP
soY4qMxhElz5niRUPsgrD3nBV6/14H43osUdJSLosinmbOK64Szh7CJWbog/
W53jy5Z082KvXNxY3yeu7MJKdxamWbD+RdseXkwrz5dZjPJnJy8uYv39h7PJ
7cxZ0sgD1GzkcfHLVS8+dPUrbm8VyWesfS4l5B4iJ8xtRVS0NR2ypHIed/iM
AxXlbtv38vmX3otNXRPog/WM5YRMU1W00YdrGIOxuAf3du28kzSrm0m86Gxy
Pr5gvoqiXtTjX/37Z0tDX9zjWrcrq+Kvx9ZliyFVkunWi23YkftubMg0V/Zp
qy0b+vAk7atTT5wtW8n3JrvLHXPby0Lf9zzRfwE3CejLV2f584R8nxHPwBml
Vr6fjndVnU9tfoWtKp7FjkMypYVv/qEnZrK/Njnt/lmYZGX63fgA9d8TOJbA
MwmubZX+SKVs0dwomY7Xc2ApXdxZrVRXZtfDjjVucYaO/TBcZH5Gcra1k/y5
f0nZe09Vfs/oFsnoaSZmXT5KVk6bWezxkerlT/zrP5fflR/g3/EfXvi2hbeq
PYxvd3gn2bXMUC4UtgkbG2iQva03CKO/2SputmCKTV9uCe1XTyCHj+34bj2r
gj5Xcf9/qOuhIsaPWD9i/oj9665poaw/pJ6UNXaTVGP+I2mmjj43GGqsqmij
D9cwBmPV8QJW3lsV+mVcyXnTD6Tkjd1FPv6vjj8FPgIxAuyT8e7B//60N4UG
OnRUYdFQ0UYfrmEMxuIe3Pur48ngrAJ3FTiswGW1qu5zqdWDIyqdcGhlQi8K
mgngDQZ3HjB0wNIBU4fvAn8OZ1rQOIXWaUH6p+p4PDwTz8bfwN/C38TfxmfA
Z3kacohcuNRKREUb+xGcySIuDS4u5CcgRxM8FeDqKmy+rqJe1N8/O10Nfmlo
Ao+pU0VO0P4H/r5B5SfUJtiROTWcx1bPX8Ccy/ZmVm9KsqiOU2jm23pit+MB
0rmNJ4i1kovguPR+ZExf1jSg8QtzxTo7s8UStpkizirhr6vvJ8GhGB61XYSW
xsMQGwJNVejKX/RoLvmNGvHd+SHq3ydc1OA1Oj/kIwxM5E52Earff/T+J7Tb
RUcWVf8f30fc3IuVfqHDjLYNoH2afFPsdQrlj2Yv48QwVCp1tx850n4VWdz5
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
9maT6FsevZWt9h9S7k10UTZvsknYcNGTrG0SRTZq7iOnnN8IzulbJYOsQdxp
9hGePDeVX3ArKZ+oV0GOOVxZzq5aRU5uYiLXmWoiTx5YRd5fwVgecsNY1dfz
ThW5Y28juX6NMrLpJl150D1tmTuXkvekVJEdO5vL00bWkn2+GMinUi7xPRED
eLnw0VIuNyOzxwUS/awhhI9b9t14K/XfEzgrwF0BDgtwWYDTAtwW4LgA1wU4
L8B9AQ4McGGAEwO/f3BkgCsDnBngzgCHBrg0fjY+8leX3xXf8neLup4KMLLA
ygIzC+wsMLTA0gJTC2wtMLbA2gJzC+wtMLjA4gKTC2wuMLrA6gKzC+xuUbUn
hYW//Nl4yeL2//nZ+OfctBrky9YgsiBiBQkYpUmKevxfnc+pWmkbFX4G70+M
+2cBcQB8N/h3OONCRRt9uIYxGIt7cO+vjicXpGf7o3pj6MM1jMFY3IN78Qw8
C8/Es/E38LfU9XDB7Q99I1S0cQ6LvQh+jzhTQFwF7yN8cpxLFjZfV1Er6v7q
tkC/6HJz/JQuE28oKz7yUH7QPiDYVVhD6kW/JQecdcTOi2+SCPm+MH93iKTT
yYG3mbiSt2t2hD/cc4lLMXf5GZsEzhYk8gz+kI+t/oAP/RKval+KSeY9aj/i
J4xu8S6No7n5vGD+4vl6rr8mmDc4LPHrleK47dwkHjvkMr81Yh3v+aYO3361
iTTUK0uwbj2QHF5Vh+QNc/7u/aP67wmcpeAuBYcpuEzBaQpuU3CcgusUnKfg
PgUHKrhQwYkKblRwpIIrFZyp4E4Fhyq4VH82PvJXl98V3/J3S3E7XyisUlj5
tz87X7a4nc/97Pz3nbcaCyM3hwor9m8U9kXrC0U9/q/O54SYKc4Nv+X7znh/
fPO/U5V8v468j5RW1n2uqmijD9cwBmNxD+791fFk9XhKYeuNoQ/XMAZjcY/q
3vxn4Fl4Jp6Nv4G/hb+Jv43PgM8yNa2RLTQeUdEG5xbWUexFwMUFTi745ODo
AldXYfN1FbWiHq80NKof3WttZaXe5z7Kk3VzoycebSKU+mhCnpl5E2nXTmKQ
t4OMuDuNtD52RXhnPFkZmdhFisz3hbyO35ZafngvBezR4C0aaPGnjUvwqaW+
SFPya/pELW7bSY/bt9fmw3OfS066+6XLISOl/hUspNmyKHmtWynZjb8u7diS
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
gs8E38n5YTQJqlFKbJu5imiNNBTIqw127buUEbxGeQjto6sXebzyn1K8y4/y
TY6yz5TaBSVJw7/elKT7yVLjoWV5G0Ur3i67A7+cVI/XzlwodZp7mnxatUy0
ffFAHNtNh56uZUjX5uSJFfJui9NNtoi5PbuIta7FESebVKH53mDlw17flFOd
FypPjFly4vz4jOj0RXWkdsd8pDqdLP7X9WWBoUceIbgUwCcFTjfwmiC3F/kt
wHgC54Cz/n/uedFGH65hDMbiHtybUiOU2K77QF76uJIdWVsVBc3/maY6vF8V
A370jjYvyb9IqGijD9d+NX/cH3z4X0tB+SeJidej3c6NEOYvMCahWk+VNRZO
53Worvwyob6s0SSaVwoqQePjUml7Q2dWy8qLaZbwYg0NOrKnk1Pos8rfRORL
IWccvDn4/RUX/syHU9qz/n7tGRvanlVLaccyqjqwtIS2bPDLzmzzp35Mp9Zg
djasO4ts35y53P1Grx33o1abV4jXIjtw4+fH+YCFy/m1Iz8//lXc+MsLOr+f
cdpa0NhUl/AjQSTcM5EcGqUn+kVUVlW00YdrGIOxBfG9qJ/vIoaFWBZiWoht
IcaFWBdiXoh9IQaGWBhiYoiNIUaGWBliZoidXXJ7Qt5JjcQGwjFit7W5UEp/
qkI5LEmoJTsQS53sIp+v/qcU7/KjeiPZ3rf5rMeneIuVR/gT+TTXDMjhHmGm
8oP5VrLJlQpy2PYBnK04JvaM8KJh3hdo9XqZ9ILXN9ra9jU1/xpDt2oG0rUb
7Wnv5EtiB/MHZLzpBunzsneSoeVMaZJ0L+pz0/tKG9GIhzZx59ZBlTn8HG8j
R1oxI5w2y98no6KNPlx7VMNEpbUGvRFwbhc2XrKw/Z8un3cRzdTXBJii6W7h
UQXNv7TlBV9aI433/facX77xQFXRRh+u/Wr+uD/8AH8tBfGP7NhRXhrRPUo6
pFGJpzT24RGNP+W/r6Jc6XlnOdE4lmutKEMnDfpCp93ox+4b+7FrXr5M2NOb
LbqSRW/66lLkilsJFjJ+f9iDFBf9lNrl3tPOU95Ts1vvqc3ed3T/6df0cJO3
dPCdD/Te3jwaulyDDauXTsvPvUJL7FpJo4KqUpssM/H+xKfSg/SuPOuwKbfp
0eWn45+Lm35dQfhNQSNKsWTmPmFgq1rEImMEWT10GbEw2qSqqnZ+H65hDMYW
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
0cfKMZthTVmcxWDmFebHZq7fzDa7bmeO41Yw81W92Uat9/TthtJ0eNYKrjVV
Vw6eHMEDvgZKscklooiFPTcdd46711zI90+UxV3N9lPXssYMPlBxj39dsz5A
xnyrIt6t/Y509rMqcP79uqTR3qafqPned/Romaeqijb6cO1X88ep4yWKuj5Q
YRd1/IX2lVJ2Y43HCyc3apAU80gheLieNKVXqnSsogn3qN1XqtdrrLjP1JKm
ZK6kww0O0NojNtGoIJFO7d1eXHhsruSwpIvY6P40anP5LZ01sBbbcaw2i5ur
yWrUX0sXfN4h4mxvfb1/YLyAcy9sPMnPKgu3ecrbc+fLzmsXyYH7lsjB6/zl
N2a+cuU57nL7Bs6yv2Nl+azVee62bxwf6/VCyh1dX2p95E30RJvtihvDhgkr
o72FW0HpCuRGgx8GHHljVpUvdP9HHb8FzkJwF4LDEFyGYXo2PNujpry6wwS5
ShNbeZ9TU7HZ4Jt0lYEz89fyYdZWS1i1loOZb3MttiOxHr36bBH/YFxOflku
lg/zz5IsvXaQGzVek6VVR5BrG5cVeT4r9aLOjwQNU2iZQtMU2qbQOIXWKWLa
0D6FBiq0UPF7hzYqNFKhlQrNVGinjo/NkxJMe/P1E0rwL7FrlGsbxCudGnbg
wx0P8t7LB/N9+Xs5mm/PwAkFXgRUtNGHa8X19/CnFI1SkH4wzhrhb+OdAzcZ
OMrAVQbOMnCXpU62Z687i6zSJ8r8fduw+iOc2CPHrqyaRy8ml+7COh5oyVac
Lcf69k2g419fpmOe6TBtP0eWY+DDDpQIYrz8GuZlN5oZm+swZlePlp27gLNu
BrJ+rdO8U/dTksXL0mRx+HhJcO7Ip9+ryHukDBSP6jnR3fk+EM6Bijv+ua3F
EVK7XBPRT8tU7HZmRYHzfzetGzPZ2Y9NdOnGPoqOqoo2+nDtV/PHqefLFHV9
6MIu6vk39qYD7MrsjxXClk0g64ZbkC2bZ0tn7frwLK1lXLcEl2o3ixO9RwfR
kmU0WGbdGuxTbmU23vcRrZc9hO583kIsaW8ujbvlJS416UbHDwuheisi6eLq
q6mxSz2aMtqq2O53k88+4fxVCl+WksEjU/L4Da4pb6W5PN3zPjettZOHj2zH
W94OlWYH1FCWyeVC7ztnhMBwfcEw82x0XRdtpYvQOrp+6Wu24IcBRx54gqGV
UNifUz1/D5oV0K6AhgW0LPjXMvzM/E/80hMrueKC1/zm9jNiPE2gNvaOTLgz
j7U+6sXq7OnMNrVNp5ddKtG9vv7c+Xgpef7Ja/xApXfSxHpbSfbTFPIhbCR5
/WRXkeczVy/q/Egv632VvBMvcZcSOvKJ1qv5Q7PrYh03mS571kQV274UEMge
ndvEgq3Xqs57nbI6sg82BuwUD6Tu+7eIr6sN4qEHj/AeXr34jZC3ypynlaXc
Ccs4q5LNTUKDOM6zsaeDXQM3FCra6MO14noe+qcUjYKYEGJDiBEhVgSOMeQY
AmcPrBnirThzhN+Ndw8cZeAqA2cZuMtOeU1nB79NYuunT2bZFd3YsOj57JWz
H3tebTmbYuTDdDoOZnNzyrO5n5fSyW9Txa3dKf3wLZXecerMtjX2YQZhS1hc
20GsgVceHTTfhN4ptZK7vigrT5p8g3+4lCI1il5KjjmsIBGCqPTvVV4a0d+d
wAc6MFEWEQsr7vnv/RTHyEhrQezlbycOKnO4wPkv0WURa9dkCVuZ4c22l/NU
VbTRh2u/mj9OnS8lZ90dSX4ezLXjbvKojOEcNg62DjYPtg82ELYQNhG2ETYS
thI2E7YTNhS2FDYVtrWo41vU+VdcHnsrQibbk90HzpKcBT6EOF2WKrQ4wBc+
esPDfUZw35aadNq+m3T6UiuWaj6EnUkYyBLtG7HYmyfpm9KXxfSMhbxX3gmu
HcOlz9/miUHCQ3FqygWxte8QsfvwbsUW72DWX59Sg9J00MdK9NDOmnScVm06
+UhVOjy7BB0Sd1h8WKOhuKmrs3Bg7CZJCL8gzXu5TMosv19Zaq+7cEVLFnoP
6SusHmik+Nn+j/r/E5o+4QF9VdyuLTeuJdBkabUvhq/N1Za3hyzk5cuXoVPP
PadztjqwepFuLLn6NLa8JWH7T96gQ7SOiwZbn/CKdRvKsye85cfX6/GticfJ
27GG4rP560g1z6bFTs+usH/vi9kK/u5eCn/j7sujfIyktMfNpI6bQ3gbWk7+
2PEoB94CMQfsu7H2oKKNPlwrrni4P6VolB/1f3LGTGdujSYxk/sTWTuN6ezL
Vi/WM3wpe2e9kvW86MvsfPqxLVYabMuN8vRt6QD+UGHCTZsNpDo7yrKGKT3Z
BJ0RrNdjG/a53UUaOSRUPNg3gSs3msuuts/4PDNdrjPoJImxrCtWXJNJzk4x
Jc8dmksmadX5xTAfnjRhLx/aZS9HzCuxhgnfnO/7fD32RiDGXcjggIqk3ZSG
hY73/eP//LUU9n4QNhS2FDYVtrWo7+fUzwtujhWFYX13kUOxJuJccoXcFIz5
5jVacnpnIvff8JHX3BIrxg15Rau27MnsvXyZ1gE/9vVyf3Z+1xdadX1pusD9
Bvfc7SC3iG8gKyzP8RELLfhmulhK6mwr5TnyYpvvYvnsKR2z/BW99/QTbdxV
h5UYo88uXivBany7S6dv9adfntwXk9Z/lFquiOWtslO40acgvnpClJQ31Jv4
PL5JZsR7ktYVugk/O/6lfp6nnNZXAW0f8Nuf2bmU+Pa/LUGb5ci9bD7TeQD/
pGlMD4an0Msj2rCF46ey5mXHs9a2zdidkEPUIDqOrOzSWP64uY+8JryszNNq
87bHHhE9yVKk9y+SU99WFzu+msI+7x1aficvVVtLrvV2PS9fpa408qCd1Ot6
OD860Vje0V3mwJoCb4GYA9YdVLTRh2vFNR/yTyka5UfjX5Xq27NaGQoWNVzB
FkxnrPRxZ1Y6cRDTazCapZ3py06Va8AGZyupwys3sWt3LfmFxxte7dZO8VTe
MVp6RgUW1r8ma2GWSat1HEo33D0mhSSby1/a28r3czL57rVleYvz90jPW51F
nYVNxRPpS4m+Xoj04pU/H9fkDbcOqigD6wy8D2JeOPeB73N80hHiNtOL7B6+
ptDzvf/Ev/5aChsPABsKWwqbCtta1OP56ngRpfNOIdYtlaSP7ywuDtYW53xz
4F+ON5Kvl5ons1IOcvVOE8U1S1/TjiOGs+P71rCYm+tZt0pubPzzMuyGkzn1
LZ/Jr16ZLJ99P1ReWama3NjvOBfLDuTlWujyiCyHYst38vSayBJGOrCdk7oy
p55DWLdWo1jqtH7M16Q5y2ueQsdNbkbjrMfy5mtbya+HO8pxpbRl/aM1+B73
JHLks5X4zTOOvHly5Kfjn9XxXNB2hr7hZo0EUjltDZnr8ljqE3pWpdEyk/vz
q7X1aXyfp/Td6dZs5PKpzHjpOGZzzJJVU4bS57Gr7S6cdpLNF0yUqzatLm/1
tuLDItLJeXsqBnklk6/dIorN/++fpbDxfil6+3horJ7s4rKFyzsaSu0b2Egh
6/fwOfme/rb9URx5NhqLP1CsNz3y99yoaKMP14orH9afUjTKj+KfHco/pFkZ
d+lmi7v0UJkEOmJnKvXL+EpNpmkzs9iP1HXNKXpmRxeap7meZG05xTtNPcRn
26STxxvb0i37t9ELvXfTrgeGUa/qPUQT7av8a3JzOeprI/nD2Th+qGuO5LE8
irwdYCWOemEkDrg+huz3XSDtHdCdDx+/j6/dcYcjzwtYZ+B9urh3l3DuA9/H
6UMrYuTZq9D5/v7gn/9aCjsfBDYUthQ2Fba1qONb1POFPm2RhSoBGmJE2mCx
Uq0yYoJ7d37mayt5Bl8iWzYbIic+ziNeho+p6OfC7HusYb1KbGDDXNxY/6Ay
jJ4xpcaz3/KNLiPkzRnO8tLPebyb/QJ+ro8Of2sXJlkZlym2fLfOuROZz+Tp
LGSXF5NrLWHjPi1jfQ8uZvE5Lmzlyyqs1uHlNCO3NEmyrSg3i2gpt6iSx88/
qcZ7WieSwM+NxAedz5HnRgE/Pf9dPZ/vEHumgMYzdA6Prggm9nZZUqd1sXyh
VEmGVotJxxxRMTKZPkpuw8SXbuzAOFcW/9SWhRyModdvDRMn9jaSMxId5YG1
Ssq546ryD+dvEjsTM3FRwFESbzez2Jzf/bMUdr7n+v77+BxfPTnRdDMf3qi+
pP++oZRbcRtvNspQrmkdwZFj/Cl/nQnM32sj3oCKNvpwrbjyof8pRaP8aP57
+Mx0MeXoKzH6YqpYovN7sbZCg7aZaUjbe5en/uX16NWHt8WgS4PFtutaCK3e
PJd6OZ2TntW0JnPKTRCjFh4Ry5zZI1qcrS0eU+yRXh9YyZ8MjebXHu3kmz63
4496DZUuJdcmTStuIMeT3EirhxFCwPtDSr/p3tKgCVek05U+SMhxR54XsM7A
+zhOaSjg3Ae+j94k90LXe/iT//7XUth8ILChsKWwqbCtRR3fos4Xc2H1QkFz
9FnydVFTMdbiGWnyqj5XHqooN3TtJ/PJteTZs5eLynUPKZ3RlV0y8GWX3vqx
5ZYDWGjyZ/p6gyE1rHmR64W2kL86lZEtjeZwndPHlZ2PtSI19FYLtt1ORhdX
vaPFaZPZfHM3trPlfDa2qg87Hu/H1tl6s+dxo9j+ZU3ZhQWJ1OVgTxq3zEXM
dj8kTR1Qhj+9PlBiuTXIq1h70qG1mWA3Myf6Z/Mfqpff/f1WL4XN97V98V7e
k+vKJks3cqfIOtLqGHMpZuZ6rhutLc+4tZt76GeIV9c8pO7r7FV6uahoow/X
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
Yk4xt5hjzDXmHHNPx0dGJ2qIyoCaLZUL6m6Lfts0TDHuyWDBZYCXUP+xlgCO
EfCsgVvz9LanEjgWkGcIrD3wZr4GH6QNCe+kdcHvJB6TJTkOK8GfdjDk5c6U
414z9XhoxhWpC+kR7ex9iawNPkC+jkqX9p54wj8OqisP6pPM3V2PigOq3qD1
bwtMo50r2317Grve154pdzykBrYZYvftYTx2fiX51fJYvtv7g7T7Rojq3Ae+
T98x44W++TawUv4+EGfhWpvH2vkk1o7CuYZK1/7jhBOFra9T2P5PSo1QYrvu
A3np40p2ZG1VANNRtbSNgNwe5Derz/+Zpjq8XxUDfvSONi/Jv0ioaKMP1zAG
Y3EP7sUz8Cw8E88ubDwUbAxsDWwO3r16O3Klo373eXDDKvLlzAMqfARsHWwe
bB9sIGwhbCJsI2wkbCVsJmwnbChsKWwqbGtRx7eo86EsbvtEWmEZw9vf1JUP
dQriNvIDUXvzBRpo1pR1rz+UNX0xkq04SFjVtDTK3nSgPisakDUaPvywzjju
+MJfara+JWlTfhbp/u2CkGNlq1j5dpJgX9dPmDK/vGBS48pPf79/VhnWoRI3
X+7Ju2i/54rR7eWXm9zkVAcrOb1zHbHETplaB7ZiFvWnsl7B05l5Vmt2eVUS
rR3zSfRO3MPDc/N94xu3+PVnz6WhTQ6Tgz1LiL6ey4lda/d/ieer63f+6Pyo
/3/Lbb0jPcgK5kOzbvKGVUfw6KtbxHIJ+b6NswH7ouHMZsxYwE5VWMsOBGxi
5boGqjDRJXgTJpyRaeO+t8RGjiv4IycteeSNCzwyOVdKu3aQmM3UEtkDHzJc
+anI64Gpr+fb821Wn/aDSfqxZLK390biOO6FNMjnPBfHlJSzxMX8wsOyVDJL
pQ/jHFnSOg+WvWkWCzVoy/SvJdPns3LEjhd3cZPxOrJb9w188UszKW9vfcnY
bBP/trOkXLFvGA8r/VFMrPGY1lzWlvX/MIu9LO3Byt5qyyxSH9Myp3PFfWPC
eKOqlWX/AXFcN+6TCk/QucNHEh40lzTelvq/Pp+wsbC1sLmwvQXZd/X1FZgm
xPVwtuWQ799hzfhT/6divbk+IVe6mj83g/v/o69Sz0+Sq/0HqfeNbMlOV4N/
6aXD/Rx1eemmX6ROObGSwez10q0cM6l2dAPldsdMxdSkyUJMje6C9c1ghbtt
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
e2be2Ym0mfuJ5JwbRB1OjKabY2zou3M96OTb30iuz1UypfspMuxyMTGcUUCg
ViF0nSk56NILA28XcJfOyrog4Vv/tGv3nx6PbX594LtqNI0f5Ai6Nq2TYa7I
FJzYzAf5TK3HS0mHbfgMvoN9YF84Bo71ytMWo5DJ4iNPDxeuNSm3AL8Xxh7y
C2ADYZ6BWDjgAQATacqtkOBpPveexPXfLF94JiWYMwq6hh7NscQKM+tR4kcz
dliru3C/bomQM26U8HTJIc5J+hApvWpO55xcRB/pL6EFayzojWgxORL7BcVl
mQjFV52EXj/kBZFUO3Y9fhNq8/Qkd/yxOQsvFrOhl18yrV6f2cyA18xmywP2
ZcMttuPZDbYu4xaze3+HHQv/gxUG3mV2/W6zBbtus25jKpjJzEdMLfM+C75/
gQnPdjIS78iivDP54DE3uODYYyg54CEif5xHT9cnofd7Z6Gorp5oweNAlNcp
7H8OL9RS/hyuEa4VrhmuvSV+AdCUAG0JicaEwkSJ5gRoT4AGBWhRLLc4ykE+
VHSBsvdNNhnWpRCbh5g+rGvtT3iwb72ysb/NMhIme5qcO9xAMvu3o3OXKNH7
pz6RiedKyKRPEaTPHg2ycqE+Br99Z9OzG5Hdg3XB4345P/NXt5/l6zi4SJ7N
sNUXBuSsFm7G2whvl6/AS/e9Ieouc2hPsyTKJyRSv3Oe1OhSFVHqoIwPuE8X
3rtEC3M7EGFJ5FQ2N1cPH9OMw++GT8bdjiSh3Z9388WZ0Sw8ppad36H+2/Uv
ml8f1FhDrTXUXEPtNdRgQy021GRDbfb9xG64W78LWGOCBcE340lgTBmZQNtT
6xBD6n62N+3d2IEOWcxI0QYVUt5nIpN52V24E6ovlI0/ytY19ha/p85YN80H
Sw1si0d+es65jBkljgtNLSyY8JSz+TgbrW4MRPx8Z6QQ/oabMOiHCGwYXAvY
NLBtf/X7+7P3B2rYoZYdatqhth1q3KHWHWreofYdauChFh5q4qE2HmrkAXsJ
NfOw5mhtek2/2prjpcD3uRUnh/o8MEGu9QK3YYgc7/X6I//YwYuV99jFFve9
yGpcH7CkWBVhhrGG0PmFtmDGGQozpvQVjJz1hbE7FIWtvc8yk8dOLP761P+5
/Hrz+7VA2ZsLvRuKBPNytGdTOGqoFvP7dLeynHlP2Bj0kD19PY/1uuCKq/qN
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
tsb5FVvVq4wtmn2HzavJYbPvn2R+ZQUs+qQGJI6zBdVN3nBfaQNcYv6gOc8e
2viVMwd9Hbby+mQuMavhni3O8BLd1wJi0IhFIyaN2PS/jb+FGgbUMqCmAbUN
Pv2i6J0v4WzKaHlIKDKGkqPDIWHlCPDtbAXSrwz2xIyCsdme0PZdJMRu3VHP
mcLeBzlUyKVCThVyq5BjhVwrMaOMPc8vY28LH7I8o/vM2fwl+76wmvVSkIWH
ZpXs0q7zbOdaH9ZvyAk6bt5kjpmnmH2KGaiYhdps1CF+8+IgfiZzm/Do5AGJ
7NyzBJ8F3A/gmSieY+BavkBnoeSNx64/nj/7s3lpiD0g/wI5qKjDKZbTonMs
XamSdSx1V3elS+KfSsN9BU7P64tH+/cRUedl86N24P4Jz5D/r+kpGuNneJa/
EY5+OMfNZsqJayqc+Q0tPRYR/JYNDncA6/n+MPlqOHyI8ILEfQy6vnvH0Jei
m8kDavbjmR01pDnpv/eDtEvWViF84R7Be5aGsHGOHFmfFkG+x28n1RXtfro+
/W7+88/mu5l8Pih4uemJk++vFr30xojtXbcQ9H683ssRziRGgpb+TlA7Ew6b
lEbB6bBqVhi2hGVOSqd5t3JJ3/N7JKeL90i3XlwuaI/ZIjS70+Rfp8f41dHQ
L6lmVJoE86oxs3FW2ntybVkvPqKjutiBjRSz9IzF3rtfCQV589gnUIVdvmPh
gHkQTLLbCiqtK4T45lXC7bcy/P1eFW6mqcZPL1Tkp3c9FVya7hGSzQ2Fp1Zm
/3p8/Z8e/+161YbjV/XvTd8rC2OWbMvOeLqbJHbbQuZYVgmm2+5z1+i2olrL
EzzmqAy7efsVq3wyHK5u8IP8VwEQP2oKnByjChc2TWV3pfJScUoa/xi8kavs
SxAcR5uTu/tUSaHGaGF1z1fCEPGboH9Thr+9L8dNB8twp5OVgkLwU+HuriLB
qfq5sHpkU370W3d+InYA99+vxzHjYsAOLbL8vSm9GxxP9YYU0Iwmcuz5l1as
n4c6I8Wn6ecucnTJEacstcK11NBoPTvUrSloe46HxOj10GryOljU0xasFV+y
ZTaa7N4Cfy7roiwm2OfzIwHlAmLQiEUjJo3Y9L+Nv4UeFuhlgZ4W6G1xzzuD
rlNJY09KO8GhU04w8r4fjL4QBI/1fWFsi1UwoHQtuE4MgUfmm8FwbFQ95oXc
KeRQIZcKOVXIrUKOFXKtdidqspnLddjiJUrszcKP9EtdHQ0NUmWVp9RZRKgi
+3aqmMo/CKNb/ERydZqfsFu/J3/b2ZG3fmzNaaYOl3mdL3zYsESYt7Bcenm0
azY+A7gPwLNQxIMRw7HsONlc+cdanjHouRliTlgTEYNCLOp3440/m5eG/Is2
QipBHQ5qkTP2XiILUwfSqJh19KrsYFpdHCLsv3OVb3rfQWyjpSpe+lEzevzY
N+HZMeLn/9f8NBrjZ3hYvRY0Sy7wz5Uq4pFVgVw9thl7l/mKvdcaBqsuroPt
Q9fD7dtjoG6CIsh8m8S4n54EfUnRmx2fXbXbEwnmFAcMvy7pZbI0+1C2qiQi
dZvEOW6fZM/13j9dn363/v1n893i3FOFHH05sWKqg1hTrSdi5scZ20I2Ltke
ElQD4eOwUJhQOhs86zTg/D5n1mHFLunLByKP2BjHpxhlClM9FhG92QmkbNkH
yWNdx+x/mx/Hr46GfklF5p4S/40n6nOrq/IKSGizljy8/C3vuqiHOPmZjNhR
8yqJs9jA5Ba2BLc7U+BxXghkDdoGZ8oOk+mlR8naRVLCg88RackFsq3raRKb
so8MKF5NlAq0iZHnGkkmyTDvOzs+e8bdndla9+9lfe+z03z91Nvmqh07mZ/R
9Mn41efpn/br+6ef75/lA2255i7gOTbu5bCezXzdiW6s2cf8JJ1h6OOJcG7K
LNBylYBteAU7o23Pvg9xJGVn1nL/lpN591qXHz37UBIyzJ2Ej90jGdx8TXa3
F48tMrd2lZTRPRaY1fSn+SQN+bON+R829Bc7cbI50U66R8701aaH16SSwsIP
Qq+ll/nNOjVxW+sE3m3RM6pZd419/G4MCwJmQ+tOMyFvigHkLj7GXk0fTO+9
0hSzrJmo0ExOfN1Wh8/3u0WeHzOhn66p0SSVk+TJ5n2kyOAQeeZymFx2PUSi
HyaSNRFbiasYQfKVtpF+9lLytuApOTfyI7mtdZ20fDmBbO0jKwQmqPCmfnP4
0vEbuKnaWq7Z3YZfyVnNr/X4zFdrThC7rQ0SlwwfLa6Q2pHUGyfYykUD4bLh
UvDbuBwOLRsEhdG32UwipR6B5TxYzlDU2vCOOw+Q51cvnSeVI1rQ2ZnxBLke
yKFHLj1y6pFb/6d/v8b6n/isk1TJKZU5D9eH6kOzQC/eH7J7hsIr8wBou9IL
zjdbBTpdfeCAni8cu7scbD7aQb9kVagka9nqvrUWyKlCbhVyrJBrpfjan3dQ
nMr3WgfzjO9J3NrmOP8WeZr7up/nY2QFnu6wnfddPZS/9QwTuob2/OP8np/l
7wwdKiPpf0BJEj9TXtL/zWeLI/DMolBhn4WwbIJF1+htFrUJJpL7A+Mks/tk
SYyLfCStDkdnj0loIySf3yksok+ELbkKvCWR56/KXgtNPpYJRnqKXD38udBt
cbSwuPM+wSXQjPe+G85b2Ezkt8o6Udwv4Zkx4ubIHfy3+ak2Nl83en+1QMzr
6rZwC+x9jm3bIqk6mkzk3rWk/frmk3O75Lii7lse5dJbrOz2gleEC/TSgVts
Sw5Ak/nLIT9sGdxytYAZ58+yA5vn0pWdtMWturZi1wJl8dMjPV744xn+MEaf
frx4gkQu85QYB57ONtCfKB1V6SJ1WFr50/Xpd/sfNuSrYMYjZj1i5iNmPz5c
HyNdm6AsTLdWFXJ1I+rz3brciOcLx+3k3tXvJLcf27OM6ndMeCKBXotn1Xte
jonvDE3nHGDrmvaiH5OaiqWeA0WZR5/5Pg+Nf/z3/9uj4f2HayCuhbgm4trY
S8M0u++Vckmr4jjyWd+DfHweLLjpj+YPX9jxc7oiOTbXgvWIvsVKHPrC8FZu
IMRthOkt4mDLAFP6tLcFlbgNol8H2lDbg8PohyNWNH/8ALquqw5tevwFeR63
i3SstSWyZ4sksVf7S26+aWkhHrqUJRUW/5jTFdlOn6/+8nnzP53X8E+f7/4s
H2i/DJUilo/n2binu9djIs/xbcYGLuGse40GTDnXHSwDusJoUIf1G24zeiOK
tRptxtr2vkAfRLelZaNfZo9aflDIGLNPmK3/Teq1V5S0clUhmNH0QM7gj/sB
NdRPN5Z/0dBfPiJtFrFdJU9nOTWnabpR5MBOLqT13M5PkOv87QI3bqazn6YV
x7JFExTgdEAXmDKpPURveM5qPYexlVbNuP/mvqLzrcHiqam1XLq/JTc+d5t0
lrOmW1/3oZNeK1DZ11Xks99XUrJKhp4tryV7+34g518+JHNSC4j34BJi9Umd
FgQb0Skmg2jlj7rZPj2CtB6bJIjqgXy5zW2eZVbHLfIr+IBr17jfqvfcoG6I
qLs9XlzjnS96TE0XI5M/8CQjX9Z8dzeI6rEAUh4sgsvJptApJJONq9lCZr4D
0THHWeRfNMR2uQ+FBYMHUO/Q+RQ5HhdSHkvQQwG9FNBTAXugP/37NYZ/3fsa
QWFwMJNZWcO2njWCc0qOUKAxFRbdHAuv02zhxBlLGKZvBd1qAWSD+8JHkyaQ
3PoQyxlxjx6w2ceRU4XcKuRYIdeqrIOyWLniK3+7T1E0mdZCzLjSVtRT6yHe
V+ojek7oLNoWKIlmY9P5yGAlfr7b1D/O7/lZ/o51WjCZtTaCpNeEEQsdfyL3
2JMM5JOIfYtB5NDGCURFYyeZPq2YLPSvIkeP55BV4zdLnJ7eE/q/W8+XtT/D
dX70hP3PPeNXl1/hzUZe4N96veczijTEp8NaibcGy4hlYgL3vXVZMtmyGTv/
dR/z368JiJc7+PvDRp9/X55OY/OFXGfk+4TpzSYfDzoT7H1Wr+xJT7p50FPP
jKnLoruC60hVMaZ2glhsbyhGyMvRmZYCuxlmBm2aL4WFtxZDu7fGENjpCEuc
fVQycIK9aGW4TLwT3UHMH2rM837sY/BZvuj3hAiW6RKj+YbSx6NPSz1bFkgr
No396fr0u/MvGvJVMOMRsx4x8xGzHwdH7xEMSgJ416DLPLfmJnfbF1yf76YX
8oXOWenPloy9wR5raIC/czdoWdUd1shrAmafuHXUYny2A69U6SJ2/G4oDjz+
nCcMVeT/9O//t0fD+w/XQFwLcU3EtbHy0kPpgqfjhAnut6TB7jJE1+s2GfU0
hD7N0GYHZMPYqG+PWPHJTrDoxHgw1/cFa/fNsNpuJ5ytNadBgRJaEsUouzyI
Pjs2iA4LZ9Q8yYKq5BvRpff16YITTWiNQzG5Y7KZXKI6JPSJrqTT7jvZruPs
pas6dpEmtpj+y/Xon87r/Kf5Fj/LB6qujK3nM4b5ChzPtQuk4Vxn1X3J1E5V
VNXdn8Vo3GDTY9XBvLAbdBjbGwYYtAGlt+VMJj6MqXfOp7uttgvojaEiP4KX
3PAWMJcAs5kyRz+TJLmG/nE/oIb+eY3lnzbMFyzVak+CJqaSEUbHiLd1L7J0
xTjBJLMXt62cw9uryfFpamZ0q2l3lmEbyVbVHmE7fPYz7VUL2byrqTRtvzlv
F/+e9y2u5kcqd/NmnbOE0ySARG58T7adu0pK1kWS623cieXrpaR8jg/RkvqS
J5NWkq2500jCMxvieW0qGdZxG1lw5jLBeol7xgdO+RIDl5PCB5U5XEb3AD+y
TeCtfHbwlFvOPKJzDDd81l48eTxSLLc9LdolHRbvdvrETW+vZ9OGd4fA2wtA
IcUNFhX1h7Hm+5j1tlxhcfU8cUE3bzFsqLZ4wydKiL3oVc/t8JxgTDM7dSbo
oYlemtgD4TnQn/79GuM/u4ldqGVmG2Z2M5LFOV1iVQ/esVFKNWyzahVTi3jB
PFs8ZPFH7zGzwlusSxORneJRbNJRA7Z7VVv6YHU4R04VcquQY4VcK9OOedz3
UBYvH57L5Sxv8A29S/hsnwreze4TN9N+yTf2OcPrlvjyDZcfCc9uBf9xfs/P
8ncMrynQMpemNE5Rha6bKEONst6TnTL3yO2WF8jtbvfIuvPNqdJpRjVTHOma
twZUb+pcEiSV428mpfHtp5XEqp36IhvTXrRd3VQ8tFNV7F3VR7wUN0NsY7pC
fBRsJ5qW7eLVkkq6x4izItPO0HaMcz1XEPUSD8r+fXnKjc0X6ryQ61zQrpxU
PS2tP/fB3mfJmSTq9dWbvjsUItx/oSYqBy4Q35wZJhasOSSZu/4oy5EzhUXG
7vBKcQX4qxOQ5uWwOUfU6U2N/uLoohniycla4vCHPTie5eJ+Bp/p4FvREu9r
itKbwZFSacdYqUFF65+uT787/7QhXwV7EuxNsEfBXgV7FuxdsIfBXgZ7Guxt
sMfBXgd7Hux9sAfCXgh7IuyNsEfCXgl7JuydsIfCXuqf/v3/9mh4/+EaiGsh
rom4NoLpfMH2WBt+vEUHLl1nKg3evIP2jBnH5Jxy2cClzaDdDAlE3JsJ5ffX
gcf2UHArjgLZa1uh4v0Jcnf4SXI79yTZNOMEmTHiGNE1PE4Gt8wm89bnEIXQ
HPIw7xgpN95K4jzHk4fFzySh7hUWK9vuz3Ys1ZUeH/E2O2ac7i+fRzfEl5Bf
hPeg0Y8+HM8iEY/Fuo17V7faxPoLX+N7+Bl+B7+Lf4N/+0/zLX6WD4R6VtR0
uMY/lX4pDhG+TTfj17QT+IaEeL6pU4XkXb49eyjznj04QqAs1Rl898yEyyZG
0NX1GlM7IssMMGPJ/Q1fn5PG96pdFcIqQupzKRenDSEu14L/OJ+kYX6CitsK
C6wTuFcaurhXPd6OvEHUTqB+FC98je/hZyXrTSTLt+RKND6ek/QJN5P0znGW
DjIcKOgprRByApoIJzWtSXul/lRx0DbaWl2g3T6k0e8z3Oje7TFksGKoYJ/f
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
LsdelqyR3Sh95h0nLD1VKzzuoMyfhx4QUtRuSPqd6E3TzOKo6+0b9IyyElOa
r8fexTZj+3cL1JbJ0Ti3FMmh6Qtpe+fxLFn7BcNzH+x9LGS3wunNe2DZsAR4
4R8Ja2QWgGu+Piwencr6dcmmMCSAj9tZyVv1EHjtnPfCvjkpBHV4Eh1/gn5M
f/r+aTh+Nt8LexbsXbCHwV4GexrsbbDHwV4Hex7sfbAHwl4IeyLsjbBHwl7p
b+e7/e7RGH/qSq/+2a9TSyWtqrcR28KlxFgjRphbEsxnTEjm1vNGWpTITGTl
+xRAZqgjvHu+DvT0VsK9GYPBw/Uue+26n/qHUfHM0/2iZr/HDK/meSXMd/8D
1m9sMbu85T77fKCUyQZUsaf7vrGgzAqWue4yg9VRLMGlHcsI7UpRM4vaWdTQ
opb2V/3CfzVf4Xf7lzc2Gp53Ys6hie2Uer979HxdEvBCcL5zis/0/s67Jk3h
nXdqs/SUUpY9Zijo+/qAV8+Q+iwflXESSMp5xfZ8nct6LfGlEz+o8F2mx/nG
QVVcNryJ2F9XRSQFb7hGyQV+7MM5jhk6mCOIWcqFm8fwk2P2Ce8v5Umsf/TG
eD6IGCnyxBalDSFZo59J0DOhlO7563kBfxqfb4iH7Z412CL/sgZp0y+K5Gva
kpH7w4VhEyfxeYuD+NQWT4W27+KoDPNi98KeMOsBbeDShf5wkJvCxPH9oOWT
7mD+sDu4NTWC03cJvFKwhu9lljDMyxRsuurD6QFy0GexlFXeH8N03SfTt80D
+fejquKcqs5iylFdcV35Z67S9Qx//+kk37z2PJ/7sZD/Dw/vf3strCzi2euL
uESliLtNLuLFb+9yz7J7fHb+fX6/1T3eQ7aQ5466wgea5PKtVMoTT2RwtUcZ
fEBUFv/2LovfzT/J3w1P49kZSbxi5U4eII3lb8O28jPXY3nvWdu58rdtXMkl
mt+siORa9lt44sk9PHlkFj96LZ+bXDzLFWSSue2SKXxc8UHhtnhb0ks3jdgQ
TjyGryYa7zf/687jG/MDwBqHtQ5rHtY+rIFYC7EmYm18+vQ+m//pPjuR94TJ
D3zGPk6+z0wVbrCmS66w0gmF7O7ud+xslTqMZd3h4FMCuduGQa9rdhCsPgR2
WFiCcfIwmDJxAqTpzID4U2OgV1lf6N7iOfs62IgtDvHhMdvHiS7z/cX+5gvF
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
nUUwOMQDokQHEJLlIenFQpY9wZjOuADC4DkPidubHBrqrM682muzyWaq7LRD
Nf0fHt7/9vrw9ROVbfuJ3upbRW2vVdHLz77Q4lPfae3yWnqm0zd6fdl7mmLw
hBrTAnrQ8xQ9ueUodZ13qP7C1/gefobfwe9aKX6jG1fVUHKnmu6J+0zH9/hM
L3/+RJ99qKL2n6tozYYv9MXqL7Sd7RuqtPAa1SvZQYe37EWV7x+U+JhlCEO6
aHL7i8r8S3mKcP77JSl6NqFvAWr3kL/+t/OTf7X/+TrPHZYbuIHuXVcYIuMO
Ts4+cCEzGHotCIfJJKCe84zcZ+RAIxe6s7StaLFnrOgRZCL6vy+t90BEL0T0
RERvxIZ5aHfSnhLjHmrU7roMxf3LnIwN5H6SI7lb04oYvlgsiXIOkk6PHy/k
9T4qBCwtE6pXynP5MGXu5yfPuy36LrwyqBGmpyjxe4fVeVKsMh9dcl+YKrdR
6BnwXjrA0DdbYZB+dpHeVencIh+hJPeKULRPhufqNOH37JXr84Pb1X4UDp/5
UdfNioVpS14I127Jc/1dN4RVwfMFX/sowVfWhk8+nMRTPsXw7IBBxK7LUDba
6y2bFGwNXaLXg/eqKOhftwVevQoHg6nrIddpGYzfuhjWvlgOtV1XgZ26J7iY
LqrXeSUNmFnP90HMC899xv7ofXyfjwE979aws8tedsg1hT4/u5SnP7rH7Tfv
5yqDCwWsqVhbscZirfrT98/P+uE2KzCVetSUSFuqfpGG2W4QApcN5Fdn7uIR
0p31frhHyu2Zhtx7tuuZBGb/F+Z7NRwN/X7QExV94TEbZy25ROTnNOPFcq94
928dxNLw67ydchzVvJDFKjyN6v2yTGbGQFRZPPQtjYG7T9ZDWkt7+D5MA1R3
JLGHdS+o1HcR32vS4f/Hv37TwN4B9b2oSVeTm0zQF2xKngNHfShqJKxm96He
VT2YTrtD7MV3VbBXsYZpGWvhkrAF3v3ogS4v3QLrTq+BL2cYdC1VhOXtc1lw
0iF2MzuTXYZb9VnJEcFvWWjQQ2bR5xRrdi+KtU/uw1ySDeg4p6D/j70rD6eq
a9/ImAxFGqkUlRIaOXvt9VSmikY0D1Sa5wjJFJlSZEoaNKdRNHL22ormgQaa
5wEVJY0S/Tznu75/vH90ubzvW7/3e9d1retarfXso3TOPvd+nvu5b/bjbWPx
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
59ur//H+Xj8b6GmC3ib4fkBMjHlVrC0jvw57DLbladClHeXh8ixXSPCLgqSe
ERCdOhR6d7hMNa7EEpN1o0QXXW8xldcTR2/YIGRrB/IbLZP5ivl9+BHyHcli
clHaP3aMEDdfVYzPVBH5FSrim1xlMWCCvDhzfhHbEnWMnQ2YzrQj9gkrQx9y
NdsPklMtGPmaF0Det9vE7X04RdrvYLr0uo+LtOxajwZ/3zXUHyrA7kZtbJIM
A3W/5S6Nr0zgqrOnksDgGKL1+Y98xsImHcSh343FVZvbi155LWUT17iHZxiD
sXgNXoucSORGIkcSuZI/43vX9/OEvfHNneKFiecc2ZzKbWz7wwusc8A1FrD0
HDN5d5G9MipnqU2aid7P9MVmm1XEMzdWsz4LDPjsim409HQs5XJFGdc5/UAx
PahfRFX736cXw69T77w86uJ3m7KQd3SAoQasuG4MRbf+6MfY+ORgcC0fA63B
FZRDnSFTagr6Vx5Q7aetqHzcRtbEfaB4sY21mDr7OYtR7yo87jeflzsQJcNA
mAf63flAdfnPLQ5NERal27Ki16uZWNOBpW2bwd+JH0kRA2EeKNS3gMY3T6BX
A1/ydy47sikXtUR9obm47xVjJ8cWCM0+rSEeP26QJ4rDyHUfbUlIYh+u37Wx
ZJqqlOwbfoQgZxy548ghRy75SPEVW2TzhZnJl7O93BNW/eomaz/vOqtuXchs
19xpsP/p6vG32YgXl5h6HGPeCedY19cVzKhbc/HNog5ir1g10ehlGNOa35n3
k5rQm9vX0bz32bS3cFc2cY17eIYxGNtXVBWvu7UWZy1VEdv4PWGf9Z6wxqeU
xFydFmLNKmXxjuFa1o+X4zd+06crDNfSJm/P0BMZpXSkcjXt2fc9vTztMr1W
s46u6NKedj3eg7ce/E24/dmVKXp2ZdYLRv1y/vPP+K11+yXwWRTvx4erVxNJ
ixDSvZkvaf/BQzZxjXt4hjEY29D+ifrqE9XlPxtovqBzTb7Qk06K0HPWN9p/
mEDnKVrRjZO6kNJ1xszvVjo/8UE2Vau0hHfT/OC4bSRYd/GFZS4DYaK5ChgH
nqZLAvbR6ZOz6IwPhXTf7RJaOq6Uvi19SeMLntAeUc/o4UPPqIvOXbpPPVvm
eYrep+iBil6o6ImK3qjokYpeqeiZit6p6KGKXqroqYrequixil6rf/bvr76j
vs+r6D2Rp94qCzEK5mmwVoV8ncBxvrK+LdR1nmz4ibeqFGQ97sfDp8u4zsj3
wZqXd2YsDKnFPg829YLlii9o6VxP2lrzIS9/y4xfcnDHP97f62cDPW3R2xY9
bjEv2MhJTcava9Wki4h9li2i1WiP1d+oZ/E4GJIbDqmDQsHorAOYFlyjKjtN
+WNP+4r7TN3FdTuaiZ92lAlfxlrxZ7QX84enqPN+aS+40j3Lpb08lYQhrw6w
UOv9rP/MvayJ6242Xn0Li70YxSYXTWVpz1ux0oIk4fjNSdJE33TOdb8SKfC7
yL2kClzXJCGr8rum9MmY5Cy/x70yG1rvaLg/1I5MxECYB8Ja2NJUQy7SoZr7
atSJLLz3x35WSdVJ5nslm7n6nmS2wWmyiWvcwzOMwVi8Bq/FnljsjcUeWeyV
/Vm/f33zqY9ajcrSut1YQJ1o3S43hZhdVcLnwT+E4s5vhTVDSoV4To010zBi
JcN7sq87W7MJwm5hqG1TMmZlH55L2yzrcXeb2Ij6j9KjTZtqUqeiXP7QuZ58
Tac0olsQxrfVcaBFZwrp2B3d4Vr5dGCDg+GdRRhcsFwJg6Q+YDtlBWzYtAoK
266Go8NXwUPnKdDhdgv43mI1vX13O7d+ZjOxR0YPcSh5wpZ0TRSGJvTnEQO1
MVPlvx9+8tvzger2vxuleEqvjhgnZJdsEIqsewpahX4EMRDmgbAWduJsCf+l
93Z+Us8KcrWNj5DyvCOT2nZlB4JvCWePlEuHzNzOlR75zOmeCuR6a5+10gis
tDr+tTs3amY8V162hEPNANQOQA0B1BJI0VRma7prMG6xGrvZVZ5lWn4SXGIq
BC3/z0L3bt8EmtqwqXz7q+Br8kZIWvNA5lfgHanO1lV0ZeWz+7FblvpMdc82
wXS7AXnZtA+ft28T/2p5Ph9y/o1s4hr38AxjMFYyoi3T2m/G6MvWLGyBPIvo
Jc+mvG3JCu52Y8XZrZjHg1ThMnvGXRltzPulJPGqfCE/8bYcNbNtTOdbKNIe
ro/56Jit/Iqh5rzd/P6kU4Ga0GuTl2DvIhHcm8/85fpcP+tvrquXgfl4fCbd
Untf7ln2RTIv5Y3k8pOXsolr3JOd1cZgbEP1M+qrT1S3/31b+Xf+gYEOhfjO
NGd2S/pszzb++L07gt/Jmyz9VBzTb/GM7255ix65AfC2hze8D/eHVd9Ggn9r
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
x/hRvQ6d5+tZ9odWeOYMB2IzJJ+8OyRPr5xtS8M1etLuKyltZzGQ7tk8mHY8
5EifD7egFwxU6d3RmaTwajE+ejCKRZjqCS/ytYVhd7azM+vUpSLf5/fhe35s
8eeKuc1p8vh96SR8f2wPvE67mMcdVQSp4Ujh0g5TYdqqGrT3fR65+7IPrTGb
S/t0DKZmLQbQ7L0PSfTLOmzeNpuZfNYTCiJusEzdOj60NhOdT36LAk8uQlVW
1b8Zj/gXx5OalQJxmKBEjyf0oln5k+j86MV0y6PldOz8KLqw+VQaV2ZF2SYl
WjZ2J9nnbEL6P+yBzfW+8Ns3+bOgpgOZ69wYPu/8EMRyktE4q7Yo0CdBjH/+
5vje3xvwcQcvU/DzAk+LQX2NONA2BH0fqHF3u3BNxnWevX8Ag5xXl0stZbHP
jo8cWjd+1F/OP02ECBF/XfyoXmtB5jI2KboPaVX+ghxJsqRFy13o2df9aWFB
B3pj9Gci1/oiOb61kOxddYxcHJtP7EcnkCWhFmTfyE7YNHI+u73zOpu87QxL
VvBm7zO3inyf34nv+bFljdJGt9p1we/l1+B+4f7YrdF0vsBMWdi4baJwOHuA
sP5EtHXEhSySFNuDTo3xpZOMAmjpEDvaq7aM7G/8Hqfs28OMk3SFgd1L2dez
b3ib+elo6rPXKKJ+Hjq1vfI345HaNqvZuDfNcFmMF4mrqiAadZb0XCMfOo+s
oN0c1tGZW1bTLg4L6ZBcB5raT41O6BxHniWl4hvLPdkp44tsht1mZjLkEt+z
MB7tXngXGdd4oW3Pr4nxz98c39tvVjy7QQI+7uBlOv9KrMzTAnSdQdsQ9H2g
xt2RP8YD1xn4Ps5PunOw7wOxz9MhQX85/zQRIkT8dfGjfj1uH16hMu4AqUUW
dAr1pas6BVOc4ULjPilQ48QZZEITK6zobcXnTTqEzjZKwisrjmB5vxh8eu4W
tEwxjZ9VocycvD7zewqSeU3DFSLf53fie35s5xPPc93DvqKMPROxkboEJw+P
4w2XvmCzP2PBrpGWMKh0HB63/SgxOWFNDQr9qOuMQEot7GhXWkYWd3mHH/Xe
wxSCdIWZmaUsIPwdP6xTJnKZ/gY1jlmIbjev+s14pJfORiH+GBZUz6rhF9Wp
JKROnxrYTqLvx8RSK6N0Gu+6ld5VTqTFF+bTU4o96NjDAhm05CJ+/2kd8/sW
nx0vOc9qpzdiQ/rkogNTVPE6z5XIhylw/813K+L7+o/AyYK8JOzNQXwKn5H7
Ck1Zgz4cg3MwBsb+b73HNOvSwJM2PR51kzh3u/uP9xMSIULEXwcN/VwHzVgj
sbu6hRv0uhHi6jZzcc33SU9VdeJjG3fl/bqu5/VDLZiP+3qWQJaxEXNeo0TP
QKI2QZWaDx1Kh28LpgouvlQ5x5Kaq+eRk+W6ePtkc2HLCT9Bh7cTUtKuscjn
KmzM9FIJvwuj8V2Xorzso6iCz0eXN/mirMCVIt/nO/ge3wdiRogdIYaEWHLQ
pU7SkqhE6c6po6Tm9j6851YHFlctZWfmn2CPLTykFSPGkTaZyvRGj5HUNiGC
TtcIpWyzPTVf+T/8H0WXbKapry9Yu99hVn3lGGgogpYiaCqCtuJv3efM0rOC
6aEoQTi4lLcNiCOG7m1oUuosanYqiY6vzabWXw7SR0u200eOK2jsWju6xL+E
bAx5gpebb2UPwnQE+/WP2GL7Zix56lm0NFsXG+ukoHHfvlP/m+9axPf9P4CX
vjx4Fwf5SdijgzgVPitosv63Y3AOxsDYhn4f17/FPhmDFkhUzidJLL7FQP90
PyERIkT8dQCacvC3CDTmQGtupsYMbsmNJUjodRtlrV2G6iul/G7DRLZj+iPm
gspYfN5s9mWBMT5qbU2kCw6QAy6q9ExFTxq9Ywg91W4oXbvKgt5c9Yqs13Mg
TaaNZ2qL3YWr25YLpz7MFnYhIyFr1w7mOaYRu9hYv8DYPBu1v6uDlZO18YgT
hahgTDkn8n3+b3yP7wOxD+QOIYcIucSMikVSs76IaWptYckzeHZm2g7mPdCY
jbk1Dvf/OJF8zqkmdq8p3RMUSvfZrqIf70XSNvID6b69D8mdDnVY+Xw2i7hi
INQ/fMDsjZQZeGiAlwZ4aoC3xm/dZw8uT6jRniig9OcofsEeoujWnU44GkKt
wjdTr6cHKTuYSyvoDnrl1HI6QehL+YNXSKbuI9zpYjrrXaAleBx/wN7daCrG
P78Y3/N/hdo8uZROMo4W5Cn3T1HFy759XtCgD8fgHIyR1fE18HuFmAdiH4iB
IBb6p/sJiRAh4q8D2IuG32PwNwm05oYYZnJjMk6jguad8cvlV9EuZT22q3cj
4UwrO8HsgJmweFtzpq/qTIxWviLKCywo7jqUXl04hF7w60kbf1ahPv1ySK+u
iMy8Yoa7Jy5h1yY0FjZN6SK0DG8tJMyqZFWtYphFtipLCG3Nz92phsK/ZKHc
9EPIaOFcZN8qTuT7fAff4/vAvg/EPsAhBy55v+eFBRqZqaxlsZpgfLuZ8Mou
lb0/6I/zvi4mfpM/Efc0Sjv4LKKjfeJodvcEaqsdJeP/jNS6SS6VVuERq3aw
SiVdwSPtHrvrpcLAQxW8VMFTFbxVf+s+VV9FC6oRasLxBzzWLDpC1vc3pZp5
gVTu8wZqGrKDPr+4g9q9SaRNwufRHntMqVoPKZnd+Swur17Dgp8qCKcWnWVm
d+XE/NcvRsP8KuwRZ3/7nfTw298K0GYCfQKo0QOeOnC1Bn/7vCBmhQZ9OAbn
YAyMhTkwF9aAtSDnBbkvyIFBLuyf7ickQoSIvw5AU062j/3tdxn8bbqQFsTR
ioNoV3A7XFt9CW182JLt3akoaEzpJ2yY2kIotxyK1e8UkAude9IZ03ypYUww
LakfQnOeq9DxMwKI5cAPSMd1Mbt4PJa5h5mxdQeO8oMGn+GTN6uyEiN1tvpS
Pq8sGcXryp2WzuipVvB2wkxuR88U7qSDBxervlzk+3wH3+P7QM4LtAMg9gEt
gZ2LR/GjZ+Sx5DtNhZQZlcxZrSPSn+FN2vKfiMIhO9pqRhi1CY2nW5en0Fth
cTL+j1E3c7qz8RFyyeQSbt0mnh3MVBLSos+y00Gf+ZjJB5D5JUXcP3sZsreX
+8145LWfkRC425+93PscL9bcSZ4ua07VlzrSi6pBtLjVMjpx6TLqqTqPOnwd
SEd5NKFRYxJJo8GZ+MFoH6ZsUcp0pmayqbZXRP7zLwZwiGFfBXJLwK9Zt8db
YtCkN5ew34drP6MRpxzfS9plfGf+zbQUvk3YPT5YSY2pe+rJGvThGJyDMTAW
5sBcWAPWEvnKIkSI+FUATiLk5WFvGn6f+USEFJjfK+AMI6NR8/WOKEYrlf+Q
HcXGBm9k9WFDua6xI4hbSiNqVuhMs6qC6Fp/X/rhlAUND8khLfM+oLhlxsI8
P2fBaFIjofzAfp7sH4Q/qy7HF5Y54t3dbqO6iCUoYZIxetr+IKdfd+d//R4U
+T7/NxrytSBmhH2z/DHlHPCngEP+LnOr9Og6delgh7H86L6OrNxmNzv4eSOT
b90O9btsT+qinhG/YEovzw+jg3USaO/TqXTnigQZ/+fy+UH01FU1OuLpWlLZ
53/qsY43vsR86rcwnS7F/CnTRDRq/UP00nI6Ai/z37rPy7PS2OEZa/jGUw/g
bcUeZNuXw6T22WfiamRIE1V60kv9ralvoAnVdGtKHxefIZtfu5FbPjOxRmUX
VvAhkZm3n85e1cWJ9e+/GLJ9leybMk4OcIxnHXbgPI60RlpNnVG+Thm3fFRr
PuNJc+a+cglru6WQJfStZgZNFQRo0IdjcA7GwFiYA3NhDVhLrFcXIULErwLU
ZYC2HGjMwR71FK45X9fjCL++/TV+5OIhvAZeinYNjsBLVjUhlwZGkkUaN8gV
2prmzOpHnaucafPuPanLu9ekeyomGp8iGMQ+Tm9chY3xH9iZ5Z685YBFeGGr
Hfhg6yicW9AOb9t7Au1c6YOOJMmhzlVG/4sPIPJ9/m805GudcvDgIHfoeqJQ
xiGHOjrQEgA9JdCUvJO4k5mpG7Nhq2di53tTyIeUZ+TaNI6uuruI9r8YT3NX
ptL4PfF0b1AoLU/tT2/MUqOaQVmkXb/OpG59dywJ+yDT4xl3ypm1u7WG15B3
Qy4u6Wi/Wme04Vjqb8YjuZPP8DWbWkjrJTqYPt6J3V5qkJBHTqRNxlKCg7YS
pfOHSUv3g0RuRCrZ88iLrHrwAcepqGKN+KN8wBxTdq2RPGsysZ2of/iLAbkl
4NcAxxi0Bb8Gx3A7qt3QkPDVqEdIa0THufH3Jg5iuErK9kQrC8+yjQXU2ErW
oA/H4ByMgbEwB+bCGrCWqFcoQoSIXwX4TQ2/reE3NvzWVj8Tzw++M4cdX7SZ
nfpiyUIXLMCTL08hja9eJil9m9PoC13ogXFmlPi0o72bKNARA/KJ5rFBpLNH
Hxw2PJbBvk/at9jHUHcD2zHciv9c3Qz329ofDz2hh8ti96DMWbao6Z4Sbrre
DK46aNP/qgcR+T7/NxrytSB3mJd+CAGHvJLPR85en/kp284w0JQEXe2Og1PY
+JmBmO8XSV4lfSJLIyhd/S32KU6NpwopqfRIbryM/3N6Jkc73npBqr+EkbRx
9/BbO01c2ecyd/RWhnTD2QCZHnPz6+p8gNMzboSvGXKKyuG2zOvym/FIWbFO
geMMT0noyJ7cBMs47kJlUzRbMQ2xzy2x5eRgvOnVVhykWoCPHtiL2wRH45Pz
dbGJW0d0LLhCeu6gMz9iqA5PHC2kov/FrwV4SADHGDwloNbc16IddzTwI6e/
pwPSEnK4DRc+SFcFVPAPboxmrxcns4ODBeZArsoa9OEYnIMxMBbmwFxYA9YS
/SpEiBDxqwCcCuBWAMcCuBble+7w2Ud5NuaYvFAfkMAeby/GL1oeJYaHu9JK
5EaXfPakXq8RXbinnmxeNo3oD26Nb7qNYqXRUeylvBl7fGA/D/s+EPsE1i+R
3n37lOt9phs6Uf+Km5U+hJvwIFLSr52bjco5DZtc23Lr/60HIvJ9/i805GsB
fwo45FBHB1oCsyuUZZqS4aZ6AniLrL7fC826N5X01v9MVPPtZDkvmzPx1C4h
lTprJcj4P0O6UXpweyXpn2VPuk2djbzmRbKKjwvZqZtZvHvQLGTgtQVVzK2R
+XGVTnwnUfG14voU8ZKdXS1+Mx7J39Cedzu6Xvrc7AgX770Fnbn5GTXbpoAP
dE1GB9lrqbqgz9SS/NnuYdHsRtI49r69HHMa2ISv0DrFpXfohjq0f8E9P6Qo
+p/+YoCHKNRZgaco6O0sm+IlPT3fkrcfPY0/ZPxV6itviXZ+6ojleybhuyNu
40UtVMhZax1Zgz4cg3MwBsbCHJgLa8Baol+pCBEifhU6vFPgFNJWIp/NqrhH
dC5yfazGuk16xR6kdREsexxjSE6dVEz6SDbtd6N4+HLqWLuERvRwoaczikl2
kB1eMsdCmJw4QahQbCKcizzO770xCD8PW4R7azTH1i0qONBQBC1F0FQEbUWR
3/P70FDvZ8/oKusKnCHJ22DMdXryQFJWo1fgOF8ZLXyzG2U+iEbDeqbw1j2D
2PTLESxZzR+5hNsT9ahKsqINpT7eYXSpdgLV35BKTc7GU7UFYRRiIoiNIEaC
WAliJoidIIaCWApiKoitIMaCWOs/jUc6nIhkNcavee0r2nh6TR1u+8mJlBX4
kaIVY4hNZCPif8IW9b60jzXqpyZM6fGVbbRKZf2H7+VbzfJDRl6n0fbLkUiu
OJKDPS7Y64I9L4iT/5vvXoScHNRZQa056O2A5qA+HsIv396epQuuLHJpBX9M
0h4vddclnhtjSMCjIjLH8h3x+aJCoUEfjsE5GANjYQ7MhTVgLVgT1oZrwLV+
9fOKECHi34ObvlrcqJZpqE1mSyynegHRAAO2ykhF+KRKhDqT22zArVakT3kT
GjoliCYqJFP35wn0abMJdIvCdTJpwipJl3YLhION1wgFAebCeLurvN7+5fik
Tha+tW0A1u5ngsBDA7w0wFMDNO5Ffs/vQ0O9n7vyJjbVPRZw2jNV0aJMgdPK
vS4NOWjFv3AgUtsbnVHMq32odVw/XDy/Cru+DyfLTV6Q4yUS6vRlIVXdEU+j
t6bSebvj6fbqRXRGJKWQE4PcGOTIIFcGOTPInUEODXJpkFOD3Brk2CDX9p/G
I3qvdQQTfhk7tWI7ziqKIU6pT4nl4Sb0/n5V2vp1EVEZ2JtoHtnKO+5VF6Ke
tBKGPj7Ldm8r51uxVPQA1aNjzusRXjWPA44TcJ0gPwrcp//muxchJ6elmy8B
vR3QHATdZfzqIN9JYTWbdD+PfVV0YqaZq3C0QyQ5cb6WTI42ow9qR9GJ83xl
DfpwDM7BGBgLc2AurAFrwZqwNlwDrvWrn1eECBH/HlT11uGGftmIhiwywP0X
X0JrPrdiS5qpCu/eEeHTx9sscWRr4ujelM5ODKbXxqXQhOBE6mowlbb68pyc
GGmNIye4CoHvI4WUo10FizaarL2uE26psASX5+njlZdqOPA0hNgHPA7B50fk
9/w+NNT72TpzhU3esMfc2SMLUOUGc/QmdArv/VSHaV/SYjGX5hfseh+HB/Sh
5OWwfWTPBHWKa+1ovyEhtNgunprOSqXZD+Opm0EINVzG0eEZzwhwooEbDRxp
4EoDZxq408ChBi41cKqBWw0ca+Ba/6fxiIOat5Cz8ApTqvqKrw66RvZGWNCy
L+PocE03unxbV3r+UAFR+rIJJ7pdZQkPWglh0htM+Xod32PSdjTM4Qt6d285
armlAwc1bsCLh5o3qH37b757EXJyo6Y+k4DmIOguz/qSjtZ2KuetbuWwFu2f
sZOrw9mriTk4qN82snSiAa1X8qB92iyjARPWyxr04RicgzEwFubAXFgD1oI1
YW24BlzrVz+vCBEi/j3w66XM1cvFIuVadfwgowAVXW7MAvfUsFusqzCz03F2
Olad+C34RF4Yu9P0ryuop9kKenLBaPpyywtytPoatvL4wo4q2QpbzZSEyIla
jCbeQxqOHbB9j33IX384B56GsO8DsQ94HYr8nt+Hhno/PpeWSWZnD0BDz5xB
MS+Xo16vBN5jZSx7dm8v26LejEW/O4FX1CSRae00aOwsJ+rgHkEDOydQs4hU
el4ugeKEMGq/mdIve58Rw1v2BGrioTYeauShVh5q5qF2HmrooZYeauqhth5q
7KHW/j+NR0xWrRS2XfvKemu3JkeU5emT62NoS/2l9MuMpVR6ZjQ9/vET8TJq
TZ4ZrGEFqIVAq0rYXFrF33I5jFSM5fHb50vR/aVDOBMvPa6qd3fOfXcrzpnJ
c1BzD3VnwL0G/pHIH/u5EOMfESJE/FPxPOaiZJuuO+pz8xqK3RSLSqJKebOR
+cyONhJajIhnkpCr2O/REfKyoDPd9HYEHao2itZf7EaPq58hX6I+4dz7Y9jo
xEfMZs12VpJyjB8xMQKZazDUaZ01GqQwXyLyfX4MDfV+avNsuPTpW1CQgi6+
0eoUOnJYg7VSecymfmwlXNG+wO76JuAdw3NI+hoTWqAZQMcmxNHrT1JoQlG8
LPbJSbSj9TM/kUadvckCvY7INbSSOT5vKvjPz2M31oziQTMRtBNBQxG0FP+o
H5uZWbywvkRZ6BTUkZgoqdEW+ybTE9LV1Dw+ln5e7k01b6vR00xCxtcNY1hX
UQjZX8CaGi7kg9208YkvNnj/7FpkbbEUPbZYjmw3rEMx3uvQ4Y7LZbpDUHsP
9WfAwRbrB38uxPyXCBEi/qkYfCJY4tdIEbnahSPrgd1R28nh/NVOHuzT0yT2
bmoPFmi1AB/qPZlMKC4i8ru+kK8v5ajOl8vkaXAYWbZPirP9vXmz86PZXNSF
3QgZwOvcb4RKd/VBkr4buWfuHlYi3+fH0FDvZ1plKnfv5m3EW9pip8j3aHZj
S2Y5QFeYtt1NWF3aXdgUUIK+qB8gC5v3oUel4TSpVzw9uj5OlvNaWEppXbtP
ZHDRYrLmcABesSmFWZo3F8hQdeFmxzSGD5wogNgHvDPAQwO8NP6oH9vnw6uF
sluNhOkzDMkNRUVaMN6dzl66nMYMWkGLX3jQ+D2K1DKuF1lzErOom6+YSVka
69raqKDMfBgOWxCM43ta4aGj5fC+HY2wxQc1HO6rgadWK2LQXgT9IajBV/a1
EvWjfjJE/rMIESL+qbjbLcem2TPCjQ/P51aZzOeeTc2Xpg/fxN+ceZfXWhvC
O5/MQZEKmbjtuWYkrtCKLG7CkcESfTJCsxC/GGSALxxvXuDjH8K/yx/Gcyfn
SVPvGnHSj27chY6ZkufLm4u/x38QDfV+huUc4mJbvUAf5znhNXmN8J0piLVc
116IzpgrzBg6SGg2eQhXl7yHdD3Tm2otXUQd2AoZ1zkmh9LDWdUkxWQSabd9
An6e2pYteL2N9d/PWGB9OjvemzCDQeFS8EyF2Ac8VMFL9Y/6sYUtiBY039aw
Zn21yRGD92S41mCa5B5OC9eF05wsZ9om7SX5bKpN5NtHsnkjFASdYftYrE0X
3jC9M3aeNAS/GaiJxz89gJYe3I32dctF2YulKN3nADppmogay7shf6dn3LWJ
70T98J8Msf5dhAgR/1SsV29ttWnANutzq41sOsvftF5daJh/+Y1iwbO1vQtm
7r+QvxprSnaoKXEuJ2dyigap3OWQHdz780nc2LGzuCrLNtwrjQOSj89NJfJv
V9vUbFppfc7PI2/Qyvd5A4bU5O1801/kY/wgGur9HKpcwNktykeBzzripKfX
UGpCG3ZNWU3YV+gotOmkKzTZNQU7rTlBnoziaLd3QbIad8s0V7pdV5nGF7sR
15N9pe1djrF5sfls4doBzNVoLl+PwqTTlTOkQ+27yvzDYN8HYp/mhtv+sB+b
Z06YcOtmBbPo3pQYl1SRx5oDqN/0AFqbP5cqhGCq++EKkezJwyblVczc3Ero
TTWEzOCFzNy7PT9ctYPkq+Ukvkj1Ce/QqRFTdFVjJa81mNlTJRbd/yGvq7iR
t1rZmm+XmlxQtG4xV5cmcFKnDO7yNCzqS/3JEPUPRYgQ8U+F1OOGtf0qb8kj
hTLJKv/1Eif1BwWPS45JJzVT5Ts7pEpPl97l5nU/i7pF9cA3Vk6QNejDMTgH
Y2AszIG5sAasBWvC2r/6+f7uAI4v8FxAcxC0B/tpLix4de4Up2a2Ej2tH4bm
PkrnT7RewRq12sr4SAMurbMbSfJVojMtXGXahkGVQXTGKwlVNj5Opiwbjwck
aAkLF1Lh0JXXLMc4kVfwR7hT/ymYJDbCE0Zc/MN8n4a42SxEMNn2hG2u0SAH
4p6Rrqv70XuHZtMMRR/6qKkljV6cQ9qGJSPpEnvBoyJKaH7BQzCMbCJs7rSb
rfsSx756Z7MRVZfYqu5lzCv8Jes06B2z1q1kq02Psa9zFrNV5+9/+39uGdfI
+wRquVoOlwRUoomjt4r64n8yRP8LESJE/FMxeFQryZLorVyHknZotsoNbuka
I35OWWM2x8OOmU8p47v3b4tvG2uSwIAQsjt0s6xBH47BORgDY2EOzIU1YC1Y
E9b+1c/3dwfUOQHXF/gu4D3h5dyMP+y6nT84fBPvu1SBf6bdGrXp1B536n0X
D/QNIR5TX5NcdyrztLA4uILy3/57W7M3fWmyi2wJXG6jZmMvZMyaLKwary6s
vBfNv2y+EBdlJmC+yhS/aar3h/k+DWGmESYsXlvBlpg3JcZRVaT2ih3dPnUO
DVOZQeWdzShbvJW06L2RfzMmQFj4NlWI8lgitDxnIyQZyQnr0h8zS2c5YRCv
KeReaC0YaHQR7iibCsGjOwiOl5UF6xH72JBlyqyokzv6HGWOs1964JoZLnh/
ib7oL/cnQ/Q/FSFCxD8Vha4ZEi01M1Sun4WadfRCH+5n8YNbrGPvpl9g9S99
2LjA7bh9WiKpJUpUtbCLrEEfjsE5GANjYQ7MhTVgLVgT1v7Vz/d3B9R6Q70T
cH7Be/TQ3Di+dJ0re+ETzkLaKbOq3X3wkRoTgsp2krlRatTtcH+Zl2naoTh6
ncbTr1vDaal3bzrFeB9J33Mchdt1E1ptHS5EBqgJqcITvklPCX4U7ofHdVXH
/mW3/jDfpyGS20cI2SOfs4GnmpGHo1+SpwftaeSQQDp+rh+t22hNPe8cIaOV
OuMFgoVQOitQGPTBUeBGv2J9OkUw1TNDWaZnNKvYupX1dzjIPq45yhb7FzHX
Rjzb55zMzBbYsxfBMbzxiq6o2Pgx0mrbFEenK+JF6Byqi1iCEiYZo6ftD3L6
dXdEftAPYsh7n7zi2R/zbw0OKFil3bFg3R5viUGT3lzCfh+u/YxGnHJ8L2mX
8Z35N9NS+DZh9/hgJTWm7qkna9CHY3AOxsBYmANzYQ1YC9aEteEacK1f/bwi
RIj496Dx/EcSea+5KD/yOdrZfSNK2lDFW187zyY2biaUOmcyRUkldlhVQi6s
s6FrlX1kDfpwDM7BGBgLc2AurAFrwZqw9q9+vr87QO8Gar6h7umUaSJqvrGY
v/UmnXm+ucy6GXgxLjsN906NI5OaqtP31wdR24QI+jIkgT7tmEojt8bRjTX+
1JGY0OANB8gnzXjc9uQ5ph1lIGQtKGPaSIkNPlaCOp9vhVeq7UA5/Ry5P8r3
aYh1zxYL71VeMN+WmkRiVENeHBtEybZQui4sgjo1G0ktqlRo/qDZpLa6Mx6a
u5o/mZSHekoZjnFsSrT8dEj/qUokt/sbfF9OjrSMVSPpF5sQn3glcnjzLXxs
agyeVyxFM95E8XGNurCnxoPZ+d6EJVQ0Y0Wbpfyt+V58yoB30iXhetL4MS8k
9nfGcv6OXTjDF6P/Y/0iEf+DhvpT8P4gloSYEmJL8Ke9f+Y+B97J4B84uE8u
Sp56VtagD8fgHIyBsWI8KkKEiL8KJo18KfFRDkNTz71HcjO3oZ3Vdfy4yOvs
WLiu8OrubtbV6y0OSL9Pntna0TyHYFmDPhyDczAGxsIcmAtrwFqwJqz9q5/v
7w57ezmuf/YyZH5JEcdMPoAqOn/mI++eYRMaKQl5fdexhN4XcbeNApnUxJy6
zgik9gvi6PXQFDrrcjxNto+gyuud6PpIDfrudDLR9D2FI/01mcnOfWzfvDWs
5YQjPGgogpYiaCqCtuKf9X10xjNS0FZ+wUzWNyfHe9SQeeEutNw9iu6oXEk9
ckPo5q92shhovH0hGaSeRSaPLyBuCaUkcdFTsr32CQkuv0vm6twhJriSmMd8
IP4dGtHySbWki0cRCVIJI2xFNvbuPpHJH9MUdrzoIfhPbitEvXrKPD6uZmnP
O7Kk2/v48X3KpEdnHeSKNToh/+WNUMC3GEj00/h9aKg/DrEjvD/IKUJuMeho
T04upRNiOckyD+X9U1TxsmxdWYM+HINzMAbGivlIESJE/FXQy7dQ8lrdBR2S
FCGNi9FIu+NpfoT9HqakUMPSPq1gxOkkfn0hh0z81Jpeu2wva9CHY3AOxsBY
mANzYQ1YC9aEtX/18/3dYZmlzE0MiUUVPo0xtZeijl1VWIuMuyy3hY6w0347
u7PoOR6beoOUDrGjm9pH0QdNE+j55nG0JnYRzb5iR5U2qNOoN/tJ6DY7Qsdv
wNJQK+nBFm2ZY04rRq2m8eChAV4a4KkB3hp/1vfR9VGhwqiQclZ9W51siK8k
H/UG0s8a0XRst3g61HqNLAYa1GwkjfxoTR97WtCqxtZ00+K+1EHent7bYUcz
7xFq8oFS0/FONPDpWHpumift9tSVhj42o/HFj0nR4B5E/3IEu7ZnhJD4YLGw
s6W3cOt9G2G45T420sqaRU0/wVsoqPAGnR5zl4xdEcRADnfGin6qvxMN/eeA
Qw6xI7w/WV2iXL5kefAubpxVW2Rc44XWea5ExjopsibrfzsG52AMjBX56CJE
iPirAMeMk7R9Vcl1HeyFuKyWyGfMZH7O/gHsTdMVjMUZsvstJ+KNHV3IjVY5
xOPaQ1mDPhyDczAGxsIcmAtrwFqwJqz9q5/v7440TwUu+3MMSlFSxeTQYdRU
QZmZTnrA3EcYCNUdstna1e/xvr0PSQoeSMd9iKTztFbRJYNCaLtHhO6XviK7
uoeRupmV+GyRC1ZufhIt85dDo/1LpNMfjeRrz92TgocqeKmCpyp4q/5Z30dZ
j7yFYUmXmNPYD7hsXDHZ4GJNt4bNpyPqY2UxUFblSlkuLO6pH13/wpd2TZ5L
n14JpoYf59Gp8wLpOkM/ujLcn6ZNCaeDji+jCSErafNB0dT56wQ6ztiAHl62
lsw47YAKn7YWttWPEIrfWgrsxkUWoNKCxfR5LW0RtFS6cMd46fAVgRzEQIWz
DnKQC/tP/etF/A8g5wn/H0AsDLlQ0BAALQGIHUFbwHyjqc2uZ+0kgT4Jkm3P
r0l8mALnvkJT1qAPx+AcjIGxoh6BCBEi/ioI7TzTxiTjo4SFB3BN+3TkjDcF
SudtG8HXhMfzWnHd+Ox2c1Ftljuu3lGIL36plTXowzE4B2NgLMyBubAGrAVr
wtq/+vn+7rCsfi/h9KJQ6Bg5vH3KbrQby7E2LneYl7q+4GyTzfrPrcMR+x+S
j+fsqYVJKJWGRND5sSOoVYkSNQxyI883N+H2btrKotcvZ0WTE/n3RkFI+1Yq
MrvwnOvW1Kqg05MHkrwNxlwFzpDsGV1l/Wd9H2X2JoLV2p0so+MFvGb/HrL8
eUsaMX84Hf91Ht1xJor2bhVFHbqF0qeDA+mF2/7U/0YQTWg8n5r3m0e9tALp
pJZzqVdEAA3pG0Z3OC6hiZbLaW1AJB3WYQp1bWVKq/eWkpqbTiRfeQle8zUO
Pa/WwFoVG7CVURE+K2zF1wd3x0uKW6AWL7KktcaGvPLhD1J79U5S4KDI8jBy
+bLv4z/zsxIhQoQIEX8fNNQ3GzC7G+exWgshvcHo8+EqLlW+C3+3jT4bkx3N
PAdnyRr04RicgzEwFubAXFHP7MfQ8Pd2u/2PJQ/HzkMZZjVo/b10hLLf8HM/
lbDrCjqC/cosNlWox9YXy8h0bEfneATSB/f8qJetDU03OE5mFEzCXqE6gqOx
g+A7XEWoyzRgpTpXUI2rEX5z9hBaMzeY+1n7IWPLFAWh1JfdY6txPJpLnIpK
iWGCDjVU7UWbp/anMe0G0l7p9rSrsR1V07Kj3rn9qZXJAFpTakdHefajkvi+
tPpaP3qj3p4an3SisTtcqO6CgbRTJKaT3LrQNTFNqVr6K2JsX0pCK86QkCvH
yH7Dw+RV1xRSdHsc6fSiHFPnp2hE4Ua+YrEWmz2ikh9haMADD/drcie0LHgX
B3sSf9bzihAhQoSIvxca6pttmxTPBQSHo1zfHFkMNNA+jj8/OJrtKqpgRlO1
BGjQh2NwDsbAWJgDc0U9sx9DQ77FlXM7JRuOe6CiyntoYewGhFzKea2mp1nK
AHXhafBqFqXVmHjfe0Iul/anCwMCqKmfL215rgfd0W8XOTitKffFcKDQ58Es
Yd7DNkLIgp7s1JA3aFxvW3w28iHi++37aXyYILySfdr2gT/YWxd3GfYVa8R6
kal3NpEPR48Rg843SPMeD0hX3YckY3EZSTN5QEJWPyQmPR4SzVVlpHj6Q3Iq
vpzQFY/JQKs7xLTkMulldI7onSshg21qSNrjpjTvTic6UxdR/zZOdGPcEFrb
61ucdNeMkvrGNC+okAjvBhGTwJG4R5gee6OwksWdHcfWXY/loRYJ+LjASYG8
zJ/1vCJEiBAh4u+FhvpmOgtHcA5vrWTxDOzpDA4cxr99RJhk5zb2vEWxrEEf
jsE5GANjYQ7MFfXMfgwN620+t/OWbH7sgKbsuYx8hVj05eNNnrZgTFlNTpB7
Mpk5nzIgsctekBJPR6oqN4/mZfrRQb370P3heWRfyVtk+dZMyJSME7Z8aCHU
FXZmLy4/QpeXWeDpx86jZSUJP60eqmDdWl71bSP+8IZWSNdLEc99MBMX+W3H
XQsvYKcnT7BqWC3203uPlRq/x46OdfhgYD0Om1OHh7asxwXDVcnwHTpk76gm
RH3DCayWaYqbnY9D858vxu1WOpMRTYpJ6pQu9MOhibTxxWhaejKWxmxaSW1M
F9CqEEfql6pO1+vGk2fXNuJdS7yYyYTLzGfaFrbjxiUe6rGhJgl4ucBN+bOe
V4QIESJE/L3QUN9M1TdQAnEM7OXYz+7GOb70k1Yvcuc3RhTyyhdqZQ36cAzO
wRgYC3Ngrqhn9mNoqLdiEblREnTJHYX1LUOnlZOQ/fQn/PZWRayPtqpg3msJ
a5LYnOR4PiN6mQ601fn5tLhXMO2CbOlrtxIySpPHSaZP2EFqKjy//ZqpdWnM
ejhJUb93TfDAdknIqMaC+1l6OLMGOaPB4w5zm4fcki44kc9PIZ1Y7/Y+bNWq
NayFWzpbP24Xu6W4lzlq7mUD3n/7b1E2W6ySzUZLstiC6ytY4P1RbMreCNa1
4jk79KCP0G3tcOGjt4Hg/fU2N35aJJnUqynV8R5DX+1ZQTf6baQ9rTLolrkb
6J6NC6jfHAtqcKSQnLl/GevHJrCrY1WEB6oXGT7QiA3pk4sOTFHFUJsE/Nw/
63lFiBAhQsTfCw2/byF+gT0ci2n2Mj4Q+DPPmaaFJuWEI98v6bIGfTgG52AM
jIU5MPffrmf2vXoZ8PMCTwvQdQZtQ9D3gRr3jZ4KHHCdjfY/lkDO62s7b4nl
t9jH4816zmNlFrrmqYvrXc8hNEyRlU17ybgN3QXFa+WsbbEUp5ES4mBhS90t
gmncxfn02HYHumDyM/LqW2wEMRLEShAzQewEMRTEUhBTQWz1sz6vYUk8arui
C5KTG8Qb7zFhJkpJTKpwnbX4Ii+gaZpCYKSecKxjS2Gsvp4weqWeMGxBS2GY
TUshwlxHWFauIhR+eMNSXRQFowMWwk7TKcJI7XnCo3uDBI1uW1hEVAU+9ymX
9J9nRIM+etOHeWvp2r0ZtHdROh20ZRWVsx5CUftyEnGsHs/WPMD09NoK7QKr
mdsGTQa6fEuzdTHUZ49boSnGPyJEiBDxL0XDfAvs3UD+Cjg8K3Z0lXa/Nocr
WTgOGW85goR9NbIGfTgG52AMjIU5MPffrmf2Pb0U8DIFPy/wtABdZ9A2BH2f
fZ9jkEQvCgHXGfg+Wx47oOBvMQrEPhqe3XG4w3ysb9sHL6i4xSuvUBUWbxwp
ZC40FUbHVCNJbC5ZeaM3NV3qRxvrzKNtwh3psR0vyK0LBgRyZJArg5wZ5M4g
hwa5NMipQW7tZ31eHc6tQyEDFdGji4b8cKkyy7o4i5Wbb2Om54pY77s3GVp0
j532vM2ina+zdZ2usyXyN9mVDTeZi3Mpc4w8xToGHWZVOsdYlN07FpfRQtiB
dYXARXJCgnYmm9PLS3ryej2euHALebdWm+7ePpF65q2hbVen0dAha6nix3F0
u/17UoFViM2VIyzUtavw5fN7ptNcW4x/RIgQIUKEDA2/ryFvBdwd4C9DDZf5
nfcS90cPuFTrAWjLyfmyBn04BudgDIyFOTD3365n9j29XGVfK5mXKfh5gacF
6DqDtmGqkiqGGvdMsxoZ1xliFNinKfXUxRHfYp8tl7fiFu9D8dbxUfylRDXB
84OXMKivvbBk9FgbH98sck+3Bz1p5UuHpgXQNK0BtK71U2LZvjEBjjRwpYEz
Ddxp4FDD+hBjwT7Tz/q8PFoc5a50NuVsHYdKb7v24MeapPAW067xTcw/8cvs
ldmnEUrMRlmOjbz0jvezfctru9bxZMcHvluLOn5Q0RP+wN4SPt3xAV97RYW9
y6jmRyUl8Ys3b+dP96bMb3QWC1icwQI096MJW8LJIqZFY8kUqqq3gu7NW0JT
Ow6nz6a+JHJIgfC2+SyhykjoOKmS3W6tKua/RIgQIUKEDA3zNUPf++QBbxlq
t5bc7ZCvkDrNxuGzq0RbN18yeuozWYM+HINzMAbGynjU3+b+2/XMvueXdG3i
O4m/0zOusbwbOmmaiMDTAnSdQdtw25TdKOFeuqzOa6YQK+P71LmeQ7DvA7FP
D9YXm7RO45Mm17Kqq1TYtFZL0B3ugRfdP0rGFllT1zw/endeICXedpTWlZG2
V+sx1MhDrTzUzEPtPNTQQy097DNBbf3P+rxGLV0mtSt6UzC6kxa3ZEA95503
Dp2P3IDuncpBiisK0dSIQtRXqwDpmx9EEwbnoLUTDqFrxw+jkcJBhDJ3oG16
qaj6VSayan8P5R6zxeNzI3Gf/Y44r18Mf8XkBZPrais81TcUJGPPo3mm28jH
mo60LNeNuvpPoLoTLGl18gXSOPwxjhqczIYNUhHWbTjCnh2+zDc+k4FMhlSh
2HXhqO8XT1nOUZZ7zFLmIBcJOUnITUKOEnKVrsdf52lM7p/fJudJXmGz8Fxo
0IdjcO57+cw7zaskp7ZXSqqtqiXzVr2SPP3ycxtcA64F14Rrf+/5RD1CESJE
iBDxR9AwfgTPUPAOBQ9R8BKNVV8uOengwe3omcK9nTCTu6c/vKDZdXW+3a01
vHaXYv500Gf+rpcKszdSZlZ95WQxCuzTfP14kwe+DvB9IOeVOT6K7/Yt9mlF
7FlO+WHWR6uQeXuaSV9eciM9A5WpU+uRtGNCBK1RC6WaafZ02rKHJHROHVZ0
yWaa+vqCtfsd2fqgoQj7TKCpCN+NP+u91BbkSvNHdJDeyO3HPZ/TCcm33YDm
HLuFph9Sx353jLDqaQtss1WCB64k+HGOLSbnbXFZHMH7nSU4OMYc3802xg8e
muKOx0djTaNEfH50Pl6L1+Pmva5x48yOs0neVkLF3D4Ca+7FunPm5JPuTdI6
SZ9WnDSi548q0NPPUojivmN4jkZH1qbpVqbtPYptqJ4uvdGsAqEYDTyr5XmE
Wy+V5Rwh9wg5SMhFQk4ScpOQo4Rc5dqL4QXD+18pQMWBBSaBqvnQoA/H4Nz3
8pkaMQtRRP08FHhyEVrUNRw9n/JzG1wDrgXXhGt/7/lEPwoRIkSIEPFH0DB/
CLHPuYSB0vC226RnxgyV2reK44wWzkW56YdQ+JcsVDG3htNxjefdTzmzGfVb
WFr0WeaRdo/VP3zAIEbx+1TCIFdl24Ix4CwD1xn4PhcT1QTY9znwLfbJ0zJg
NMUXt9nhRYJbV5OF6ymN9w6lWgNX0fklkbT4oSMFPZ1C7TqsfD6bRVwxEGB9
iLFgnwm8NMBTA7w1ftZ7+VRUU7BmmEvBog9TJdV6w7njl8s4ueCBqDx1E2p8
8AkKNdbDp0f1xDX77bDjzoG4vo8D5nxtsUGIDdYda4Hjik1wp+WW+G3iYByj
G4nXWWzA1h/D8cGc/cjCvit70vcYq719jt2NUWW1WYU4bl0AeauVTcy2FJCL
ximk0LkvcYjbgLuMOpBntu8Q32LtdekQlInCwlviTgEdsfHkpjhjTr0sFoTc
I+QgIRcJOUnITUKOUparHPKhwHekk/TLrRcF/PqofGjQh2Nw7nv5TJfpb9DU
Z6/RheS3aEnTevQ+8uc2uAZcC64J1/7e84l+pCJEiBAh4o+gId8H9n0g9glf
rMgfTsuQFowp50acKETKydq4/V0dbOC1Ba0/G8Bv3+TPjje+xA5lKgmVSrrC
4m8xCuzTQK4K+DoqanIC1G2hDd1lXGfg+0DOq7dWIbP9FvsMTo8iF7t9JkWj
KR1ttojOnR9H59km0GtfI2V6ysdLbhD//Co8YtUOButDjAX7TJBrg+9C2A+A
nMjPei92fbQkX7sn2JR3OJ2PF68v6JmaXDBPPt/GInghp3xZF/W8tQAl7t6O
koyPImnZGcSWnUQhs6Soe/4BVDd+D4p8vgv5lO9DbvqFyKPtPfSgvhZdaXQH
afuFo7fJ+woSrofzfVYs52NrecnAB9o4LD0FH0q5hg32PsR7qgrx4EMR+HwH
Rbw/zAFZNjvHsbfdkHfMGkTdD6PdPlKE1PaiVRFbZTlHiAnhvUAuEnKSkJuE
HCXkKoNb7yjIj1WVavlsLshtaZkPDfpwDM59L585tFMmspmfjkJrM5H8gO3o
0bqf2+AacC24Jlz7e88HOVnIzUKOFnK1//b6TREiRIgQ8Z+hId+n1Nyu4PSY
oVKIfXSDHaVZgSu5y5t8UQWfj/Kyj6JxQbPQkVsZUknYB/76ck/Wuk08gxgF
9mkUXLIZ8HWeBK9mX8snM6hdhxp3qPMCrjPwfYinmbTtDi9Z7LPwjh3NHhxG
zebF08jkFCq/Ok7mp+XcyJxmPhCIXstLGNY/+C3Ggn0myLXBdyDsA0AuBPgg
P+u9TFLIL5AvsSxYt8dbYtCkN5ew34drP6MR98jOWrrNxpz3aZzBH930iD86
Q4lZN9NgrzNV2bUXcizf+i0/acor/tqm1/z+E+/4e55ybPdYdVZapMnW3FZj
+nalfI+7fnyLm3ul5pU7pcR/A29OLFjEkbXsTrcC5nX6GLsyYScrnLeAdTnT
lnV2Ost/Hryd95Ev5PW7P+ODIuSZ/wwF1m7IRz4g/B0P14Rrwz3AvcA9wb3B
PcK9Lg/4KEmxc+ZO17yUaFhG20CDPhyDc997nuSlb/kipVo+rOAdb2f5Qcbx
/jNb5y0f+Is+H/jz39b2GPuB7/Lt35m6dfzXs29kz7cLyzHwzO3YVYU97fyZ
r19fzA/oE8eHTmzKd+7tVwAeKKADDlqYoAe15c1Gydu9vpLa9gckppsqRf6R
CBEiRIiQ4Xt8n+aG2yQvk3dzbS+pobBmRZym4QrpnoJk3snrMz+rQpmdupnF
P+5zmatb3x1X9knFl0wu4UulVfhuhzoMXqbtrtZjqNu6fcFApt/TrliKx8ZU
o7LRY22A6wx8n3mtq2X7PhD74I4J9PXpVNrFN0Hmp37t7SB6q5k67dEpjkwb
kYpvfIuxYJ/Jp34L0+lSzJ/69vsfciDAA4Hvop/1nkJMN0uzrhpIZx124DyO
tEZaTZ1Rvk4Zl7O0Ld/moB4L7rKKxWqeZA8VnjLHqBo2N7mK2djeZ/kBJazd
zCtsyqFiljvyOpvrfpuFTn7ESuMq2UT0iA01PMsGamayrguiWU7ZUkYn5rOi
RWqClQ0nvL/oIbywnixsWe0i1AsdBY1375m1/XHWdFEOm79EYGlLr7C6ZXfZ
kVd3mGP3UjZZ4ZrsmnBtuAe4F7gnuDe4R7jXKTk3uW43eiBNdonbt8VbAg36
cAzOfe95dONKmI/3VXYm5RqbmHpDVuf/Z7YZtTdYQcQNxqneYL5uN9ihZTdl
/4bnm5lZylq73GGmkx6wFhl3WdTdM0woT2ckbjiLmZHBR7lc4cAHDrxQQA8c
NDFHOXog+edOqCphCtqdHCLyj0SIECFChAzf4/tA7DPt8H40bJ8mzj9Qi95n
bpUmK3izydvOsNs7r7PKjwtZjZ0mbtuvM3F9upbsbHyEjNS6SfbtfUjMVj4k
ULcFteug37Nw8jOykZQQ0PeBGveQ+0dlXGfg+4wyWyTb93n1LfY5x8dTj9wQ
6qTanz75pEb12uwiYW+7EDsvUwz7TJBrG3fKmQHnWkPeTcb/gO8g+B3+s96T
Ud59aTgeI/0aHMPtqHZDQ8JXox4hrVHc5fG86UNXltj5JBu8SU3oNsJImOje
VbDkjAW9ilZCFx9tof/eFoJhtrbw9pWuEN+7pbD3gIHgyloLBRcMhBmnWwj2
+5WFJ1of2RBtOSFZT0vY97CncCl0tFCwfLaws3Su8KXaU0is7CvstuggpLo3
E0Z7qgkfw5oICfu0BbOu+oLJZz0hY6K2wG3Ull0Trg33APcC9wT3BvcI93pb
pSWa8DUI3WihiTY02yKBBn04Bue+9zyH52oLO1+0EOy66wjyA/5H6/HPbFkh
eoJlMz3BOElXkK/UFTK6tZQ9H/xbIUhX8FLXFzxGGAi5LXSECY2UBMXrl5nj
o1DWIX8Dn+O4FtW6GmHwgwNPFLt3TfDrw2Uodn0JGh35BLkMfC/yj0SIECFC
hAzf4/vAvg/EPkkzAnBxn1H4zDp16bA729mLfG0hwlRPmDwvkqWOu4c1g7LI
qatq1KibOS0dYkfbyA+k/GZ7We16qtYAmYbh8e0OFHSdQdvwrm4PCjXuUOcF
XGe/+XGynBfs+0Dss/OdhCqMryYOKyPI+/VP8YATBnit0U3u6K0M6YazAbyu
azzf/Lo6H+D0TMbXhd/fkIP4We8JLwyXjplQV+Br0Y47GviR09/TAWn9f+1d
dVRV2/NXMbEFAxOxUMTAp8i95+wxEGwMDGyxQWwkVOwvIRaCImCjYGAhEvfs
YyvGM7EwERVRUQEVm5+f837//GIt1n2A+HjMWnu5746Z2XdtD3PPfGZGjlQv
eZ2t6TkqU3KYbc8XVtvMm/eJ5a/+c5KHxnN+o1okz1y4h6ccCefzLfbybXsj
+KKe+/mJcQd4O8eDPGzDAb75yl4eZLKLT3fezhtM3MlvLTnE/fTP8BE77/LN
z5/zxH0pvPj9e7zK6Hie2SOKl/wWzh2Fndz1dBhv1mUfv5C5nxsYRfAhB3fz
WZv2KDIhGzpAF+gE3aAjdG26Zb96092KwoJtu9QTf3RUoaGPMczldJ7YxXu4
zulwfmfwXm53LEKp95GXbfX3CN5qSgTfdGEfT24foZyvdYMDPOhghPK5l8UB
ntboAN9tFcZjOq/jsRn2vNfVkrxNaIam/M2hws3q14QzNu8F1IVDbZTwQRuF
a6P8hMZ7QgTj3ruK8EdFVERFVERFpFBOeB/4vGIOZwqwffSGmIn9re2k2SM1
vG9cVdnIMo2bTJouvP6xkN2ZVo6uXupJtg7O1El/GX19uJSmVPBQ8vcgh2GF
6q5KLQvUtGjlOVPJbYj8PohxR5wXsM7A+8Dnhfc+sH1mZHZjV9KXC2zwfF7O
cy4v7xcujZg7TQDmGnFnSQYD4m79/JtT5ufvbvgegL/Ir+9p+9ij6vjubdRe
E8Zp4t3MJKshk6WoJtma+6HthRWaluK+2K3iTfvH4vNlOsy0qi4bFFmabTL7
IbqVyxDj17wVi3fMFBvv+Cg2N8kSVxzLEuuO+iTeysgSu1/5IBYPyxDbPH0n
Jntmig5NvomdTpZkTbaXZ/95VVlp6GMMc1iDtdiDvV4eWeJej/diUsd3Ytt6
GSJkQjZ0gC7QCbpBR+h683GW5sTwHtJXr9ea7N5L49DQxxjmtD0Par7mZcv4
/FEsXvejmNDqg3I+1JB1ePxJtH3zUbyg/1FEDoS5C7PEhaNfifcbXhadIzaJ
Dca3F6cMqyII5cOkZeG1eVRgO374azPublOej5zxXApceV+a1+KVVPr2J63x
SMA4AesEzBOwTznhq4AJAzYMGDFgxYrqBxZRbqgon10RFdHfp5zqd0UMed3x
YQkTi/CpPhaOV7xUkV26q2c/TlS/r1RTGG17Wd3PqrnGoOciTavDp+Nurhks
Dencnd8P3MMb9w3m3o/+ECx3W7HGiW/Y8xBL6vTTlklc6EcHWgbQwU4rlc/3
o2aSwR9O1HP5T1vnv+t5wRaCTQTbCPl93BOWKnFewDoD7wOfF977XP1p+9QZ
kMFvvqst9/a5x8tfK8OBuUbcGWLvkX8Iv7fhcwDuoufP8+TX93iiwy7BMtxQ
MBBtJO8wI75dHsiXer6Qon2aiNsc6zFy92MxHpeYZ8xblhz2lRVf/oFl7U5h
l/zvsza2iWxJ+ANW9exjNtE8iW2flsTCdyexuMVJ7EXUY1bW+xGzSHrI5PuP
WGzVZPam/AvWsEUaqzP8ndLQxxjmsAZrsQd7NTWTWB2jh+yUXyJrFHJfkQnZ
0AG6QCfoBh2ha2BKkmS+xJw3X3tb2jFgugYNfYxhTtvzVG6TlKftPzWS2JjB
f30nmXqPmcegJwy5D7YdecwaVX/M4iL++nx25B3WeI7MjnE/ZnfYhG11qys+
cPflX+3KyA+N6svnXPTkkssyuGvAWV5+Hef9nl7gK4bd1hqPBIwTsE7APAH7
lBO+CpgwYMOAEQNWDHUEUUsH+eTxNyi/7mcRFU4qqmdQREX09ymn+l0p4g5V
Wht3dWz/p+ppB7oJvuXCheHNdUXptanIAouLU0rv0Jxqz/idxpv4LLcY/sxi
H2+l24QPn+osOj2cxI6EpbL4qWraP9eDdvsEUKh3MA1x9FM+32kziAYd7kj+
Wa1pVnx7Gt+6k+IDgy8MPjH4xpDbMOFJdyXGHXFewDoD7/NxfYpIg+crts/e
mUZy0OnbPLh4CZ4qxSqx9zHbowTkYEz2q6fgLXAe2HT59T3G1a8qnrL0FcR3
R6SmOqu4/aMYnl2yF1/utUbsMdOb3T6bzbJ9zGhM7/70LXo4OY8YTGu79iTn
9Z2ozBZGrTw703KypMxNltR8nyXZaSxJ75AlbZ9vSR1bW1L5kpZ00tKSftTs
RrdHW1HGQWtqurS70tDHGOawBmuxB3u9bC3JZVdnMjzAaGhgp79k/pQNHaAL
dIJu0BG69hW6cZuOW3lce4E7ZF7VoKGPMcxpe54qIXnb1D5/nW/nnK4UfrMr
OQ/uRk8zLJX74VC2K9nEW9GA+j2UzyuftqL37XVpV6297Hjfe+Ju6zD+sZ21
PHzUdPmW6QhZN9lUfuVcRp7QJpv/2bG8bFK7htZ4JGCcgHUC5gnYp5zwVcCE
ARsGjBiwYmaTrZR6gvgbhN/h+XU/i6hwUlE9yyIqor9POdXvit7QRK03taxw
4Zi70O/8eaHppTpi8qKZ4rnQALGp5QTxi7BQ4/x5O2f9dOXuryrJR75v5rar
popSl6WsvcF31rcFUSPH+eQf4U9/xIeQhYe/8rlrOlG90NJ0feUJdj0znIX3
i2ZW5gkKBhpYaGCigY2e5PXX7/mTCXcYYtxbN/VjHh+MWZfTtUVdz7kc731g
+ySFr+CVeu+SEHs/8PRxATkYz1qPVB+snqGcBzZdYLVW+fb35dx5czE59JCw
tukzyTwxklczesnPrFrEV5aPFrdX2c8qZjWk1/XsKdhrGV1tuIIGck/qob+I
HFNm050pM6l7LWcy8XGlDdmu1KW4G+nquNHNn//u/+pKQRmu5J3mSoYfXOlF
RTca9YcbpQ53I785fzX0MYY5rMFa7MHe7b6u9L6OM2kcZ1LoT1mQCdnQAbpA
J+gGHaGrzQU3Pjr1Aq88Yhq36ldSQkMfY5jT9jyjsvO24XxVwl3p6CBXmrrS
lUa0cKM/KruQ76fZyvvBWGMPSny7lNpXWqZ8tn7fk9rsKkeZwgLm3uqHiryq
y+Vn95C9AlvL38um8H39l/M2F+z5ujur+J5Je7TGIwHjBKwTME/APuWErwIm
DNgwYMSAFQtPTo7z/vk3CL/Dlz9oVGT/FJFW9L/xCfCn4p1i2592Ne5W2WMN
1TMm6wn2kYsEpx/blYY+xjCHNViLPdhbhEcron8T5VS/q/HzJNW8UFmduqG1
4PPWW+hzMkGo2E4lvq0yTyw5WxBtG86SLA9x3rZ1FXmgRyovU9dQ6PNwAnu3
8RsrG9uV6jgspOPR/hTtG0J9qwcon0dsIvoRmcZe2A5nfYKHi0t/3I3NfPlS
mHxMIyIGHrHwiIlHbDzwHCf0P4nIbYj8Pohx7zLOVPRteFcNvI/utTLKex/Y
PinRp5X8Q7FDn6mRhxq1OHAe2HTPB76OHXN+ZL75v/LK/slrewE8wRsyHAuB
/QMbr/c8N2r3zo3qbXOjM7tcaGzfWTQv3okapM5U8GGtG60kR9MAOv/feLGh
8yypj0M6q75lGJv8wV6MvGWqNnb5Liyy4yLwU1eTDJiecXlW+cQXrfFIwDgB
6wTME7BPOeGrgAkDNgwYMWDF8DfI9OfvcPgiSoRMzjd82q+inPzp+V0/7t+W
jwmYMfit8O4G9ktZJ2dV9Xm26l32/mqr6S3U3d/O1KTNHyFtXnxcKv1nptLQ
xxjmsAZrsQd7/214NG3v66qKxdRHzpRU13bIVjXLzlAa+hjDXGG7X7875fZ5
0/DQUxXqomcbTlSZLd2sQk445IZDjjjkimtWyTwu/eJDDZlPlmqOPibpCaV4
sPxcWvFwuRTZJFCat7Ybd0/fxX22BPM5NRsL9ROt2IAdL5njUqJy7gupt14A
lQwOoW6X/emq20LSiepKM8d/Y92+jmUn2o7UTMqqJu8e3k12L2Uq94p9puRA
RC5E5EREbkTkSESuRORMRG5D5FBEjDtyKiK3IvA+yLWI9z6wfYDJBjYbGG1g
tX/V75m88n/ltb8IPMEbMiDrn+7/qnzNUvH1ZZfrTodTrWhtic4UNcKc6o5r
SxYDLEgMsVXiA1e5+9HDM8G0rd1f8YJN5hFVeF6KWv5xig2tu4/FNItjFV1u
sm7qVAU/lWCXwpqkao9HAsYJWCdgnoB9yglfBUwYsGHAiAErht/h8EUAjwFM
an7dz19FOfnT87t+3L8tH5OCWz5wV/F54R0O7BjrD+bCHJdFwshVekJf5/7S
h2TGVXt28VfVbigNfYxhDmuwFnuw99+GR9P2vibM8hLauK8Ulut7CbfmLlYa
+hjDXGG7X7875fZ5g7roG06NFLY9tRZcroxQcsIhNxxyxCFXnOmfr9STkwdJ
PSLr8IOua/hu98d86Zxy8spRunLUtXTuujqWvwppwNccnSMWazaRfd//ktX3
UlNY2nwyueBPXQJC6EaIP618MJ9muhA1kL6x2OwlbFjicPG822l+4o0ouzYf
K3ub2MrRji2VGhiohYGaGKiNgRoZqJWBmhaonYHchsjvg5oaiPMC1hl4H9Tc
QO0N2D6IzUeMPmL1f5U/O6/wz3mNF9b27/Pvjn+GjQJbBTYLbBfYMLBlYNPA
toGNA1sHNg9sH9hAsIXwGbYRbCTYSrCZYDvBhoItBZsKtlV+25ewiWEbw0aG
rQxfBPAYwKTq1Yj9x9s/OfnT87t+3L8tHxMwY8COAcMDLBne5cCeiXaKFISa
fYUeVn7Spb7L+d5zL3jDSXoyGvoYwxzWYC32YO+/DY+m7X2d619SHOBSTkzo
WFIcuP6rgIY+xjBX2O7X7065fd6EtsoQzqU+FCZEXBUWdn4sICcccsMhRxxy
xeknhgiDZidooqo14CZ7DnL9ZbXlOjsHyDumjZfnzSPZqM9J3ihstGhzbgn7
PPUbs9pKNKz2AnLd50+1NoSQxfm/bJ+bk9WUtewlq+kwkX08Mluc0KMJX5um
4SVc3/CBb0rJtcJKy35Zb5QaqKiFipqoqI2KGqmoZYp6XqhpgRqqqKWKmqqI
cUecF2qtAu8DnxdyMsL2QY5G5Gr8VfZ2XsW/53W8uLb+md89/h0+Kviq4LOC
7wo+LPiy4NOCbws+Lvi64POC7ws+MPjC4BPDZ/jI4CuDzwy+M/jQ4EuDT03B
VuWzfxE+UfhG4SOFr3Taj+0KJhVxOYMnvfzH2z85+dPzu37cvy0fEzBjwI4B
QwYsT7fpLdR4pwO75vvR1+qQEsbSg3oGfOiB5XxM391KQx9jmMMarMUe7P23
4dG0va97qh8W7u6MEfyDDgn6n8KVhj7GMFfY7tfvTrl93gQ83C7MW71BmCqv
FuJLb1RywiE3HHLEIVfch4ZzBe/ZxQTZw1yzZHZV3uDMRb6oawu5rIWV3C1A
T7Y601kTYmLPPhl+Y5GBXUkMWEgHnvjT8p0h5KkfoPi8PBcTfQ1+ybpctWLd
yjUW3nUN4Rcmh/MxO635kl5+kpvXZKnhluvSlQQdbjXluZT99a4k9HkmCQfe
S+adiyl13FHLFPW89I1vSMjrXPm2rvTQYEAcYtwR53XGeqSC90FNDrz3ge2D
Wh2/yt/6d/Mf5ne+QG3xub97/kNglIFVBmYZ2GVgmIFlBqYZ2GZgnIF1BuYZ
2GdgoIGFBiYa2Gh8BlYamGlgp4GhBpYamGpgq4vsn9wRMHbA2uF3GJ5F368O
VaWbtFDf8hyp3mqVqere1lRT93BjqQttlJpm3JTiLn2Rdobq8JRpxfjtURmS
79nnUi/Hp1KxlBTJsfkrqV+gdg17sBc8wAs8wRsyIAsyIRs6QBfoBN2gI3T9
VXjBvCJgxoAdA4YMWDJgemyc+0t4t7Ppp33DPKYJ3+3sRP/TXGw76J3S0McY
5rAGa7EHewsbHi0n0va+Joz8In2/WJyfP/hZ0l+ZpjT0MYa5wna/fnfK7fPG
9sNTySstQRp+6bzkk35LqnRRh2esNeQuvVry79Z6PPOZl1Rr/k3Be12w2GX6
BdF+wQYx3u1PQW7npFptMVp0PzKMjVuZxoIuEp1du5DKlAggnRkh9DXcn0In
LiRgoIGFBiYa2Ohgh1Te5F5lOchB4m2tHCUjXZXYedFs8ZFdG3Fn+nnFBoMt
BpsMttk/5ffb361/kd/1IrSNz/7d618gRh2x6ohZR+w6YtgRy46YdsS2I8Yd
se6IeUfsO2LgEQuPmHjExiNGHp8RM4/YecTQI5YeMfWIrS/yf+WOEGMJ/zve
QSP2Es+ihNWlBONHpsLgd7L60psykn/X4nzJqhm87aswXvXOaf4u9DIvHXye
O6hkfsQwiqutI3ltnaO8hF8ML5+qXcMe7AUP8AJP8IYMyIJMyIYO0AU6QTfo
CF1/VbxoXhEwY8COAUMGLBlwzcD2wL/1sJ4Bh52ztLoV08vYx9qUuac09DGG
OazBWuzB3sKGR8uJtL2vZRaf5tnyRd7h8ymuPytOaehjDHOF7X797pTb502c
ayQv1Xwn37ouiL9vvIvvdLvOp+/Vka3WVZIDurzlTg37c5tkb7HF+kHs5cAd
rGJSLDs8MooV+xLBLiedYiMSStFVFVEwn09XYvzpwIoQchnoTxMqzSenBkSI
gUcsPGLiERsfdL+SXOtGObmq3jZ+ZNJgTWjEWDGrxBox65a9mCnrifDBwRcH
nxx8c/8U//3frX+a3/VCtc3P97vXP0WOQuQqRM5C5C5EDkPkMkROQ+Q2RI5D
5DpEzkPkPkQORORCRA4F5EZEjkTkSsRn5E5EDkXkUkROReRWLMI/544QdwHs
If5PIvfW7Z+/w/AsejPUXji55pO634c20h0rY27pH8JLb0zkowyLyZMWl5Yv
WujIb3dkcYOLr3icfSq/kf6aj7N6xw9Ga9ewB3vBA7zAE7whA7IgE7KhA3SB
TtANOkLXX5UvLK8INjNsZ9jQsKUR2wV8MzA+8HPhXQ/snaHZNchGTUpDH2OY
wxqsxR7sLWz2eE6k7X2ddiWbu24uKW+tn83tojOUhj7GMFfY7tfvTrl93px4
/oKHaa5yn3Kc+xhc5RYnKskL3EW5UsP+8p+7jOWHz3vyJ9E1WAn7U8z7qj59
HWBGndxUtPaiOd0JU9PougOprM58ChX8qNGFYHqsDqDKvguownsVjVmRypAD
EbkQkRMRuREHO8TwCqEhvFVngd9aFqhpuTBbSDQ0FrduKiH+cXyLgsEGFhuY
bGCz/ynxG/Y6sXElEsziUNMAtQ1Q4wC1DlDzALUPUAMBtRBQEwG1EVAjAbUS
UDMBtRNQQwG1FLStv5DX9Rm853xVBXftrY7PeKuqYLbcAg19jGGuoM+DGhWo
VYGaFahdgRoWqGWBmhaobYEaF6h1gZoXqH2BGhiohYGaGMilgBoZqJWBmhmo
nYEaGqilgZoaqK1RFP+eO0KOdfyfxO8SvJvFO+hBP3+Hnfj5LJo1z0td0fak
xulijJSSYcLrVprBSx/x5cOj1vFBddbwKZ89eRPXxTyqySL+2WAJN3izlNu0
XKZVwx7sBQ/wAk/whgzIgkzIhg7QBTpBN+gIXX9Vvvi8IvhM4TuFDxW+VMS3
I8YLOOexfXdz+Lvwzgd2z5nWs5SGPsYwhzVYiz3YW9j8sTmRtvf1irMvL7lj
Ldfo+/JO3ZYrDX2MYa6w3a/fnXL7vKm8aR4vkdiZr7uny7+M6MC5Oee1vtSW
kxu1l511istnDWRhd/EVzHxmFTJp3p8qHHElnWFLaGAnDwob70LLGy0kj2k+
pP9pHVVd4kffpyymanUtafWgN8zYx4qhBgZqYaAmBmpjhC0ZLJm9Oh637cV8
Tc8rTTWXAi+pdw/WF/wv3lAnzeukRgw+YvERk4/Y/H9K/o4nY11Uct23vxzv
mdd4UJe64XGxq8tq9By3xkXXMotFQx9jmCvo86BGKWqVomYpapf+b7waapyi
1ilqnqL2KWqgohYqaqKiNipqpKJWKmqmonYqPqOWKmqqorZqUf7D3FHrzaYW
6mKxqrkn2qkvzE5XNYprrlnSoZSU5GAqhc6QNU/XlRGM0oqJ29Omi8/cw8Sp
tqdFufZl0Uz/vNhOw8V1YUfEwVcOi2O9o8R1NWJEeyftGvZgL3iAF3iCN2RA
FmRCNnSALtAJukFH6AqdoTvOgLMU9PeZE52981K1iLkLbZpmCjZ9dgglur6X
qrjd4HP368n9tu7mC8+/E1vPvMcSNxB9Dp2lNPQxhjmswVrswV7wAC/wBO+C
Pl9+k7b3ddP3U6LU4aLYbO4pcfyHWKWhjzHMFbb79btTbp83HwfEiE1rXhfT
BmSIKamPRUf7BeLiKi1VxlUeScMdrgiRE1XM5usjVn+0mj7scKfyQ1ZThY9r
KTDAm4aaLKTq6S7knrGA9gxdTLMvzqGPh3vR1xm6FFlhMev5ZI5gtySNf8io
Ki84ouG1mwyTlnqYib4zB4vGbzOFeybnCixfT17TLpMY1Xwds18e75vX8cC2
Nl/inAb10vxIfBMnrV8Wi4Y+xjBX0Ofp0yNLGLL0ubB6fYKQfvT/xitGdl8r
NIrdIHVP9uAlb1/lo4uXkqOrVZdH2taWx+kayDpza8hNNtaQTb7XlHe0qCWX
SP3rs1nlmvLuBfmPryrs9S/2vjRUebnsVWcHNRUenX+kXmBTTxr/9qNUT2PI
qy85KAX0/yq0+/5G7DJmFLNVBbPVWVHsWuljbPyoOJZ69wCzmhHGAuJ2sjWd
w9nnzXvYtLfaNezBXvAAL/AEb8iALMiEbOgAXaATdIOO0BU6Q3ecAWcp6O8z
J6r0QFJ9Zz2Efj6nhPiBS4WR009LWVV+2uGeaTx+ihcvFXpC3Op2kKn0a9NE
o65KQx9jmMMarMUe7AUP8AJP8C7o8+U3aXtfDcKiWOZQifk2j2Inh+1TGvoY
w1xhu1+/O+X2edPINJytLLmPtXc/wtonHGaP9bewnmWWsRVGTqzqipWsWUAC
SzxqRGvujaEAMy8K/LCWftTypeVtXKjUMVuKN+pMpVUi9Xgr0NvgNtTEvDJ1
SI5kdr3ei8n/8eD7OtSS74fUkLuc3MOt6htrSnsOEVuNniumHqomZlvrCgWV
ryevacIKUcXaR//yfG95nQ9u7eVFcQMsr8UJN5zjTJzLxqKhjzHMFfR59gUt
EF4HTBBKvOolDO4+8v/kq1rW55p6hcMOifkN4PKz7XzZg/O82o4H3NQ+idft
c59PDb3Fu7e8xeMW3+FRXne507A7XF32jvLZIVN7vFJR/dP/Sc6OAarh5g0E
HhkkxFyyEcRqftKTnhN4Xwrgkc8a8ecjpohlXo5k6fMvs5aNqtCgLGN6OqYt
7a5oSr49GtE5tzo0ItmA6gl1qdu0+vQlRruGPdgLHuAFnuANGZAFmZANHaAL
dIJu0BG6QmfojjPgLAX9feZEPnvtVWW80tWZ+x2E05vqCYknHKUWdXvzpj6r
+MSYRrzfpMli5z8HsiavY5hg9lJp6GMMc1iDtdiDveABXuAJ3gV9vvwmbe/r
ln3GVPppKyrf0ZiG6RoqDX2MYa6w3a/fnXL7vJl1uA5NPVuH7j5vQNJTQ3qR
VZscRlalG1J5ijmiR497t6LpUYPp5X0P2vvQh8KneVHrKdPIyF5FulfKUZDp
XVZL9xwbVPUCq6F3ltVfvYt1ftKX1Y8YL/K7jtz50D0+7OtVrrKeyXXtTmrs
//wkGCyoLvptiRKiZ+wvsHw9eU3xSYc6znhr8svz/ed1PYCBp9JjKoy3jK0X
+TzmeOVF0WjoYwxzBX0e0y2pqkyjw6oP+51U297/P/nK28+M8xhbSerWwU/6
vP6GlNLsu9S4eRleSac03ysW43MWfZSyL7yXQmt8koy3fZFG2n2RLpl9kS47
fpGabct/fBUwYcCGASMGrFhhqzew69VNVZOMccK+eQ+Edsf9hXGG16R7RqF8
+r6bPH6nAz9dIUyUEzezW1f0KGR4X/JLmUmnMhbQ2hMu1PHsFPpjwyga2n8E
OUWMpk7X7am9OE6rhj3YCx7gBZ7gDRmQBZmQDR2gC3SCbtARukJn6I4z4CwF
/X3mRG1Le1l0Sa+iZjd91UEmorqD+0rNlU9zJBu9vVK1hZZSMZcVgsEfHqJT
+gNxok8FhoY+xjCHNViLPdgLHuAFnuBd0OfLb9L2vobMn0lf7N3pyM0ZZG44
QWnoYwxzhe1+/e6U6+dN+Cjq8WQE1Tw3hhxXj6Pe8WNpnsMImlxtKI3rMoJ6
6zuRRcMl5BLkQyZW3vTw0xwaaCuQUa80JlhPYk424eL1/ZXEzK8TxOvvz4qT
ZqWI4S/DxfCNj4U3+iulU/0q8ASfsrzs/d2S4YRNmvgzCerZJfWFZXWj1XUr
7C2wfD1F9M+k6T9tTLxng6/xWN23FuWrG8cVf62j2SaZaJoHSnHLu5ZWew7L
Vo8KchLG3Nsp2DqdFCbUuSQMaHhOcHuqEUalHBai9A4J385GCol9jgrXduSu
gQd4gSd4QwZkQSZkQwfoAp2gG3SErtAZuuMMOAvOhLMV9PebW3LkOup1Y3yF
wxPKijYdooVt54vxGc0v8AXrdeSGi9dw4+N/ivrhp1jXSh3IuoUHdfzsTx/H
hZC8LpBmZ62mPvre9CnCk0KPeVP3Ayuoabp2DXuwFzzACzzBGzIgCzIhGzpA
F+gE3aAjdIXO0B1nwFkK+vvMiezujYq96ZIW10maqMn6WFvjeWGS2iiiu2Dd
2Ffol2UoTPMYL9US+/HjV6L49s7PlYY+xjCHNViLPdgLHuAFnuBd0OfLb9L2
vtpF+9NssyBa08+fgmqvVBr6GMNcYbtfvzvl9nkzuKI3Bc/yJKve3nRp7Arq
UNeXtlZfQSaO3nS8rA9JIavIcvY6ckr0o6WBnvRw5Sjq8lafem9Yyr75rZaW
rRDlpClu8hQ7O7lWTDk5bsk0nlbHWUrKmK6uYLRYOKp+JFz3fiwkufoJfWL2
qyt0ddPMEM5rXoe5a5Iuji50z/8iyl/Cezb4GoG3Sh7rorJ6FhFXZb6Xxjzi
kKZ4/a6a/i981LzmMqHp9Q9CygYT8VrTHmJgi4HinJJ9xTrju4gONS1E/3bm
4ukfFmLxEEFMf5+7Bh7gBZ7gDRmQBZmQDR2gC3SCbtARukJn6I4z4Cw4E85W
0N9vbmm4T1V1k+rBgueBGmLQpAvCBOtK/NXgR9xudFV5TOgWntQnWazd7A5b
YdiDTCf40gD/UMo6s4/mrQ4n6wpbyGnGBlr9NICiTQPJun8QVQjSrmEP9oIH
eIEneEMGZEEmZEMH6AKdoBt0hK7QGbrjDDhLQX+fOdGhK+9jB01bounh8l1T
W71H02brD3WtWfeF9RkG4p/XDwrvin2Vzh5/yjNirOX17+YrDX2MYQ5rsBZ7
sBc8wAs8wbugz5ffpO199e0VStvt9tCPuzto95NgpaGPMcwVtvv1u1NunzeG
YzdQQ/sA6tRmA1UI20hBnYKpar1giji6kRZ4b6RR1ULIvecmKn5lA6lbedL8
EQPp8tRiZNC4JksOrimfSg6XbYIvyH3mxsju2f+Rd7RvILN7/tzFapLUoO07
wf6+g2jvOF3MKFZPLBanFio+KyV18hsitXMuJZkZvCo0z///Al1ivdQ=
      "], {{0, 
      800}, {576, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{576, 800},
    PlotRange->{{0, 576}, {0, 800}}], ",", "6"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Binarize", "[", 
  RowBox[{"%", ",", "0.2"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6554988994480677`*^9, 3.655498964205127*^9, {3.655499140742887*^9, 
   3.6554991538320503`*^9}, {3.655499193221861*^9, 3.655499330799211*^9}, 
   3.655499365275771*^9, 3.655499404809711*^9, 3.655499631378352*^9}],

Cell[BoxData["Vectorize"], "Input",
 CellChangeTimes->{{3.65549903150037*^9, 3.655499048400785*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "colored"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imgSet", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"imgTipLCaCbPartitioned", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "i"}], "]"}], "]"}], "/", 
          RowBox[{"Max", "[", 
           RowBox[{"imgTipLCaCbPartitioned", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "All", ",", "i"}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4", ",", "6"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeDetect", "[", 
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{"im", ",", "1", ",", 
           RowBox[{"Image", "[", 
            RowBox[{"imgSet", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "2", ",", 
           RowBox[{"Image", "[", 
            RowBox[{"imgSet", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "3", ",", 
           RowBox[{"Image", "[", 
            RowBox[{"imgSet", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], ",", "r", ",", 
         "t", ",", " ", 
         RowBox[{"Method", "\[Rule]", " ", "mt"}], ",", 
         RowBox[{"\"\<StraightEdges\>\"", "\[Rule]", "se"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"colored", "=", 
       RowBox[{"ImageApply", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"List", "@@", "col"}], "#"}], "&"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"cn", ",", "ColorNegate", ",", 
            RowBox[{"#", "&"}]}], "]"}], "@", "edges"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Framed", "[", 
       RowBox[{
        RowBox[{"Image", "[", 
         RowBox[{"colored", ",", 
          RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
        RowBox[{"FrameMargins", "\[Rule]", 
         RowBox[{"-", "2"}]}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"im", ",", "2", ",", "\"\<image\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Image", "[", 
          RowBox[{"imgSet", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Image", "[", 
          RowBox[{"imgSet", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Image", "[", 
          RowBox[{"imgSet", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<\\nedge detection parameters\>\"", ",", "Bold"}], "]"}], ",",
    "\[IndentingNewLine]", "\"\<  pixel range\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "2", ",", "\"\<\>\""}], "}"}], ",", "1", ",", "10", 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<  threshold\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", ".15", ",", "\"\<\>\""}], "}"}], ",", "0", ",", ".5", 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<  straight edges\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"se", ",", "0", ",", "\"\<\>\""}], "}"}], ",", "0", ",", ".5", 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<  detection algorithm\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mt", ",", "\"\<Canny\>\"", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Canny\>\"", ",", "\"\<ShenCastan\>\"", ",", "\"\<Sobel\>\""}], 
      "}"}]}], "}"}], ",", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<color\>\"", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"col", ",", "Red", ",", "\"\<\>\""}], "}"}], ",", "Red", ",", 
     RowBox[{"ImageSize", "\[Rule]", "150"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<\\nreverse colors\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cn", ",", "False", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, {3.50044892034375*^9, 3.500449033*^9}, 
   3.50044907053125*^9, {3.500449100890625*^9, 3.500449122625*^9}, {
   3.5004491665*^9, 3.500449214875*^9}, {3.500449245609375*^9, 
   3.500449274921875*^9}, {3.50044934865625*^9, 3.500449366171875*^9}, {
   3.50044944028125*^9, 3.500449446546875*^9}, {3.500454463265625*^9, 
   3.50045446378125*^9}, 3.500454530046875*^9, 3.500454605359375*^9, {
   3.500454722859375*^9, 3.500454922984375*^9}, {3.50045496675*^9, 
   3.500455180671875*^9}, 3.500455210734375*^9, {3.5004552479375*^9, 
   3.500455273796875*^9}, {3.500456787390625*^9, 3.5004568843125*^9}, {
   3.50045691753125*^9, 3.5004569281875*^9}, {3.500456978234375*^9, 
   3.50045700753125*^9}, {3.50045703815625*^9, 3.50045713375*^9}, {
   3.5004571923125*^9, 3.500457248296875*^9}, {3.500457350078125*^9, 
   3.500457525171875*^9}, {3.5004576413125*^9, 3.50045765859375*^9}, {
   3.500458147828125*^9, 3.50045816771875*^9}, {3.50045836040625*^9, 
   3.500458361109375*^9}, {3.500458416671875*^9, 3.500458422125*^9}, {
   3.500458460328125*^9, 3.500458582609375*^9}, {3.500458623140625*^9, 
   3.50045863190625*^9}, {3.500458686046875*^9, 3.50045868634375*^9}, {
   3.500459004375*^9, 3.50045901965625*^9}, {3.500459059390625*^9, 
   3.500459092203125*^9}, {3.50045914378125*^9, 3.500459144015625*^9}, {
   3.500459277140625*^9, 3.500459282453125*^9}, {3.50045934203125*^9, 
   3.500459430859375*^9}, {3.500459529890625*^9, 3.50045959734375*^9}, {
   3.50045964078125*^9, 3.500459650625*^9}, {3.500459681421875*^9, 
   3.500459683703125*^9}, {3.500459743953125*^9, 3.500459744859375*^9}, {
   3.500459777109375*^9, 3.500459783453125*^9}, {3.50045999984375*^9, 
   3.500460022328125*^9}, {3.50046140153125*^9, 3.500461427859375*^9}, {
   3.50046152846875*^9, 3.500461559828125*^9}, {3.500461596484375*^9, 
   3.500461606859375*^9}, {3.50046165365625*^9, 3.500461670734375*^9}, {
   3.500461801078125*^9, 3.500461826078125*^9}, {3.500461858859375*^9, 
   3.500462128546875*^9}, {3.50046243853125*^9, 3.50046244171875*^9}, {
   3.500462480953125*^9, 3.50046248778125*^9}, {3.500462598765625*^9, 
   3.500462614453125*^9}, {3.500462711890625*^9, 3.500462809203125*^9}, {
   3.500462853390625*^9, 3.50046286275*^9}, {3.500462985984375*^9, 
   3.50046304515625*^9}, {3.500463288328125*^9, 3.5004633048125*^9}, {
   3.5004633520625*^9, 3.5004633669375*^9}, {3.5004634123125*^9, 
   3.500463474171875*^9}, {3.50046352059375*^9, 3.5004635605*^9}, {
   3.50046361284375*^9, 3.500463631109375*^9}, {3.500463759921875*^9, 
   3.5004637915625*^9}, {3.500463953796875*^9, 3.500463974171875*^9}, {
   3.5004640718125*^9, 3.50046408184375*^9}, {3.500464143953125*^9, 
   3.500464148203125*^9}, 3.500464182921875*^9, {3.5004687659375*^9, 
   3.500468767390625*^9}, {3.500753113455386*^9, 3.500753263202359*^9}, {
   3.644303972466514*^9, 3.6443043079143867`*^9}},
 CellID->1828511993]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamic Tracking", "Section",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
  3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
  3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}, {
  3.6451745177618113`*^9, 3.6451745511597767`*^9}, {3.645176312809124*^9, 
  3.645176319247444*^9}, {3.6482333992780437`*^9, 3.648233404285647*^9}}],

Cell[CellGroupData[{

Cell["Smooth Motion Tracking", "Subsection",
 CellChangeTimes->{{3.656847902625214*^9, 3.656847912977355*^9}, {
  3.6568479444395533`*^9, 3.656847946086132*^9}}],

Cell[CellGroupData[{

Cell["1. Frame Orientation", "Subsubsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, 
   3.6482584313299007`*^9}],

Cell["\<\
We score edges by the sum of the classified values over the number of pixels\
\>", "Text",
 CellChangeTimes->{{3.643625413357626*^9, 3.643625417163785*^9}, {
  3.643625555206805*^9, 3.6436255942371817`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"drctnName", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drctn", "=", 
   RowBox[{"frameOrientation", "[", 
    RowBox[{"imgSClassified", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"drctnName", " ", "=", " ", 
  RowBox[{"drctn", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "\"\<Top    : {1,0}\>\""}], 
     " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}], "\[Rule]", " ", 
      "\"\<Bottom : {-1,0}\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", " ", 
      "\"\<Left   : {0,1}\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}], "\[Rule]", " ", 
      "\"\<Right  : {0,-1}\>\""}]}], 
    "}"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.643625754656096*^9, 3.643625758183429*^9}, {
   3.643625809335472*^9, 3.643626076229471*^9}, {3.643734129004766*^9, 
   3.643734179184359*^9}, 3.643734216792006*^9, {3.643734274880382*^9, 
   3.6437342771826963`*^9}, {3.6437345538778048`*^9, 3.643734574734508*^9}, {
   3.643734668313698*^9, 3.6437346864712353`*^9}, {3.643734759206962*^9, 
   3.643734855114561*^9}, {3.643734898821629*^9, 3.643734918145006*^9}, {
   3.643737520374242*^9, 3.64373757430821*^9}, 3.643737640435363*^9, {
   3.6437397007738523`*^9, 3.643739716836157*^9}, {3.643739833825026*^9, 
   3.643739901926825*^9}, {3.64373998966005*^9, 3.643740010483122*^9}, {
   3.643740121615356*^9, 3.643740122373994*^9}, {3.6448398042235928`*^9, 
   3.644839867790588*^9}, {3.6448400203533497`*^9, 3.644840189606201*^9}, {
   3.644840220929933*^9, 3.6448403156765947`*^9}, {3.6449060973859262`*^9, 
   3.644906141916965*^9}, {3.644906212908597*^9, 3.64490622799607*^9}, {
   3.644906280946124*^9, 3.6449064459028254`*^9}, {3.6449064944504757`*^9, 
   3.6449065417684298`*^9}, {3.645346546372775*^9, 3.645346553783362*^9}, {
   3.645346611271763*^9, 3.645346631861205*^9}, {3.645346724113909*^9, 
   3.645346817773817*^9}, 3.655538805689878*^9, 3.6555388393708267`*^9, 
   3.655538877032172*^9, {3.656153652608148*^9, 3.656153657096466*^9}, {
   3.656153693877206*^9, 3.656153695978318*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2. Find Starting Point", "Subsubsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
  3.6449209788469677`*^9, 3.644920988525371*^9}}],

Cell[BoxData[
 RowBox[{"strtPnt", "=", 
  RowBox[{"findStartingPoint", "[", 
   RowBox[{"imgSClassified", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644924565970454*^9, 3.6449245970953712`*^9}, {
   3.6555388984946547`*^9, 3.6555389149505367`*^9}, 3.655653160041314*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Find Path to Tip", "Subsubsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
  3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
  3.644924647146278*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"pthToTip", ",", "edgPts"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pthToTip", ",", "edgPts", ",", "rnPts"}], "}"}], "=", 
   RowBox[{"runReach", "[", 
    RowBox[{"imgSClassified", ",", "strtPnt", ",", "drctn", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", "True", ",", "True", ",", "True"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.644924565970454*^9, 3.6449245970953712`*^9}, {
   3.6449290829609823`*^9, 3.644929088927546*^9}, {3.6449295834168777`*^9, 
   3.644929708284606*^9}, {3.644929757121051*^9, 3.644929801909913*^9}, {
   3.644995238143066*^9, 3.644995251221816*^9}, {3.6533243265057096`*^9, 
   3.653324332139003*^9}, {3.653324559481482*^9, 3.653324567732459*^9}, {
   3.655538935901299*^9, 3.655538943310301*^9}, {3.655538977421062*^9, 
   3.655539063661978*^9}, {3.655539098813692*^9, 3.6555391056919937`*^9}, {
   3.655544881299906*^9, 3.65554488169129*^9}, 3.655653163409031*^9, {
   3.655653219922463*^9, 3.655653228045083*^9}, {3.6556533077593527`*^9, 
   3.655653311119115*^9}, 3.6561536984741364`*^9}],

Cell[BoxData[
 RowBox[{"dynFig1", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"diagram", ",", "classLeg", ",", "lineLeg"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"diagram", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{"imgS", ",", "\n", 
          RowBox[{"Image", "[", 
           RowBox[{"imgSClassified", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "0", ",", "0.5"}], "]"}]}], ",", 
              RowBox[{"1", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", "0.4"}], "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", "0.4"}], "]"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "1", ",", "0", ",", "0.4"}], "]"}]}]}], 
             "}"}]}], "]"}], ",", "\n", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"toImgS", ",", "pthToTip"}], "]"}], "]"}], ",", 
             "Orange", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Point", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"toImgS", ",", "pthToTip"}], "]"}]}], "]"}], ",", 
             "\n", 
             RowBox[{"Map", "[", 
              RowBox[{"Point", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"toImgS", ",", "edgPts", ",", 
                 RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", "\n", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"ArrowScale", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", " ", 
                    RowBox[{"Most", "[", "pthToTip", "]"}]}], "]"}], ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", " ", "rnPts"}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], ",", "\n", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"ArrowScale", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", "    ", 
                    RowBox[{"rnPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"Length", "[", "edgPts", "]"}]}], "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", 
                    RowBox[{"edgPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], "}"}],
                   "]"}]}], "]"}], ",", "\n", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"ArrowScale", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", "    ", 
                    RowBox[{"rnPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"Length", "[", "edgPts", "]"}]}], "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{"toImgS", ",", 
                    RowBox[{"edgPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}],
                   "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Reverse", "[", "strtPnt", "]"}], "]"}]}], "}"}]}], 
            "\n", "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "320"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"classLeg", "=", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"easySwatch", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<3\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\"\<2\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Path along the digit\>\"", ",", "Black", ",", 
              "\"\<Line\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Starting Point\>\"", ",", "Black", ",", "\"\<Point\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<1\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<RunReach Paths\>\"", ",", "Orange", ",", "\"\<Arrow\>\""}], 
             "}"}]}], "}"}], ",", "4", ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
        "\"\<Classified Values\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", " ", 
         RowBox[{"diagram", ",", "classLeg", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Frame Orientation : \>\"", ",", "Bold"}], "]"}], 
             ",", "drctnName"}], "}"}], "]"}]}], "}"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<0. Classified values overlayed on RGB image\>\"", ",", 
             "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<1. Find Frame Orientation\>\"", ",", 
             "\"\<2. Find Starting Point\>\"", ",", "\"\<\!\(\*
StyleBox[\"3.\",
FontWeight->\"Plain\"]\) Find Path to Tip\>\""}], "}"}]}], " ", "}"}], ",", 
         RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.655539186454915*^9, 3.655539291839498*^9}, {
   3.6555393485471582`*^9, 3.655539428489972*^9}, {3.655539485800284*^9, 
   3.655539502855741*^9}, 3.655539747692341*^9, {3.655539801723838*^9, 
   3.655539867978993*^9}, {3.6555399304251947`*^9, 3.655539968059492*^9}, {
   3.655542863659886*^9, 3.65554290070113*^9}, {3.6555442795591516`*^9, 
   3.655544305142302*^9}, {3.655544360693799*^9, 3.655544562581031*^9}, {
   3.6555446140612087`*^9, 3.655544680569408*^9}, {3.655544762850273*^9, 
   3.6555448325472*^9}, {3.65565325302304*^9, 3.655653257380117*^9}, {
   3.655653341799964*^9, 3.655653344450323*^9}, {3.6556533952781477`*^9, 
   3.655653396947196*^9}, {3.656848130732511*^9, 3.6568481345453672`*^9}, {
   3.656848366454797*^9, 3.656848462147121*^9}, {3.6568485051373053`*^9, 
   3.656848543525352*^9}, {3.656848584166627*^9, 3.656848629621572*^9}, {
   3.65684868021978*^9, 3.656848746668775*^9}, {3.656848801807721*^9, 
   3.656848818989849*^9}, {3.6568488503903217`*^9, 3.6568488706846333`*^9}, {
   3.65684890132576*^9, 3.6568489868783293`*^9}, {3.656855223387657*^9, 
   3.656855230786716*^9}, {3.6568582972177753`*^9, 3.6568583350381727`*^9}, {
   3.656858400900885*^9, 3.656858449169413*^9}, {3.656858564640506*^9, 
   3.656858596221663*^9}, {3.656858664780272*^9, 3.656858751793128*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["4. Fillament Fill", "Subsubsection",
 CellChangeTimes->{{3.643625173925045*^9, 3.6436251922768927`*^9}, {
  3.6449209788469677`*^9, 3.644920988525371*^9}, {3.644924636755871*^9, 
  3.644924647146278*^9}, {3.6449463308385277`*^9, 3.644946342221195*^9}}],

Cell["\<\
Set the number of fillaments as a proportion of the length of the finger in \
frame\
\>", "Text",
 CellChangeTimes->{{3.646143679031444*^9, 3.64614370838395*^9}, {
  3.65650755499739*^9, 3.656507556665948*^9}}],

Cell["Filament fill the images.", "Text",
 CellChangeTimes->{{3.645421662995245*^9, 3.6454216866398897`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pop", "=", 
   RowBox[{"pointOnPath", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", "pthToTip", "]"}], ",", 
     RowBox[{"2", " ", "dWidth"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fillamentFraction", "=", 
      RowBox[{"1", "/", "3"}]}], ",", "numFill"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numFill", "=", 
     RowBox[{"Floor", "[", 
      RowBox[{"fillamentFraction", "  ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Extract", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"pthToTip", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"pthToTip", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}], ",", 
           RowBox[{"Position", "[", 
            RowBox[{"drctn", ",", 
             RowBox[{"1", "|", 
              RowBox[{"-", "1"}]}]}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"midDigitPts", ",", "reachPts"}], "}"}], "=", 
     RowBox[{"fillamentFill", "[", 
      RowBox[{"imgSClassified", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pthToTip", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", "pop"}], "}"}], ",", 
       "drctn", ",", "numFill"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.655545168252215*^9, 3.6555452551257973`*^9}, {
   3.6555479983767548`*^9, 3.655548029991457*^9}, {3.655548164390768*^9, 
   3.655548165431252*^9}, {3.655653271517465*^9, 3.6556532731737823`*^9}, {
   3.655656178326696*^9, 3.6556561830349092`*^9}, {3.6556566091742487`*^9, 
   3.655656682014249*^9}, {3.6561537170777473`*^9, 3.656153717784946*^9}, {
   3.656153969976863*^9, 3.656153984919842*^9}, 3.656154135202961*^9, {
   3.656848229931416*^9, 3.656848282893217*^9}}],

Cell[BoxData[
 RowBox[{"dynFig2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pathToTipImg", ",", "midFingerPtsImg", ",", "reachPtsImg", ",", 
      "diagram", ",", "classLeg"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pathToTipImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "pthToTip"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"midFingerPtsImg", " ", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "midDigitPts"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reachPtsImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "reachPts", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diagram", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", "\n", " ", 
         RowBox[{"imgS", ",", "\n", " ", 
          RowBox[{"Image", "[", 
           RowBox[{"imgSClassified", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "0", ",", "0.5"}], "]"}]}], ",", 
              RowBox[{"1", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", "0.4"}], "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", "0.4"}], "]"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "1", ",", "0", ",", "0.4"}], "]"}]}]}], 
             "}"}]}], "]"}], ",", "\n", " ", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", "pathToTipImg", "]"}], ",", "Orange", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Point", ",", "midFingerPtsImg"}], "]"}], ",", "\n", 
             " ", 
             RowBox[{"Map", "[", 
              RowBox[{"Point", ",", "reachPtsImg"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"toImgS", "[", "pop", "]"}], "]"}]}], "}"}], ",", 
             "\n", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"ArrowScale", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Most", "[", "midFingerPtsImg", "]"}], ",", 
                    RowBox[{"Rest", "[", "midFingerPtsImg", "]"}]}], "}"}], 
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"Line", ",", "reachPtsImg"}], "]"}]}], "}"}], ",", 
             "\n", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
               RowBox[{"ptsColor", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"reachPtsImg", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"ptsColor", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"reachPtsImg", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"ptsColor", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Point", "[", "midFingerPtsImg", "]"}]}], "}"}]}], 
            "\n", "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";", "\n", 
     RowBox[{"classLeg", "=", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"easySwatch", "[", 
         RowBox[{
          RowBox[{"{", "\n", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<3\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\"\<2\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}]}], "}"}], 
            ",", "\n", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Path along the digit\>\"", ",", "Black", ",", 
              "\"\<Line\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<1\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], 
            ",", "\n", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Paths taken by RunReach\>\"", ",", "Orange", ",", 
              "\"\<Line\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Bottom Edge Point\>\"", ",", 
              RowBox[{"ptsColor", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}],
              "}"}], ",", "\n", 
            RowBox[{"{", 
             RowBox[{"\"\<Top Edge Point\>\"", ",", 
              RowBox[{"ptsColor", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}],
              "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<Mid Point\>\"", ",", 
              RowBox[{"ptsColor", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}],
              "}"}]}], "}"}], ",", "3", ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "15"}]}], "]"}], ",", 
        "\"\<Classified Values\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", " ", 
         RowBox[{"diagram", ",", "classLeg"}], "}"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\"\<4. Fillament Fill\>\"", "}"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.655545832504993*^9, 3.655545884024701*^9}, 
   3.6555461407883987`*^9, {3.655546220388443*^9, 3.6555462800701857`*^9}, {
   3.655546311434884*^9, 3.655546314399952*^9}, {3.655546359143067*^9, 
   3.655546397932822*^9}, {3.655546566959097*^9, 3.655546616591916*^9}, {
   3.655547044839625*^9, 3.655547138923669*^9}, 3.65554803834363*^9, 
   3.655653289051813*^9, 3.656154008238956*^9, 3.656154138388761*^9, {
   3.656850029614552*^9, 3.6568500580772953`*^9}, {3.656850103027873*^9, 
   3.656850204859181*^9}, {3.656850248840046*^9, 3.656850251507346*^9}, {
   3.656850291718439*^9, 3.656850352423111*^9}, {3.6568503933584127`*^9, 
   3.656850414649474*^9}, {3.656850464184951*^9, 3.656850490630972*^9}, {
   3.656850535737873*^9, 3.6568506775232687`*^9}, {3.656850726860776*^9, 
   3.656850763102562*^9}, {3.656850802583374*^9, 3.656850802997657*^9}, {
   3.656855241403658*^9, 3.656855246267042*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["5. Put into standard orientation.", "Subsubsection",
 CellChangeTimes->{{3.650642348315463*^9, 3.6506423568267384`*^9}, {
  3.650646699215472*^9, 3.6506467062208347`*^9}, {3.655550417403934*^9, 
  3.655550434177465*^9}, {3.655656952675354*^9, 3.655656968448738*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"reachPtsStd", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"std", ",", "reachPts", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"midDigitPtsStd", "=", 
   RowBox[{"std", "[", "midDigitPts", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.655556526160523*^9, 3.6555565393863277`*^9}, {
   3.6555565714387493`*^9, 3.655556612905731*^9}, {3.6555570673914223`*^9, 
   3.655557084587358*^9}, {3.655657629219491*^9, 3.655657632481956*^9}, {
   3.655657675151519*^9, 3.655657676870022*^9}, 3.656154019840002*^9, 
   3.656154140768874*^9, 3.65615421638929*^9, 3.656154324138033*^9}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "pathToTipImg", ",", "midFingerPtsImg", ",", "reachPtsImg", ",", 
     "diagram", ",", "classLeg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pathToTipImg", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"toImgS", ",", "pthToTip"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"midFingerPtsImg", " ", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"toImgS", ",", "midDigitPts"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"reachPtsImg", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"toImgS", ",", "reachPts", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"diagram", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"reachPtsStd", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"reachPtsStd", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"Point", "[", "midDigitPtsStd", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"Background", "->", "White"}]}], "]"}]}], ";", "\n", 
    RowBox[{"classLeg", "=", 
     RowBox[{"easySwatch", "[", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Bottom Edge Point\>\"", ",", 
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
          "}"}], ",", "\n", 
         RowBox[{"{", 
          RowBox[{"\"\<Top Edge Point\>\"", ",", 
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
          "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", "\"\<Mid Points\>\"", "}"}], "]"}], ",", 
           RowBox[{"ptsColor", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
          "}"}]}], "}"}], ",", "4", ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "15"}]}], "]"}]}], ";", "\n", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", " ", 
        RowBox[{"diagram", ",", "classLeg", ",", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Standard Orientation : \>\"", ",", "Bold"}], "]"}], 
            ",", "std\[Theta]", ",", "\"\< rad\>\""}], "}"}], "]"}]}], "}"}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\"\<5. Put into standard orientation\>\"", "}"}], 
       "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Code",
 CellChangeTimes->{{3.655545832504993*^9, 3.655545884024701*^9}, 
   3.6555461407883987`*^9, {3.655546220388443*^9, 3.6555462800701857`*^9}, {
   3.655546311434884*^9, 3.655546314399952*^9}, {3.655546359143067*^9, 
   3.655546397932822*^9}, {3.655546566959097*^9, 3.655546616591916*^9}, {
   3.655547044839625*^9, 3.655547138923669*^9}, 3.65554803834363*^9, 
   3.655653289051813*^9, 3.656154008238956*^9, 3.656154138388761*^9, {
   3.656850029614552*^9, 3.6568500580772953`*^9}, {3.656850103027873*^9, 
   3.656850204859181*^9}, {3.656850248840046*^9, 3.656850251507346*^9}, {
   3.656850291718439*^9, 3.656850352423111*^9}, {3.6568503933584127`*^9, 
   3.656850414649474*^9}, {3.656850464184951*^9, 3.656850490630972*^9}, {
   3.656850535737873*^9, 3.6568506775232687`*^9}, {3.656850726860776*^9, 
   3.656850763102562*^9}, {3.656850802583374*^9, 3.656850802997657*^9}, {
   3.656850955326865*^9, 3.6568510013086348`*^9}, {3.656853335793605*^9, 
   3.656853364164311*^9}, {3.656853395569377*^9, 3.656853439605015*^9}, {
   3.656853479315743*^9, 3.656853538305092*^9}, {3.6568535871286163`*^9, 
   3.656853624145048*^9}, {3.656853769521625*^9, 3.6568537703137836`*^9}, {
   3.656853822820887*^9, 3.656853867510385*^9}, {3.656853924122982*^9, 
   3.656854011409493*^9}, {3.656854244301165*^9, 3.656854251409464*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Find the Approximate Orientation", "Subsubsection",
 CellChangeTimes->{{3.650642348315463*^9, 3.6506423568267384`*^9}, {
  3.650646699215472*^9, 3.6506467062208347`*^9}, {3.655550417403934*^9, 
  3.655550434177465*^9}, {3.655656952675354*^9, 3.655656977576076*^9}, {
  3.6556574537533693`*^9, 3.655657463271614*^9}, {3.65565750454943*^9, 
  3.655657505133561*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lm", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"midDigitPtsStd", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], "]"}], ";;", 
        RowBox[{"-", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], 
          "]"}]}]}], "]"}], "]"}], ",", "x", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]1", "=", 
  RowBox[{"ArcTan", "[", 
   RowBox[{
    RowBox[{"lm", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.656154330031631*^9, 3.656154330990674*^9}, 
   3.6567890909235897`*^9}],

Cell[BoxData[
 RowBox[{"dynFig3", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pathToTipImg", ",", "midFingerPtsImg", ",", "reachPtsImg", ",", 
      "diagram", ",", "classLeg"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pathToTipImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "pthToTip"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"midFingerPtsImg", " ", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "midDigitPts"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reachPtsImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "reachPts", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diagram", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"reachPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"reachPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"midDigitPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], 
                 "]"}], ";;", 
                RowBox[{"-", 
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}],
                   "]"}]}]}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mpf", "=", 
              RowBox[{"midDigitPtsStd", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}],
                   "]"}], ";;", 
                 RowBox[{"-", 
                  RowBox[{"Floor", "[", 
                   RowBox[{
                    RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", 
                    "6"}], "]"}]}]}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Green", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"lm", "[", 
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"lm", "[", 
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}], 
                  "}"}]}], "}"}], "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "420"}], ",", 
        RowBox[{"Background", "->", "White"}]}], "]"}]}], ";", "\n", 
     RowBox[{"classLeg", "=", 
      RowBox[{"easySwatch", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Bottom Edge Point\>\"", ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", "\n", 
          RowBox[{"{", 
           RowBox[{"\"\<Top Edge Point\>\"", ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "/", "3"}], ",", "\"\< of the Mid Points\>\""}], 
              "}"}], "]"}], ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Midline Fit\>\"", ",", "Green", ",", "\"\<Line\>\""}],
            "}"}]}], "}"}], ",", "4", ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "15"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", " ", 
         RowBox[{"diagram", ",", "classLeg", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Approximate Orientation : \>\"", ",", "Bold"}], 
              "]"}], ",", "\[Theta]1", ",", "\"\< rad\>\""}], "}"}], "]"}], 
          ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Standard Orientation : \>\"", ",", "Bold"}], "]"}],
              ",", "std\[Theta]", ",", "\"\< rad\>\""}], "}"}], "]"}]}], 
         "}"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<5. Put into standard orientation\>\"", ",", 
          "\"\<6. Find the Approximate Orientation\>\""}], "}"}], "]"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.655545832504993*^9, 3.655545884024701*^9}, 
   3.6555461407883987`*^9, {3.655546220388443*^9, 3.6555462800701857`*^9}, {
   3.655546311434884*^9, 3.655546314399952*^9}, {3.655546359143067*^9, 
   3.655546397932822*^9}, {3.655546566959097*^9, 3.655546616591916*^9}, {
   3.655547044839625*^9, 3.655547138923669*^9}, 3.65554803834363*^9, 
   3.655653289051813*^9, 3.656154008238956*^9, 3.656154138388761*^9, {
   3.656850029614552*^9, 3.6568500580772953`*^9}, {3.656850103027873*^9, 
   3.656850204859181*^9}, {3.656850248840046*^9, 3.656850251507346*^9}, {
   3.656850291718439*^9, 3.656850352423111*^9}, {3.6568503933584127`*^9, 
   3.656850414649474*^9}, {3.656850464184951*^9, 3.656850490630972*^9}, {
   3.656850535737873*^9, 3.6568506775232687`*^9}, {3.656850726860776*^9, 
   3.656850763102562*^9}, {3.656850802583374*^9, 3.656850802997657*^9}, {
   3.656850955326865*^9, 3.6568510013086348`*^9}, {3.656853335793605*^9, 
   3.656853364164311*^9}, {3.656853395569377*^9, 3.656853439605015*^9}, {
   3.656853479315743*^9, 3.656853538305092*^9}, {3.6568535871286163`*^9, 
   3.656853624145048*^9}, {3.656853769521625*^9, 3.6568537703137836`*^9}, {
   3.656853822820887*^9, 3.656853867510385*^9}, {3.656854288418537*^9, 
   3.656854289002596*^9}, {3.6568552631248426`*^9, 3.656855265705042*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["7. Generate model points in Approximate Orientation", "Subsubsection",
 CellChangeTimes->{{3.650642348315463*^9, 3.6506423568267384`*^9}, {
  3.650646699215472*^9, 3.6506467062208347`*^9}, {3.655550417403934*^9, 
  3.655550434177465*^9}, {3.655656952675354*^9, 3.655656977576076*^9}, {
  3.6556574537533693`*^9, 3.655657495070244*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlA", "=", 
   RowBox[{"rotateModel", "[", 
    RowBox[{"mdlD", ",", "\[Theta]1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlPts", "=", 
   RowBox[{"modelToPoints", "[", 
    RowBox[{"mdlA", ",", 
     RowBox[{"midDigitPtsStd", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6556591111397657`*^9, 3.655659139913477*^9}, {
  3.656071897866761*^9, 3.656071898885249*^9}, {3.6561606879627438`*^9, 
  3.656160692224978*^9}}],

Cell[BoxData[
 RowBox[{"dynFig4", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pathToTipImg", ",", "midFingerPtsImg", ",", "reachPtsImg", ",", 
      "diagram", ",", "classLeg", ",", "mpf"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pathToTipImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "pthToTip"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"midFingerPtsImg", " ", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "midDigitPts"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reachPtsImg", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"toImgS", ",", "reachPts", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mpf", "=", 
      RowBox[{"midDigitPtsStd", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], "]"}], 
         ";;", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], 
           "]"}]}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diagram", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"reachPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"reachPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"midDigitPtsStd", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], 
                 "]"}], ";;", 
                RowBox[{"-", 
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}],
                   "]"}]}]}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mpf", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"lm", "[", 
                  RowBox[{"mpf", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mpf", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"lm", "[", 
                  RowBox[{"mpf", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}], 
                "}"}]}], "}"}], "]"}]}], "}"}], ",", "\n", 
          RowBox[{"modelToGraphics", "[", 
           RowBox[{"mdlA", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Yellow", ",", "Yellow"}], "}"}], ",", 
            RowBox[{"IncludePoints", "\[Rule]", "False"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"mdlPts", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"mdlPts", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mpf", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"lm", "[", 
                  RowBox[{"mpf", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mpf", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"lm", "[", 
                  RowBox[{"mpf", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}], 
                "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "420"}], ",", 
        RowBox[{"Background", "->", "White"}]}], "]"}]}], ";", "\n", 
     RowBox[{"classLeg", "=", 
      RowBox[{"easySwatch", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Bottom Edge Point\>\"", ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", "\n", 
          RowBox[{"{", 
           RowBox[{"\"\<Top Edge Point\>\"", ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "/", "3"}], ",", "\"\< of the Mid Points\>\""}], 
              "}"}], "]"}], ",", 
            RowBox[{"ptsColor", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\"\<Point\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Midline Fit\>\"", ",", "Green", ",", "\"\<Line\>\""}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<The Model\>\"", ",", "Yellow", ",", "\"\<Square\>\""}], 
           "}"}]}], "}"}], ",", "4", ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "15"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", " ", 
         RowBox[{"diagram", ",", "classLeg", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Approximate Orientation : \>\"", ",", "Bold"}], 
              "]"}], ",", "\[Theta]1", ",", "\"\< rad\>\""}], "}"}], "]"}]}], 
         "}"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Column", "[", 
        RowBox[{
        "{", "\"\<7. Generate model points in Approximate Orientation\>\"", 
         "}"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.655545832504993*^9, 3.655545884024701*^9}, 
   3.6555461407883987`*^9, {3.655546220388443*^9, 3.6555462800701857`*^9}, {
   3.655546311434884*^9, 3.655546314399952*^9}, {3.655546359143067*^9, 
   3.655546397932822*^9}, {3.655546566959097*^9, 3.655546616591916*^9}, {
   3.655547044839625*^9, 3.655547138923669*^9}, 3.65554803834363*^9, 
   3.655653289051813*^9, 3.656154008238956*^9, 3.656154138388761*^9, {
   3.656850029614552*^9, 3.6568500580772953`*^9}, {3.656850103027873*^9, 
   3.656850204859181*^9}, {3.656850248840046*^9, 3.656850251507346*^9}, {
   3.656850291718439*^9, 3.656850352423111*^9}, {3.6568503933584127`*^9, 
   3.656850414649474*^9}, {3.656850464184951*^9, 3.656850490630972*^9}, {
   3.656850535737873*^9, 3.6568506775232687`*^9}, {3.656850726860776*^9, 
   3.656850763102562*^9}, {3.656850802583374*^9, 3.656850802997657*^9}, {
   3.656850955326865*^9, 3.6568510013086348`*^9}, {3.656853335793605*^9, 
   3.656853364164311*^9}, {3.656853395569377*^9, 3.656853439605015*^9}, {
   3.656853479315743*^9, 3.656853538305092*^9}, {3.6568535871286163`*^9, 
   3.656853624145048*^9}, {3.656853769521625*^9, 3.6568537703137836`*^9}, {
   3.656853822820887*^9, 3.656853867510385*^9}, {3.656854288418537*^9, 
   3.656854289002596*^9}, {3.656854716805428*^9, 3.6568547389656897`*^9}, {
   3.656854795588542*^9, 3.656854828717877*^9}, {3.6568548853054657`*^9, 
   3.656854899061696*^9}, {3.656855067841481*^9, 3.656855068656453*^9}, {
   3.656855271569051*^9, 3.6568552737134047`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["8. Find vectors between points.", "Subsubsection",
 CellChangeTimes->{{3.650642348315463*^9, 3.6506423568267384`*^9}, {
  3.650646699215472*^9, 3.6506467062208347`*^9}, {3.655550417403934*^9, 
  3.655550434177465*^9}, {3.655656952675354*^9, 3.655656977576076*^9}, {
  3.6556574537533693`*^9, 3.655657495070244*^9}, {3.655657528574354*^9, 
  3.655657551851162*^9}}],

Cell[TextData[StyleBox["Visualize The Forces and Moments.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.656837985669159*^9, 3.656838043082431*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showTranslation", "[", 
   RowBox[{"mdl_", ",", "mdlPts_", ",", "imgPtsIn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pts", ",", "mpf", ",", "imgPts", ",", "posOut", ",", "\[Theta]Out", ",",
       "vecs", ",", "force"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"pts", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"mdlPts", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"imgPts", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"imgPtsIn", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"Length", "[", 
             RowBox[{"mdlPts", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "]"}], ",", 
        RowBox[{"imgPtsIn", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"Length", "[", 
             RowBox[{"mdlPts", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}], "]"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"posOut", ",", "\[Theta]Out"}], "}"}], "=", 
      RowBox[{"shapeMatchingMoments", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vecs", ",", "force"}], "}"}], "=", 
      RowBox[{"vecsNforce", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"imgPts", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Red", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"imgPts", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"modelToGraphics", "[", 
          RowBox[{"mdl", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Yellow", ",", "Yellow"}], "}"}], ",", 
           RowBox[{"IncludePoints", "\[Rule]", "False"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"mdlPts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Red", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"mdlPts", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", "\n", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"Opacity", "[", "0.6", "]"}], ",", "Thin", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", 
                 RowBox[{"vecs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "pts", "]"}]}], "}"}]}], "]"}]}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "posOut"}], "}"}], "]"}], 
           ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{"posOut", ",", "3"}], "]"}], ",", "posOut"}], "]"}]}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"450", ",", "Automatic"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.656407792731875*^9, 3.656407890653493*^9}, 
   3.6564089407098103`*^9, 3.6564089820588284`*^9, {3.6564090702566013`*^9, 
   3.6564092368066463`*^9}, {3.656409848670191*^9, 3.65640987927214*^9}, {
   3.656410453980997*^9, 3.656410498382427*^9}, {3.6564105387202177`*^9, 
   3.656410552789023*^9}, {3.656410592607811*^9, 3.656410643260777*^9}, {
   3.656410757261731*^9, 3.6564107642445393`*^9}, 3.656411706126628*^9, {
   3.656411806585744*^9, 3.656411818041134*^9}, 3.6564124585172253`*^9, {
   3.656412563072891*^9, 3.6564126957973146`*^9}, {3.65641273385924*^9, 
   3.6564127613072777`*^9}, 3.656415137753942*^9, {3.6564152040222282`*^9, 
   3.6564152221058407`*^9}, {3.656433357172249*^9, 3.656433357611307*^9}, {
   3.656757705662044*^9, 3.656757708991171*^9}, {3.6567578574341803`*^9, 
   3.656757863184203*^9}, {3.6567580991606083`*^9, 3.6567581124877987`*^9}, {
   3.656758146538041*^9, 3.656758147495208*^9}, {3.6567630217576857`*^9, 
   3.656763077619054*^9}, {3.656764029244381*^9, 3.656764030013555*^9}, {
   3.6567660686662292`*^9, 3.6567660692050047`*^9}, {3.6567911773062572`*^9, 
   3.6567912201369877`*^9}, {3.656791717781003*^9, 3.656791747711815*^9}, {
   3.656793774387694*^9, 3.656793777373465*^9}, {3.656795438877754*^9, 
   3.656795445382214*^9}, {3.656838795094324*^9, 3.656838835834927*^9}, 
   3.656854943653879*^9, {3.6568549801760817`*^9, 3.656854994260895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showMoments", "[", 
   RowBox[{"mdl_", ",", "mdlPts_", ",", "force_", ",", "moment_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "pts", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"pts", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", "mdlPts", "]"}], ">", "3"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"mdlPts", ",", "1"}], "]"}], ",", "mdlPts"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"pts", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "pts", "]"}]}], "}"}]}], "]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "[", "None", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"modelToPolygon", "[", 
            RowBox[{"mdl", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrowheads", "[", 
                RowBox[{"Min", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.02", ",", 
                   RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"force", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"pts", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"Min", "[", 
                    RowBox[{"pts", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}],
                     ")"}]}]}], "}"}], "]"}], "]"}], ",", "\n", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pts", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"force", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], "]"}]}], " ", 
              RowBox[{"(*", " ", 
               RowBox[{",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Norm", "[", 
                   RowBox[{"force", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"force", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], " ", "*)"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "pts", "]"}]}], "}"}]}], "]"}]}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"len", "=", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"Abs", "[", "moment", "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"len", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"len", ",", 
                    RowBox[{"moment", "/", "len"}]}], "}"}]}], "}"}], "]"}], 
               ",", 
               RowBox[{"Text", "[", 
                RowBox[{"moment", ",", 
                 RowBox[{"{", 
                  RowBox[{"len", ",", 
                   RowBox[{"moment", "/", 
                    RowBox[{"(", " ", "len", ")"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "Automatic"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "DisplayProgram",
 CellChangeTimes->{{3.656407792731875*^9, 3.656407890653493*^9}, 
   3.6564089407098103`*^9, 3.6564089820588284`*^9, {3.6564090702566013`*^9, 
   3.6564092368066463`*^9}, {3.656433457761429*^9, 3.656433466912443*^9}, {
   3.6564338159255867`*^9, 3.6564338255165453`*^9}, {3.656763156833563*^9, 
   3.6567631609346457`*^9}, {3.656763206849778*^9, 3.656763271764145*^9}, {
   3.656763342315544*^9, 3.656763375962318*^9}, {3.6567634577931232`*^9, 
   3.6567634706154137`*^9}, {3.656763952679892*^9, 3.656763957200789*^9}, {
   3.6567639972703733`*^9, 3.656764010660268*^9}, {3.656766061130768*^9, 
   3.656766061654512*^9}, {3.6567937797628727`*^9, 3.6567937826530933`*^9}, {
   3.656837839066661*^9, 3.65683784310844*^9}}],

Cell[TextData[StyleBox["Find Position and Orientation.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.656837985669159*^9, 3.656838043082431*^9}, {
  3.656838087546412*^9, 3.6568380978723297`*^9}}],

Cell["Find the model points in the image orientation.", "Text",
 CellChangeTimes->{{3.656838115726503*^9, 3.656838140450674*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdl", "=", 
   RowBox[{"rotateModel", "[", 
    RowBox[{"mdlD", ",", "\[Theta]1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlPts", "=", 
   RowBox[{"modelToPoints", "[", 
    RowBox[{"mdl", ",", 
     RowBox[{"midDigitPtsStd", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.656320886705814*^9, 3.656321366717415*^9, 
  3.656410556158944*^9, 3.6564106272829533`*^9}],

Cell[BoxData[
 RowBox[{"modelCPOFig", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xCoords", ",", "mdl", ",", "mdlPts", ",", "mpf", ",", "lm", ",", 
      "imgPts", ",", "posOut", ",", "\[Psi]Out", ",", "centroidModelFig", ",",
       "transFig", ",", "momFig"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xCoords", "=", 
      RowBox[{"midDigitPtsStd", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mdl", "=", 
      RowBox[{"rotateModel", "[", 
       RowBox[{"mdlD", ",", "\[Theta]1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mdlPts", "=", 
      RowBox[{"modelToPoints", "[", 
       RowBox[{"mdl", ",", "xCoords"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"imgPts", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"reachPtsStd", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"Length", "[", 
            RowBox[{"mdlPts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"reachPtsStd", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"Length", "[", 
            RowBox[{"mdlPts", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], "}"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"mpf", "=", 
      RowBox[{"midDigitPtsStd", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], "]"}], 
         ";;", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "[", "midDigitPtsStd", "]"}], "/", "6"}], 
           "]"}]}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lm", "=", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{"mpf", ",", "x", ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"posOut", ",", "\[Psi]Out"}], "}"}], "=", 
      RowBox[{"shapeMatchingMoments", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"centroidModelFig", "=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "mdlPC", ",", "mdlLC", ",", "mdlAC", ",", "bBox", ",", "ticks"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mdlPC", "=", 
          RowBox[{"modelPntCentroid", "[", 
           RowBox[{"mdl", ",", "xCoords"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mdlLC", "=", 
          RowBox[{"modelLineCentroid", "[", 
           RowBox[{"mdl", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"mdlAC", "=", 
          RowBox[{"modelAreaCentroid", "[", 
           RowBox[{"mdl", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"bBox", "=", 
          RowBox[{"modelBoundingBox", "[", 
           RowBox[{"mdl", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"ticks", "=", 
          RowBox[{"xCoords", "-", 
           RowBox[{"Max", "[", "xCoords", "]"}], "+", 
           RowBox[{"Max", "[", 
            RowBox[{"bBox", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"modelToGraphics", "[", 
                RowBox[{"mdl", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Yellow", ",", "Yellow"}], "}"}], ",", 
                 RowBox[{"IncludePoints", "\[Rule]", "False"}]}], "]"}], ",", 
               "\n", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{"mdlPC", ",", "2"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Green", ",", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{"mdlLC", ",", "2"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{"mdlAC", ",", "2"}], "]"}]}], "}"}], ",", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                   RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Transpose", "[", "bBox", "]"}]}], "]"}]}], "}"}],
                  ","}], " ", "*)"}], "\n", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Green", ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{
                   RowBox[{"modelToPolygon", "[", 
                    RowBox[{"mdl", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"mdlPts", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", "\n", 
             RowBox[{"FrameTicks", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"All", ",", "None"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#", ",", 
                    RowBox[{"{", 
                    RowBox[{".02", ",", "0.01"}], "}"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"ticks", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#", ",", 
                    RowBox[{"{", 
                    RowBox[{".02", ",", "0.01"}], "}"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"ticks", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], "]"}]}], 
                 "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"300", ",", "Automatic"}], "}"}]}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
           "\"\<The Model Centroids\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"transFig", "=", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Green", ",", 
                  RowBox[{"Point", "[", "mpf", "]"}], ",", "Green", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"lm", "[", 
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"lm", "[", 
                    RowBox[{"mpf", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}], 
                    "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"showTranslation", "[", 
                RowBox[{"mdl", ",", "mdlPts", ",", "imgPts"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"600", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Position : \>\"", ",", "posOut"}], "}"}], "]"}]}], 
          "}"}], "]"}], ",", "\"\<The Position\>\"", ",", 
        RowBox[{"Background", "->", "White"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vecs", ",", "force"}], "}"}], "=", 
      RowBox[{"vecsNforce", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"moments", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"cross", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"mdlPts", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"force", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "force", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"moment", "=", 
      RowBox[{
       RowBox[{"Total", "[", "moments", "]"}], "/", 
       RowBox[{"Length", "[", "force", "]"}]}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"momFig", "=", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"showMoments", "[", 
             RowBox[{"mdl", ",", "mdlPts", ",", "force", ",", "moment"}], 
             "]"}], ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\< Orientation \[Theta] : \>\"", ",", "\[Psi]Out"}], 
              "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"Background", "->", "White"}]}], "]"}], ",", 
        "\"\<The Orientation\>\""}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "transFig", " ", ",", "SpanFromLeft", ",", 
                "centroidModelFig"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"SpanFromAbove", ",", "SpanFromBoth", ",", "momFig"}], 
               "}"}]}], "}"}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}], ",", "\n", 
          RowBox[{"easySwatch", "[", 
           RowBox[{
            RowBox[{"{", "\n", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Point Centroid\>\"", ",", "Blue", ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                 "]"}]}], "}"}], ",", "\n", 
              RowBox[{"{", 
               RowBox[{"\"\<Area Centroid\>\"", ",", "Red", ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Points used to find the Point Centroid\>\"", ",", "Blue", 
                ",", "\"\<Point\>\""}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<The Line used to find the Line Centroid\>\"", ",", 
                "Green", ",", "\"\<Line\>\""}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<The Area used to find the Area Centroid\>\"", ",", 
                "Yellow", ",", "\"\<Square\>\""}], "}"}], ",", "\n", 
              RowBox[{"{", 
               RowBox[{"\"\<Line Centroid\>\"", ",", "Green", ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"CrossHair", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<The Position Found\>\"", ",", "Black", ",", 
                "\"\<Arrow\>\""}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Distance from the Point Centroid\>\"", ",", "Black", ",", 
                "\"\<Line\>\""}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<The Rotational Forces on the points\>\"", ",", "Red", 
                ",", "\"\<Arrow\>\""}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Lines Connecting Corresponding Points\>\"", ",", "Blue", 
                ",", "\"\<Line\>\""}], "}"}], ",", "\n", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Average Moment Force\>\"", ",", "Blue", ",", 
                "\"\<Arrow\>\""}], "}"}]}], "\n", "}"}], ",", "5", ",", " ", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]}], "\n", 
         "}"}], "]"}], ",", "\"\<Finding the position and orientation\>\""}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.656410674295055*^9, 3.656410677358162*^9}, 
   3.656410747395049*^9, 3.6564107894323997`*^9, {3.656415154945952*^9, 
   3.656415156571521*^9}, {3.656415206993229*^9, 3.6564153194667797`*^9}, {
   3.6564333257820473`*^9, 3.656433331174466*^9}, {3.656433375204574*^9, 
   3.656433386189288*^9}, {3.6567582699074507`*^9, 3.656758309982367*^9}, 
   3.656793354651626*^9, {3.656793422565024*^9, 3.656793522403308*^9}, {
   3.65679355705233*^9, 3.656793583001548*^9}, {3.656793631471725*^9, 
   3.656793654240864*^9}, {3.656793694938148*^9, 3.656793736886545*^9}, {
   3.656793815586595*^9, 3.6567938161548643`*^9}, {3.6567942876463127`*^9, 
   3.6567943088434067`*^9}, {3.65679433897124*^9, 3.656794431576055*^9}, {
   3.6567944692891273`*^9, 3.656794475750705*^9}, {3.656794506231419*^9, 
   3.6567947051286488`*^9}, {3.656794769488212*^9, 3.65679477022937*^9}, {
   3.656795661387486*^9, 3.6567956625124483`*^9}, 3.656796448097982*^9, {
   3.656809517777236*^9, 3.6568095425529823`*^9}, {3.656811631615776*^9, 
   3.6568116483214073`*^9}, {3.656811742133935*^9, 3.6568117433161087`*^9}, {
   3.656811828026615*^9, 3.6568118404015627`*^9}, {3.6568119692757998`*^9, 
   3.6568120008264837`*^9}, {3.656815240530357*^9, 3.656815250379568*^9}, {
   3.656838422756989*^9, 3.656838423308056*^9}, {3.656839169830085*^9, 
   3.656839175469792*^9}, {3.656839207122636*^9, 3.6568393262819366`*^9}, {
   3.656839512033963*^9, 3.6568395163049088`*^9}, {3.656844361129693*^9, 
   3.65684436768112*^9}, {3.656844403656851*^9, 3.656844406807807*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Model_Centroids_With_Pos_Orientation\>\"", "<>", 
    "\"\<.jpg\>\""}], ",", "modelCPOFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.656753259583392*^9, 3.6567532610103617`*^9}, {
  3.656753477982759*^9, 3.6567534790211687`*^9}, {3.656796494971641*^9, 
  3.6567964956675043`*^9}, {3.6568395519232492`*^9, 3.656839583953698*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"exageratedModelCPOFig", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "=", "0.2"}], ",", 
       RowBox[{"\[Psi]", "=", "0.15"}], ",", 
       RowBox[{"pos", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", "50"}], "}"}]}], ",", "xCoords", ",", 
       "mdl", ",", "mdlImg", ",", "mdlPts", ",", "mpf", ",", "lm", ",", 
       "imgPts", ",", "posOut", ",", "\[Psi]Out", ",", "centroidModelFig", 
       ",", "transFig", ",", "momFig", ",", "moments", ",", "moment", ",", 
       "vecs", ",", "force"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xCoords", "=", 
       RowBox[{"midDigitPtsStd", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"mdlImg", "=", " ", 
       RowBox[{"translateModel", "[", 
        RowBox[{
         RowBox[{"rotateModel", "[", 
          RowBox[{"mdlD", ",", "\[Theta]"}], "]"}], ",", "pos"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mdl", "=", 
       RowBox[{"rotateModel", "[", 
        RowBox[{"mdlD", ",", "\[Theta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mdlPts", "=", 
       RowBox[{"modelToPoints", "[", 
        RowBox[{"mdl", ",", "xCoords"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"imgPts", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"mdlPts", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"mdlPts", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posOut", ",", "\[Psi]Out"}], "}"}], "=", 
       RowBox[{"shapeMatchingMoments", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"centroidModelFig", "=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "mdlPC", ",", "mdlLC", ",", "mdlAC", ",", "bBox", ",", "ticks"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mdlPC", "=", 
           RowBox[{"modelPntCentroid", "[", 
            RowBox[{"mdl", ",", "xCoords"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"mdlLC", "=", 
           RowBox[{"modelLineCentroid", "[", 
            RowBox[{"mdl", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"mdlAC", "=", 
           RowBox[{"modelAreaCentroid", "[", 
            RowBox[{"mdl", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"bBox", "=", 
           RowBox[{"modelBoundingBox", "[", 
            RowBox[{"mdl", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ticks", "=", 
           RowBox[{"xCoords", "-", 
            RowBox[{"Max", "[", "xCoords", "]"}], "+", 
            RowBox[{"Max", "[", 
             RowBox[{"bBox", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"modelToGraphics", "[", 
                 RowBox[{"mdl", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Yellow", ",", "Yellow"}], "}"}], ",", 
                  RowBox[{"IncludePoints", "\[Rule]", "False"}]}], "]"}], ",",
                 "\n", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", 
                  RowBox[{"CrossHair", "[", 
                   RowBox[{"mdlPC", ",", "2"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Green", ",", 
                  RowBox[{"CrossHair", "[", 
                   RowBox[{"mdlLC", ",", "2"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", 
                  RowBox[{"CrossHair", "[", 
                   RowBox[{"mdlAC", ",", "2"}], "]"}]}], "}"}], ",", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Transpose", "[", "bBox", "]"}]}], "]"}]}], "}"}],
                   ","}], " ", "*)"}], "\n", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "Green", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{
                    RowBox[{"modelToPolygon", "[", 
                    RowBox[{"mdl", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"mdlPts", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", "\n", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"All", ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#", ",", 
                    RowBox[{"{", 
                    RowBox[{".02", ",", "0.01"}], "}"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"ticks", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#", ",", 
                    RowBox[{"{", 
                    RowBox[{".02", ",", "0.01"}], "}"}], ",", "\n", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"ticks", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], "]"}]}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
            "\"\<The Model Centroids\>\""}], "]"}]}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"transFig", "=", 
       RowBox[{"Panel", "[", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"showTranslation", "[", 
             RowBox[{"mdl", ",", "mdlPts", ",", "imgPts"}], "]"}], ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Position : \>\"", ",", "posOut"}], "}"}], "]"}]}], 
           "}"}], "]"}], ",", "\"\<The Position\>\"", ",", 
         RowBox[{"Background", "->", "White"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vecs", ",", "force"}], "}"}], "=", 
       RowBox[{"vecsNforce", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"moments", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"cross", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"mdlPts", ",", "1"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"force", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "force", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"moment", "=", 
       RowBox[{
        RowBox[{"Total", "[", "moments", "]"}], "/", 
        RowBox[{"Length", "[", "force", "]"}]}]}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"momFig", "=", 
       RowBox[{"Panel", "[", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"showMoments", "[", 
              RowBox[{"mdl", ",", "mdlPts", ",", "force", ",", "moment"}], 
              "]"}], ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\< Orientation \[Theta] : \>\"", ",", "\[Psi]Out"}],
                "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"Background", "->", "White"}]}], "]"}], ",", 
         "\"\<The Orientation\>\""}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "transFig", " ", ",", "SpanFromLeft", ",", 
                  "centroidModelFig"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "SpanFromAbove", ",", "SpanFromBoth", ",", "momFig"}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}], ",", "\n", 
            RowBox[{"easySwatch", "[", 
             RowBox[{
              RowBox[{"{", "\n", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Point Centroid\>\"", ",", "Blue", ",", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"CrossHair", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                   "]"}]}], "}"}], ",", "\n", 
                RowBox[{"{", 
                 RowBox[{"\"\<Area Centroid\>\"", ",", "Red", ",", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"CrossHair", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Points used to find the Point Centroid\>\"", ",", 
                  "Blue", ",", "\"\<Point\>\""}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<The Line used to find the Line Centroid\>\"", ",", 
                  "Green", ",", "\"\<Line\>\""}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<The Area used to find the Area Centroid\>\"", ",", 
                  "Yellow", ",", "\"\<Square\>\""}], "}"}], ",", "\n", 
                RowBox[{"{", 
                 RowBox[{"\"\<Line Centroid\>\"", ",", "Green", ",", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"CrossHair", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<The Position Found\>\"", ",", "Black", ",", 
                  "\"\<Arrow\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Distance from the Point Centroid\>\"", ",", "Black", 
                  ",", "\"\<Line\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<The Rotational Forces on the points\>\"", ",", "Red", 
                  ",", "\"\<Arrow\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Lines Connecting Corresponding Points\>\"", ",", "Blue",
                   ",", "\"\<Line\>\""}], "}"}], ",", "\n", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Average Moment Force\>\"", ",", "Blue", ",", 
                  "\"\<Arrow\>\""}], "}"}]}], "\n", "}"}], ",", "5", ",", " ", 
              RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]}], "\n", 
           "}"}], ",", 
          RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
        "\"\<Finding the position and orientation\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.656410674295055*^9, 3.656410677358162*^9}, 
   3.656410747395049*^9, 3.6564107894323997`*^9, {3.656415154945952*^9, 
   3.656415156571521*^9}, {3.656415206993229*^9, 3.6564153194667797`*^9}, {
   3.6564333257820473`*^9, 3.656433331174466*^9}, {3.656433375204574*^9, 
   3.656433386189288*^9}, {3.6567582699074507`*^9, 3.656758309982367*^9}, 
   3.656793354651626*^9, {3.656793422565024*^9, 3.656793522403308*^9}, {
   3.65679355705233*^9, 3.656793583001548*^9}, {3.656793631471725*^9, 
   3.656793654240864*^9}, {3.656793694938148*^9, 3.656793736886545*^9}, {
   3.656793815586595*^9, 3.6567938161548643`*^9}, {3.6567942876463127`*^9, 
   3.6567943088434067`*^9}, {3.65679433897124*^9, 3.656794431576055*^9}, {
   3.6567944692891273`*^9, 3.656794475750705*^9}, {3.656794506231419*^9, 
   3.6567947051286488`*^9}, {3.656794769488212*^9, 3.65679477022937*^9}, {
   3.656795661387486*^9, 3.6567956625124483`*^9}, 3.656796448097982*^9, {
   3.656809517777236*^9, 3.6568095425529823`*^9}, {3.656811631615776*^9, 
   3.6568116483214073`*^9}, {3.656811742133935*^9, 3.6568117433161087`*^9}, {
   3.656811828026615*^9, 3.6568118404015627`*^9}, {3.6568119692757998`*^9, 
   3.6568120008264837`*^9}, 3.656812215481189*^9, {3.656812257450362*^9, 
   3.6568122615305843`*^9}, 3.656812326873228*^9, {3.656812357612783*^9, 
   3.656812364509511*^9}, 3.656812404655596*^9, {3.6568125066497793`*^9, 
   3.65681253217*^9}, {3.656812589239081*^9, 3.65681260670543*^9}, {
   3.6568127819857616`*^9, 3.65681278253616*^9}, {3.656812920668494*^9, 
   3.656812979777624*^9}, {3.6568132173252077`*^9, 3.656813252386628*^9}, {
   3.6568135675587*^9, 3.6568135685334873`*^9}, {3.6568136000922747`*^9, 
   3.656813608569165*^9}, {3.65681417485816*^9, 3.656814178595296*^9}, 
   3.6568142368767757`*^9, {3.656814340110669*^9, 3.6568143407669373`*^9}, {
   3.6568148458874283`*^9, 3.656814909104733*^9}, 3.6568152645320463`*^9, {
   3.6568153465624237`*^9, 3.656815355742931*^9}, {3.6568153948816223`*^9, 
   3.656815417924718*^9}, {3.656837272530978*^9, 3.656837323239456*^9}, {
   3.656837360337412*^9, 3.6568373779014378`*^9}, 3.656838551505569*^9, 
   3.656838581750814*^9, 3.656838651557675*^9, {3.656838692209996*^9, 
   3.656838696596807*^9}, {3.656838742212291*^9, 3.656838742680262*^9}, {
   3.656839023472686*^9, 3.656839047206684*^9}, 3.656839092862466*^9, {
   3.656839526499207*^9, 3.656839536847185*^9}, 3.656840034136786*^9, {
   3.656845651172842*^9, 3.656845681037817*^9}, {3.65686406257438*^9, 
   3.6568640688527412`*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Exagerated_Model_Centroids_With_Pos_Orientation\>\"",
     "<>", "\"\<.jpg\>\""}], ",", "exageratedModelCPOFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.656753259583392*^9, 3.6567532610103617`*^9}, {
  3.656753477982759*^9, 3.6567534790211687`*^9}, {3.656796494971641*^9, 
  3.6567964956675043`*^9}, {3.6568395519232492`*^9, 3.656839583953698*^9}, {
  3.6568396140284433`*^9, 3.65683962540034*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"posAndOrientationFig", "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]", "=", "0"}], ",", 
        RowBox[{"pos", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "20"}], ",", "50"}], "}"}]}], ",", "mdl", ",", 
        "mdlImg", ",", "mdlPts", ",", "imgPts", ",", "posOut", ",", 
        "\[Psi]Out", ",", "vecs", ",", "force", ",", "moments", ",", 
        "moment"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mdlImg", "=", " ", 
        RowBox[{"translateModel", "[", 
         RowBox[{
          RowBox[{"rotateModel", "[", 
           RowBox[{"mdlD", ",", "\[Theta]"}], "]"}], ",", "pos"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"mdl", "=", 
        RowBox[{"rotateModel", "[", 
         RowBox[{"mdlD", ",", "\[Theta]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mdlPts", "=", 
        RowBox[{"modelToPoints", "[", 
         RowBox[{"mdl", ",", 
          RowBox[{"midDigitPtsStd", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"imgPts", " ", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
              RowBox[{"Transpose", "[", 
               RowBox[{"mdlPts", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
              RowBox[{"Transpose", "[", 
               RowBox[{"mdlPts", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"posOut", ",", "\[Psi]Out"}], "}"}], "=", 
        RowBox[{"shapeMatchingMoments", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vecs", ",", "force"}], "}"}], "=", 
        RowBox[{"vecsNforce", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"imgPts", ",", "1"}], "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"mdlPts", ",", "1"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"moments", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"cross", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"mdlPts", ",", "1"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"force", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "force", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"moment", "=", 
        RowBox[{
         RowBox[{"Total", "[", "moments", "]"}], "/", 
         RowBox[{"Length", "[", "force", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Panel", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Column", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"showTranslation", "[", 
                    RowBox[{"mdl", ",", "mdlPts", ",", "imgPts"}], "]"}], ",", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Position : \>\"", ",", "posOut"}], "}"}], 
                    "]"}]}], "}"}], "]"}], ",", "\"\<The position\>\"", ",", 
                RowBox[{"Background", "->", "White"}]}], "]"}], ",", 
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Column", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"showMoments", "[", 
                    RowBox[{
                    "mdl", ",", "mdlPts", ",", "force", ",", "moment"}], 
                    "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Position \[Theta] : \>\"", ",", "\[Psi]Out"}], "}"}],
                     "]"}]}], "}"}], ",", 
                  RowBox[{"Background", "->", "White"}]}], "]"}], ",", 
                "\"\<The Orientation\>\""}], "]"}]}], "}"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}], ",", 
         "\"\<Finding the position and orientation\>\""}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "0.1"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.656414157725727*^9, {3.656415796832108*^9, 3.656415798870669*^9}, {
   3.6564159200273323`*^9, 3.656415983568927*^9}, {3.656433786686123*^9, 
   3.656433787174493*^9}, {3.6564338522375298`*^9, 3.656433922621149*^9}, {
   3.656757527251585*^9, 3.6567575552970257`*^9}, {3.656757827994566*^9, 
   3.656757834724049*^9}, {3.656757881407469*^9, 3.656757885983073*^9}, {
   3.6567635346531487`*^9, 3.656763570042821*^9}, {3.656763608066967*^9, 
   3.656763609501172*^9}, {3.656763728886868*^9, 3.6567637747750483`*^9}, {
   3.656763865997034*^9, 3.656763889988655*^9}, {3.656764171600066*^9, 
   3.656764200200897*^9}, {3.656765954154518*^9, 3.6567659668423157`*^9}, {
   3.656766109908927*^9, 3.6567661240229*^9}, {3.656766240735783*^9, 
   3.656766252479601*^9}, {3.6567663346858683`*^9, 3.656766352918869*^9}, {
   3.656766446977993*^9, 3.656766449145667*^9}, {3.656767298285737*^9, 
   3.656767312565411*^9}, {3.6567897240955276`*^9, 3.6567897277834177`*^9}, {
   3.656845498895361*^9, 3.656845503617917*^9}, {3.656845560696409*^9, 
   3.6568455811898737`*^9}, 3.65684562322115*^9, {3.656845696347228*^9, 
   3.656845739297288*^9}}],

Cell[BoxData[
 RowBox[{"smoothDynamicSequenceFig", "=", 
  RowBox[{"Panel", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dynFig1", ",", "dynFig2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dynFig3", ",", "dynFig4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"exageratedModelCPOFig", ",", "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"SpanFromAbove", ",", "SpanFromBoth"}], "}"}]}], "}"}], "]"}],
     ",", "\"\<The Smooth Dynamic Tracking Algorithm Sequence\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6568553462535267`*^9, 3.656855367924274*^9}, {
  3.656855427460581*^9, 3.65685550831993*^9}, {3.656855563519927*^9, 
  3.6568555794545937`*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Smooth_Dynamic_Sequence\>\"", "<>", "\"\<.jpg\>\""}],
    ",", "smoothDynamicSequenceFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.656857553107696*^9, 3.6568575808341923`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Force Moment metaphore", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.6567932097761908`*^9, 3.656793235239066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shapeMatchingMoments", "[", 
   RowBox[{"ptsImg_", ",", "ptsMdl_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vecs", "=", 
      RowBox[{
       RowBox[{"ptsImg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Length", "[", "ptsMdl", "]"}]}], "]"}], "]"}], "-", 
       "ptsMdl"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"position", "=", 
      RowBox[{
       RowBox[{"Total", "[", "vecs", "]"}], "/", 
       RowBox[{"Length", "[", "vecs", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"force", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "-", "position"}], ")"}], "&"}], ",", "vecs"}], 
       "]"}]}], " ", ";", "\n", 
     RowBox[{"moments", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"cross", "[", 
         RowBox[{
          RowBox[{"ptsMdl", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"force", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "force", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"moment", "=", 
      RowBox[{"Total", "[", "moments", "]"}]}], ";", "\n", 
     RowBox[{"mdlMOI", "=", 
      RowBox[{"pntMomentOfInertia", "[", "ptsMdl", "]"}]}], ";", "\n", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"moment", "/", "mdlMOI"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ptsImgT", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"+", 
          RowBox[{"ptsImg", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "-", "position"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "ptsMdl", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"angles", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"ptsMdl", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ptsImgT", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "ptsMdl", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"angle", "=", 
      RowBox[{
       RowBox[{"medianMean", "[", 
        RowBox[{"angles", ",", "0.8"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"position", ",", "angle"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6561607765779133`*^9, 3.656160791421941*^9}, {
   3.656160848916904*^9, 3.656160875234192*^9}, 3.656183176680416*^9, {
   3.656339043576589*^9, 3.656339071588613*^9}, {3.656339129058823*^9, 
   3.6563391496954823`*^9}, 3.656353741712635*^9, {3.6564046669146748`*^9, 
   3.656404770190506*^9}, {3.656404909757474*^9, 3.656404914243144*^9}, {
   3.6564051194990997`*^9, 3.656405120258251*^9}, 3.656433252420106*^9}],

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "=", "0"}], ",", "mdl", ",", "mdlImg", ",", 
       RowBox[{"pos", "=", 
        RowBox[{"{", 
         RowBox[{"20", ",", "20"}], "}"}]}], ",", "ptsMdl", ",", "ptsImg", 
       ",", "posOut", ",", "\[Psi]Out"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mdlImg", "=", " ", 
       RowBox[{"translateModel", "[", 
        RowBox[{
         RowBox[{"rotateModel", "[", 
          RowBox[{"mdlE", ",", "\[Theta]"}], "]"}], ",", "pos"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mdl", "=", 
       RowBox[{"rotateModel", "[", 
        RowBox[{"mdlE", ",", "\[Theta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ptsMdl", "=", 
       RowBox[{"modelToPoints", "[", 
        RowBox[{"mdl", ",", 
         RowBox[{"midDigitPtsStd", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ptsImg", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"ptsMdl", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "pos"}], ")"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Psi]", "]"}], ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"ptsMdl", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posOut", ",", "\[Psi]Out"}], "}"}], "=", 
       RowBox[{"shapeMatchingMoments", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"ptsImg", ",", "1"}], "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"ptsMdl", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", 
        RowBox[{"\[Alpha]", "-", "\[Psi]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Psi]", ",", "0", ",", 
     RowBox[{"2", "Pi"}], ",", 
     RowBox[{"Pi", "/", "20"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.656415566054584*^9, 3.656415659851428*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1403, 840},
WindowMargins->{{0, Automatic}, {Automatic, 3}},
TaggingRules->{"Salvaged" -> True},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["FunctionalProgram", StyleDefinitions -> StyleData["Code"]], 
    ShowAutoStyles -> True, MenuSortingValue -> 10000, FontWeight -> "Plain", 
    FontSlant -> "Plain", FontTracking -> "Plain", 
    FontVariations -> {
     "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> False, 
      "Underline" -> False}, Background -> RGBColor[0.87, 0.94, 1]], 
   Cell[
    StyleData["DisplayProgram", StyleDefinitions -> StyleData["Code"]], 
    ShowAutoStyles -> True, MenuSortingValue -> 10000, Background -> 
    RGBColor[0.7886320286869611, 1., 0.961547264820325]]}, Visible -> False, 
  FrontEndVersion -> 
  "10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 175, 4, 46, "Input"],
Cell[CellGroupData[{
Cell[758, 28, 389, 5, 44, "Subsection"],
Cell[1150, 35, 289, 7, 50, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476, 47, 169, 2, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[1670, 53, 126, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[1821, 59, 179, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2025, 65, 97, 1, 35, "Subsubsection"],
Cell[2125, 68, 806, 16, 46, "Input"],
Cell[2934, 86, 830, 17, 46, "Input"],
Cell[3767, 105, 758, 17, 46, "Input"],
Cell[4528, 124, 1587, 43, 28, "Input"],
Cell[6118, 169, 296, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6451, 182, 95, 1, 35, "Subsubsection"],
Cell[6549, 185, 828, 16, 46, "Input"],
Cell[7380, 203, 828, 17, 46, "Input"],
Cell[8211, 222, 784, 17, 46, "Input"],
Cell[8998, 241, 1976, 55, 46, "Input"],
Cell[10977, 298, 316, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11330, 311, 95, 1, 35, "Subsubsection"],
Cell[11428, 314, 850, 16, 46, "Input"],
Cell[12281, 332, 834, 17, 46, "Input"],
Cell[13118, 351, 810, 18, 46, "Input"],
Cell[13931, 371, 2003, 56, 46, "Input"],
Cell[15937, 429, 340, 8, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16326, 443, 224, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[16575, 450, 97, 1, 35, "Subsubsection"],
Cell[16675, 453, 1920, 43, 80, "Input"],
Cell[18598, 498, 1083, 25, 46, "Input"],
Cell[19684, 525, 678, 14, 46, "Input"],
Cell[20365, 541, 1605, 43, 28, "Input"],
Cell[21973, 586, 316, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22326, 599, 95, 1, 35, "Subsubsection"],
Cell[22424, 602, 1920, 43, 80, "Input"],
Cell[24347, 647, 1082, 25, 46, "Input"],
Cell[25432, 674, 700, 14, 46, "Input"],
Cell[26135, 690, 1630, 44, 28, "Input"],
Cell[27768, 736, 340, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28145, 749, 95, 1, 35, "Subsubsection"],
Cell[28243, 752, 1922, 43, 80, "Input"],
Cell[30168, 797, 1083, 25, 46, "Input"],
Cell[31254, 824, 726, 15, 46, "Input"],
Cell[31983, 841, 1655, 44, 28, "Input"],
Cell[33641, 887, 367, 9, 28, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34069, 903, 101, 1, 64, "Section"],
Cell[34173, 906, 174, 2, 30, "Text"],
Cell[34350, 910, 2790, 71, 159, "FunctionalProgram"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37177, 986, 194, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[37396, 993, 153, 2, 44, "Subsection"],
Cell[37552, 997, 297, 7, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37886, 1009, 104, 1, 44, "Subsection"],
Cell[37993, 1012, 2183, 52, 98, "FunctionalProgram"],
Cell[40179, 1066, 2890, 80, 114, "DisplayProgram"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43106, 1151, 207, 3, 44, "Subsection"],
Cell[43316, 1156, 1047, 26, 98, "FunctionalProgram"],
Cell[CellGroupData[{
Cell[44388, 1186, 109, 1, 35, "Subsubsection"],
Cell[44500, 1189, 1162, 28, 98, "FunctionalProgram"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45711, 1223, 248, 3, 44, "Subsection"],
Cell[45962, 1228, 168, 2, 30, "Text"],
Cell[46133, 1232, 1687, 41, 145, "FunctionalProgram"],
Cell[47823, 1275, 142, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[47990, 1280, 109, 1, 35, "Subsubsection"],
Cell[48102, 1283, 1324, 31, 98, "FunctionalProgram"],
Cell[49429, 1316, 2310, 55, 162, "DisplayProgram"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51812, 1379, 101, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[51938, 1384, 114, 1, 35, "Subsubsection"],
Cell[52055, 1387, 25406, 618, 1135, "FunctionalProgram"],
Cell[77464, 2007, 594, 17, 28, "Input"],
Cell[78061, 2026, 493, 13, 65, "Input"],
Cell[78557, 2041, 98, 1, 28, "Input"],
Cell[78658, 2044, 173, 3, 28, "Input"],
Cell[78834, 2049, 309, 7, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79180, 2061, 114, 1, 35, "Subsubsection"],
Cell[79297, 2064, 12643, 262, 496, "DisplayProgram"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91977, 2331, 109, 1, 35, "Subsubsection"],
Cell[92089, 2334, 111, 1, 30, "Text"],
Cell[92203, 2337, 1133, 31, 80, "Input"],
Cell[93339, 2370, 1798, 40, 114, "FunctionalProgram"],
Cell[95140, 2412, 3770, 87, 178, "DisplayProgram"],
Cell[98913, 2501, 6274, 146, 194, "DisplayProgram"],
Cell[105190, 2649, 218, 3, 30, "Text"],
Cell[105411, 2654, 1263, 37, 114, "FunctionalProgram"],
Cell[106677, 2693, 171, 2, 30, "Text"],
Cell[106851, 2697, 1238, 24, 50, "FunctionalProgram"],
Cell[108092, 2723, 2783, 70, 146, "FunctionalProgram"],
Cell[110878, 2795, 117, 1, 30, "Text"],
Cell[110998, 2798, 2583, 66, 146, "FunctionalProgram"],
Cell[113584, 2866, 3444, 79, 130, "DisplayProgram"],
Cell[117031, 2947, 19274, 414, 257, "DisplayProgram"],
Cell[136308, 3363, 8507, 178, 178, "DisplayProgram"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144852, 3546, 112, 1, 35, "Subsubsection"],
Cell[144967, 3549, 739, 16, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145743, 3570, 110, 1, 35, "Subsubsection"],
Cell[145856, 3573, 482, 11, 28, "Input"],
Cell[146341, 3586, 460, 10, 28, "Input"],
Cell[146804, 3598, 437, 11, 28, "Input"],
Cell[147244, 3611, 440, 10, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147721, 3626, 101, 1, 64, "Section"],
Cell[147825, 3629, 3690, 86, 178, "DisplayProgram"],
Cell[151518, 3717, 517, 16, 46, "Input"],
Cell[152038, 3735, 378, 10, 28, "Input"],
Cell[152419, 3747, 487, 15, 28, "Input"],
Cell[152909, 3764, 2621, 68, 97, "Input"],
Cell[155533, 3834, 1465, 37, 46, "Input"],
Cell[157001, 3873, 4571, 110, 182, "Input"],
Cell[161575, 3985, 265, 7, 28, "Input"],
Cell[161843, 3994, 1611, 44, 63, "Input"],
Cell[163457, 4040, 291, 8, 28, "Input"],
Cell[163751, 4050, 192, 3, 28, "Input"],
Cell[163946, 4055, 298, 8, 28, "Input"],
Cell[164247, 4065, 12966, 309, 304, "DisplayProgram"],
Cell[177216, 4376, 428, 11, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177681, 4392, 91, 1, 64, "Section"],
Cell[177775, 4395, 1635, 45, 63, "Input"],
Cell[179413, 4442, 2421, 67, 97, "Input"],
Cell[181837, 4511, 1895, 51, 80, "Input"],
Cell[183735, 4564, 139, 2, 28, "Input"],
Cell[183877, 4568, 3459, 90, 194, "DisplayProgram"],
Cell[187339, 4660, 309, 9, 28, "Input"],
Cell[187651, 4671, 926, 22, 80, "Input"],
Cell[188580, 4695, 2019, 53, 97, "Input"],
Cell[190602, 4750, 81, 2, 28, "Input"],
Cell[190686, 4754, 97, 1, 28, "Input"],
Cell[190786, 4757, 500, 14, 28, "Input"],
Cell[191289, 4773, 332, 10, 28, "Input"],
Cell[191624, 4785, 999, 22, 46, "Input"],
Cell[192626, 4809, 427, 12, 28, "Input"],
Cell[193056, 4823, 88, 2, 28, "Input"],
Cell[193147, 4827, 35, 0, 28, "Input"],
Cell[193185, 4829, 37, 0, 28, "Input"],
Cell[193225, 4831, 552, 15, 28, "Input"],
Cell[193780, 4848, 2570, 75, 97, "Input"],
Cell[196353, 4925, 149, 3, 28, "Input"],
Cell[196505, 4930, 285, 7, 28, "Input"],
Cell[196793, 4939, 714, 21, 28, "Input"],
Cell[197510, 4962, 166, 3, 28, "Input"],
Cell[197679, 4967, 274, 5, 46, "Input"],
Cell[197956, 4974, 139, 2, 28, "Input"],
Cell[198098, 4978, 99, 1, 28, "Input"],
Cell[198200, 4981, 7048, 190, 335, "Code"],
Cell[205251, 5173, 41, 0, 28, "Input"],
Cell[205295, 5175, 119, 2, 22, "Input"],
Cell[205417, 5179, 95, 1, 28, "Input"],
Cell[205515, 5182, 130, 2, 28, "Input"],
Cell[205648, 5186, 94, 1, 28, "Input"],
Cell[205745, 5189, 272, 7, 28, "Input"],
Cell[206020, 5198, 356, 10, 28, "Input"],
Cell[206379, 5210, 343, 10, 28, "Input"],
Cell[206725, 5222, 183, 4, 28, "Input"],
Cell[206911, 5228, 30, 0, 28, "Input"],
Cell[206944, 5230, 130, 2, 28, "Input"],
Cell[207077, 5234, 668, 20, 28, "Input"],
Cell[207748, 5256, 2517, 81, 97, "Input"],
Cell[210268, 5339, 2680, 78, 114, "Input"],
Cell[212951, 5419, 99, 1, 28, "Input"],
Cell[213053, 5422, 216, 3, 46, "Input"],
Cell[213272, 5427, 15324, 251, 273, "DisplayProgram"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228645, 5684, 146, 2, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[228816, 5690, 924, 12, 44, "Subsection"],
Cell[229743, 5704, 170, 3, 28, "Input"],
Cell[229916, 5709, 103, 1, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230056, 5715, 883, 12, 44, "Subsection"],
Cell[230942, 5729, 1186, 26, 110, "FunctionalProgram"],
Cell[232131, 5757, 101, 1, 30, "Text"],
Cell[232235, 5760, 1593, 39, 98, "FunctionalProgram"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233865, 5804, 893, 12, 44, "Subsection"],
Cell[234761, 5818, 133, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[234919, 5823, 268, 3, 35, "Subsubsection"],
Cell[235190, 5828, 99, 1, 30, "Text"],
Cell[235292, 5831, 5890, 133, 242, "FunctionalProgram"],
Cell[241185, 5966, 6882, 143, 274, "DisplayProgram"],
Cell[248070, 6111, 96, 1, 30, "Text"],
Cell[248169, 6114, 14905, 257, 194, "DisplayProgram"],
Cell[263077, 6373, 13397, 217, 226, "DisplayProgram"],
Cell[276477, 6592, 12249, 194, 192, "DisplayProgram"],
Cell[288729, 6788, 784, 18, 50, "DisplayProgram"],
Cell[289516, 6808, 824, 15, 28, "Input"],
Cell[290343, 6825, 12037, 192, 193, "DisplayProgram"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302429, 7023, 840, 11, 44, "Subsection"],
Cell[303272, 7036, 1559, 37, 46, "Input"],
Cell[304834, 7075, 382, 11, 63, "Input"],
Cell[305219, 7088, 408, 12, 63, "Input"],
Cell[305630, 7102, 315, 10, 28, "Input"],
Cell[305948, 7114, 252, 6, 28, "Input"],
Cell[306203, 7122, 177, 4, 28, "Input"],
Cell[306383, 7128, 1663, 44, 97, "Input"],
Cell[308049, 7174, 182, 5, 28, "Input"],
Cell[308234, 7181, 348, 8, 28, "Input"],
Cell[308585, 7191, 221, 5, 28, "Input"],
Cell[308809, 7198, 2422, 63, 114, "Input"],
Cell[311234, 7263, 1097, 27, 46, "Input"],
Cell[312334, 7292, 578, 15, 46, "Input"],
Cell[312915, 7309, 125, 2, 28, "Input"],
Cell[313043, 7313, 346, 7, 28, "Input"],
Cell[313392, 7322, 322, 9, 28, "Input"],
Cell[313717, 7333, 691699, 11347, 154, "Input"],
Cell[1005419, 18682, 100, 1, 28, "Input"],
Cell[1005522, 18685, 8251, 181, 369, "Input",
 CellID->1828511993]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013810, 18871, 401, 5, 64, "Section"],
Cell[CellGroupData[{
Cell[1014236, 18880, 161, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1014422, 18886, 141, 2, 35, "Subsubsection"],
Cell[1014566, 18890, 217, 4, 30, "Text"],
Cell[1014786, 18896, 2348, 50, 80, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1017171, 18951, 166, 2, 29, "Subsubsection"],
Cell[1017340, 18955, 280, 5, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1017657, 18965, 212, 3, 29, "Subsubsection"],
Cell[1017872, 18970, 1169, 22, 46, "Input"],
Cell[1019044, 18994, 8484, 191, 274, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[1027565, 19190, 258, 3, 29, "Subsubsection"],
Cell[1027826, 19195, 220, 5, 30, "Text"],
Cell[1028049, 19202, 109, 1, 30, "Text"],
Cell[1028161, 19205, 2077, 53, 98, "Input"],
Cell[1030241, 19260, 7848, 179, 385, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[1038126, 19444, 272, 3, 29, "Subsubsection"],
Cell[1038401, 19449, 661, 13, 46, "Input"],
Cell[1039065, 19464, 4910, 111, 225, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[1044012, 19580, 373, 5, 29, "Subsubsection"],
Cell[1044388, 19587, 826, 23, 46, "Input"],
Cell[1045217, 19612, 7850, 184, 242, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[1053104, 19801, 341, 4, 29, "Subsubsection"],
Cell[1053448, 19807, 558, 14, 46, "Input"],
Cell[1054009, 19823, 9768, 234, 322, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[1063814, 20062, 370, 5, 29, "Subsubsection"],
Cell[1064187, 20069, 156, 2, 30, "Text"],
Cell[1064346, 20073, 5816, 135, 210, "DisplayProgram"],
Cell[1070165, 20210, 5971, 144, 162, "DisplayProgram"],
Cell[1076139, 20356, 204, 3, 30, "Text"],
Cell[1076346, 20361, 129, 1, 30, "Text"],
Cell[1076478, 20364, 501, 13, 46, "Input"],
Cell[1076982, 20379, 17709, 413, 797, "Code"],
Cell[1094694, 20794, 539, 11, 28, "Input"],
Cell[1095236, 20807, 17631, 393, 796, "Code"],
Cell[1112870, 21202, 610, 12, 46, "Input"],
Cell[1113483, 21216, 6728, 159, 267, "Input"],
Cell[1120214, 21377, 769, 19, 63, "Input"],
Cell[1120986, 21398, 388, 9, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121411, 21412, 154, 2, 35, "Subsubsection"],
Cell[1121568, 21416, 3235, 82, 242, "Code"],
Cell[1124806, 21500, 2852, 75, 182, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
