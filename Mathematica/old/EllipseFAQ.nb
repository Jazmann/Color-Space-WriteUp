(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    342264,       7352]
NotebookOptionsPosition[    336472,       7162]
NotebookOutlinePosition[    336828,       7178]
CellTagsIndexPosition[    336785,       7175]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ELLIPSES", "Title",
 CellChangeTimes->{{3.6561485698600397`*^9, 3.6561485774840803`*^9}}],

Cell[CellGroupData[{

Cell["Q16.What is an ellipse?", "Section",
 CellChangeTimes->{{3.656148586131571*^9, 3.656148591990056*^9}}],

Cell[TextData[{
 "An ellipse is a closed curve similar to a circle.However, the radius\n\
varies between a minimum diameter and a maximum diameter.In effect, an \
ellipse can be considered to be a squashed or stretched\ncircle.An axis - \
aligned ellipse can be specified as a centre ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["x", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") and\naxis radii (a, b)\n\nThese can be combined to give the equation : "
}], "Text",
 CellChangeTimes->{{3.656148631209201*^9, 3.656148640013361*^9}, {
  3.656149358062212*^9, 3.6561493937326517`*^9}, {3.656149505004251*^9, 
  3.6561495075239143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "/", 
    RowBox[{"a", "^", "2"}]}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
    RowBox[{"b", "^", "2"}]}], " ", "-", "1"}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.65614944443585*^9, 3.656149497045302*^9}, {
  3.656149782531073*^9, 3.656149786748889*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "x0"}], ")"}], "2"], 
    SuperscriptBox["a", "2"]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "y0"}], ")"}], "2"], 
    SuperscriptBox["b", "2"]]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.656149498245062*^9, 3.656149788185485*^9}]
}, Open  ]],

Cell["\<\
Expnding out this expression will generate an equation identical to that
of a circle.However, the values of A and B are not guaranteed to be
equal to one.The algebraic expression is : \
\>", "Text",
 CellChangeTimes->{{3.6561486640793467`*^9, 3.65614867271739*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}], 
    "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", " ", "y"}], ",", " ", 
     RowBox[{"y", "^", "2"}], ",", "x", ",", "y", ",", "1"}], "}"}]}], 
  "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.656149606648198*^9, 3.6561496285417757`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A0", "+", 
   RowBox[{"Ax", " ", "x"}], "+", 
   RowBox[{"Axx", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"Ay", " ", "y"}], "+", 
   RowBox[{"Axy", " ", "x", " ", "y"}], "+", 
   RowBox[{"Ayy", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.656149629589909*^9}]
}, Open  ]],

Cell["where {Axx,Axy,Ayy,Ax,Ay,A0} are constant terms.", "Text",
 CellChangeTimes->{{3.6561486955972147`*^9, 3.656148701105427*^9}, 
   3.6561496719442463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Q17.How do I calculate the Y coordinate if only the X coordinate is known?\
\>", "Section",
 CellChangeTimes->{{3.656148723340081*^9, 3.656148728736878*^9}}],

Cell["Given the equation : ", "Text",
 CellChangeTimes->{{3.656148742098722*^9, 3.656148752601862*^9}}],

Cell["\<\

[1] Ax + By + Cx + Dy + Exy + F = 0
\
\>", "Text",
 CellChangeTimes->{{3.6561487942079144`*^9, 3.656148794209258*^9}, 
   3.656148907782238*^9}],

Cell["Then the known value of x or y is defined as : [2] ", "Text",
 CellChangeTimes->{{3.6561488064231987`*^9, 3.656148806424286*^9}, 
   3.6561489077825193`*^9}],

Cell["\<\
x = X

y = Y\
\>", "Text",
 CellChangeTimes->{{3.65614881327055*^9, 3.656148813271626*^9}, 
   3.656148907782806*^9}],

Cell["Substituting[2] into[1] gives : 2 2", "Text",
 CellChangeTimes->{{3.656148822046174*^9, 3.6561488220472813`*^9}, 
   3.6561489077830276`*^9}],

Cell["\<\
[3] AX + By + CX + Dy + EXy + F = 0

2 2
Ax + BY + Cx + DY + ExY + F = 0\
\>", "Text",
 CellChangeTimes->{{3.656148828694006*^9, 3.656148828695093*^9}, 
   3.6561489077832727`*^9}],

Cell["\<\
Moving all constant terms to the end of the equation gives : 2 2\
\>", "Text",
 CellChangeTimes->{{3.6561488391332607`*^9, 3.656148839134349*^9}, 
   3.656148907783504*^9}],

Cell["\<\
[4] By + Dy + EXy + AX + CX + F = 0

2 2
Ax + Cx + ExY + BY + DY + F = 0\
\>", "Text",
 CellChangeTimes->{{3.656148845802689*^9, 3.656148845803947*^9}, 
   3.656148907783745*^9}],

Cell["Converting these into quadratic equations gives : 2 2", "Text",
 CellChangeTimes->{{3.656148851436264*^9, 3.656148851437364*^9}, 
   3.656148907783964*^9}],

Cell["Ry + Sy + T = 0 Rx + Sx + T = 0", "Text",
 CellChangeTimes->{{3.656148858068379*^9, 3.656148858069475*^9}, 
   3.656148907784184*^9}],

Cell["\<\
where : R = B R = A

S = D + Ey S = C + EY

2 2
T = AX + CX + F T = BY + DY + F
\
\>", "Text",
 CellChangeTimes->{{3.6561488751312923`*^9, 3.6561488751323843`*^9}, 
   3.656148907784437*^9}],

Cell["These values can be solved using quadratic equations.", "Text",
 CellChangeTimes->{{3.656148895130118*^9, 3.656148907784663*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Q18.How do I determine the gradient of a point on a ellipse?", "Section",
 CellChangeTimes->{{3.656148985001852*^9, 3.656148991111858*^9}}],

Cell[BoxData[{
 RowBox[{"The", " ", "equation", " ", "of", " ", "the", " ", "ellipse", " ", 
  RowBox[{"is", " ", ":", " ", 
   RowBox[{"2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Ax", " ", "+", " ", "By", " ", "+", " ", "Cx", " ", "+", " ", "Dy", " ", 
    "+", " ", "Exy", " ", "+", " ", "F"}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "The", " ", "values", " ", "of", " ", "dx", " ", "and", " ", "dy", " ", 
    "are", " ", "calculated", " ", 
    RowBox[{"from", " ", ":", " ", "dx"}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", "Ax"}], " ", "+", " ", "C", " ", "+", " ", "Ey"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"dy", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", "By"}], " ", "+", " ", "D", " ", "+", " ", "Ex"}]}], 
  "\n"}], "\n", 
 RowBox[{"The", " ", "gradient", " ", "is", " ", "calculated", " ", 
  RowBox[{"from", " ", ":", " ", 
   RowBox[{
    RowBox[{"dy", " ", "2", " ", "By"}], " ", "+", " ", "D", " ", "+", " ", 
    "Ex"}]}]}], "\n", 
 RowBox[{"M", " ", "=", " ", 
  RowBox[{"--", " ", 
   RowBox[{"=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", "dx"}]}]}]}]}]}], " ", "2", " ", "Ax"}], " ", "+", 
     " ", "C", " ", "+", " ", "Ey"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.656149012571603*^9, 3.656149012572756*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Q19.How do I determine the outward normal of a point on the ellipse?\
\>", "Section",
 CellChangeTimes->{{3.656149019154976*^9, 3.656149029261796*^9}}],

Cell[BoxData[{
 RowBox[{"The", " ", "equation", " ", "of", " ", "the", " ", "ellipse", " ", 
  RowBox[{"is", " ", ":", " ", 
   RowBox[{"2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Ax", " ", "+", " ", "By", " ", "+", " ", "Cx", " ", "+", " ", "Dy", " ", 
    "+", " ", "Exy", " ", "+", " ", "F"}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "The", " ", "values", " ", "of", " ", "dx", " ", "and", " ", "dy", " ", 
    "are", " ", "calculated", " ", 
    RowBox[{"from", " ", ":", " ", "dx"}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", "Ax"}], " ", "+", " ", "C", " ", "+", " ", "Ey"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"dy", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", "By"}], " ", "+", " ", "D", " ", "+", " ", "Ex"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "The", " ", "outward", " ", "normal", " ", "is", " ", "calculated", " ", 
   RowBox[{"from", " ", ":", " ", "N"}]}], " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{"dy", ",", " ", 
    RowBox[{"-", "dx"}]}], ")"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.656149042681794*^9, 3.656149042682898*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Q20.How do I calculate the coefficients of an axis - aligned ellipse?\
\>", "Section",
 CellChangeTimes->{{3.656149049425387*^9, 3.656149055835145*^9}}],

Cell[BoxData[{
 RowBox[{"The", " ", "algebraic", " ", "exprssion", " ", "of", " ", "an", " ",
   "ellipse", " ", 
  RowBox[{"is", " ", ":", " ", 
   RowBox[{"2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Ax", " ", "+", " ", "By", " ", "+", " ", "Cx", " ", "+", " ", "Dy", " ", 
    "+", " ", "Exy", " ", "+", " ", "F"}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"where", " ", "A"}], ",", " ", "B", ",", " ", "C", ",", " ", "D", 
  ",", " ", 
  RowBox[{"E", " ", "and", " ", "F", " ", "are", " ", "constant", " ", 
   RowBox[{"terms", ".", "Multiplying"}], " ", "out", " ", "the", " ", 
   "denominators", " ", 
   RowBox[{"in", "[", "1", "]"}], " ", 
   RowBox[{"gives", " ", ":", " ", 
    RowBox[{
    "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", " ", "c"}], ")"}]}], " ", "+", " ", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{"y", " ", "-", " ", "d"}], ")"}]}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"Multiplying", " ", "out", " ", "the", " ", "numerators", " ", 
  RowBox[{"in", "[", "1", "]"}], " ", 
  RowBox[{"gives", " ", ":", " ", 
   RowBox[{
   "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", 
    "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", " ", 
       RowBox[{"2", " ", "cx"}], " ", "+", " ", "c"}], ")"}]}], " ", "+", " ", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{"y", " ", "-", " ", 
       RowBox[{"2", " ", "dy"}], " ", "+", " ", "d"}], ")"}]}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"Converting", " ", "into", " ", "single", " ", "terms", " ", 
  RowBox[{"produces", " ", ":", " ", 
   RowBox[{
   "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", 
    " ", "2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "x"}], " ", "-", " ", 
    RowBox[{"s", " ", "2", " ", "cx"}], " ", "+", " ", 
    RowBox[{"s", " ", "c"}], " ", "+", " ", 
    RowBox[{"r", " ", "y"}], " ", "-", " ", 
    RowBox[{"r", " ", "2", " ", "dy"}], " ", "+", " ", 
    RowBox[{"r", " ", "d"}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"Multiplying", " ", "every", " ", "parameter", " ", "by", " ", "the",
   " ", "denominator", " ", 
  RowBox[{"gives", " ", ":", " ", 
   RowBox[{
   "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", 
    " ", "2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "x"}], " ", "-", " ", 
    RowBox[{"s", " ", "2", " ", "cx"}], " ", "+", " ", 
    RowBox[{"s", " ", "c"}], " ", "+", " ", 
    RowBox[{"r", " ", "y"}], " ", "-", " ", 
    RowBox[{"r", " ", "2", " ", "dy"}], " ", "+", " ", 
    RowBox[{"r", " ", "d"}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"Rearranging", " ", "into", " ", "the", " ", "algebraic", " ", 
  "expression", " ", 
  RowBox[{"gives", " ", ":", " ", 
   RowBox[{
   "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", 
    " ", "2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "x"}], " ", "+", " ", 
    RowBox[{"r", " ", "y"}], " ", "-", " ", 
    RowBox[{"s", " ", "2", " ", "cx"}], " ", "-", " ", 
    RowBox[{"r", " ", "2", " ", "dy"}], " ", "+", " ", 
    RowBox[{"r", " ", "d"}], " ", "+", " ", 
    RowBox[{"s", " ", "c"}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}], " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"The", " ", "values", " ", "of", " ", "the", " ", "constant", " ", 
  "terms", " ", "are", " ", "then", " ", "as", " ", 
  RowBox[{"follows", " ", ":", " ", "2"}]}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "s"}], "\n"}], "\n", "2", "\n", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", "r"}], "\n"}], "\n", "2", "\n", 
 RowBox[{
  RowBox[{"C", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "s"}], " ", "2", " ", "c"}]}], "\n"}], "\n", "2", "\n", 
 RowBox[{
  RowBox[{"D", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "r"}], " ", "2", " ", "d"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"E", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2"}], "\n", 
 RowBox[{
  RowBox[{"F", " ", "=", " ", 
   RowBox[{
    RowBox[{"r", " ", "d"}], " ", "+", " ", 
    RowBox[{"s", " ", "c"}], " ", "-", " ", 
    RowBox[{"r", " ", "s"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"For", " ", "an", " ", "axis"}], " ", "-", " ", 
   RowBox[{"aligned", " ", "ellipse"}]}], ",", " ", 
  RowBox[{
   RowBox[{"A", " ", "and", " ", "B", " ", "are", " ", "always", " ", 
    RowBox[{"positive", ".", "For"}], " ", "an", " ", "axis"}], " ", "-", " ", 
   RowBox[{"aligned", " ", "ellipse"}]}], ",", " ", 
  RowBox[{"E", " ", "is", " ", "always", " ", "zero"}], ",", " ", 
  RowBox[{"and", " ", "F", " ", "is", " ", "always", " ", 
   RowBox[{"negative", ".", "These"}], " ", "constants", " ", "can", " ", 
   "be", " ", "used", " ", "to", " ", "render", " ", "the", " ", "ellipse", 
   " ", "using", " ", "an", " ", "incremental"}]}], "\n", 
 RowBox[{"scan", " ", "-", " ", 
  RowBox[{"line", " ", 
   RowBox[{"algorithm", "."}]}]}]}], "Input",
 CellChangeTimes->{{3.6561490883363934`*^9, 3.656149088337422*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Q21.How do I calculate the coefficients of an arbitary rotated ellipse?\
\>", "Section",
 CellChangeTimes->{{3.656149095991596*^9, 3.6561491023656073`*^9}}],

Cell["\<\
The parameters calculated previously are only correct for an ellipse
which is aligned with the X and Y axii.The ellipse still has to be rotated by \
the desired angle.This is done
as follows : Rotating a pair of X and Y coordinates can be performed by the \
following
expression :\
\>", "Text",
 CellChangeTimes->{{3.656149122661375*^9, 3.6561491284554977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], "]"}], ",", 
    "\"\< . \>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "\"\< = \>\"", ",", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.656149255101606*^9, 3.656149315031966*^9}, {
  3.6561583442763777`*^9, 3.656158375216465*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}, {
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" . \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"x"}, {"y"}}, RowSpacings -> 1, ColumnAlignments -> Center, 
        ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" = \"",RowBox[{"{", 
     RowBox[{
       RowBox[{
         RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
       RowBox[{
         RowBox[{"y", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.656149269147436*^9, 3.656149315791842*^9, 
  3.656158375712283*^9}]
}, Open  ]],

Cell["\<\
Substituting the resulting matrix elements into equation[1] gives : 2 2\
\>", "Text",
 CellChangeTimes->{{3.6561491816980963`*^9, 3.656149186741585*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", "y0"}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], " ", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
     SuperscriptBox["b", "2"]], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", "y0"}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
     SuperscriptBox["a", "2"]]}], "\[Equal]", "0"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "x", ")"}], "^", "2"}], "/", 
     RowBox[{"a", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "y", ")"}], "^", "2"}], "/", 
     RowBox[{"b", "^", "2"}]}], " ", "-", "1"}], "\[Equal]", "0"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"y", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ",", 
    RowBox[{"y", "->", 
     RowBox[{
      RowBox[{"y", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"out1", "=", 
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"y", "-", "y0"}], ")"}]}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.656149729129575*^9, 3.656149752553117*^9}, {
   3.656149803303089*^9, 3.6561498492574387`*^9}, 3.656150022495885*^9, {
   3.656158387662107*^9, 3.656158395541977*^9}, {3.6561590067579107`*^9, 
   3.656159048944179*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox["b", "2"]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"y", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox["a", "2"]]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.656149754715274*^9, 3.656149804504506*^9, 
  3.656149853183836*^9, 3.656150039081644*^9, 3.656158397748098*^9, 
  3.656159050057438*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "y0"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "x0"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox["b", "2"]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "x0"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "y0"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox["a", "2"]]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.656149754715274*^9, 3.656149804504506*^9, 
  3.656149853183836*^9, 3.656150039081644*^9, 3.656158397748098*^9, 
  3.656159050063394*^9}]
}, Open  ]],

Cell["\<\
Multiplying out the denominators gives : 
Multiplying out the equations within the parenthesis gives :
Then rearranging into the order required by equation[2] gives :\
\>", "Text",
 CellChangeTimes->{{3.656149204672264*^9, 3.65614924685886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"a", "^", "2"}], " ", 
    RowBox[{"b", "^", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"out1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"out2", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", "0"}]}]}], "Input",\

 CellChangeTimes->{{3.656149857744031*^9, 3.65614995634719*^9}, {
  3.656150011249769*^9, 3.6561500278964443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["a", "2"]}], " ", 
    SuperscriptBox["b", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["x0", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["y0", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", "x0", " ", "y0", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["b", "2"], " ", "x0", " ", "y0", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["x0", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["y0", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["b", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"y", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["a", "2"], " ", "y0", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", "x0", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"], " ", "x0", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"], " ", "y0", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["b", "2"], " ", "x0", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", "y0", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"], " ", "y0", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", "x0", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["b", "2"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.656149861590749*^9, 3.656149968680518*^9}, {
   3.656150013343212*^9, 3.6561500413171062`*^9}, 3.656158403931842*^9, {
   3.656159058441268*^9, 3.656159072577071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A0", ",", "Ay", ",", "Ayy"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Ax", ",", "Axy", ",", "Axyy"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Axx", ",", "Axxy", ",", "Axxyy"}], "}"}]}], "}"}], "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{"out2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<A0\>\"", ",", "\"\<Ay\>\"", ",", "\"\<Ayy\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Ax\>\"", ",", "\"\<Axy\>\"", ",", "\"\<Axyy\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Axx\>\"", ",", "\"\<Axxy\>\"", ",", "\"\<Axxyy\>\""}], 
        "}"}]}], "}"}], "]"}], ",", "\"\< = \>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A0", ",", "Ay", ",", "Ayy"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Ax", ",", "Axy", ",", "Axyy"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Axx", ",", "Axxy", ",", "Axxyy"}], "}"}]}], "}"}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6561499863216867`*^9, 3.656150169697385*^9}, 
   3.6561507762862263`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"\"A0\"", "\"Ay\"", "\"Ayy\""}, {
        "\"Ax\"", "\"Axy\"", "\"Axyy\""}, {
        "\"Axx\"", "\"Axxy\"", "\"Axxyy\""}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" = \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           RowBox[{
             RowBox[{"-", 
               SuperscriptBox["a", "2"]}], " ", 
             SuperscriptBox["b", "2"]}], "+", 
           RowBox[{
             SuperscriptBox["b", "2"], " ", 
             SuperscriptBox["x0", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["y0", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "x0", " ", "y0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["b", "2"], " ", "x0", " ", "y0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["x0", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{
             SuperscriptBox["b", "2"], " ", 
             SuperscriptBox["y0", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
           RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["a", "2"], " ", "y0", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "x0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox["b", "2"], " ", "x0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["b", "2"], " ", "y0", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
           RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{
             SuperscriptBox["b", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}, {
         RowBox[{
           RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["b", "2"], " ", "x0", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "y0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox["b", "2"], " ", "y0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "x0", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
           RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox["b", "2"], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "0"}, {
         RowBox[{
           RowBox[{
             SuperscriptBox["b", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "0", "0"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.656150015534759*^9, 3.6561500505943108`*^9, 
  3.656150341135787*^9, 3.65615077673764*^9, 3.65615840689865*^9, 
  3.656159074920953*^9}]
}, Open  ]],

Cell["The values of the constant terms are then as follows : ", "Text",
 CellChangeTimes->{{3.656150666748682*^9, 3.6561506717764893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Axx\>\"", ",", "\"\<Axy\>\"", ",", "\"\<Ayy\>\"", ",", 
       "\"\<Ax\>\"", ",", "\"\<Ay\>\"", ",", "\"\<A0\>\""}], "}"}], "]"}], 
    ",", "\"\< = \>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{
      "Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}], "}"}],
      "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.656150205426856*^9, 3.6561502112506447`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"\"Axx\""}, {"\"Axy\""}, {"\"Ayy\""}, {"\"Ax\""}, {
         "\"Ay\""}, {"\"A0\""}}, RowSpacings -> 1, ColumnAlignments -> Center,
         ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" = \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}, {
          RowBox[{
            RowBox[{"2", " ", 
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["b", "2"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}, {
          RowBox[{
            RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}, {
          RowBox[{
            RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["b", "2"], " ", "x0", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["a", "2"], " ", "y0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
              SuperscriptBox["b", "2"], " ", "y0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["a", "2"], " ", "x0", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}, {
          RowBox[{
            RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["a", "2"], " ", "y0", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["a", "2"], " ", "x0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"2", " ", 
              SuperscriptBox["b", "2"], " ", "x0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["b", "2"], " ", "y0", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}, {
          RowBox[{
            RowBox[{
              RowBox[{"-", 
                SuperscriptBox["a", "2"]}], " ", 
              SuperscriptBox["b", "2"]}], "+", 
            RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox["x0", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["y0", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"2", " ", 
              SuperscriptBox["a", "2"], " ", "x0", " ", "y0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"2", " ", 
              SuperscriptBox["b", "2"], " ", "x0", " ", "y0", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["x0", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox["y0", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}}, RowSpacings -> 
        1, ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.6561503449727297`*^9, 3.656158409967854*^9, 
  3.6561590809838142`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<=\>\""}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<;\>\""}], "}"}], "]"}], 
      ")"}], "&"}], ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Axx\>\"", ",", "\"\<Axy\>\"", ",", "\"\<Ayy\>\"", ",", 
         "\"\<Ax\>\"", ",", "\"\<Ay\>\"", ",", "\"\<A0\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}], 
        "}"}]}], "}"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656150437712612*^9, 3.656150476294828*^9}, {
  3.656150520444447*^9, 3.6561505895511103`*^9}, {3.656159114995298*^9, 
  3.656159140105734*^9}, {3.656159197239017*^9, 3.6561591994602957`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"Axx=\"",RowBox[{
          RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}],"\";\""},
       "RowDefault"]},
     {
      TemplateBox[{"\"Axy=\"",RowBox[{
          RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["b", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}],"\";\""},
       "RowDefault"]},
     {
      TemplateBox[{"\"Ayy=\"",RowBox[{
          RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}],"\";\""},
       "RowDefault"]},
     {
      TemplateBox[{"\"Ax=\"",RowBox[{
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["b", "2"], " ", "x0", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "y0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", 
            SuperscriptBox["b", "2"], " ", "y0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "x0", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}],"\";\""},
       "RowDefault"]},
     {
      TemplateBox[{"\"Ay=\"",RowBox[{
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["a", "2"], " ", "y0", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "x0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", 
            SuperscriptBox["b", "2"], " ", "x0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["b", "2"], " ", "y0", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}],"\";\""},
       "RowDefault"]},
     {
      TemplateBox[{"\"A0=\"",RowBox[{
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["a", "2"]}], " ", 
            SuperscriptBox["b", "2"]}], "+", 
          RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["x0", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["y0", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "x0", " ", "y0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["b", "2"], " ", "x0", " ", "y0", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["x0", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["y0", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}],"\";\""},
       "RowDefault"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.656150453534504*^9, 3.656150476720811*^9}, {
   3.656150531076682*^9, 3.656150590370615*^9}, 3.656158412488636*^9, 
   3.656159087551847*^9, {3.656159180374597*^9, 3.656159200796871*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Axx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"b", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Axy", "=", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"b", "^", "2"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ayy", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"b", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ax", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"b", "^", "2"}], " ", "x0", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"a", "^", "2"}], " ", "y0", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"b", "^", "2"}], " ", "y0", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"a", "^", "2"}], " ", "x0", " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ay", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"a", "^", "2"}], " ", "y0", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"a", "^", "2"}], " ", "x0", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"b", "^", "2"}], " ", "x0", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"b", "^", "2"}], " ", "y0", " ", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A0", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"a", "^", "2"}]}], " ", 
      RowBox[{"b", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{"b", "^", "2"}], " ", 
      RowBox[{"x0", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{"a", "^", "2"}], " ", 
      RowBox[{"y0", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "^", "2"}], " ", "x0", " ", "y0", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"b", "^", "2"}], " ", "x0", " ", "y0", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "^", "2"}], " ", 
      RowBox[{"x0", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{"b", "^", "2"}], " ", 
      RowBox[{"y0", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
  "\n"}], "\n"}], "Input",
 CellChangeTimes->{{3.656158423829344*^9, 3.656158436152233*^9}, {
  3.6561591912432003`*^9, 3.656159211506197*^9}}],

Cell["\<\
These values tend to get quite large, so 64 - bit integers will be
required.\
\>", "Text",
 CellChangeTimes->{{3.6561506370380583`*^9, 3.6561506439877453`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "EllipseCoeffsFromProperties", "]"}], "\n", 
 RowBox[{
  RowBox[{"EllipseCoeffsFromProperties", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0_", ",", "y0_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], ",", "\[Theta]_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}],
      "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"Axx", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";", "\n", 
     RowBox[{"Axy", "=", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"b", "^", "2"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ";", "\n", 
     RowBox[{"Ayy", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"b", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";", "\n", 
     RowBox[{"Ax", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"b", "^", "2"}], " ", "x0", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"a", "^", "2"}], " ", "y0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "^", "2"}], " ", "y0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"a", "^", "2"}], " ", "x0", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";", "\n", 
     RowBox[{"Ay", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"a", "^", "2"}], " ", "y0", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"a", "^", "2"}], " ", "x0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "^", "2"}], " ", "x0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"b", "^", "2"}], " ", "y0", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";", "\n", 
     RowBox[{"A0", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"a", "^", "2"}]}], " ", 
        RowBox[{"b", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"b", "^", "2"}], " ", 
        RowBox[{"x0", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"y0", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "^", "2"}], " ", "x0", " ", "y0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"b", "^", "2"}], " ", "x0", " ", "y0", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"x0", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"b", "^", "2"}], " ", 
        RowBox[{"y0", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Code",
 CellChangeTimes->{{3.649994661454151*^9, 3.649994676178681*^9}, {
   3.649994754742958*^9, 3.649994758955247*^9}, {3.649995010391774*^9, 
   3.649995130028624*^9}, {3.6499951648312397`*^9, 3.649995315132289*^9}, {
   3.649995349658071*^9, 3.64999535910966*^9}, 3.650108599093007*^9, {
   3.650211589615344*^9, 3.6502116289617367`*^9}, {3.650211684062271*^9, 
   3.6502117016404257`*^9}, {3.650259848679118*^9, 3.65025985365961*^9}, {
   3.650563518699345*^9, 3.6505635351207733`*^9}, {3.655579929651067*^9, 
   3.655579938823292*^9}, {3.65557997929303*^9, 3.6555800948892307`*^9}, 
   3.6555801399442587`*^9, {3.655611487951661*^9, 3.6556115142193203`*^9}, {
   3.656150861050887*^9, 3.656150875079288*^9}, {3.656157572979512*^9, 
   3.65615758060286*^9}, {3.656158451693115*^9, 3.656158461791711*^9}, {
   3.656159227878306*^9, 3.656159229813429*^9}}],

Cell[BoxData[{
 RowBox[{"Axx", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "^", "2"}], " ", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
   RowBox[{
    RowBox[{"a", "^", "2"}], " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], "\n", 
 RowBox[{"Axy", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"a", "^", "2"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"b", "^", "2"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\n", 
 RowBox[{"Ayy", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "^", "2"}], " ", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
   RowBox[{
    RowBox[{"b", "^", "2"}], " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], "\n", 
 RowBox[{"Ax", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"b", "^", "2"}], " ", "x0", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"a", "^", "2"}], " ", "y0", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\n", 
 RowBox[{"Ay", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"a", "^", "2"}], " ", "y0", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"b", "^", "2"}], " ", "x0", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"A0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"a", "^", "2"}]}], " ", 
     RowBox[{"b", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"b", "^", "2"}], " ", 
     RowBox[{"x0", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{"y0", "^", "2"}]}]}]}], "\[IndentingNewLine]"}], "\n"}], "Input",\

 CellChangeTimes->{{3.656150812729463*^9, 3.6561508317856827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EllipseCoeffsFromProperties", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}], ",", "0.2"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", " ", "y"}], ",", " ", 
     RowBox[{"y", "^", "2"}], ",", "x", ",", "y", ",", "1"}], "}"}]}], 
  "\[Equal]", "0"}], "\[IndentingNewLine]", 
 RowBox[{"f1", "=", 
  RowBox[{"y", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EllipseCoeffsFromProperties", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}], ",", "0.2"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", " ", "y"}], ",", " ", 
     RowBox[{"y", "^", "2"}], ",", "x", ",", "y", ",", "1"}], "}"}]}], 
  "\[Equal]", "0"}], "\[IndentingNewLine]", 
 RowBox[{"f2", "=", 
  RowBox[{"y", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "f2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.656155701797998*^9, 3.656155762065398*^9}, {
  3.6561558433770323`*^9, 3.6561558454955893`*^9}, {3.656155888699019*^9, 
  3.6561559812368603`*^9}, {3.656156065424876*^9, 3.656156111158551*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1225.`"}], "+", 
   RowBox[{"48.052731928034625`", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"9.34604021540761`", " ", "x", " ", "y"}], "+", 
   RowBox[{"25.94726807196538`", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.6561557138536053`*^9, {3.656155747543934*^9, 3.656155762473261*^9}, 
   3.6561558459532433`*^9, {3.656155890070402*^9, 3.656155982613579*^9}, {
   3.656156084336235*^9, 3.656156112036399*^9}, 3.65615846762395*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"7.915970879709249`*^-25", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2.2751069814718852`*^23", " ", "x"}], "-", 
      RowBox[{"2.8510689810305275`*^7", " ", 
       SqrtBox[
        RowBox[{"9.26873838091922`*^34", "-", 
         RowBox[{"3.572144225439129`*^33", " ", 
          SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}], ",", 
   RowBox[{"7.915970879709249`*^-25", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2.2751069814718852`*^23", " ", "x"}], "+", 
      RowBox[{"2.8510689810305275`*^7", " ", 
       SqrtBox[
        RowBox[{"9.26873838091922`*^34", "-", 
         RowBox[{"3.572144225439129`*^33", " ", 
          SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6561557138536053`*^9, {3.656155747543934*^9, 3.656155762473261*^9}, 
   3.6561558459532433`*^9, {3.656155890070402*^9, 3.656155982613579*^9}, {
   3.656156084336235*^9, 3.656156112036399*^9}, 3.6561584676303473`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"900", "-", 
   RowBox[{"539.8334223807267`", " ", "x"}], "+", 
   RowBox[{"48.052731928034625`", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"196.67200126279252`", " ", "y"}], "-", 
   RowBox[{"9.34604021540761`", " ", "x", " ", "y"}], "+", 
   RowBox[{"25.94726807196538`", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.6561557138536053`*^9, {3.656155747543934*^9, 3.656155762473261*^9}, 
   3.6561558459532433`*^9, {3.656155890070402*^9, 3.656155982613579*^9}, {
   3.656156084336235*^9, 3.656156112036399*^9}, 3.656158467635069*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"9.396393723716607`*^-37", " ", 
    RowBox[{"(", 
     RowBox[{"4.0332922932335935`*^36", "+", 
      RowBox[{"1.916658788796601`*^35", " ", "x"}], "-", 
      RowBox[{"8.091211205426768`*^8", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "3.5158876175901424`*^55"}], "+", 
         RowBox[{"3.8354655311597245`*^55", " ", "x"}], "-", 
         RowBox[{"3.147772403139033`*^54", " ", 
          SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}], ",", 
   RowBox[{"9.396393723716607`*^-37", " ", 
    RowBox[{"(", 
     RowBox[{"4.0332922932335935`*^36", "+", 
      RowBox[{"1.916658788796601`*^35", " ", "x"}], "+", 
      RowBox[{"8.091211205426768`*^8", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "3.5158876175901424`*^55"}], "+", 
         RowBox[{"3.8354655311597245`*^55", " ", "x"}], "-", 
         RowBox[{"3.147772403139033`*^54", " ", 
          SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6561557138536053`*^9, {3.656155747543934*^9, 3.656155762473261*^9}, 
   3.6561558459532433`*^9, {3.656155890070402*^9, 3.656155982613579*^9}, {
   3.656156084336235*^9, 3.656156112036399*^9}, 3.656158467639965*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
dbk886hzD352gPt6jTWD0I3uoQcvDeP/AxTKhpw=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wwzweeGxn79gDP0PwtX+Aw==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Ym9+ACMqSw1Hlpep0D+R/6mH9Fvxr3mBQjQYf3Q7kmOPEfnbkm4VStDAxoDR
F+GAEbmuJ/9h0mjQKjTaLuyIEakFS5vPqtPgkrrNW+wgub6dVdQn2jQwHIhO
9SN9h/fO7KAuDfrbtq3vJ33dUbvkqBEN3m9aMX52CCNCQtnJSaY00NF48lHo
MEZczCkLbttNgyP+3azjpL0W7U3329Pgru2SLbcTuV4MVUaMEw1C8k5c2Uva
1Wqct86VBpqco8dukXYKePNL4DQNkiczRmpJH0i9Uv33OfJ7zk6r8hzBCKvP
VrlX/GhQkM8RMCBtzpSJLvuXBn/Zhqe6kwa5wXNLoTSI0jIaiiK9fecLG8Nw
Giydaup6QVrf81+9gGga3I5bvV5PWjfhb0rBHRqsBHv3/ySt/UFiZvI+Db4c
bJuaI632q6N1XRoNzB71veJzxgh58n7skUUDz42G2uKkqYY+SVl5NGBsvXFA
irT48R1BA69oQNn+r74EacFIgWMqxTTIVS2oEyDNXdiEO5fRQEqzXW6J7H+5
86Hag0oaqA3GqIySnuU9w9NaS/ZvfbH7G+mpDfpD0t9oIFKsb19EesSRU2XT
RoP0Zrdr8aQHQmtzortpYPE67bwX6a6cu5E1gzQ4Vx1OAdKt31y9+Mdo8GHw
lZ/4/9sz9t2uZdLAZygtr4mc34UAo4KYORo0rygXxJIWrtZusVulgaLY7wgL
0ory9Hk6Hx1cSz5tWCTXU9eLR6FThA4d/m6ZWaShjGmcJk0H7YD/JvaSdner
C9NSpYOZ6iT7Klkf/q+Ls8c16eBv8Pw1jXQ4f3bNyw10iPF8sSedrKfc3MsS
hkZ0eDumwc4h67F0+dzmZVM6eCtMCjJIN+w74kBY0IHYnjJzj6xfJmtrsoUj
HQw1DRy9yPrmNmOUiR6lw5OLbnUNZP1TEiX7G93pcKJ6Rm4taQOjcc3DPnR4
9rLErIHcT8FhjwrORNMh4JbmSB25H2NabrVsiKcDdxv3X8vkfn2kdWl++gEd
+AX6T2uSrqxzMPnvCR0eC1Uf97Ak54cqUhtZQYfwmPrmdDIPFE/NT+yroQNz
yG5NOpkXG4qHJCiNdKgVm3RIJvPE1plwSO6mwwHzv49f2oURiZkB/XnzdJgK
0dBgkfmUM+vG682hg8Bm+h2CzK8SC1stfX4ZaDyc8/PGDozomdA5V0qRgdAm
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
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
knzs71jWPzHBQ0U+38aCHP8HDBOVzw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-6.932007403965789, 11.819059147995505`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6561557138536053`*^9, {3.656155747543934*^9, 3.656155762473261*^9}, 
   3.6561558459532433`*^9, {3.656155890070402*^9, 3.656155982613579*^9}, {
   3.656156084336235*^9, 3.656156112036399*^9}, 3.656158467708345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.656155881814356*^9},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"7.915970879709249`*^-25", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2.2751069814718852`*^23"}], " ", "x"}], "-", 
        RowBox[{"2.8510689810305275`*^7", " ", 
         SqrtBox[
          RowBox[{"9.26873838091922`*^34", "-", 
           RowBox[{"3.572144225439129`*^33", " ", 
            SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"7.915970879709249`*^-25", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2.2751069814718852`*^23"}], " ", "x"}], "+", 
        RowBox[{"2.8510689810305275`*^7", " ", 
         SqrtBox[
          RowBox[{"9.26873838091922`*^34", "-", 
           RowBox[{"3.572144225439129`*^33", " ", 
            SuperscriptBox["x", "2"]}]}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.65615586158864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Q22.How do I determine the limits for a rotated ellipse?", "Subsection",
 CellChangeTimes->{3.658572429037014*^9}],

Cell["The equation of the ellipse is :", "Text",
 CellChangeTimes->{3.658572458337017*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Axx", ",", "Axy", ",", "Ayy", ",", "Ax", ",", "Ay", ",", "A0"}],
      "}"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "^", "2"}], ",", 
      RowBox[{"x", " ", "y"}], ",", " ", 
      RowBox[{"y", "^", "2"}], ",", "x", ",", "y", ",", "1"}], "}"}]}], 
   "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.656149606648198*^9, 3.6561496285417757`*^9}, {
  3.658572497765377*^9, 3.658572498748928*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A0", "+", 
   RowBox[{"Ax", " ", "x"}], "+", 
   RowBox[{"Axx", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"Ay", " ", "y"}], "+", 
   RowBox[{"Axy", " ", "x", " ", "y"}], "+", 
   RowBox[{"Ayy", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.656149629589909*^9, 3.658572503096932*^9}]
}, Open  ]],

Cell["The derivative for the X - axis is :", "Text",
 CellChangeTimes->{3.65857252725352*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"f", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.658572532098115*^9, 3.658572537003324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ax", "+", 
   RowBox[{"2", " ", "Axx", " ", "x"}], "+", 
   RowBox[{"Axy", " ", "y"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.6585725374435263`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dx", "=", 
  RowBox[{"Ax", "+", 
   RowBox[{"2", " ", "Axx", " ", "x"}], "+", 
   RowBox[{"Axy", " ", "y"}]}]}]], "Input",
 CellChangeTimes->{{3.658572605081367*^9, 3.658572611410738*^9}}],

Cell["The derivative for the Y - axis is :", "Text",
 CellChangeTimes->{3.658572527253769*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"f", ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ax", "+", 
   RowBox[{"2", " ", "Axx", " ", "x"}], "+", 
   RowBox[{"Axy", " ", "y"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.6585726226741743`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dy", "=", 
  RowBox[{"Ax", "+", 
   RowBox[{"2", " ", "Axx", " ", "x"}], "+", 
   RowBox[{"Axy", " ", "y"}]}]}]], "Input"],

Cell["\<\
When dx is zero, then the current location is at the left or right limit
of the ellipse.When dy is zero, then the current location is at the bottom or \
top limit
of the ellipse.Calculating the limits for Y gives : General equation of the \
circle :\
\>", "Text",
 CellChangeTimes->{3.658572662481243*^9}],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{3.658573410825984*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A0", "+", 
   RowBox[{"Ax", " ", "x"}], "+", 
   RowBox[{"Axx", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"Ay", " ", "y"}], "+", 
   RowBox[{"Axy", " ", "x", " ", "y"}], "+", 
   RowBox[{"Ayy", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.658573411268165*^9}]
}, Open  ]],

Cell["Expressing y in terms of x gives :", "Text",
 CellChangeTimes->{3.658573479083544*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"f", ",", "x"}], "]"}], ",", "y"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"f", ",", "y"}], "]"}], ",", "y"}], "]"}]}], "Input",
 CellChangeTimes->{{3.658573423956073*^9, 3.658573433490954*^9}, {
  3.658596551669579*^9, 3.658596552379768*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "Ax"}], "-", 
      RowBox[{"2", " ", "Axx", " ", "x"}]}], "Axy"]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.6585734474509974`*^9, 3.658596553754608*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "Ay"}], "-", 
      RowBox[{"Axy", " ", "x"}]}], 
     RowBox[{"2", " ", "Ayy"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6585734474509974`*^9, 3.658596553762321*^9}]
}, Open  ]],

Cell["Substituting into equation[1] gives :", "Text",
 CellChangeTimes->{3.658573494827043*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"f", ",", "x"}], "]"}], ",", "y"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"f", ",", "y"}], "]"}], ",", "y"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.658573504089891*^9, 3.658573548592613*^9}, {
   3.65859641576116*^9, 3.658596420176991*^9}, 3.6585964688241673`*^9, 
   3.65859651256721*^9, {3.658596603242937*^9, 3.658596616968397*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A0", "-", 
   FractionBox[
    RowBox[{"Ax", " ", "Ay"}], "Axy"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["Ax", "2"], " ", "Ayy"}], 
    SuperscriptBox["Axy", "2"]], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "Axx", " ", "Ay"}], "Axy"]}], "+", 
      FractionBox[
       RowBox[{"4", " ", "Ax", " ", "Axx", " ", "Ayy"}], 
       SuperscriptBox["Axy", "2"]]}], ")"}], " ", "x"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "Axx"}], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["Axx", "2"], " ", "Ayy"}], 
       SuperscriptBox["Axy", "2"]]}], ")"}], " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.658573505337549*^9, 3.658573549018689*^9}, 
   3.658596470943901*^9, 3.658596513650853*^9, 3.658596617572803*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A0", "-", 
   FractionBox[
    SuperscriptBox["Ay", "2"], 
    RowBox[{"4", " ", "Ayy"}]], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Ax", "-", 
      FractionBox[
       RowBox[{"Axy", " ", "Ay"}], 
       RowBox[{"2", " ", "Ayy"}]]}], ")"}], " ", "x"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Axx", "-", 
      FractionBox[
       SuperscriptBox["Axy", "2"], 
       RowBox[{"4", " ", "Ayy"}]]}], ")"}], " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.658573505337549*^9, 3.658573549018689*^9}, 
   3.658596470943901*^9, 3.658596513650853*^9, 3.658596617582321*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.658572627781351*^9, 3.65857262898622*^9}, 
   3.65857267082577*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Ax", "+", "By", "+", "Cx", "+", "Dy", "+", "Exy", "+", "F"}], 
    "=", "0"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"[", "2", "]"}], " ", "dx"}], "=", 
    RowBox[{
     RowBox[{"2", "Ax"}], "+", "C", "+", "Ey"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"[", "3", "]"}], " ", "dy"}], "=", 
    RowBox[{
     RowBox[{"2", "By"}], "+", "D", "+", "Ex"}]}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"2", " ", "2"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"[", "1", "]"}], " ", "Ax"}], "+", "By", "+", "Cx", "+", "Dy", 
     "+", "Exy", "+", "F"}], "=", "0"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Derivative", " ", "of", " ", 
     RowBox[{"Y", ":", 
      RowBox[{
       RowBox[{
        RowBox[{"[", "2", "]"}], " ", "2", "By"}], "+", "D", "+", "Ex"}]}]}], 
    "=", "0"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"2", "By"}], "=", 
    RowBox[{
     RowBox[{"-", "Ex"}], "-", "D"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", "Ex"}], "-", "D"}], "\n", 
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "2"}]}]}], "B"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Substituting", " ", "into", " ", 
    RowBox[{"equation", "[", "1", "]"}], " ", 
    RowBox[{"gives", ":", "2"}]}], "\n", 
   RowBox[{
    RowBox[{"2", "|", 
     RowBox[{
      RowBox[{"-", "Ex"}], "-", "D"}], "|", "               ", "|", 
     RowBox[{
      RowBox[{"-", "Ex"}], "-", "D"}], "|", "      ", "|", 
     RowBox[{
      RowBox[{"-", "Ex"}], "-", "D"}], "|", 
     RowBox[{"Ax", "+", "B"}], "|", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}], " ", "|", 
     RowBox[{
      RowBox[{"+", "Cx"}], "+", "D"}], "|", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}], " ", "|", 
     RowBox[{"+", "Ex"}], "|", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}], " ", "|", 
     RowBox[{"+", "F"}]}], "=", "0"}], "\n", "            ", 
   RowBox[{"|", 
    RowBox[{"2", "B"}], "|", "               ", "|", 
    RowBox[{"2", "B"}], "|", "      ", "|", 
    RowBox[{"2", "B"}], "|", 
    RowBox[{
    "Multiplying", " ", "out", " ", "last", " ", "two", " ", "brackets", " ", 
     
     RowBox[{"gives", ":", 
      RowBox[{"2", " ", "2", " ", "2"}]}]}]}], "\n", 
   RowBox[{"2", "|", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "Ex"}], "-", "D"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "Ex"}], "-", "D"}], ")"}]}], "|", 
    RowBox[{
     RowBox[{"-", "DEx"}], "-", "D", "-", 
     RowBox[{"E", " ", "x"}], "-", "DEx"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Ax", "+", "B"}], "|", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "--"}]}]}]}]}]}], "   ", "|", 
     RowBox[{
      RowBox[{"+", "Cx"}], "+", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"-", 
           RowBox[{"+", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", 
                  RowBox[{"+", "F"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "=", "0"}], 
   "\n", "            ", 
   RowBox[{"|", "2", "|", 
    RowBox[{"2", "B", " ", "2", "B"}]}], "\n", 
   RowBox[{"4", "B"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Expanding", " ", "out", " ", "all", " ", "brackets", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{"2", "|", 
    RowBox[{
     RowBox[{"E", " ", "x"}], "+", 
     RowBox[{"2", "DEx"}], "+", "D"}], "|", 
    RowBox[{
    "2", "DE", " ", "2", "D", " ", "2", "E", " ", "2", " ", "2", "DE"}]}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Ax", "+", "B"}], "|", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", "--"}]}]}]}]}]}]}], " ", "|", 
     RowBox[{
      RowBox[{"+", "Cx"}], "-", 
      RowBox[{"--", 
       RowBox[{"-", "x"}]}], "-", 
      RowBox[{"--", 
       RowBox[{"-", 
        RowBox[{"-", 
         RowBox[{"--", "x"}]}]}]}], "-", 
      RowBox[{"--", 
       RowBox[{"-", "x"}]}], "+", "F"}]}], "=", "0"}], "\n", "            ", 
   RowBox[{"|", "2", "|", 
    RowBox[{"4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B"}]}], "\n", 
   RowBox[{"4", "B"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
   "Cancelling", " ", "out", " ", "terms", " ", "in", " ", "first", " ", 
    "bracket", " ", "and", " ", "breaking", " ", "up", " ", "last", " ", 
    "two", " ", 
    RowBox[{"brackets", ":", 
     RowBox[{"2", " ", "2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{
    RowBox[{"2", " ", "E", " ", "x"}], "+", 
    RowBox[{"2", "DEx"}], "+", 
    RowBox[{
    "D", " ", "2", "DE", " ", "2", "D", " ", "2", "E", " ", "2", " ", "2", 
     "DE"}]}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"-", 
              RowBox[{"+", "Cx"}]}]}]}]}]}]}]}]}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", 
       RowBox[{"-", 
        RowBox[{"--", 
         RowBox[{"-", "x"}]}]}]}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", "F"}], "=", "0"}], "\n", 
   RowBox[{
   "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"Breaking", " ", "up", " ", "first", " ", "bracket", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{
   "2", " ", "E", " ", "2", " ", "2", "DE", " ", "D", " ", "2", "DE", " ", 
    "2", "D", " ", "2", "E", " ", "2", " ", "2", "DE"}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", "x"}], "+", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", 
     RowBox[{"--", 
      RowBox[{"+", "Cx"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", 
       RowBox[{"-", 
        RowBox[{"--", 
         RowBox[{"-", "x"}]}]}]}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", "F"}], "=", "0"}], "\n", 
   RowBox[{
   "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B", " ", 
    "4", "B", " ", "4", "B"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Some", " ", "rearrangement", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{
   "2", " ", "E", " ", "2", " ", "2", "E", " ", "2", " ", "2", "DE", " ", "2",
     "DE", " ", "2", "DE", " ", "D", " ", "2", "D"}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", "x"}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", "Cx", "+", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", 
     RowBox[{"--", 
      RowBox[{"-", 
       RowBox[{"--", 
        RowBox[{"-", 
         RowBox[{"+", "F"}]}]}]}]}]}], "=", "0"}], "\n", 
   RowBox[{
   "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B", " ", 
    "4", "B", " ", "4", "B"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
   "Cancelling", " ", "out", " ", "and", " ", "combining", " ", "some", " ", 
    "terms", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{
    RowBox[{
    "2", " ", "E", " ", "2", " ", "2", "E", " ", "2", " ", "2", "DE"}], "-", 
    RowBox[{"4", "DE", " ", "D"}], "-", 
    RowBox[{"2", "D"}]}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", "x"}], "-", 
     RowBox[{"--", "x"}], "+", "Cx", "+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"-", "x"}]}]}]}]}], "+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"+", "F"}]}]}]}]}]}], "=", "0"}], "\n", 
   RowBox[{"4", "B", " ", "4", "B", " ", "4", "B", " ", "4", "B"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"Further", " ", "reduction", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2", " ", "2"}]}]}], "\n", 
   RowBox[{
    RowBox[{"2", " ", "E"}], "-", 
    RowBox[{"2", "E", " ", "2", " ", "2", "DE", " ", "D"}]}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "x"}]}]}]}], "+", "Cx", "-", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"+", "F"}]}]}], "=", "0"}], "\n", 
   RowBox[{"4", "B", " ", "4", "B", " ", "4", "B"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"Final", " ", "cancellation", " ", "out", " ", 
    RowBox[{"produces", ":", 
     RowBox[{"2", " ", "2"}]}]}], "\n", 
   RowBox[{"2", "-", 
    RowBox[{"E", " ", "2", " ", "DE", " ", "D"}]}], "\n", 
   RowBox[{
    RowBox[{"Ax", "+", 
     RowBox[{"--", 
      RowBox[{"-", "x"}]}], "+", "Cx", "-", 
     RowBox[{"--", "x"}], "-", 
     RowBox[{"--", 
      RowBox[{"+", "F"}]}]}], "=", "0"}], "\n", 
   RowBox[{"4", "B", " ", "2", "B", " ", "4", "B"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
   "Expressing", " ", "as", " ", "a", " ", "quadratic", " ", "equation", " ", 
    "with", " ", "parameter", " ", "t", " ", 
    RowBox[{"produces", ":", "2"}]}], "\n", 
   RowBox[{
    RowBox[{"Pt", "+", "Qt", "+", "R"}], "=", "0"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "The", " ", "final", " ", "equation", " ", "for", " ", "the", " ", "Y"}],
      "-", 
     RowBox[{"axis", ":", "\[IndentingNewLine]", 
      RowBox[{
      "|", "2", "|", "      ", "|", "        ", "|", "     ", "|", "2", "|", 
       "\[IndentingNewLine]", "|", "E", "|", "2", "|", "DE", "|", "     ", 
       "|", "D", "|", "\[IndentingNewLine]", "|", 
       RowBox[{"A", "-", "--"}], " ", "|", 
       RowBox[{"t", "+"}], " ", "|", 
       RowBox[{"C", "-", "--"}], " ", "|", 
       RowBox[{"t", "+"}], " ", "|", 
       RowBox[{"F", "-", "--"}], " ", "|"}]}]}], " ", "=", "0"}], "\n", 
   "     ", 
   RowBox[{
    RowBox[{"|", 
     RowBox[{"4", "B"}], "|", "      ", "|", 
     RowBox[{"2", "A"}], "|", "     ", "|", 
     RowBox[{"4", "B"}], "|", 
     RowBox[{
      RowBox[{"And", " ", "for", " ", "the", " ", "X"}], "-", 
      RowBox[{"axis", ":", "\[IndentingNewLine]", 
       RowBox[{
       "|", "2", "|", "      ", "|", "        ", "|", "     ", "|", "2", "|", 
        "\[IndentingNewLine]", "|", "E", "|", "2", "|", "CE", "|", "     ", 
        "|", "C", "|", "\[IndentingNewLine]", "|", 
        RowBox[{"B", "-", "--"}], " ", "|", 
        RowBox[{"t", "+"}], " ", "|", 
        RowBox[{"D", "-", "--"}], " ", "|", 
        RowBox[{"t", "+"}], " ", "|", 
        RowBox[{"F", "-", "--"}], " ", "|"}]}]}]}], " ", "=", "0"}], "\n", 
   "     ", 
   RowBox[{"|", 
    RowBox[{"4", "A"}], "|", "      ", "|", 
    RowBox[{"2", "B"}], "|", "     ", "|", 
    RowBox[{"4", "A"}], "|", 
    RowBox[{"This", " ", "produces", " ", 
     RowBox[{"terms", ":", 
      RowBox[{"Y", "-", 
       RowBox[{"axis", " ", "X"}], "-", "axis"}]}]}]}], "\n", 
   "\[IndentingNewLine]", "        ", 
   RowBox[{
    RowBox[{
    "|", "2", "|", "         ", "|", "2", "|", "\[IndentingNewLine]", "|", 
     "E", "|", "         ", "|", "E", "|", "P"}], "=", " ", 
    RowBox[{
     RowBox[{"|", 
      RowBox[{"A", "-", "--"}], " ", "|", "P"}], "=", " ", 
     RowBox[{
      RowBox[{"|", 
       RowBox[{"B", "-", "--"}], " ", "|", "\[IndentingNewLine]", "|", 
       RowBox[{"4", "B"}], "|", "         ", "|", 
       RowBox[{"4", "A"}], "|", "\[IndentingNewLine]", "|", "        ", "|", 
       "         ", "|", "        ", "|", "\[IndentingNewLine]", "|", "DE", 
       "|", "         ", "|", "CE", "|", "Q"}], "=", " ", 
      RowBox[{
       RowBox[{"|", 
        RowBox[{"C", "-", "--"}], " ", "|", "Q"}], "=", " ", 
       RowBox[{
        RowBox[{"|", 
         RowBox[{"D", "-", "--"}], " ", "|", "\[IndentingNewLine]", "|", 
         RowBox[{"2", "A"}], "|", "         ", "|", 
         RowBox[{"2", "B"}], "|", "\[IndentingNewLine]", "|", "2", "|", 
         "         ", "|", "2", "|", "\[IndentingNewLine]", "|", "D", "|", 
         "         ", "|", "C", "|", "R"}], "=", " ", 
        RowBox[{
         RowBox[{"|", 
          RowBox[{"F", "-", "--"}], " ", "|", "R"}], "=", " ", 
         RowBox[{"|", 
          RowBox[{"F", "-", "--"}], " ", "|", "\[IndentingNewLine]", "|", 
          RowBox[{"4", "B"}], "|", "         ", "|", 
          RowBox[{"4", "A"}], "|", 
          RowBox[{
          "Multiplying", " ", "out", " ", "by", " ", "the", " ", "common", 
           " ", "denominator", " ", 
           RowBox[{"produces", ":", 
            RowBox[{
             RowBox[{
             "The", " ", "terms", " ", "for", " ", "both", " ", "the", " ", 
              "X"}], "-", 
             RowBox[{"axis", " ", "and", " ", "Y"}], "-", 
             RowBox[{"axis", " ", "are", " ", "as", " ", "follows"}]}], ":", 
            RowBox[{"X", "-", 
             RowBox[{"axis", " ", "Y"}], "-", "axis"}]}]}]}]}]}]}]}]}]}], 
   "\n", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", "2"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ",
     "2"}], "\n", 
   RowBox[{"P", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "AB"}], "-", 
      RowBox[{"E", " ", "P"}]}], "=", 
     RowBox[{
      RowBox[{"4", "AB"}], "-", "E"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"Q", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "BC"}], "-", 
      RowBox[{"2", "DE", " ", "Q"}]}], "=", 
     RowBox[{
      RowBox[{"4", "AD"}], "-", 
      RowBox[{"2", "CE"}]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"2", " ", "2"}], "\n", 
   RowBox[{"R", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "BF"}], "-", 
      RowBox[{"D", " ", "R"}]}], "=", 
     RowBox[{
      RowBox[{"4", "AF"}], "-", "C"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{
                   "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.658572407905385*^9, 3.6585724629406347`*^9}, {
   3.658572512843862*^9, 3.6585725205148153`*^9}, 3.658572657302985*^9, 
   3.658573463904315*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"FullSimplify", ",", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ")"}], "&"}], ",", 
     RowBox[{"ellipseBoundingPoints", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", "y0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", "\[Theta]"}], "}"}], "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6588416677941093`*^9, 3.658841723182794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"x0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}], ",", 
     RowBox[{"y0", "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}]}], "]"}], ",", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"x0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}], ",", 
     RowBox[{"y0", "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}]}], "]"}], ",", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"x0", "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], ",", 
     RowBox[{"y0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["b", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}]}], "]"}], ",", 
   
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], ",", 
     RowBox[{"y0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.658841707789222*^9, 3.658841742665927*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"OddQ", "[", 
    RowBox[{"Quotient", "[", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"Pi", "/", "2"}]}], "]"}], "]"}], ",", "\n", "  ", 
   RowBox[{
    RowBox[{"aa", "=", "b"}], ";", 
    RowBox[{"bb", "=", "a"}]}], ",", "\n", "  ", 
   RowBox[{
    RowBox[{"aa", "=", "a"}], ";", 
    RowBox[{"bb", "=", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659156565615106*^9, 3.65915658433287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Piecewise", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"0", "\[LessEqual]", " ", "\[Theta]", "<", 
       RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{
       RowBox[{"Pi", "/", "2"}], "\[LessEqual]", " ", "\[Theta]", "<", 
       "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"Pi", "\[LessEqual]", " ", "\[Theta]", "<", 
       RowBox[{"3", 
        RowBox[{"Pi", "/", "2"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"Pi", "/", "2"}]}], "\[LessEqual]", " ", "\[Theta]", "<", 
       RowBox[{"2", "Pi"}]}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.65916171609132*^9, 3.6591617780217247`*^9}, {
  3.659161848452228*^9, 3.659161929319223*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"a", 
        RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
         FractionBox["\[Pi]", "2"]}]},
       {"b", 
        RowBox[{
         FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
         "\[Pi]"}]},
       {"a", 
        RowBox[{"\[Pi]", "\[LessEqual]", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
       {"b", 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "\[LessEqual]", "\[Theta]", "<", 
         
         RowBox[{"2", " ", "\[Pi]"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6591617793028183`*^9, 3.659161930120534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] -> \>\"", ",", "\"\<\[Delta]\[Theta]\>\""}], "}"}],
     ",", "\n", 
    RowBox[{"{", 
     RowBox[{"\"\<a -> \>\"", ",", "\"\<a\>\""}], "}"}], ",", "\n", 
    RowBox[{"{", 
     RowBox[{"\"\<b -> \>\"", ",", "\"\<b\>\""}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.659193233699937*^9, 3.659193281553461*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[Theta] -> \"\>", "\<\"\[Delta]\[Theta]\"\>"},
    {"\<\"a -> \"\>", "\<\"a\"\>"},
    {"\<\"b -> \"\>", "\<\"b\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.659193260406694*^9, 3.6591932959857388`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partShow", "[", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\"\<\[Theta] -> \[Delta]\[Theta]\>\"", "}"}], ",", 
          RowBox[{"{", "\"\<a -> a\>\"", "}"}], ",", 
          RowBox[{"{", "\"\<b -> b\>\"", "}"}]}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", " ", "\[Theta]", "<", 
         RowBox[{"Pi", "/", "2"}]}], "||", 
        RowBox[{"Pi", "\[LessEqual]", " ", "\[Theta]", "<", 
         RowBox[{"3", 
          RowBox[{"Pi", "/", "2"}]}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\"\<\[Theta] -> \[Delta]\[Theta]\>\"", "}"}], ",", 
          RowBox[{"{", "\"\<a -> b\>\"", "}"}], ",", 
          RowBox[{"{", "\"\<b -> a\>\"", "}"}]}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "\[LessEqual]", " ", "\[Theta]", "<", 
         "Pi"}], "||", 
        RowBox[{
         RowBox[{"3", 
          RowBox[{"Pi", "/", "2"}]}], "\[LessEqual]", " ", "\[Theta]", "<", 
         RowBox[{"2", "Pi"}]}]}]}], "}"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.65916193655975*^9, {3.6591619670158863`*^9, 3.6591619873968554`*^9}, {
   3.6591933028286123`*^9, 3.6591933313918047`*^9}, {3.659198799824045*^9, 
   3.659198822086372*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxFmgk0le/zwEuL0qboq41s7VQoKrcmSoWUJRGhXavKkqVUtKhIVKgo2Qop
QiIi+75c++669i1LG0n91W/m/d/TOdN5zjszz3XfZ575zIzYobPaR3nGjBmj
N27MmL/yf58ioP+d358bklCaB8mvzmt8SouH4h5n7vMvqaBeP8EqdXw2XFfh
aXK7GAYnOvQn+MgWgnP44J3wwWJGX+j2lt+xQmy4I3BJ2/bCJxAYuie+OjgT
RBQC5deF5kOD1LhDNdwIKDx6RrTrcjH8Z9I/26S/jNH/ftjvpUB6CazRgsv3
+VJBZ/zDQ0n7c2Fou9il8iVsGJa/of3ZKQo69q7cdOtIGfhN73w+vbOS0S/d
9EfTzLwc6l15Ql89S4eHMx7575pZCIct+2rd7EpgjhLvlrHSMTBuR6/hIrVK
kErkrkjk1jD6UXONfmYtrAKnvPSyNNksODltV//nQ2zIe560UT2/DNaq35YT
LI4F4fURtimrauD9mZqYMzX1jP79rx8CJPJrQIbv9tj6jByYIqDpLr+xBOTz
XZ9NEK0Ebd0pkkus42Hd8vNeJrPrcf8cRv9c4RyNy3b1ULN9p/QPg3x4NUdb
5rJQGTwfMvqTZF4NZiZ3BTcsSISQaY8NLttz4Ni/D5fRX6KreLH7AQeu35ix
j7+3ENRF9rDT+8th8mLpA3bptZAe7eT44sAnkL9p27GzrxG/fxOj76XcWfi4
sxG8Dp5IeajEhm6Jveen5VWChfavT2vmNEBpXNbPVVHJkPp7n838w00wMPvv
D9jC6POufiy5XakJTo9R1/dzLgaXZfozdV9Uw9mkFjfrdxxoSpxsETchFbSs
N/B2ljVD7L+/Xyujf0F4h+1Xr2ZQ9pX6/LqsBKRXGbz1uVoLgboayaX1jTCQ
qtalrJ8G9b3zPGN3tMLldL1L6XrtjH4r3498v88tILRp+vUPC8ugYM1+rWaD
eqjqiu6XmTT6PbOdD+eFpsPp48OSTvFtsFW4VEm4tIPR3zsYJL5bpQ26a3vn
Zp4oh3XC4YMe8zgww3GB+D2ZZphRkFejO5IBPzk1UborO4DPSpPXSrOL0c9o
2WP9y7sdUi6yw0uiKmCSaERWHG8jbJ1zXbvboAVESqbtadidBU77EpQl/Toh
P+/vp5vRlysZlxcy0AEP50WpcEYqoUL87aO6r41g/abLUfV6Kyyv3JV33D8b
ZhX7sAcEusF/9/WSANFwUO5xcV8wlQ28+wXlFr84z6JzvSZvfrdijyWLzmmP
zNbqI2sjwbBeIzyuvwQOsiSCtNbYsOgc8rEycqyro8G6cHr+3opyuBe23Nj0
4kUWnbPF23bE37nyHtw+FXZ+SaiChAWyQvYpl1l0jrZq5rx6KvkBXr11m+Tu
XwtWGQuOZ493YNE5OWCw0yciOwHS/LUWr7zVAM6Xn2/dE+zIonNgf6TAJdUs
CfpUJ/u3yDeCn7ykWIP6dRa95xoKwZu6JifDpZSO1dEhXIj9/HLkRO8NFr3H
hqyOGMv9KcCnmJPkuKAZil6sqP5634lF7+lJpeWrfr9JhUdRobu07rVAm3F4
zBX52yx6D223nXrpNDYdFkk51y3kaYPf/8k94Ku+w6L37JZ62MKZezIgKvDU
6c+W7TC7MOash70Li94jL80erycvMmGz8M7hhLYOkHLasFNUzJVF70mQ7kp+
yaEsyPeQuuNs0AWbIXHpq7R7LHoPRAQfzXirasHK+OvuEhvUrvtmZbhdYP3V
5rUqBduvLxxqK2xZtTF/N1wBQUfebBgQsce/TzWc7KweGid3Fb9vHVz1Ny53
LXdg/fvzrOCAlwE3cq7dNdb1DcHXNgQ3wutZx+4FCt9gqd6XHP3XBGk5HadW
Jd9kzfj7czxvhmrHMzs+HLnF+vvtlIRbYWBDv6TKpDss78d/P20w5Yvl2KJX
zqxDf1+f2R0g9mqwzmD3XdaSfwY7QeHwpQ8tA66s7r/mpnfDA7UthvMKXsNw
xAK1d9pFcPSstFx0iA+YCBxxsc8rhGPhEiKiLm/hP/86U+11JXAtLmi6nEw0
rH7w7EavcDk8T13yR6U8ZvTvYhLgMm70/csP6dW/GAdHrESTl3XUQFXFCs4p
0QS4fKyxPqOgHr41vi66nJ4IeSu0fstUc2Dydy/OjnefYF+gzN0xGlyYM1yp
X8ybAm0LZi0oTGqCJWPmsQ0NUsHKYyD0qWwLyE8wVG0JSwOe6SXrTwe1ggqf
T7LZn3RwuxmVtWFOO+jMqFs/qJUJwn8e6E127oCDgiKRDoFZEGpt2Vox0gl6
odwgz/URcGvZSOW1dDbIb+bmr/39HDpbTWoXVReDZfQRz5D6SPCfl/hd9FUp
fMiSdnR/GQCSaXcHphaUgXti682Ea+8gYcoVwUS3CtikZSvfo/kCjP3iJ31N
roQ3WcetC5fGQsUvkDW8UA0pVWmdO34Gw6PLHSI172ogp7jTlJv/Afp7xmgO
GtbBtkP8voEBr6DEUGhtSkg9tNee1v9m/hFu9nJickQ5kNNpqDNG4w3c9PEP
Ki3ggKOFteT4qaP3+PFklccPGuFlXMm4lRcjQMI5bnXWDi642cT63DVOBl+O
X6npxCbosB+qqyl8C8m2RfHxKU3gaz8kKPQ2BaT3OR6Wt22GFcoLY29LRoHx
8bZt4awWeO244e7zcWkQzz40ML67BcwmqtxXsI2GX3t/s/1jWiHB6eKE5XvT
YYfaFocS4zaIyDl5uiX/HTxWmW3kubodcl0S7KOCM6A8RYLfn90OX1zdtj0Q
fw8Ka6Tab4d2QLX7yDfWcCYcVhzve25rJ6zViRFVso6FMvEtFvaSXdDmucks
QyMbeqOapeF9F1gJ1f78nBsHZ2ca/D73rBsE1u3167I2ZzX9PT6JRbCsr8r+
wnxL1t/Tc21DMXT+sGmboeMLGoM7tGQPsGFzsJHB2CQrltnfcBJTAnsPNMq7
HLJmyf37lIHN+EnBTdr+cLPsguncPaVwZs5RAaGJtqyhO38DdDlcK2rv9Qux
w/NaCSMuOvvhVyCkRAbaj9lRAU9unc6T0riE57cKIjb3Bb/vs8fzWwNXZ/vy
ewe9hOF7xQ/aFKshc9DihvLDK3iea+Fs5XBEq/dVPM/1MOFZZ9r3XaEgf2ZM
aMGqOrCL3rgw7IwD68m/890AN92u3D0PjqyIv9fHHQ7cWixvqz0YBusWCXGq
Z3LA7XTysPzMa6x/7lUbwWfHuJO/uNdY/8IdLxemhjtIv/ELhzKBlacKnBsh
WFKlMjn6Okv/b3hL50LkGKdtTjdvsP59nWtNkOXd2nd90Vsw51H5njyhCZJq
s6J36t9kifzbcDNkx/JJzFruhPdbC/AdmJoraxcJM/oNHd5daYayhzvdK4ad
8PdqAc451z8++bcwnrbCTknZIE5BFIQ1mE8NGWqBnp1FZw753maF/vs922Bw
6azaJefvsFz+3ZdtcK9d74qrxDtQL7jt5WPRBuMn7FHrUXZmnfv3+7YDf6NH
bKSgC0vnX3zugOIw+30smxjoSHgu7tbTDvM/Viy2aXVhyf/7/Tth8eO5Hhtj
77Lm/LtvO0HwfIBcZ957uPnq/etrpp0gY2U4btwdV9bwv/ehCxS1np7PMryH
8b4bdNdmT3skFgfiTwrWWTd2wUs5nWmHfj+F31c/Oq8LKAJ98W8fXIL9YL1x
l99CrxKoDd18tl0rECwU58ZOdC4HEzkXia3DL+D1nO0FPZergBtfUeEbGAKt
3yybS81rwXSrhMuwRhiIlfj/jD/WAJ15Zpv1frwBaf3jt7SkGyF2uZHdvqII
yN12RUDlJRd+fnbcw7soEk6s9Xy2TqwZFKOCV76zjYIJkq+XSXm3wBXrgkmH
C6IhcFZa9MLZbZCs+JXLLxEDSmNrQOBeO4wfM+9jovV7aOjtz5k4uRNU0sDr
dF4sXKqftPenYxf8Z1zIqdd5Dj5nS/+TEi6Gx63zPDaM+EPZTh5pgZllIHz2
mKrniyCYsXz1lp/jK8Hvx9uR/t3BoMZrvK9xsBoWXx15qzEUCjeanc9mdddB
8CTVYyH+r6GBU5uid44DnjvU7vIsjoBLhV801Efz3sqp50wj7N7C3ES+qk1H
mmAe20PJuDASYsLEjsjWN4ORR/z8qZLRsMd7Xe8i/Vbw3df4Lc7mHQzc3m03
t7gNuMK8Rab5MaNx8diEaTs7QJIrFTpbPBakTe3dxmR0wtEX2tdTL8RBlu7D
+V+hm+EoR+QqLYVlOkKOhXC6Y41tlX4iw0n1yE2UF1C+SFzGRk6z+HLXsT0/
HWL4ysrs9XIZ7pqJHJaCXEec54ycRtx288KA9jGzYjCJNGq/8SmZ4ayfyF2U
h5D/yN/uKdaO2eB02MJr4Fchw2nayG1rkeOI645paf76NL8MJveJCvruSWM4
TAi5jPIasv91sicPr0I+rKy/FSanVcxw3H3kOuI84r4tUm+C5mdXQKT0KFu0
ZzCcJofcRnkS2X/CpyGWa1UEXnz60z4HlDKcdwK57xZyIHGhBO/U3RdG71mj
Uy9PsS9lMxyniVxHeRfZV+TfnTxLsxh4FJaYBX8vZziQD7lQFjmRuHEs98Rg
kUQdTAw56dXJn8dw3mnkPsrjyH71bK2DBstL4dTh7wWHVKsYTgxFbqxFjiSu
5CRk+q1gN0BEq3TquKAChgPTkAspLyT7F+frjPUfXw5l99JXCfvUMBypilx5
AzmTuLMh9/6iLTDKlfdtrF19ihhOLEFupDyT7M8X0/XrqB/NaxIeulV8rmM4
sxO58xFyKHHp7jgluz4PLvDIGEzzbmUzHNmIXEl5K9lPWKynJBNXBXu+vh3M
Gs1viEOdkUvPIKcStya+6Ct42t0EFYWKAS9XlzCc2YfcWYZ5MNk3ktrXaPOg
Bu7cmbtssVojw6lSyK3EscS1Kx/6SqhvaYEwM+H10XalDIf+yfofl1JeTfZ/
yxg6fDpTB0miDvuuWXAZjs1Hrp2DnEvc+8xhl83g41ZwnPan4FNaGcOp05Fb
D2KeTvZ9FYzEJu1ogK8x7bc5Pk0M5yog9/YgBxMXTz87khfU1wZ6YZwj+dMr
GI5dgFxLeT/Zf/4snLPEnQPLNDQ/bMxoZjiYF7mYOJm42X5/mJjO9g5YoZ7y
s0q/kuHcpci9xBFk/5xfRIT65UYwbnrf+aS3heHkcuRmD+Ro4mriZF/kZoqT
5hg3z2DcpThMnNyF3Exx7i3GPYqTFDeJmycjR1Pc+oJxjA/jHsVB4mhJ5GqK
Q48xLkVhHKO4RlytjJxNcWUDxhljjEsUp4izjZG7KU5UYdzgxThDcYe4+yJy
OJ17O4wDbzFuUBwhDldHLqdzPA/PtTTGAYoLxOUGyOl0LuPxnNK5pnPuhZx+
HLn9Np4zAzx3dE7p3BK32yDH07n5hefoNZ47OofRyPFOyPXf8BzQubiG58gX
zxVxvQdyPr3Xvvie6+O5oHNCnB+A3E/v6Vl8b6XwPaf3njj4IHJxo6rd7xMr
CsBTTacpb/pHsH+5lG9ROxt6NzwQBP44IA6h87DVYNo+ozm5cCdfTPz4xGTw
73OJTOOkwVXLM0GiK3PA8QB7ypHSHHBASc+RXh/aJT+Ff54Ez0hlwzfu6adX
5ieDQrh4mGRMKXByE4zlRhKAuIb8Nw27Deh4ZMGe/CmmHiWj98sNibfLJhXC
WpSNqEd23lQPap08Vwq+oquzH4WnwkDMgl2S1yvgxEqLUgGrT0AcRPYleT1k
m1TzQFBAV/BGAhu+l2549ePp6P5Qkh7ZcXm3dzhNuAJ2GH/5+nZLBoQl/tcn
oV0Njd+dhu6eSgHiJrJ/ZNZjc/PfhWAPklYwoxQ025rsq9+XwG6UXNQjO6fc
ogMX5lbBgHeMaG5FFhzL4L8vIVoHBkk+IpMOpQFxFtkvcd1VdbWKDW2nvpQN
HSyH0CEXzY/sMghBaYh6ZEft1Kxddja14FNlu7P5VC6IFvCtkfjcAMVOb7c4
6mcAcRnZt3ioaZsVVQJaj1Lko6MrYcJUeYnnXRUwHmUJ6pGdJdvO/Shd1AAq
QhttRv7kQ89JnlMzjRtBTTPj+K9dWUAcR/YFnmjP5Xctgw9p7l5mvDVgLNLw
zXHCaD6EUh31yM41ftMirw4O2Cwfoz1FrQhyzP4ozhzlvtQ5NXcvqOQAcR/Z
j/LdE6d3vAIk+w8MLjWog7jVt7KOLqyFWJRpqEd2vozMXqSymQsa2Y1tQg/Z
EGz+a+pMqWZgNfZG9inmod3/r0/vCdq7z1e5Cu4Jr97XFNYAs7fIeO9YXw8C
KDehHtk53JVmO+DZBOLHU+0l64vhxoWhOv4HLRATMr7ypGwBEFeS/W+h+kOt
C2pgJPBPbcEfzigv9cR4LOPAe5KoR3ZKKi0KfHua4cfEIAGZpaVw2O77G/6f
rSAU53LZXLAIiEPJvmeEweOVP2pBVtF0mtQyLrREKYk6jcZrknNQj+woZ4hL
aGxthfygmyEbzctg8+UvV/gPtsMeYSH38BmjeTpyK9lXiNm//gK7HkzZBRtv
azeBwEbP2zZbuDALpS7qkZ3IKLb1zydt4L/1OKgllIOIY58mf1YHuDv4BXTz
FQNxLtnvNgrvrtflgI+pvFnrxWbYnNE5cEKziZGkR3bE/K7mvexvhwtNqmV7
J1bC0I0eMf5VXZDbsiJm2cQSIC5m8r0DEQk8WxqBPfL02ZagFji9G/YbGjXD
KZR5qEd2boJRkdqaAvgdciJHbZTzTWZ16xw6XQRw678Zrf5JTJ1uDdbtqA5E
/vIVrxx79jwD8lAqf3fVnhqfAR3PWRNrruaBar7FoAp/EXxsP7GpZFUa/EE/
5JfW6blNPaojCXNLINthl5zL0RSmDhiLdUGqK5H/a2Mf3Pc+mwP1l3qaljwo
gvM9B7YaPSyG/nGRBpv2ZTKS1oWzXr4QyiwDi6SZJkFDaUwdURHrilSHIvup
U72Kl0sWwI6QhK3clmJ4NG2Xm+WcMpBc+PNCiGMOI2l92H+CprllJQiPlN5J
vJvJ1CGTsC5JdSuyz+OiMdmouwgiy5yDfNaVQZK0Yq2zTwXobVB+IBiWz0ha
r7Y/PJQnVgMZGx7FVIjlMHVMZaxrUp2L7Pu77w4JzCiGBTyGE/WcK6BVY+nS
ANFqSF+eXpF0soiRtB6nn+y/pLAOztsYcvve5TF10Aysi1JdjOxv8dJS7X5e
CjdXLjedWV8F081mW34IrAWTdR1Hrf6wGUnreY9nLFbaxIF5MSLT+dQKmTpq
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
      "], {{
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
         None], GraphicsGroupBox[{
           PolygonBox[{{103, 89, 187}, {97, 77, 169}, {77, 98, 171}, {101, 85,
             181}, {75, 97, 168}, {85, 102, 183}, {67, 93, 156}, {93, 69, 
            157}, {73, 96, 165}, {96, 75, 166}, {94, 71, 160}, {69, 94, 
            159}, {95, 73, 163}, {102, 87, 184}, {100, 83, 178}, {90, 63, 
            148}, {62, 90, 147}, {87, 103, 186}, {63, 91, 150}, {83, 101, 
            180}, {91, 65, 151}, {99, 81, 175}, {81, 100, 177}, {98, 79, 
            172}, {79, 99, 174}, {65, 92, 153}, {71, 95, 162}, {92, 67, 
            154}}], PolygonBox[CompressedData["
1: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
BUeON0ohi7H5kP3XOw/tB953jhQcuX2g6q/PMUf0lLop5DzyHr3jgBR5dAB0
hzHeO+bLvHcR/JlDniHXmqeQhdhwyMbZzkPbyvpy2GfI4y3cpxx5aMhqZPQf
OeQvcviQFPWogxw/OMVeMl/mvbPvKm8cXXiI7wJ3AtsHGwjeAb+Ab/yQ4u3D
A9DzvkqhS2DjoVugU/ySg4ae0TRF2dum18phv67yOe4jQIiWyWflW6TYC3zI
yPo5zkNjn+rBU4qQb8i5w1P4Oibb9sAGoS980mWy3/vG/qFnHJpibOaA7oTO
hP37rvetrvcOGrrBPe6LPplngxxjMSb+B/wXzAWfOLoCMhdf4MQUvkR8gmfm
sKeQv8j7+caxs5DH2Gq9c+ShfViEbvGhbTnkPv7up3LIf9qW9ZlC3j/l8jK/
OHuQw/5EPiOvFxjHLl2XIk8dbEX0jSdyzIGxGHOtx6Qc2xHbtm+OtvRBbADb
E/9WZeehPZvDHu3t/ugX/aKsbRF+IfxB2KJ9cugau5lOOX3R53k5/CX4JSt6
PbQps2PdP/79at4/9Af8J/hRsC/wrZybI1/DYxEfQKdhTGzv/jl0EWzw53LQ
sMvXpyj73HT0EXw7A3LY5ugj6DHQaEsfA4xDR98hVoSvHH/nYc5DuzCHv7Sf
59/b+0MeGmMzh4Gebx+f39eeC+U1nYe2yPNjraz5hRz2FvtNvKOWz5t9ZD/x
Q7VOUYZPiDy0Lz0mvpjq7of+yEMb7Db0y/lxzpx3WZwohf8TfyprZc1lemRh
v0eK/BO+z+i/6Bn4d/BvoG8MMQ4dfWdwDv/H4hz60mLj+EXw/5CnDm3rel/x
9+CXZn9JwfEDtU2h9+EPxh+00WW0IQ9tWQ5/NH5p/MvEftBFGWtf3xVodXze
3E/iRfBB+B/+eHDoFZ2HxtjMYYP3lL1EPyaWhW2MrxrfFXyUOrXdH+dJnXq+
z4M8fn+fN3vFnuErQ38mNoiuy9ybOQ/tghz67yVeH+tE/g/L4d9+NYf8Jz/M
vB2fN3wefzl5aMTK0F3xzTd2O9qQ/9536zzLgtpe6wavi/vYx+/3ad/ndTn8
KfhV8H9wlozRxPdhqPHBPv8lPr+lXg9nx3tq7vNEb8E/j58e/YW1smby2333
r3r+hzoP7XWv/wLvFzYA9gBjLfH5oN9e5P1gX9CXt5hGrKCp7zZ3/Bm/5/dz
+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
            
            "]]}]}, {}, {}, {}, {}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0T0oRWEAx+HjXlwGSjG4pdyBkq8MBpdIkiQJSb65vpIik8lkMillMpks
hKIMJpPJZCHqDjLIIIMMkuctw3N+7385nd6TyqwPreVEUbTBuEM4X3g86ZTm
6bW+6KIW6o2+6aoW6a1+hHdoid7pl25qmd7rj25puT5qjG0q7KwWsEPKftVi
dqmy37WUfWrsT01yQL39rZUc0mT/ajVHNNu5sSiqcz6hxY7btc7HpO18u8H5
lFY7YTc6n9Fm7zHGMqMsMRLug2EWGGSeATL0M0cfs/QyQw/TdIf7pYtJOpmg
I/wH2lkJ386V78iG92lcL/U5vCfco57rw///+wPqhjDm
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1: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
nOgH0O5C9FOG8yJw3f8Aq6UpGg==
      "], {{
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
         None], GraphicsGroupBox[{
           PolygonBox[{{117, 103, 229}, {111, 85, 211}, {85, 112, 213}, {115, 
            97, 223}, {82, 111, 210}, {97, 116, 225}, {70, 107, 198}, {107, 
            73, 199}, {79, 110, 207}, {110, 82, 208}, {108, 76, 202}, {73, 
            108, 201}, {109, 79, 205}, {116, 100, 226}, {114, 94, 220}, {104, 
            64, 190}, {63, 104, 189}, {100, 117, 228}, {64, 105, 192}, {94, 
            115, 222}, {105, 67, 193}, {113, 91, 217}, {91, 114, 219}, {112, 
            88, 214}, {88, 113, 216}, {67, 106, 195}, {76, 109, 204}, {106, 
            70, 196}}], PolygonBox[CompressedData["
1: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
            
            "]]}]}, {}, {}, {}, {}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0csrxGEUBuCfe7OwsLCwsJiFhYWFhYVbiFwG0YiIyETuM64TIUmSJEkp
pZRSSimllGsp/5fnq1k83znvt3rrxFOZZDoviqI1soQ96yngh3x5xyzmN/zL
e2aMPwrlbVqYp5UF2lmkkyV6WKaPFQZIkyTDMKuM5rqMs84kG0yzyQxbzPFJ
E9969FKibKP8ZU+EznKD/GHvDl3levmdWS6p440UF9TyyhTn1PDCBGdU88wY
p1TxxAgnxHlkiGMqeWCQIyq4p59DyrkjwQFl3NLFPqXc0MEuMa5pC3ehiCua
c/f7Bw4jLNk=
         "]]}}], GraphicsComplexBox[CompressedData["
1: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
f/rkOpSiCv8DAF2dAQ==
      "], {{
        {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
         None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1mXng10Max2c+P6RE953y6yLpcCchd1HpECp0UImNSO5CxVIoFDrQQfdB
UmEpIis2Nz/Z3CQbwiqLXft+ed798XyfY+Yz88zMM88x39KBl/W4tEgptdHP
bsKlwk8J7s0pVRX/uqCq6I3CtwpOVtvrgpMEfSXvJPyWoKPgXPE71aeR8A7h
+wSDJN8iuFBwgeTHC78m6CDoI76L8LuCzoLzxL+jb6oLvy18m6C35B8JzhH0
l3yA8BfQgoHizxP+lLkFA8R/pG9qC28WvkPQXfIyQTfB+ZL/KNl+wj8ITxZc
K/kOwTWCiyQfJfwfwQ2CoeI/V5+6wp8J3yWYK6glfq1wZUFN0Y8KdxaUpZDT
XmYZNN90EWwSPOJvPhDuKHhR0FD8NuH+KeQ1/f14wdeC+uK3CE8SDJVe36Ar
eyr5zcK/C24SXCz+FuE/BOMEl4j/Vt808Pj3CEZK/pPgSsEQyS8X3i4YLhgs
fpjwt4K/CAZZ99reV9bQS/IPBWcK+kl+p/DuJdpr4WHiJwmXF3+P8KXiHxes
Ez1RcLropd5/zmFACp71sw/7mV7qtu/Yc31XriS+Z3zm2aMk5PDLBC+InoDO
6v+QcDW1Pyx8udruE95b/P3Cl4mfLFyxJOTwTzI39k7/FHpXKAke/fcSHCio
IHhI7bMkr672mcJXcPbCtcQ/IjxC/B6CAwS7C2akuDfVRL/h+4Nd1hH/se0T
u6on/gvbV5ltZpPPn3tQQ/y7vg+VRR8kqCSYKf52zVto/ttYv2RZ0EyQBNOE
pki+V0msm/UuEK4rfj42IH6J8L7iFwuPFP+gcBXxM7x/dwvvWRLnyn78rjGb
CP8m/IBgquT7qP0BbCjHd1VL4hz4fp7tZ67vC2t5xLbPmv6rfovxI4IxppG1
EjRT+1fi/ye6taBpChrZENFjbfuLxHfMcQfoRx/GYsxB9mf4taPFdxV+X3CG
/Q372FJQxfvJObcQVPR5s4/7CwrvJ+faXFDO57u6CJ+EL7pAeH6O+8c9PDXH
Ov7r+4mO6IrOc4Ub6ftvctgzdn2p+C2cXUnc36Eit4rfTfwh4pvTJHq5ZJ0F
44uQ0w7d2X35hrswwb5gSY6xGPNZ+3P8+vEp2v6w3o3FtxD9m6BlEfr96jbW
Mhrfm0OGf7wwRduvlvN9S38/2uuf6/Xip07J0cYcJ4u+sQjfWdM2UTGFXTXF
Bmxf+OlS8T/ZXz/v+8M96m7bmmca2Xy306+6YJ1gX/vPvqYXC5/L3grW2Ca5
Z6emiD1zTL9tf037Guu3xWNstT+e7W+IWyea574/J7yn6dluwwfMcf/Zbl/s
8dCzvvkG9tvnei2sqUcKn7HE7Yvdf6H9xwvsRYp5mRO/c4LPepZpZLMsww6I
98TpxuJ/SRGvX/B4+KWzUsQNfDK+mPhBLFzgts+838g+t47oho79/S2xa5H3
nr1bZNlC67vQPHHubM+90DQ+cYHHn+/zHG97n2B/94xgvejpgqtS+KFKap9m
f7TC9vSy8EEpcFP7r8sEy73+9cIHCJ5O4V/xszemyGUeF77Ye7Xe/XdYhi98
wmP95vGa2E9eIng1hX/Bz4wV/YzHZ562gmOkZ0Ppe5xwuxRj8f1y69PYNGNx
Ri+luA/ci0GCZSni6Z9x1fQyt9HnMffnuyaCDSn8G35udIpY8aTwlYJkvWjf
YP1aWMZeVLTvWy36uhQ+8KkU8RHZYYLztY7PyQ2KyMdWu504yjdPes4VPo/H
vcePWb9S04NT3PnH3L7Tsqb+dngKH7HC4xH3hnsudGJtFTw/Or9i/cgTPytC
T/TrI/yJoG8R+SV56T8EJxSRn3JWnBlnxxn+zefJubZP0W+j4ET3b+k+41LE
lGuxH3whsUn0acLvCE4vIl/uIbxJ0LOI/PRGztvtJ6XIi98rIm4Rr27G3hy/
Ds2Rd79dxLiMR577QRHjMt4pwm96fvL1q9hf63tsijz+jSL60X4L+2t9Oqn9
7hwxjtjWU/xA4q95Yh55+JdFyOHvFKzy+R+VI2//uIh9Zn/vx55EXyI4R+NN
EL/S+9+VOyW8ze3kt+S5/ypCDk/e+U/BWUXkn+DNgrPNU7cQ74cI2ueoO74W
DC6i/gBvdTv8X7F/f3+E7QR7Ic5fmyKXW5WCRvb3FPkAd4U7Qx5YQ/d3dhH5
ILim+DnmifvEf/IR8vNHiSVFxD5i4GjHS3jqjeeZo4jvr8cfFqEfelZIcTbd
fbY93dbLaz/bNDK+O9y20sW2g83ULWIMzrl8irFWWH5YDj3Jn8ZaX/KV55m/
iPxlgWCt28nByCnIV24tot4A55LoD09eWuL8BH/9LL64iPy8ew4/Xbkk/Df+
ehW+qoh8vavoh/lG9NXcSdH7FmEv2M3emvoq0T+7nXrmQe6f6BGsOUWeQn4y
2vs7R/Ace4u94seEfzFP/UcduLMIOfwVwj96POoj6qZ/FzEv8/W2Puh1ZI5c
kPuyn6BdDgzPPaqS4u5RA+MruIPU0/iH68UfjP3hW8QvwybtO+jD3eQO1yzC
P+Andk8xFmNeI75VDgzPPcdMr/cY+CGOimL/e8FlRdR3K23P2HUb08hGpsh5
V/oOUNcgW2V+pftTJ35XxLiMNxV/6fGPE700h32Q1+4vcmkR8Y71UW+sY82i
5wnOzFHP4z8aCNraN7DH+I6+ltOOn9knBc03+PJ+tnVsvrbgkBwYHr+5R4o6
94ciznWwfS1vGPhOfO7LwhuEFwluSlHX1Za+c4uo78B1SkJfeOqoeuIXFlFP
UUc1KIl1sj7k9UtiPNo7+fw4xzbeH+pn6ujTcuzNMT579ohcn/tzsOgDU9Tv
3If9sSO1NS/CnrHrfVPIaefe1E3xnoG/OVBwkm3/Wts2Ns9dudx7McJt9GHc
E3O00aeZoIPv4kjbPnfu8CLyL/KwltynHPGzRhH7DY2MtRIrudvUpNSi93sf
iJ8neD+gN+aITdyPqR6fec7I0bbR32H/zawf975OCtsbZlvEBhsXEW+IOzXI
OYrwX/ix0hS1PzUute29ppFRV1FPHWqd8UvsP28N1Nz4sgmmkVF3Um/yjsZ7
B+8e1K/QnC1vFRNNI2vj8z7E8/EOQX031Pqi9zE5aGTEPmJikyLWyD2rmWKt
z1h+bI5z5ryJMw3UXquI9zp8CP5litfDuro4FmEj+EZi0A05+vOdzO5PGlkH
5wqv58gXoJFxVxbYtrHxo4uQcY8OTxGLqcGJtUPcd4P79crxfsL9P0rQM8d7
BP6vveCsHBgev3iExtucIz/g3Dnv+3K8Vw3z+nmLIMYQW3bVAs+J7uFYA43s
SM44Ba7k9wu+OayI96IjhFuloJF1tb2iCzqO9P181nOuztF/tfmpttfWtg/e
qXi/YK2sGd+BD+HtFN+0K5cb5f1ln8uloJHhy8jR8Gfkc9DIaphHzn2DRtba
8YK7xxydfL9o4052cB/eYokN0B1MI6teRLwAwxNniC+8DxG/2Z9uOe4mayV2
T7f8Ze8L+wHNN7wFEfPJbXhDIzea43NnT4gDnMcs92lbxJm1NU9edLDan7C/
XOp4wrsC95l7zfsC7w/kK+QtjdT+Vo78mTz6lBRvzWNz0MjGuZ1+e6Voe9d7
zv6TF5Gvk1+TH72Zg0dO/kTuPSZH267cnj7k7sQT8rYy9yF/q19Efk6eTr5J
bnxXjlyhj2lkDYt4fx/j77t7/jpFvF+R31VwfghPfUC+B00f7Il87z2vkbau
Xhfr62L7KbOO6IJOt+XQDz2Jr7z13i7Z6Slyb/Ic6hXqC/Kdd3Pk47TR550c
7fQjP2Nuxuhl/W43P877TV++odYgnx3v8Ri3UgoaGbkAuT7/BRD7d9UW7BP7
BY1ss3VnPeTD5AvI+JYx6ptv4PWxXsbs7fWQr1EPchacyZ1upx/9PzBNX/YA
/0N98aFwrRQYnrqjV4r/PqbkoJFNzlEvNSrCf6M/9XKpzxs57dRV1C/UqpNy
vF2e773g/47zvJ73c+iL3lVsL2/bBrCPUo/Pt4zBfyfUSIzd3/aGbIDXe4vv
D/eI9ztoZOTy5PQ325/gV/A3zMN8HW1z+GX8M/VaB+uGjtR2fa1LQ59VP+vy
hfVg/dxl7jS1BzXGRK93vO3hU8u6uZbf6r1kPUNMI2vi/aV2nJZDl4stp506
kHjB3nJGg7w/U8wjr5biLDlj+g72WIzZtIj8ilp4U47a+ALLaaduJf8t8xmi
Kzp/aRsgtlMzE+cZAxoZY31lOfkK//UQ6xnrIuvFeGXWj7ZvPCbrnWx+qMfb
nuM9nnf5a1L408p+H8O/Uqv+mKPWxB+/mKOebVdEvCX+1nH+SzxuZ7692+Fr
+P8Q8vc6/hZ6ntsYk1hPbUz85f+TWZ6ft+8VOXIR/tNZ53b6EQ+qOVYTm4kf
tNGH8ZmTPKKm62/m2JEj/yYPH5Piv41Xc9DIyMV/zpHbk69AIzsWm5Tsoxz1
DHVNH/EzzCOvl2IsxlyPD0jRRh9ycWog3vEaOv/vLdlr1ge9jk6xF/z/ssD6
0kYf+vLNJznqTfJv8nn+i1mT4+w4w9qem7PgTKCR/WR9Ps9RzxIPS1Pkgfy/
OTNHPjjTPHk++T396E+9S/yklj6giFr7aq+N/wvJ+Y/32MwxMEX9wFs+9TJ1
M+8Z0Lz5M9Z1pne6XyPiu8eb4f1kLuYkb0U/2ujTL0Wt/WmOehsa2Us5/m9b
K3xoinXX9v9vo1LYMvaAXZB/rnV/cq6ephljlGs7fBU5JW9R5NcrbJP8L9NC
stmeHz0aprCT+q73znEbfaiteBMgNyFH4b+cO7wu1kcbfV7x+WMH3J/1tqcl
vl/kstNz2B42uNb3d7vXy35Rvw73GTE3/1eP8vjUfdvtp/BPT+ewIXKwbm6j
D98yBrqgE/Umtey3Of4f5f/CESnmwmawlV1vIdgobysj3PaDbYbzm2d9Znu/
oJHxXxFvMfy/x/+V1E2dTFMr8d8wb0XUuSX+PxMZ+eTe/r8W/dd4PayrdYpv
GYNxqbeSc0Nqq1vt677P8d8A+Sk0Mvwg+SR13Z7+T436jrcr/rPjrYt4R52W
/b7FmK3MI2e+5t6TK3yfKlo3dEXn5R6fupJ6kv+Wt+X4r5l6k7q2gv8vp16g
fud95lLft2k+M+pwYtg2j8F31Nvkz9X8fyv2Pd02RMwiH+EtoZ7/7+WMN+Tg
kfN/AzQybBmbPtLjMS7+t6n1QS/sqarvHnMx59Ne87c+D9bKnlIvTfJ94v9n
6k58PHUn/+ffZb6c3zY464k+f2T04zyovcr7/+eu9l34NHwNPod6q7xrNOqN
8q7F2Mt7rDtrIH7yHvCU9Vnh+w2NDFvH5v8PtKYX4g==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlHeIz2Ecx5/H4Y5zZpIkSZIkSUKyMjIyOmRkZGRkk5F59nb2dogSJUqU
KFGirDubs+e5c8dxx9le7z6fP96/17N+3+fz+Tzv56k7ckrq5FIhhJYoCc1A
KQzshqViCDNhAWwC82EV5hbQvky7GSyEc2EyzIDT0T+0C1Vg7TT4kbnG8Ays
xtgS2tdot4BFcBGsDA/43orhLP1GMA9OhTFaTLNRadp7YEXWzoKf6DeF56N9
W3voW1XoL4PfYWv4Dc6BlZjfCxM99kLP5XO03JSjcqngsRV5rF/hfFgO7lPM
rJsHv9BvDi9F+7b2uOA1K/Aalo225zSvi+rzF01CJ5lrCE/DZOYm0z5FuwHM
gRPgb7QT9UB/GFsDH6Oe6L72hfdgd/gArdZ/6HeDd2EKXAF/oPa058MEuBB2
gLc0jzqj22gl+slcJ5gFy8E02AX+gqu0H+qK7ihu/S9abIpxtY9pTmseBYt5
IipPjjvgDzQOHWNNfXgi2re1x1KYCDNhR+UQbM9eqhtja2F2sHxXeH5rYT/4
Eq0PMnAIfVUnxqvDzfAf6kM73Wum2qmGz9C6YH6Sr+SvhGh+PuP+PQcjc/1p
b5OXlRdMha/RhmB+kC/kj6Rofj3v/rwI28EbaDkqod8W3oRl5G2PTTEqlufB
vv3I93roZ6cz1FllBqtNptfqFuwNnwSrj+qkej3QvVV+MA1WJb79MMX9fMn9
e8X9It/IP/fdD2l+/svdD/KF/JEVLJ/ZHv+iaPVW3VX/F8HiWef7b4KjYSLz
W+FXNAa9ZbwefANHwc9oCyrLupGqLeN14WHtw9hw2gdp11KN4BCYr/NFg3Vu
rNkIPwSbe+5rn0Wb05o9tGuoVnAAzAn2H93Hn8H8KZ/Krx/8fuqeam/FoL0K
0Aj0ivE68h0cBvOUKyrNuqGqA+O1YYbqyNh42sc9Z+WuGnxH24Pdfb0Buut/
gr19ef4W5kb7r76htSXB3oYcfyvew4EqP/Pp+naw+7DZ/b8jWj1VV9X3U7B4
Mzy+Q3CsfMv8NlgU7DwOe/2PwsW6H9H8Ix/JT8X0W8Gr0fJV3so/Fw1COxmv
CfdF678LFp/iVLxPfV7rdLd0x3SX3gQ7myd+VtnR3oviYPEpTsX7zt8PvSPy
ljx2xM9EZ6Mz+hLMc7pvune6f9dRG3RD9xrO4uc/7pzfPg==
            
            "]]}]}, {}, {}, {}, {}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0k0omHEcwPEHO1ixdlAcHCgHh7WsHLyLkpLSlhYpLVpJobQakRKSJEmS
pLWWpCVJkuwF8/5y2A4ctgOHOXDYDpY44PNkh8//+/tfnuf5/3uSa5peNEYE
QTBAiyGcDyy5uk9PuCef7/TygyIO6eOIEn7Szy/KOP7/3BPK+c0gp1RyxhDn
VPOHYf5SywUj/KOOK0a5poEbxrilmSjfPa4P9K1G64Q+1HaN1Xf6SDt1WzM1
LzIIKsy7ZIVnta8075Ntf6nd+okc9uhimQx26WCJdHZoZZG08D28YYEnbNHE
PKlsUs8cKWzwmlmSWOcVMyTyjSo+ksAaL5kmjlWeM8VjVihlkhi+UsyH8I74
QiHvw7vjMwXhmZw7SuPdxzNzG5HhOyxPI+7/lzsvIkoC
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1: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
2VSHC6Q7Ri+Y0wQLKeL/AZrM4GQ=
      "], {{
        {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
         None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
zv6TF5Gvk1+TH72Zg0dO/kTuPSZH267cnj7k7sQT8rYy9yF/q19Efk6eTr5J
bnxXjlyhj2lkDYt4fx/j77t7/jpFvF+R31VwfghPfUC+B00f7Il87z2vkbau
Xhfr62L7KbOO6IJOt+XQDz2Jr7z13i7Z6Slyb/Ic6hXqC/Kdd3Pk47TR550c
7fQjP2Nuxuhl/W43P877TV++odYgnx3v8Ri3UgoaGbkAuT7/BRD7d9UW7BP7
BY1ss3VnPeTD5AvI+JYx6ptv4PWxXsbs7fWQr1EPchacyZ1upx/9PzBNX/YA
/0N98aFwrRQYnrqjV4r/PqbkoJFNzlEvNSrCf6M/9XKpzxs57dRV1C/UqpNy
vF2e773g/47zvJ73c+iL3lVsL2/bBrCPUo/Pt4zBfyfUSIzd3/aGbIDXe4vv
D/eI9ztoZOTy5PQ325/gV/A3zMN8HW1z+GX8M/VaB+uGjtR2fa1LQ59VP+vy
hfVg/dxl7jS1BzXGRK93vO3hU8u6uZbf6r1kPUNMI2vi/aV2nJZDl4stp506
kHjB3nJGg7w/U8wjr5biLDlj+g72WIzZtIj8ilp4U47a+ALLaaduJf8t8xmi
Kzp/aRsgtlMzE+cZAxoZY31lOfkK//UQ6xnrIuvFeGXWj7ZvPCbrnWx+qMfb
nuM9nnf5a1L408p+H8O/Uqv+mKPWxB+/mKOebVdEvCX+1nH+SzxuZ7692+Fr
+P8Q8vc6/hZ6ntsYk1hPbUz85f+TWZ6ft+8VOXIR/tNZ53b6EQ+qOVYTm4kf
tNGH8ZmTPKKm62/m2JEj/yYPH5Piv41Xc9DIyMV/zpHbk69AIzsWm5Tsoxz1
DHVNH/EzzCOvl2IsxlyPD0jRRh9ycWog3vEaOv/vLdlr1ge9jk6xF/z/ssD6
0kYf+vLNJznqTfJv8nn+i1mT4+w4w9qem7PgTKCR/WR9Ps9RzxIPS1Pkgfy/
OTNHPjjTPHk++T396E+9S/yklj6giFr7aq+N/wvJ+Y/32MwxMEX9wFs+9TJ1
M+8Z0Lz5M9Z1pne6XyPiu8eb4f1kLuYkb0U/2ujTL0Wt/WmOehsa2Us5/m9b
K3xoinXX9v9vo1LYMvaAXZB/rnV/cq6ephljlGs7fBU5JW9R5NcrbJP8L9NC
stmeHz0aprCT+q73znEbfaiteBMgNyFH4b+cO7wu1kcbfV7x+WMH3J/1tqcl
vl/kstNz2B42uNb3d7vXy35Rvw73GTE3/1eP8vjUfdvtp/BPT+ewIXKwbm6j
D98yBrqgE/Umtey3Of4f5f/CESnmwmawlV1vIdgobysj3PaDbYbzm2d9Znu/
oJHxXxFvMfy/x/+V1E2dTFMr8d8wb0XUuSX+PxMZ+eTe/r8W/dd4PayrdYpv
GYNxqbeSc0Nqq1vt677P8d8A+Sk0Mvwg+SR13Z7+T436jrcr/rPjrYt4R52W
/b7FmK3MI2e+5t6TK3yfKlo3dEXn5R6fupJ6kv+Wt+X4r5l6k7q2gv8vp16g
fud95lLft2k+M+pwYtg2j8F31Nvkz9X8fyv2Pd02RMwiH+EtoZ7/7+WMN+Tg
kfN/AzQybBmbPtLjMS7+t6n1QS/sqarvHnMx59Ne87c+D9bKnlIvTfJ94v9n
6k58PHUn/+ffZb6c3zY464k+f2T04zyovcr7/+eu9l34NHwNPod6q7xrNOqN
8q7F2Mt7rDtrIH7yHvCU9Vnh+w2NDFvH5v8PtKYX4g==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlHeIz2Ecx5/H4Y5zZpIkSZIkSUKyMjIyOmRkZGRkk5F59nb2dogSJUqU
KFGirDubs+e5c8dxx9le7z6fP96/17N+3+fz+Tzv56k7ckrq5FIhhJYoCc1A
KQzshqViCDNhAWwC82EV5hbQvky7GSyEc2EyzIDT0T+0C1Vg7TT4kbnG8Ays
xtgS2tdot4BFcBGsDA/43orhLP1GMA9OhTFaTLNRadp7YEXWzoKf6DeF56N9
W3voW1XoL4PfYWv4Dc6BlZjfCxM99kLP5XO03JSjcqngsRV5rF/hfFgO7lPM
rJsHv9BvDi9F+7b2uOA1K/Aalo225zSvi+rzF01CJ5lrCE/DZOYm0z5FuwHM
gRPgb7QT9UB/GFsDH6Oe6L72hfdgd/gArdZ/6HeDd2EKXAF/oPa058MEuBB2
gLc0jzqj22gl+slcJ5gFy8E02AX+gqu0H+qK7ihu/S9abIpxtY9pTmseBYt5
IipPjjvgDzQOHWNNfXgi2re1x1KYCDNhR+UQbM9eqhtja2F2sHxXeH5rYT/4
Eq0PMnAIfVUnxqvDzfAf6kM73Wum2qmGz9C6YH6Sr+SvhGh+PuP+PQcjc/1p
b5OXlRdMha/RhmB+kC/kj6Rofj3v/rwI28EbaDkqod8W3oRl5G2PTTEqlufB
vv3I93roZ6cz1FllBqtNptfqFuwNnwSrj+qkej3QvVV+MA1WJb79MMX9fMn9
e8X9It/IP/fdD2l+/svdD/KF/JEVLJ/ZHv+iaPVW3VX/F8HiWef7b4KjYSLz
W+FXNAa9ZbwefANHwc9oCyrLupGqLeN14WHtw9hw2gdp11KN4BCYr/NFg3Vu
rNkIPwSbe+5rn0Wb05o9tGuoVnAAzAn2H93Hn8H8KZ/Krx/8fuqeam/FoL0K
0Aj0ivE68h0cBvOUKyrNuqGqA+O1YYbqyNh42sc9Z+WuGnxH24Pdfb0Buut/
gr19ef4W5kb7r76htSXB3oYcfyvew4EqP/Pp+naw+7DZ/b8jWj1VV9X3U7B4
Mzy+Q3CsfMv8NlgU7DwOe/2PwsW6H9H8Ix/JT8X0W8Gr0fJV3so/Fw1COxmv
CfdF678LFp/iVLxPfV7rdLd0x3SX3gQ7myd+VtnR3oviYPEpTsX7zt8PvSPy
ljx2xM9EZ6Mz+hLMc7pvune6f9dRG3RD9xrO4uc/7pzfPg==
            
            "]]}]}, {}, {}, {}, {}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0k0omHEcwPEHO1ixdlAcHCgHh7WsHLyLkpLSlhYpLVpJobQakRKSJEmS
pLWWpCVJkuwF8/5y2A4ctgOHOXDYDpY44PNkh8//+/tfnuf5/3uSa5peNEYE
QTBAiyGcDyy5uk9PuCef7/TygyIO6eOIEn7Szy/KOP7/3BPK+c0gp1RyxhDn
VPOHYf5SywUj/KOOK0a5poEbxrilmSjfPa4P9K1G64Q+1HaN1Xf6SDt1WzM1
LzIIKsy7ZIVnta8075Ntf6nd+okc9uhimQx26WCJdHZoZZG08D28YYEnbNHE
PKlsUs8cKWzwmlmSWOcVMyTyjSo+ksAaL5kmjlWeM8VjVihlkhi+UsyH8I74
QiHvw7vjMwXhmZw7SuPdxzNzG5HhOyxPI+7/lzsvIkoC
         "]]}}]}, {
     InsetBox["\<\"\\!\\(\\*FormBox[TagBox[GridBox[{{\\\"\\\\\\\"\[Theta] -> \
\[Delta]\[Theta]\\\\\\\"\\\"}, {\\\"\\\\\\\"a -> a\\\\\\\"\\\"}, \
{\\\"\\\\\\\"b -> b\\\\\\\"\\\"}}, Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], TraditionalForm]\
\\)\"\>", Scaled[{0.7121320343559643, 0.7121320343559643}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], 
     InsetBox["0", Scaled[{0.9, 0.5}], ImageScaled[{0., 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], 
     InsetBox["\<\"\\!\\(\\*FormBox[TagBox[GridBox[{{\\\"\\\\\\\"\[Theta] -> \
\[Delta]\[Theta]\\\\\\\"\\\"}, {\\\"\\\\\\\"a -> a\\\\\\\"\\\"}, \
{\\\"\\\\\\\"b -> b\\\\\\\"\\\"}}, Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], TraditionalForm]\
\\)\"\>", Scaled[{0.2878679656440358, 0.2878679656440358}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], 
     InsetBox["\[Pi]", Scaled[{0.09999999999999998, 0.5}], ImageScaled[{1., 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], 
     InsetBox["\<\"\\!\\(\\*FormBox[TagBox[GridBox[{{\\\"\\\\\\\"\[Theta] -> \
\[Delta]\[Theta]\\\\\\\"\\\"}, {\\\"\\\\\\\"a -> b\\\\\\\"\\\"}, \
{\\\"\\\\\\\"b -> a\\\\\\\"\\\"}}, Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], TraditionalForm]\
\\)\"\>", Scaled[{0.2878679656440358, 0.7121320343559643}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      FractionBox["\[Pi]", "2"], Scaled[{0.5, 0.9}], ImageScaled[{0.5, 0.}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], 
     InsetBox["\<\"\\!\\(\\*FormBox[TagBox[GridBox[{{\\\"\\\\\\\"\[Theta] -> \
\[Delta]\[Theta]\\\\\\\"\\\"}, {\\\"\\\\\\\"a -> b\\\\\\\"\\\"}, \
{\\\"\\\\\\\"b -> a\\\\\\\"\\\"}}, Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], TraditionalForm]\
\\)\"\>", Scaled[{0.7121320343559643, 0.2878679656440358}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "2"], Scaled[{0.5, 0.09999999999999998}], 
      ImageScaled[{0.5, 1.}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->1,
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{None, None}, {None, None}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageMargins->1,
   ImagePadding->1.1,
   ImageSize->{675.453125, Automatic},
   Method->{
    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
     "AxesInFront" -> True},
   PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{
      GraphicsComplex[CompressedData["
1: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
8b4bdNdmT3skFgfiTwrWWTd2wUs5nWmHfj+F31c/Oq8LKAJ98W8fXIL9YL1x
l99CrxKoDd18tl0rECwU58ZOdC4HEzkXia3DL+D1nO0FPZergBtfUeEbGAKt
3yybS81rwXSrhMuwRhiIlfj/jD/WAJ15Zpv1frwBaf3jt7SkGyF2uZHdvqII
yN12RUDlJRd+fnbcw7soEk6s9Xy2TqwZFKOCV76zjYIJkq+XSXm3wBXrgkmH
C6IhcFZa9MLZbZCs+JXLLxEDSmNrQOBeO4wfM+9jovV7aOjtz5k4uRNU0sDr
dF4sXKqftPenYxf8Z1zIqdd5Dj5nS/+TEi6Gx63zPDaM+EPZTh5pgZllIHz2
mKrniyCYsXz1lp/jK8Hvx9uR/t3BoMZrvK9xsBoWXx15qzEUCjeanc9mdddB
8CTVYyH+r6GBU5uid44DnjvU7vIsjoBLhV801Efz3sqp50wj7N7C3ES+qk1H
mmAe20PJuDASYsLEjsjWN4ORR/z8qZLRsMd7Xe8i/Vbw3df4Lc7mHQzc3m03
t7gNuMK8Rab5MaNx8diEaTs7QJIrFTpbPBakTe3dxmR0wtEX2tdTL8RBlu7D
+V+hm+EoR+QqLYVlOkKOhXC6Y41tlX4iw0n1yE2UF1C+SFzGRk6z+HLXsT0/
HWL4ysrs9XIZ7pqJHJaCXEec54ycRtx288KA9jGzYjCJNGq/8SmZ4ayfyF2U
h5D/yN/uKdaO2eB02MJr4Fchw2nayG1rkeOI645paf76NL8MJveJCvruSWM4
TAi5jPIasv91sicPr0I+rKy/FSanVcxw3H3kOuI84r4tUm+C5mdXQKT0KFu0
ZzCcJofcRnkS2X/CpyGWa1UEXnz60z4HlDKcdwK57xZyIHGhBO/U3RdG71mj
Uy9PsS9lMxyniVxHeRfZV+TfnTxLsxh4FJaYBX8vZziQD7lQFjmRuHEs98Rg
kUQdTAw56dXJn8dw3mnkPsrjyH71bK2DBstL4dTh7wWHVKsYTgxFbqxFjiSu
5CRk+q1gN0BEq3TquKAChgPTkAspLyT7F+frjPUfXw5l99JXCfvUMBypilx5
AzmTuLMh9/6iLTDKlfdtrF19ihhOLEFupDyT7M8X0/XrqB/NaxIeulV8rmM4
sxO58xFyKHHp7jgluz4PLvDIGEzzbmUzHNmIXEl5K9lPWKynJBNXBXu+vh3M
Gs1viEOdkUvPIKcStya+6Ct42t0EFYWKAS9XlzCc2YfcWYZ5MNk3ktrXaPOg
Bu7cmbtssVojw6lSyK3EscS1Kx/6SqhvaYEwM+H10XalDIf+yfofl1JeTfZ/
yxg6fDpTB0miDvuuWXAZjs1Hrp2DnEvc+8xhl83g41ZwnPan4FNaGcOp05Fb
D2KeTvZ9FYzEJu1ogK8x7bc5Pk0M5yog9/YgBxMXTz87khfU1wZ6YZwj+dMr
GI5dgFxLeT/Zf/4snLPEnQPLNDQ/bMxoZjiYF7mYOJm42X5/mJjO9g5YoZ7y
s0q/kuHcpci9xBFk/5xfRIT65UYwbnrf+aS3heHkcuRmD+Ro4mriZF/kZoqT
5hg3z2DcpThMnNyF3Exx7i3GPYqTFDeJmycjR1Pc+oJxjA/jHsVB4mhJ5GqK
Q48xLkVhHKO4RlytjJxNcWUDxhljjEsUp4izjZG7KU5UYdzgxThDcYe4+yJy
OJ17O4wDbzFuUBwhDldHLqdzPA/PtTTGAYoLxOUGyOl0LuPxnNK5pnPuhZx+
HLn9Np4zAzx3dE7p3BK32yDH07n5hefoNZ47OofRyPFOyPXf8BzQubiG58gX
zxVxvQdyPr3Xvvie6+O5oHNCnB+A3E/v6Vl8b6XwPaf3njj4IHJxo6rd7xMr
CsBTTacpb/pHsH+5lG9ROxt6NzwQBP44IA6h87DVYNo+ozm5cCdfTPz4xGTw
73OJTOOkwVXLM0GiK3PA8QB7ypHSHHBASc+RXh/aJT+Ff54Ez0hlwzfu6adX
5ieDQrh4mGRMKXByE4zlRhKAuIb8Nw27Deh4ZMGe/CmmHiWj98sNibfLJhXC
WpSNqEd23lQPap08Vwq+oquzH4WnwkDMgl2S1yvgxEqLUgGrT0AcRPYleT1k
m1TzQFBAV/BGAhu+l2549ePp6P5Qkh7ZcXm3dzhNuAJ2GH/5+nZLBoQl/tcn
oV0Njd+dhu6eSgHiJrJ/ZNZjc/PfhWAPklYwoxQ025rsq9+XwG6UXNQjO6fc
ogMX5lbBgHeMaG5FFhzL4L8vIVoHBkk+IpMOpQFxFtkvcd1VdbWKDW2nvpQN
HSyH0CEXzY/sMghBaYh6ZEft1Kxddja14FNlu7P5VC6IFvCtkfjcAMVOb7c4
6mcAcRnZt3ioaZsVVQJaj1Lko6MrYcJUeYnnXRUwHmUJ6pGdJdvO/Shd1AAq
QhttRv7kQ89JnlMzjRtBTTPj+K9dWUAcR/YFnmjP5Xctgw9p7l5mvDVgLNLw
zXHCaD6EUh31yM41ftMirw4O2Cwfoz1FrQhyzP4ozhzlvtQ5NXcvqOQAcR/Z
j/LdE6d3vAIk+w8MLjWog7jVt7KOLqyFWJRpqEd2vozMXqSymQsa2Y1tQg/Z
EGz+a+pMqWZgNfZG9inmod3/r0/vCdq7z1e5Cu4Jr97XFNYAs7fIeO9YXw8C
KDehHtk53JVmO+DZBOLHU+0l64vhxoWhOv4HLRATMr7ypGwBEFeS/W+h+kOt
C2pgJPBPbcEfzigv9cR4LOPAe5KoR3ZKKi0KfHua4cfEIAGZpaVw2O77G/6f
rSAU53LZXLAIiEPJvmeEweOVP2pBVtF0mtQyLrREKYk6jcZrknNQj+woZ4hL
aGxthfygmyEbzctg8+UvV/gPtsMeYSH38BmjeTpyK9lXiNm//gK7HkzZBRtv
azeBwEbP2zZbuDALpS7qkZ3IKLb1zydt4L/1OKgllIOIY58mf1YHuDv4BXTz
FQNxLtnvNgrvrtflgI+pvFnrxWbYnNE5cEKziZGkR3bE/K7mvexvhwtNqmV7
J1bC0I0eMf5VXZDbsiJm2cQSIC5m8r0DEQk8WxqBPfL02ZagFji9G/YbGjXD
KZR5qEd2boJRkdqaAvgdciJHbZTzTWZ16xw6XQRw678Zrf5JTJ1uDdbtqA5E
/vIVrxx79jwD8lAqf3fVnhqfAR3PWRNrruaBar7FoAp/EXxsP7GpZFUa/EE/
5JfW6blNPaojCXNLINthl5zL0RSmDhiLdUGqK5H/a2Mf3Pc+mwP1l3qaljwo
gvM9B7YaPSyG/nGRBpv2ZTKS1oWzXr4QyiwDi6SZJkFDaUwdURHrilSHIvup
U72Kl0sWwI6QhK3clmJ4NG2Xm+WcMpBc+PNCiGMOI2l92H+CprllJQiPlN5J
vJvJ1CGTsC5JdSuyz+OiMdmouwgiy5yDfNaVQZK0Yq2zTwXobVB+IBiWz0ha
r7Y/PJQnVgMZGx7FVIjlMHVMZaxrUp2L7Pu77w4JzCiGBTyGE/WcK6BVY+nS
ANFqSF+eXpF0soiRtB6nn+y/pLAOztsYcvve5TF10Aysi1JdjOxv8dJS7X5e
CjdXLjedWV8F081mW34IrAWTdR1Hrf6wGUnreY9nLFbaxIF5MSLT+dQKmTpq
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
       "], {{{
          EdgeForm[], 
          Directive[
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Opacity[0.3], 
           RGBColor[1, 0, 0]], 
          GraphicsGroup[{
            
            Polygon[{{103, 89, 187}, {97, 77, 169}, {77, 98, 171}, {101, 85, 
             181}, {75, 97, 168}, {85, 102, 183}, {67, 93, 156}, {93, 69, 
             157}, {73, 96, 165}, {96, 75, 166}, {94, 71, 160}, {69, 94, 
             159}, {95, 73, 163}, {102, 87, 184}, {100, 83, 178}, {90, 63, 
             148}, {62, 90, 147}, {87, 103, 186}, {63, 91, 150}, {83, 101, 
             180}, {91, 65, 151}, {99, 81, 175}, {81, 100, 177}, {98, 79, 
             172}, {79, 99, 174}, {65, 92, 153}, {71, 95, 162}, {92, 67, 
             154}}], 
            Polygon[CompressedData["
1:eJxFmgn0l9PWx895foqIiiKlrqJUShmKLtGgkhRKGQppokIZSmVIKXVRpgZT
SChDritTJJG4iasyhIQyS0QIhff7+e9v613r2eucvc887fGp03dotwuLlFLl
Uko7KJ0keFVwsaCB4EwV7q2y3krb55ROV7qn8NOUHiu8ldIs/CilrYQ3V7pV
cJjgSOEz1cf/BHfTl+Ac0fdR/T5KO6i8h9I9hJ+itJ3wk4uYy0lK2wrvonRX
4ScobSP8VvXxgmCQ4GhBB9ErqLyj0mNUfrDS3wTNBP8U3lLpX4IjBEcJb690
R9U/1vXbKN1BeGulRwvvpHRn4ccpbS38KY3xnuBpwQCPzRzOEEwTVFG9T5mz
4BDVv0hpA7UfpvR44fOU9hD+qNLThT+ktJvwuUpPE/6A0hOF36/0VOEj1eci
wWDBToILRK+n8vOVdlL5IKV1hZ+n9DjhA5T+Q3h/pR2F11P6g2B/weHCd1W6
VlBRcLDwvZV+KajOGQmvpvQzQVXBocJrKf2GMxI0F95E6S+CxoKWwhsq/Yk1
sqfC6yj9TrCvoIXwJzTndwXzBf0F9wreEswSnOV7xf16XHCS4GrBy4ILBdUF
Lwnucd1ZzkO7StCe/TBOWQfB+YLFvl/HCu5zf/Tb0e1ecruqgrtc/wpBO+fv
8t2kj6WCRwR9BfMEDwiWCMYJOrmMOtcKuphO+VDBPu53sedVWfCi4HZBb8Gd
nhtzPFtwv/uhv4sE+wteEczlnQgedt/MoY9gjmCY61B2guAhwSrjtPm34B3v
bz/Pa4nbHu99ftljHyd4ULDS5YwxW7DC5czxMZ8XfOFEz3Op96arYHqK+8q9
PUYw3vNjnvt6La+Y3lnwqOBtt+/rvWGPRgvaOAUfIqjovhmjl+A2wVTB8hRv
jzd4Xoo3Cd5KMEPwhuv2cj8veu/bCsakuI9Xp7hvqwU3CnoKFghuEbwveF5w
uvsaJWjtPkeZNtrzG218huf/puByj3Wn89C4F5Wdgt+R4v7d7PEY96gUvPLK
FHeZ+wgf+x3eYn42VPAcb1XwvcpbKP2Tt25+e7HgeeM/puB7f9PW/O98wbPK
HyjYoPJGSn82zns+SOkWQVO/d/j4tiLGof//Cha4fFMKvvBrEe2ozzz/8PyY
b1ul5cWf2pm/Xuk18i6r+iwv89lxhjek4B/wke4p3tcK38tOPivO7CbWluKu
/ysFL3nceWjXMTfB9e6Pfpu5He2fFZwqmJKCv8Pne7gubbql4GFv+c7Aa2Z5
3swfudbe94g696bgN/T/umCE5/ek4L8en/WM9Jq5x8d47ctN38n1qH+p58v8
lgmGCw5zGX0ii5BJz3m8m7ye1007V7BQ8IzbT/H6lpk2MMV9H6kzWVTE+WxJ
IRd3KoVcRT4iF8uV4hw5P/b1NcEl3l94Azyi3/b959xVf5LSk1T/P65Pu5MF
e4r+hWAvy5t+gieVrylYn0LufCuobfmDnPpKUMPyivRr1wefrLSVxrtB6ck5
2m1AJrr9zchxld+E3BU+gbchfDxyV/gspScIv1dpzxxyF57DW2+d4p3yXnnL
8PCZyGHVvwu5rvq3K+0g/DalpwgfxVsQPpJ+ue/IXeFXKO0ifCzzFn610q7C
h/P2hF+qtLPwaZyF8KlKuwsfiA7i9Xyh8V8W/rTy+7FPwuvCB4wjfwcJnlH+
APZJ5fXhA8bRB9ALNhVBB0eOby6CD/D+0eMKjX90Efrc/wQLefu8c+6h8Be4
G/CNFPVKpcCpD59JpagPv+nFHVC+kuDDFHrSOsHuRehLpOsFexjfTeknro++
gl7yeRH3hvuyUDDf9+fzFHrHxiL2gfVz17hz/f1+0RORD8gJ9Nuz0VE83se8
OaVrBDsLmuXQkz4uYh6M/6TgceV3EXyUglfDs0/z+6LdRy6n/Qi/wYWu87zb
LPSbvNRvmLd7CvxEbV7iLgr+FH658MXcBfhoCr13N+1n1yL0X/TiKsK7FaEf
k+4uvLvxnkqrCT+1CH0aPXE/4YOL0Bc/FLxcRP0ih95dtRTtqM84lUoxH8aj
3f7Ch7j9WMGSIvpPOeyAvVR+RhH2AHp9LeF9i9DvsRtqCD+rCPuBtKbws41T
r7bwfq4/UfBqEXh5+A1nqvy5ggrKjxe8onwv7l0OvXdftR9YhP5LWqcU9cGv
4x4Kv74IfvSpYGkR4++k/JfItCLWt1uOd9lc9cf5fd4keF35S9iXHHp9Q5Vf
XIR+T9qoFOXgvPumwkf7/X8nWK78Zewz90Npk1LgvPcXLY+Ry7uk0N95v4uY
Wwq+0LgU7aiPsXaA8KFF2APYBfVLQQefLFhWRHlF5W8VvKH85dyTHOtqofrX
eH1X8a6EjymCP00XvFkEXk35n+ABRdSvkYNvHqH61xbBP+HzR5Zin9lf+Nwh
peiX/qjXUvhE179d8FYRePUc+9SsFPPbzi8Z/xvlq+S4V9VLcd7cr7sEK4o4
z5rK/yZYqfyN3IMcfL6N6t9SBL8nbSv8VuP3CFYVgdfOwWePVfn0IvgtaXvh
M4zfJ3i7CLxODj7fUeV3FMHvSY8TfqfxvwTvFIHXz2H39VT5Y0XYf8ipo4VP
KUJePSB4V/l7eGc55FAXld9XhDwi7Sp8tvG5gveKwA/IYTeepPIHi7AfSU8W
Psf4DkpXF4E3zmF3dlf5w0XYn6SnCH/E+COC94vAG+WQc8er/O4i5B13kzuK
7ECmsK5TVf5vr+8M80v4pr50lvk/ckBJmT0KDn2t8ApF1KfdBynKqAPvRQbM
N7+H75dLwbuxuZEV8HD28ZhSnD/7eY75O3xe5LK64NA/TTEWY8Kr4dmPMW4R
82+Swx6e73HXoCvl0E/QU8qnsJ/BoX+SIg8NXQSdZEEOeY3c3jGFPf2U6etS
5KGhmyDTn88hz5HrFVLY00+b/lmKPDRkGzJ+kc8AOb9zirkyZ2QjMpG3OtZv
+xrnoW1gv3Kk4Lzrhmq/NIe9gN1QKYX/Bhz6xhT+FOyNV+BlKfLQ0O3R8Vfk
kFfIrT1T+E8Wm/6b8I9y8HP4em3hK3PIO+TeXinq0gZfS2ePwxjYObul4NX4
oJAV8GxsD3wS2BrYIC/loGGX7JrCv/Oi4E3hv6TIQ0OXxUeErovPB122netR
5x3OPoWug88I3QUd5rUcNPSgKinGXuBxv0mxV+wZthE2F/4Z5MknnH8O3o7P
BN3qQI/NHJYL35xibazxA96L9wofGbIQGfheDnmL3K2Rwl+2xPS/UuShIbuR
yccLKpZiL9lT/Fi7lIIO/o7Xy15sS2EHrbYtMNB2xjLjPa3nv2ZdCptodQ75
ixyumWKuzJlz3iGHboEPD12ku/PQ3ha+NYUsx2eFbD7X+8R+IYfrqHxtjjrI
/X+kqAsOvVyOfWK/kOO1UswFnySyARmBv5D7xT37PUUeGrrMia5LG9bxd4p5
MT/0or1TnAvng120B7pcDn0XvXf3FP5OcOg/pdDfke9fcP9ypODI/XopdAd8
gugG6AjYB8jjr4VXzpGCI6frp2hLn8h6dARkGzYOvO1G56H9yHxzpODIwSYp
ZD8+Q3QBdICfc8g75N5BKv8sx5zQa/ZLMTZzQvYig5HN2EjI6onOQ/ue950j
BUeON0ohi7H5kP3XOw/tB953jhQcuX2g6q/PMUf0lLop5DzyHr3jgBR5dAB0
hzHeO+bLvHcR/JlDniHXmqeQhdhwyMbZzkPbyvpy2GfI4y3cpxx5aMhqZPQf
OeQvcviQFPWogxw/OMVeMl/mvbPvKm8cXXiI7wJ3AtsHGwjeAb+Ab/yQ4u3D
A9DzvkqhS2DjoVugU/ySg4ae0TRF2dum18phv67yOe4jQIiWyWflW6TYC3zI
yPo5zkNjn+rBU4qQb8i5w1P4Oibb9sAGoS980mWy3/vG/qFnHJpibOaA7oTO
hP37rvetrvcOGrrBPe6LPplngxxjMSb+B/wXzAWfOLoCMhdf4MQUvkR8gmfm
sKeQv8j7+caxs5DH2Gq9c+ShfViEbvGhbTnkPv7up3LIf9qW9ZlC3j/l8jK/
OHuQw/5EPiOvFxjHLl2XIk8dbEX0jSdyzIGxGHOtx6Qc2xHbtm+OtvRBbADb
E/9WZeehPZvDHu3t/ugX/aKsbRF+IfxB2KJ9cugau5lOOX3R53k5/CX4JSt6
PbQps2PdP/79at4/9Af8J/hRsC/wrZybI1/DYxEfQKdhTGzv/jl0EWzw53LQ
sMvXpyj73HT0EXw7A3LY5ugj6DHQaEsfA4xDR98hVoSvHH/nYc5DuzCHv7Sf
59/b+0MeGmMzh4Gebx+f39eeC+U1nYe2yPNjraz5hRz2FvtNvKOWz5t9ZD/x
Q7VOUYZPiDy0Lz0mvpjq7of+yEMb7Db0y/lxzpx3WZwohf8TfyprZc1lemRh
v0eK/BO+z+i/6Bn4d/BvoG8MMQ4dfWdwDv/H4hz60mLj+EXw/5CnDm3rel/x
9+CXZn9JwfEDtU2h9+EPxh+00WW0IQ9tWQ5/NH5p/MvEftBFGWtf3xVodXze
3E/iRfBB+B/+eHDoFZ2HxtjMYYP3lL1EPyaWhW2MrxrfFXyUOrXdH+dJnXq+
z4M8fn+fN3vFnuErQ38mNoiuy9ybOQ/tghz67yVeH+tE/g/L4d9+NYf8Jz/M
vB2fN3wefzl5aMTK0F3xzTd2O9qQ/9536zzLgtpe6wavi/vYx+/3ad/ndTn8
KfhV8H9wlozRxPdhqPHBPv8lPr+lXg9nx3tq7vNEb8E/j58e/YW1smby2333
r3r+hzoP7XWv/wLvFzYA9gBjLfH5oN9e5P1gX9CXt5hGrKCp7zZ3/Bm/5/dz
+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
             
             "]]}]}, {}, {}, {}, {}}, {{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1:eJwt0T0oRWEAx+HjXlwGSjG4pdyBkq8MBpdIkiQJSb65vpIik8lkMillMpks
hKIMJpPJZCHqDjLIIIMMkuctw3N+7385nd6TyqwPreVEUbTBuEM4X3g86ZTm
6bW+6KIW6o2+6aoW6a1+hHdoid7pl25qmd7rj25puT5qjG0q7KwWsEPKftVi
dqmy37WUfWrsT01yQL39rZUc0mT/ajVHNNu5sSiqcz6hxY7btc7HpO18u8H5
lFY7YTc6n9Fm7zHGMqMsMRLug2EWGGSeATL0M0cfs/QyQw/TdIf7pYtJOpmg
I/wH2lkJ386V78iG92lcL/U5vCfco57rw///+wPqhjDm
           "]]}}}], 
      GraphicsComplex[CompressedData["
1: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
nOgH0O5C9FOG8yJw3f8Aq6UpGg==
       "], {{{
          EdgeForm[], 
          Directive[
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Opacity[0.3], 
           RGBColor[1, 0, 0]], 
          GraphicsGroup[{
            
            Polygon[{{117, 103, 229}, {111, 85, 211}, {85, 112, 213}, {115, 
             97, 223}, {82, 111, 210}, {97, 116, 225}, {70, 107, 198}, {107, 
             73, 199}, {79, 110, 207}, {110, 82, 208}, {108, 76, 202}, {73, 
             108, 201}, {109, 79, 205}, {116, 100, 226}, {114, 94, 220}, {104,
              64, 190}, {63, 104, 189}, {100, 117, 228}, {64, 105, 192}, {94, 
             115, 222}, {105, 67, 193}, {113, 91, 217}, {91, 114, 219}, {112, 
             88, 214}, {88, 113, 216}, {67, 106, 195}, {76, 109, 204}, {106, 
             70, 196}}], 
            Polygon[CompressedData["
1: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
             
             "]]}]}, {}, {}, {}, {}}, {{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1:eJwt0csrxGEUBuCfe7OwsLCwsJiFhYWFhYVbiFwG0YiIyETuM64TIUmSJEkp
pZRSSimllGsp/5fnq1k83znvt3rrxFOZZDoviqI1soQ96yngh3x5xyzmN/zL
e2aMPwrlbVqYp5UF2lmkkyV6WKaPFQZIkyTDMKuM5rqMs84kG0yzyQxbzPFJ
E9969FKibKP8ZU+EznKD/GHvDl3levmdWS6p440UF9TyyhTn1PDCBGdU88wY
p1TxxAgnxHlkiGMqeWCQIyq4p59DyrkjwQFl3NLFPqXc0MEuMa5pC3ehiCua
c/f7Bw4jLNk=
           "]]}}}], 
      GraphicsComplex[CompressedData["
1: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
f/rkOpSiCv8DAF2dAQ==
       "], {{{
          EdgeForm[], 
          Directive[
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Opacity[0.3], 
           RGBColor[0, 1, 0]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1: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
zv6TF5Gvk1+TH72Zg0dO/kTuPSZH267cnj7k7sQT8rYy9yF/q19Efk6eTr5J
bnxXjlyhj2lkDYt4fx/j77t7/jpFvF+R31VwfghPfUC+B00f7Il87z2vkbau
Xhfr62L7KbOO6IJOt+XQDz2Jr7z13i7Z6Slyb/Ic6hXqC/Kdd3Pk47TR550c
7fQjP2Nuxuhl/W43P877TV++odYgnx3v8Ri3UgoaGbkAuT7/BRD7d9UW7BP7
BY1ss3VnPeTD5AvI+JYx6ptv4PWxXsbs7fWQr1EPchacyZ1upx/9PzBNX/YA
/0N98aFwrRQYnrqjV4r/PqbkoJFNzlEvNSrCf6M/9XKpzxs57dRV1C/UqpNy
vF2e773g/47zvJ73c+iL3lVsL2/bBrCPUo/Pt4zBfyfUSIzd3/aGbIDXe4vv
D/eI9ztoZOTy5PQ325/gV/A3zMN8HW1z+GX8M/VaB+uGjtR2fa1LQ59VP+vy
hfVg/dxl7jS1BzXGRK93vO3hU8u6uZbf6r1kPUNMI2vi/aV2nJZDl4stp506
kHjB3nJGg7w/U8wjr5biLDlj+g72WIzZtIj8ilp4U47a+ALLaaduJf8t8xmi
Kzp/aRsgtlMzE+cZAxoZY31lOfkK//UQ6xnrIuvFeGXWj7ZvPCbrnWx+qMfb
nuM9nnf5a1L408p+H8O/Uqv+mKPWxB+/mKOebVdEvCX+1nH+SzxuZ7692+Fr
+P8Q8vc6/hZ6ntsYk1hPbUz85f+TWZ6ft+8VOXIR/tNZ53b6EQ+qOVYTm4kf
tNGH8ZmTPKKm62/m2JEj/yYPH5Piv41Xc9DIyMV/zpHbk69AIzsWm5Tsoxz1
DHVNH/EzzCOvl2IsxlyPD0jRRh9ycWog3vEaOv/vLdlr1ge9jk6xF/z/ssD6
0kYf+vLNJznqTfJv8nn+i1mT4+w4w9qem7PgTKCR/WR9Ps9RzxIPS1Pkgfy/
OTNHPjjTPHk++T396E+9S/yklj6giFr7aq+N/wvJ+Y/32MwxMEX9wFs+9TJ1
M+8Z0Lz5M9Z1pne6XyPiu8eb4f1kLuYkb0U/2ujTL0Wt/WmOehsa2Us5/m9b
K3xoinXX9v9vo1LYMvaAXZB/rnV/cq6ephljlGs7fBU5JW9R5NcrbJP8L9NC
stmeHz0aprCT+q73znEbfaiteBMgNyFH4b+cO7wu1kcbfV7x+WMH3J/1tqcl
vl/kstNz2B42uNb3d7vXy35Rvw73GTE3/1eP8vjUfdvtp/BPT+ewIXKwbm6j
D98yBrqgE/Umtey3Of4f5f/CESnmwmawlV1vIdgobysj3PaDbYbzm2d9Znu/
oJHxXxFvMfy/x/+V1E2dTFMr8d8wb0XUuSX+PxMZ+eTe/r8W/dd4PayrdYpv
GYNxqbeSc0Nqq1vt677P8d8A+Sk0Mvwg+SR13Z7+T436jrcr/rPjrYt4R52W
/b7FmK3MI2e+5t6TK3yfKlo3dEXn5R6fupJ6kv+Wt+X4r5l6k7q2gv8vp16g
fud95lLft2k+M+pwYtg2j8F31Nvkz9X8fyv2Pd02RMwiH+EtoZ7/7+WMN+Tg
kfN/AzQybBmbPtLjMS7+t6n1QS/sqarvHnMx59Ne87c+D9bKnlIvTfJ94v9n
6k58PHUn/+ffZb6c3zY464k+f2T04zyovcr7/+eu9l34NHwNPod6q7xrNOqN
8q7F2Mt7rDtrIH7yHvCU9Vnh+w2NDFvH5v8PtKYX4g==
             "]], 
            Polygon[CompressedData["
1:eJwtlHeIz2Ecx5/H4Y5zZpIkSZIkSUKyMjIyOmRkZGRkk5F59nb2dogSJUqU
KFGirDubs+e5c8dxx9le7z6fP96/17N+3+fz+Tzv56k7ckrq5FIhhJYoCc1A
KQzshqViCDNhAWwC82EV5hbQvky7GSyEc2EyzIDT0T+0C1Vg7TT4kbnG8Ays
xtgS2tdot4BFcBGsDA/43orhLP1GMA9OhTFaTLNRadp7YEXWzoKf6DeF56N9
W3voW1XoL4PfYWv4Dc6BlZjfCxM99kLP5XO03JSjcqngsRV5rF/hfFgO7lPM
rJsHv9BvDi9F+7b2uOA1K/Aalo225zSvi+rzF01CJ5lrCE/DZOYm0z5FuwHM
gRPgb7QT9UB/GFsDH6Oe6L72hfdgd/gArdZ/6HeDd2EKXAF/oPa058MEuBB2
gLc0jzqj22gl+slcJ5gFy8E02AX+gqu0H+qK7ihu/S9abIpxtY9pTmseBYt5
IipPjjvgDzQOHWNNfXgi2re1x1KYCDNhR+UQbM9eqhtja2F2sHxXeH5rYT/4
Eq0PMnAIfVUnxqvDzfAf6kM73Wum2qmGz9C6YH6Sr+SvhGh+PuP+PQcjc/1p
b5OXlRdMha/RhmB+kC/kj6Rofj3v/rwI28EbaDkqod8W3oRl5G2PTTEqlufB
vv3I93roZ6cz1FllBqtNptfqFuwNnwSrj+qkej3QvVV+MA1WJb79MMX9fMn9
e8X9It/IP/fdD2l+/svdD/KF/JEVLJ/ZHv+iaPVW3VX/F8HiWef7b4KjYSLz
W+FXNAa9ZbwefANHwc9oCyrLupGqLeN14WHtw9hw2gdp11KN4BCYr/NFg3Vu
rNkIPwSbe+5rn0Wb05o9tGuoVnAAzAn2H93Hn8H8KZ/Krx/8fuqeam/FoL0K
0Aj0ivE68h0cBvOUKyrNuqGqA+O1YYbqyNh42sc9Z+WuGnxH24Pdfb0Buut/
gr19ef4W5kb7r76htSXB3oYcfyvew4EqP/Pp+naw+7DZ/b8jWj1VV9X3U7B4
Mzy+Q3CsfMv8NlgU7DwOe/2PwsW6H9H8Ix/JT8X0W8Gr0fJV3so/Fw1COxmv
CfdF678LFp/iVLxPfV7rdLd0x3SX3gQ7myd+VtnR3oviYPEpTsX7zt8PvSPy
ljx2xM9EZ6Mz+hLMc7pvune6f9dRG3RD9xrO4uc/7pzfPg==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1:eJwt0k0omHEcwPEHO1ixdlAcHCgHh7WsHLyLkpLSlhYpLVpJobQakRKSJEmS
pLWWpCVJkuwF8/5y2A4ctgOHOXDYDpY44PNkh8//+/tfnuf5/3uSa5peNEYE
QTBAiyGcDyy5uk9PuCef7/TygyIO6eOIEn7Szy/KOP7/3BPK+c0gp1RyxhDn
VPOHYf5SywUj/KOOK0a5poEbxrilmSjfPa4P9K1G64Q+1HaN1Xf6SDt1WzM1
LzIIKsy7ZIVnta8075Ntf6nd+okc9uhimQx26WCJdHZoZZG08D28YYEnbNHE
PKlsUs8cKWzwmlmSWOcVMyTyjSo+ksAaL5kmjlWeM8VjVihlkhi+UsyH8I74
QiHvw7vjMwXhmZw7SuPdxzNzG5HhOyxPI+7/lzsvIkoC
           "]]}}}], 
      GraphicsComplex[CompressedData["
1:eJw1WAk0le8TLlr9W5T6aVNEiyKkSNskKaSypCxp0b5JUqKolFQiiiiyy1oU
CX2Z7GS99t299jVKSUn9Zb7ucc6c852Z173fO/PM8zxiJud0jvKNGjVqAf+o
UX/jVVW+RpcrkXCyXX+s98oCLOx2bPDrSwXNurEXU8dko9m+nDCmJBfSI87v
+JD2DkeNfAph/L4Z8oufuzJVUvwm1Q3RUHD0rGinbREK/niwUDY0E0QVgxTW
hOeh8F2V3/HCHHASuqpjdekDOkYN3IsaKIJVuXO71nW7Mf0K9jqfHGKgfc+K
jXeOlKL2GDcT3JcDP7eJXS1bwsFvh/1DhNKLQVEbbB8KpOJ/Bz7PPPC5FA6t
Fw/WXuXJTFcerzJaOg741XqMFmlUoOtUz4Cd0wrgsEVvjYt1MZZs/KNlal4G
PGe+8AifdPSf0uE3paMCHkQu23/8ihezYvtd+RlF8SCiFG2VIlONJyfv/PzJ
hAN5frhhe14pvp5t/DNrQSU45qaXpq3MQqmkhuVJDdXAzFspbJPiw2jo/U9i
ieU7WLPsvMeBmXU4UUjLVWHD8PfNc/YZKzr8fb4mBornVcNqgbuj6zI+4tuz
1XFnq+vgYsa8E9lj/JljB5xmrJ2XBGGTnxja2nAxbJaOnK1wKfj/MP6D5lV4
rmDWDlvrOqjfpin93TCP/f5ccLT127I7NIBJjnWwe37wAyjctmrX7OWh2vzd
nPTPZSCwWPqgdXoNLtZbd6XrERfu2E81EOwpwGMjnwbwV5AQq98exBQkZP2U
iUmG1N8Gl+cebsR28T3nJ+dWwEWdXx9WzarHx5s7Cp508ODpoZMpbsoc9vc3
QvynkKGTPcFMbdLECwljU0Hbcu34jtImvCepP03veRWYYbOL5RsujpN9IrFN
uRHOjdqu7+9YhF9m/r3AZih8vrzq68MQpitVo3OzfhrU9cx5HK/WgstlDF95
X6+BYL0dySV1PLwkomb11aMJVH2lPr0oLcb4kffXAq37o+KuKYQxP7McD+eG
p8OZE4MSDu9aMWfVPu0mwzqo6oz9LDehEZsFvuf5f2qGORun3EpcUIq26Xuv
pu9tg9//yT8SqApnJubnVusNZcBPbnWM3op2VBCJGnCfw4WpdvMWPpBrQr2B
4IW7VFuht6ZndubJMtwiUqIsUtIOMwvizrnbRDLCxZN31+/KAgcDZrOEfweO
E43OShjPA9VZt3S6DJsxvXm35S+vNki/wokqjilHgYta4y9qdYKUw1pNUbGX
jHjFztwTAdkwvcib80WoC0sXvvKs/cqDyy877dRvteDKYv7csC/t4DknRpU7
VIF5uX8/XbAJkpZGpEUxAvd8NJWs7jHsXOKTXbeKA0WjYHP3fdd5kzi487Vk
Q+XhBww7d7hLUVJX2K4AzNpXWVXqJ+EJmntwJBzAjL+v5yoH5s/wnPpK/RGT
T3MNjTTn2Ca3perI6tdgVLcjKuFzMaqfrVq3YclDhp1LtL/0ReeYaREcem3c
Zv8hGf/+2vEXS0Djlm9Whstjpo3mHEYpjsw9jlmf8dGyKhYsC6bk7Skvw9Oj
/W47ebsx7JziUW2tXx/mlsKkXtEZvrvTsCbubwOUg9XX5zdqyp8wfDT3MJ9w
AEW3qr27d+0tuHwo6OhjKvG++1FO7TQPhp1b3Cz1Mnhudjm8kW6C+LYMdh6q
IPjIy7Vf5j9jWByAdYQLuF7rY8QziUSIeOUywTWgBl9KLp+3wuEJw84xLhw/
adelS1Vw8HTIac7VbLa/a+FUR9UPfnk/RpFwAfQJJ1DfUNM7OpuBtADtxSvu
1GPh+95jtr+82N/LxVENJwcKxWtBIOyUR4dgLo587eVcuB6wv8y5zJ8JJZyA
S4QbaHEk/36qKUKv+sSAZgUeftaOe5V/3odh5xzrmUz/5Zx6eNMincofnI+3
1obeXBvKAw/DhtezrQOZ1YQbkE04gmqKoRs7JybD1ZR22diwBhTo22D74IIf
+/4asS7n4SIV4IHMw8uWzt6FqP5QYvivEV5MP/YgSCSYYXEEKghXcM/69jiL
fSkgsO4j2s1rwrnv/QIVX/ozLA7gzgRl6173BhgjZzjZq4WDU/++Br8mSPvY
flom+TmjRbgCrYQzeFR5mczvl6ngGRO+U/tBM0o78GfXtwUwLC5g0vPe/Gdd
jVBVsC4wRLYYS5X/DmwLVNudVUs8EsqwOAPfCXfwwtbTIQ6j02GRlGPtAr5W
3Kh97JODeBDD4gRKu/mKb1dphihTEaVY6xL0evL30wpf1n6WUJ0Qzpwm3IFx
2SM4hHbbIxdM250BMUGnz3yyaMNdc7OFZPcHMyxu4LMbOy8PPGkB+8l/8j+k
leKhv2Mzsx0m9lmMLoyIYH4QDsFMwiV00er2ePo8EzaJaA4yre14qHm5UoXn
c4bFEZx8big3uLcVDCO5R/KmlOOSkQvpALGIgVrDXS+Y24RLIEE4hT56KwQl
fmRBnrvUPUfDTjSLct5/vTiEYXEFr+6LFNPd1g4y21N+VupXYNff65jSBYqH
ryY2f3nJTCOcAlnCLZSef8Tj7qf7DIsbyOIOhBEOoWKg5X/uXS4MiwPI4gZ8
JhxBQ8UNh5oPPWLYucZLhAMwlXABr+TwRa4ud2f7uQof0FyDFM05+hzI6rfX
9GT7qRbDaU5Bg+YWsc9JuSz5KcPOEabS3MFxmkNscNC9v1jxGcPOBfbQHIE9
zRXyz5tdfinSl2H7HNm5AG2aExTS73FpFPRn2L7FidTncJD6HsUX6sQ5bg9g
SqgP8TH1LZhSH+Pqrthq+duBDNtXKEF9CLbUl6gWJzy65kMQY0J9gmxfgTP1
Gepft158azCYYe8d2T4Bb+obPKlRu11KYXjP0j1iLt07RFAfYOPf15JUCEJr
9vh3Wj5kOloO1CyqKoKNmxryVv/2Q9O/YxVXDJtCjQ1Hozsjkeb0ZVJ+KaRm
Sdu5hgTij3t/F0sZnJ11VEh43BNmv/+7CV+TK0BN20qhW+s5izeV8PTOmVyp
Hd6Mp237/Oo31ZBfmdah9jOUnfcayBy4YL/ZzZcpNhJenRJWB7omgr5BgRH4
dOS91IN17IYFkWf9mdveAcEl+Vyo6DDSHbXjJY5cizoPXM4kDypMC2TEHRNk
s9Qa4GVCMf+KK9Go/7ct0xsgVEK1Ijk2iEm2Knz3LqURPtv8qK0ueIXzRy6m
CbAmK1ZT/zmz/0Tr1qj1zbBq84L4uxIx2DTyfpqhzE3TtXwwhPm15zcnIK4F
LMepPlS0isXwm39/YCt0axaeNfENY56ozjR+LNsGiR9PnWnOe4NmI++vDcaM
3a3RvTmCUVwl1XY3vB2GnF22Plr4FhXk/346YO778sWXWyKZ0oUqF2wkOmGT
bpyosmU8Do68306Qu2jEz3/vJXNumuFvM58uuC5c8/NTTgIeEDpy3ya3AMzP
ScvHhnlj6Mj3KQLJ3kqbS3PdmJHj5Uthz0Gewn0TD3YOKuBmYVuPf9hTtq+r
IXpTb+jb3mdsn9bBuYrB6BYvPyb6L224x4XbLteczkMAMwI74xvAW43/1K+G
QGbkem82wutRDlsdbgezPKQZsuMFxKcvC2FxoQW4Zs5/vPNCmfsjPKQVBpZO
r1lyPpzRGcGFdpjKc49/PSOSmTXCIzpg8ZPZ7hviX7C40AXrtJ+dzzKKYubu
Hm3Oi3Fk2L7F9W0ZjJykM8P+btwxoKa98iAHBr5fbp2q64uD0fM03ugUwlMN
FaM5+S/QQXKo4mY6B4zCG4IfK0Wj7MYMfuVdLgzb57hpgqRk+13Xf+8Nb5de
Oj57dwlcHzMhtFEnAGcG1B7XWVMMp6LE54vef4UBc5L6RSNKwCr2yOOwuteo
XeS40zXtIcPOBZp4f7qg9OfRv/eOKa+DbEaplcM4J9198CsIZR752PeIlMGd
hOAp8nKxyPzv2owkl3J4nNRym7n5Bi8c037CU3Jn8akSb8nGJt21ePzv3nDw
QdGj1nVVcG+mr6BXcAiq3zoQeJ+/EoJTl/xRLYvDsl+w0miYn8RknbAsWBqP
7j//a5KL8mDxqgafp1lNrGr3/HfvqHB2VHi+TC1M8+lI698ZjocviiZLtldD
al5Yj/6VBOztHqU1YFQLnKKO4w15ifjWuWaFncRThp1TzNKH3csOeP3rG1yz
SJhbNY0L7osVrHQGItHmGK8uI78OuOXLuadFGbzdw437KMqFnpoz+t/M32PF
wgCroifeDDvX2N41xte65Nm/vsNSoRWn8x15MDfqhvRL/yjMWa79W66KC0O8
F4W26Uk4/USy6pNHPLh9wVJizKQPOBh3PG3hVF+GxQG039Rs0Szh969v0ZxP
tT95bCMUeLX03lr0Cg2C5JxG7WiAyf0eXLU3H9CX619yfFwjuF2O93ban4wP
gh87KKX4MSxuoIeA2lOnA/7/+h6nfja68eZaEwgdnJSz0vo1tsybPq8AG0Fk
sEK/aHwKShnYHVawaoJAmx8zhF+loO+5H5G8X/5sPzdjaEk4rn4a8G9uMLLe
fFLYj2bQk1gZzM2PwQvuX8KfrWyG5aPmcIwMUzGRY/JlTFczvLZb6+THn4av
lPYV3VUMZFhcwgSfyc21JYH/5g6359/18L7QCk/a9l5zFn+DfFOKlc4Et8C6
sUbqzZFpuE1D5Ubx/lZIdrgydtmedEzlx+9y5kEMi2OYc8JM4PbUYEaX5hbb
Gb+FLt1tUBNpY7D+chw+uB2TtXZWG2gIeCeb/knHshRxwQBOGxTdZ2xiQjOw
JE9MpCoymGFxD2tWFsus0Hj+b+7xdsTbFzePd8CC84HyHblvUeTPo70THdvB
YGqt0oB2JpqsG+NrtqUDuK5D39YPZmKzx63Ndq3PGRYnsevXar2yWyH/cAMX
Ps1fY8nrhEOrsyd7iiVgmKVFS/lQBxyfMf/1jaAs/BTTJA1vO6H78UbTjB3Z
+Pv6e8c1gYXwRl53ssnvZ+h1ruQ/KZEiENlfwK3T9UOl/Z3+CzyK4eDCb4n3
Q/2xVJNPWmhaKQS0zHFfOxSAFutmx49zLIOW8E3n2rSDcOoyWZWfYypgyblj
6o+fB2PkrG353baVcFL+vviWweeoMX6/AW+gCiK/vxr6vCsUW79ZNJWY10DP
u/Jy36AwvNXkeC6rqxbkrg+92vEjHMWKA36+O1YPFlvE7w/uiEQutyZlrxkX
3k5QPxYW8AKl9U/c0ZbmwUCu6aa931/i1YK+HduH9buPmoYT3+JozNl6TUg1
pAFwmbG1QWE0zk4SqNx4pBG4k8yOR1u/wpOrH/usEWsCvh673eMXvca4SLEj
K+uaQJzjrry/4DWOkXghKeXVDCoxoSveWMXgbq81PYv0W+CY+7u5kyRiMWh6
WuyCma1wxzJ/wuH8WPxyd5f17KJWCDPgfUu4/AaVR1eD0IM2yFn3tUFQPA5d
Lh8bO1mzHbpFxhcez4vDup7PH8dN7IDJo+a8T7J8i9LHbVxGZXSATINU+MyF
8XilbsKen3adsCsNPM7kxmOWntvcr9AFZs91bqVeSsAk8qnAnHwrPN/nZNeW
lw5vBUpLbfbm4B3yoWAW+VKoQT4XFJPvhSLkW8EM8rEw+rdriqVdNtw9fMHj
y68CXEk+FPSTL4UD5FOBHvlW+HniY77xinkgU3cnUl67CKvJd4JS8qHQhHwp
cCefCj0FdojlXCwETwH9yZ8CS9CefCaIJd8Jc8mHgtPkS6GS4K7k6VpFwK+4
xDS0vwxXkK8Ej8hnwtXkO8Ek8qGwYqb2IcNlJXDmcH++iXolVpCPBOfJV0Jf
8pkgknwntJqrOzpgTBmUPUiXEfGuxuvkG8FS8pFwAvlKoEk+E84W0/NvrysH
YNxcyj/Vojv5ROBBvhGak48E3eQrYcLivcpyCZWg9/XVQJYoF0+RLwTjySdC
U/KNwJl8JDSUMuBdflQN9+7NllyswcNN5AOBJflCGEg+EciQb4SDckY3Ppyt
hQ+iNwxuXmjAmeT7QCv5QFhJvhAUkk+E3orGYhPU6uFbXNtdrncjdpDPA3vJ
98Ep5APBGvKF0McnirvElQvLdmglbshoQiRfBzLI50EV8n1gIvlAaOofHb3d
lgcHGt92PO1pxofk48Aq8nXwEvk8UEG+D54gXwZ0yKfBWOpbsKA+RmPyVcCB
fBa8TX0JsdSnOJ58EjhGvglKUx9CP/UlRpPvAVvIB8HH1HfgRX2IhuRjgAT5
Gjia+gzWU98hH/kSwEc+BZ6ivoJq6jN8QT4D8Mh3wBLqI7hKfYXLyTeAevIR
cAP1DcyjPsJR5APALvIFcDf1CbynvsES0vXA6ny8Q30BxtQnGE46HWRIt2MS
9QH8ob7A66S7wY90OH6le4cA6gPcTToappKuxqV0z+BP946SpIvBhnQyGtO9
wnm6Z7xHPBNY3olSpKOA1VX4M+zkRw3xN3AbjAs1VuWjX+/912ncNLhhcTZY
dMVHfNd2cmOxTBpo5F0YUBUsxJx11475+GVAPkXkqlv/Prk8f5jP6jbmTnmP
6pQHH6gO7elc4Asf+T94iHgq/Ee8FaNItwGr45A36PJF1z0L9PL+d9y9OB8/
8b823GiQCee7D24xdivC/D9PQ6emcuB7w5ln1+Ymoxk9hz7KQxvirSBLPBbl
SPcBqwNRbLz7ykb1XJghpDfDnuGg2IKfl8LsPsKTyTtdLGaV4ouqAe1TZiXg
Lyqb7RmVih70HJZQHj4hHgsaxGsxhnQjsDoSD01/Ym7+uwBsQeIiTC3B3Ws3
P5oRmQcfpNfVOHqXo+ObPYNpIuWgub/v6yuVDEyi52BEefiGeC0cIZ6LCqQ7
gdWhyHHeWXm9kgNtp/tKfxwqw9Rl6eV4qhBadyxdGihahadcYoMW5FRCv1ec
aE55FjbTc8ikPOQQzwVb4r0YT7oVWB2L5920rLJiikHHM0UhNrYCjde0H734
hwNTTWdaJAbVoPrp6TutL9eAX6WVZtPpHJxEz+EQ5WEX8V7IJR6Mz0j3AquD
UfCpzmxB51J4l+bqYTq+GvtVJ39d5lYMq535PnCW1uPirWbfSxbVg7rwhstD
f/JQnp7DT8rDscSDgeXFWEe6GVgdja98dyfsPVEOiz4fHFhqWIsuunJ23KWl
IFP+3d6ijIs3BY8XerRzwXrZKJ3/aRSiND0Hd8pDIeLF0Eo8GUVJdwOrw1En
eI+B7+ZKcBGRNWiMrMdlh/QEH78vA5Xjn5Zfn9WAfUMzF6luaoBd2bxWYTcO
KtNzkKE8FCOeDBeJN6MJ6XZgdTz2hev/aJlXDUNBf2ry/3AxzdTKZ7tOBez9
3sRxNGxEk840qy+PG2HRiVQbiboi1KPnkE15KEu8GVgejYGk+4H1AfBRtOGT
Fd9rQH7d8clSkg1ofPWZ1OjWSjjtUG3p4d2ERRUX8n27m+DnuGAhuaUleJKe
wxHKw43Eo8GFeDU2k28ArI+Aq+L2KV3i1MEJTv6GuzqN+P1ucmLclWq4Jlwk
EljXjJszForv2NIChcG3wzaYl6INPYfflIc7iFcDy7NxMfkOwPoQ2GEc1VWn
x4VnxxVMW640oatHs9oZwVp4FJKV+lK0FV/FcCx/Pm2F4C0nQIMpQ1d6Dp6U
h4bEsyGceDceJd8CWB8DEw9GM3wqPCgaeuajEtyMS4MnlosF10GwIp5MNGlD
Uf/ruSGf28C6Ub10z7gKDKTnIEN5uJt8D2B9ENQlXQ93SOfjgelduiZnCmHL
nf+mtgQg2oQsFVjUxoGvax/NAMEEPEe6HVgdjxu61YeY2cWQe2On/P2jKagY
tTBSIq4EWnKY/fJDDDqSLgdWp+O8rJDnwpmlcAmnHQj+kYaf4+btlLhVDmdW
XCgRuvgBQ0h3QznpcPwZMFbL3KICRIdK7iU5ZWJE0n+94jpV0Nzv8MPpdAqm
kq6Gz6SzsdLm8I9csWr4uNYzrlzsIx7NEHwoLloLxug9f4JJGnJJNwOrozFe
PzlgSUEtXLxs1ND7JhcX5AusEv9UD2UOr1Ts9DPQhnQxCJFOxpwnUxcrb+TC
/Lj5UwQ0CrDrFN/paft5sEsr48SvnVnoSLoXWB2Max2SrD+58aDpR6/3tJ5C
/Gj6Z9209AbImlXtdEl1GK9J14I06VwMtzhb4NXZAAmeRSvnKxVhiPmvSdOk
mmAzr+d177pcDCXdCu9Ix+Jsk3kS6pub4IFibNaym8Vof+lHreCjZngXNqbi
1Mp8jCNdCmqkU/HurpzL/Z7NcKTMfb9iXgmaWPe/FPzZAnMS7tuazyjEdNKd
wOpQ/LHeOi+wpwXWXrT8qiJchpts+64JHmqDvSLCrlFTOVhMuhIOk87EE8sk
F2pvbYOpMwzuaR0qRxG7Xi3BrHZwu+Ef2CVQhFzSjdBDOhLLhCsu/fZuh8bX
a0WNIypwwL5bTFCmEwqal8dJjivGcvKlgPWp0C9wudKiG4Vw1dy2J232WzxL
PhOwvhMaRCyqlthVDGf4Q5USxr3D3vsjvhGwPhLOiFlgIyFSBgfcODdf9CWh
OflAwPpCmJc4e4FEZwWEPhxq0TJLxm/PRnwdYH0evJMilCyeUA1iRtMn5RxL
xUvk0wDr2+Dmj5MPizvUwVPxJXKqxun48+WI7wKsD4O/227auYZzQahr3R7U
zcQk8lGA9VWwuuu6ruu0BnCM1bqipJGNfw6M+CLA+iQY32sj4Xq5EcbaHPWL
2ZSDm8jnANb3QPev1t9c6pvARtU6XXqYv9qRbwGsj4EXBiwzXLa2wMDkBx0h
0gWYTj4EsL4E6vyy8HB50QpKnZzx0x4W4jjyFYD1GXDFKPMTLjPa4dKufXN2
OnFwK/kEwPoG+L8x55RcrnTA65gWKcc7RXgnT2zhiXHJoGo42cB41vD37XfW
mfQuAzr81o+rvp6LHYQrwOIMqlAe3Kc6vHaQ878jJR/hJkW8PvrRQ69zH6H+
anfjkkeFWE04Ayzu4Cp78VeSEwpgDUX8MMmjaJlEPqiHMVsamovwKOEMfCHc
wa8layO+P+NAP0UcdX/HROOuQogpdQz2XlOKdYQzEEm4gztbG22q3haDNkX0
c90VFpRRBPP4jMbtdSzHPYQzcIxwB0N/3Nd6zymFCIqo7KGt3uVXAg4rlh2f
VleJ+YQzIEq4g/yTFMT9OsthHEXkeeu2y18pg17DH5k5sjWoSjgD3YQ7uG9+
/Te7sVVwkCJeD9C7e0WvAgwcspbevlmHSYQzwOIOvpW9k3V0QQ28o4hioXsl
U2WqoKEyZ4voaS4qEs5AKOEOTleR81JTqoP/KGLKC4NsAYEaEDaTv2jjxsNo
whlgcQfjlnXHuUtyIYEiHo4xOqnTVAua47yCq9434AzCGThMuINNMcqiDgo8
aKGI/AnGE58m1YOdN1+ZYmsjahPOAIs7OG3D47uXVRpgBkXUqY8qMcvlwtuV
p8a5CzajE+EMzCfcQcjo+HJSqxGUKaJYQ3SQWwIPOrM4Cl+UWjCLcAZ+EO7g
qV2wz8i4Cc5SxIXVqtEiXilw1vpnkIV3Hj4iHQENpCtwPe1JOEh7Ey8QLoE/
4RSepjpYTOfgNdItEEQ6BttoDkCF5gIX71yqdCMxCyQp4u5+p9w7aelgbHzK
R1uHg32kK6CQdAZm0t4FoD2MJoR7YEg4iPuoDgzoHNQh3QJNpGOwjuYIbtFc
YaW5dd3WT7lQSxHvTCtr6+vOAnubvR0nyorRm3QHvCQdgudpj4MI7XXUJVyF
mYSzeIvqwJnOQSHSNbCIdA5uo7mEdJpTzNzeojzOtRA+UsREqfljDwjnQuSz
LQrXDctwK+kScCKdgnOIF8Av4gnoT7gN+YTjGE518IHOQRvSPXCMdBC+ojkH
fpp7FNv/YEZ7eBGIU8RP246JfdxUACXv5ew86iqwh3QLnCEdg2nEM6CaeAfO
ob0Ad2lPYBHVwTc6B1tIF0Ex6SScS7gBgYQjeNVsTWtOWgnYUkQXuXKfOas5
8LN2fv5Lk2p8QroGtpPOQVPiLZBIPAZdae+ACu0hHKA6cKNzUIt0E1iQjkJ7
wiHYQriEpXa8hJd1ZVBBEZfBoFRh9vD7+P2/ORkttahMugeWkg7C/4gHQS7x
IhSgvQZ/aM+hKNXBCjoHE0hXwQzSWfiJcA2aCOdQ1v3efdeBCpCniKmaC97Z
7y+BRQ9+vTZdzcVLpIvgFukk5BKvgnXEs9CO9iawexTFqQ4y6RwUJ90Fb0iH
4V7CSbhFuIn3QuQPWEyvBieKaGyoor6urxSUFvTpW1vycDvpJvhKOgrfEE+D
COJtOHh1ZC9DAu1pVKQ6MKFz0Il0GewhnYY8wl1YRDiMTQk1cnulaqGNIn47
fry812FYj0e1/7ZPaMAFpKvgMOksvEe8D+YSD0Rz2vvwmHgAbqc6GKRzcJB0
G3wjHYf/EY5DBuE6bsy1H7N2az1spoguFx2PPp9XCYeAG+Q62IjfSHdBMekw
PEA8Eu4Rr8Qu4hVgQTwDD1AdPKZzUI50HXiSzsPttBfgOO0J3HHO4/SUaC7s
oohSN6P6jF5VwaWCMo1nG5rxI+kyUCGdhquJl8Ig8VSUJ94CusRj0ILqYCWd
g8dI94ES6UC8QXsGJtLewSsDnSV/GB7YUsQ0l+Ib07bWwN0Deb2h11rQj3Qb
xJCOw4nEc+EU8V48R7wIZIgnoQPVQQ6dg96kC6GbdCK+ob0FerTHMPTGpo2f
sxsgnCIa+3yfmllVC949qY9jk4d/D+k6WEg6D2uJN0MF8WiMIN4Fk4iHoRfV
wRE6BwtJN8J70pHYTnsQJGgvYqmAe0hDWSOUU0SFKV9rHObHwREVQ38NrwLs
SysuePAiE/jSRyIu8RVZcvV/iXBGMuRLkNewXmlfdFGPlwPxFFFYdtt5s4H3
sFjO3y3oZClKj1/v5CRQCIoU8dbBeOPXXz4Ad42XQpBiBTrMbj5gJlEEDyni
4NI8O6n2FHi6yb0icGw1cpc7r9TdWAJdFNHiMy/keX0a6Kk9sA4srsW1GxXH
KuiXgRpF7EzozxUty4DxoVucOVpcfKTFLZ9lXgEBFPGI3f++PM3NguYI5QOc
tzz8ZHI3fNCxCn5TxFoNUeGZqR8hJWqjLGd+I6pdXGlTF1wDhhRRT2j1+gcJ
ueAbs240x74J/R2qdyVjHcRSxIJq9UMTo/PB5u2aosJhvfZbc/O0ojNcmLhj
JKKEjkyqsm4hGL1bHVio24pSZY+tU614oEARD8YllNru5MAaXGlRmNiGBgc6
G2NvN8ARiug9Z0vbO/UimJkqo1oo1oH2bbDj+aNGeEgR9Urk21MKk8Ggg//P
CcNc/MTba3n5aCpcF/iscb0uH6PKJvDxzYyHB4vCxYJXcXAv5YEB1aEN5cEX
qkPd8qsB5pnZsJci3um5MnbFzzTYPfNczvZXw/tzyPdRo3MGHA8+en5vHwd9
jq/U7B/NgLp0UGoQXwnqUh44UR0eozxYTHU47lf+tjWDeSBAERmBNLEn4llw
dfU+4cOri3H3rLaonfHZ4Jyu897UsgSdB4wed3xC4F/tczSosAyvUB4kUx06
UR4YUh0au7j02wpz4CBF7F40aeOYHTkQoKd+2DqhFB3kZXMTeLkQ1wwTbw+W
IaZtNuvpTob36z3HB/lUoh/lQR/VYSzlgRPVYXyAUvYhuWJIpIhiyrsNz13K
h48XFaJcN1Sg8ZL1Fg/HFkLtWGm9Z9cqcY3TXveTTalwecvDsMAzNZhFebCU
6rCa8uAg1eH0Nw1eW7aXwkyKuGzFznXdBYXw2V18MDS5Cr+vOsin9pQDYxfP
8Y/lr8EovTOJjVXpIKt5f3vg2nrsoTxYQXXIT3kwSHV4OtPRdMnRcjCliKnr
zLMDjhTBrDjBbR9Ua9Fl8y2XoRXFILV1fHfOML9YOv9GvTEnE/olUy9pj+EN
84GRPMikOlxGeeBGdZhRuUpZYPj3ZFNEY/XHe/V/FMOmsqGH5dn1KKkVOj8m
tQQk5a29P9tz0bfFfUzFcL8VSX/Ypn26ATdSHhyiOlxKeSBNdSjaVSvU7VkN
4hTx+57E5snOpbDqysVz3xfzMMU4N/LEMD5sSDXbPJTJw1lR4ZI6STkQLfd+
lnZRI8pTHvyiOlxPeZBFdWj9+3ZLwetasKWIzkfqLqQuLIet/zszk/9kA+47
3bt2fnc5aOseb5sg0IiulrgzNzYPnFcntmspNaMq5YEb1aEW5YEJ1WGpoGzC
69x6qKKIy835+KzeVsA+L5N3UyIasf/yjOziG5VwtNHYeYZmEwpsKrmwNaIA
Tiu9TdTya0EjygNZqsMjlAe/qA49XbvSNfq48JQipl9b7LJCswrMlhscmjO8
z11vr9l7979qsL6we5WoczNuvmWhyS0sBI0NsY5a44f3G+VBDtWhFeWBJ9Vh
xhxlmfWjGiCbIho7acxv4lbDrXe7xi+WacFlbvuaN0bUgDP/9qrlhS1o2/Z7
v0ju8Pwrv9qnZdqOdpQHR6gO71MeyFEd9gW6e0pPboR+itj/1DTyycVa8Ni+
9YXc+VZM8b9+4SvUgd8j5euK09swQfPuecPMIuBTfSmtVdqB7pQHQ1SHPpQH
2VSHC6Q7Ri+Y0wQLKeL/AZrM4GQ=
       "], {{{
          EdgeForm[], 
          Directive[
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Opacity[0.3], 
           RGBColor[0, 1, 0]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1: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
zv6TF5Gvk1+TH72Zg0dO/kTuPSZH267cnj7k7sQT8rYy9yF/q19Efk6eTr5J
bnxXjlyhj2lkDYt4fx/j77t7/jpFvF+R31VwfghPfUC+B00f7Il87z2vkbau
Xhfr62L7KbOO6IJOt+XQDz2Jr7z13i7Z6Slyb/Ic6hXqC/Kdd3Pk47TR550c
7fQjP2Nuxuhl/W43P877TV++odYgnx3v8Ri3UgoaGbkAuT7/BRD7d9UW7BP7
BY1ss3VnPeTD5AvI+JYx6ptv4PWxXsbs7fWQr1EPchacyZ1upx/9PzBNX/YA
/0N98aFwrRQYnrqjV4r/PqbkoJFNzlEvNSrCf6M/9XKpzxs57dRV1C/UqpNy
vF2e773g/47zvJ73c+iL3lVsL2/bBrCPUo/Pt4zBfyfUSIzd3/aGbIDXe4vv
D/eI9ztoZOTy5PQ325/gV/A3zMN8HW1z+GX8M/VaB+uGjtR2fa1LQ59VP+vy
hfVg/dxl7jS1BzXGRK93vO3hU8u6uZbf6r1kPUNMI2vi/aV2nJZDl4stp506
kHjB3nJGg7w/U8wjr5biLDlj+g72WIzZtIj8ilp4U47a+ALLaaduJf8t8xmi
Kzp/aRsgtlMzE+cZAxoZY31lOfkK//UQ6xnrIuvFeGXWj7ZvPCbrnWx+qMfb
nuM9nnf5a1L408p+H8O/Uqv+mKPWxB+/mKOebVdEvCX+1nH+SzxuZ7692+Fr
+P8Q8vc6/hZ6ntsYk1hPbUz85f+TWZ6ft+8VOXIR/tNZ53b6EQ+qOVYTm4kf
tNGH8ZmTPKKm62/m2JEj/yYPH5Piv41Xc9DIyMV/zpHbk69AIzsWm5Tsoxz1
DHVNH/EzzCOvl2IsxlyPD0jRRh9ycWog3vEaOv/vLdlr1ge9jk6xF/z/ssD6
0kYf+vLNJznqTfJv8nn+i1mT4+w4w9qem7PgTKCR/WR9Ps9RzxIPS1Pkgfy/
OTNHPjjTPHk++T396E+9S/yklj6giFr7aq+N/wvJ+Y/32MwxMEX9wFs+9TJ1
M+8Z0Lz5M9Z1pne6XyPiu8eb4f1kLuYkb0U/2ujTL0Wt/WmOehsa2Us5/m9b
K3xoinXX9v9vo1LYMvaAXZB/rnV/cq6ephljlGs7fBU5JW9R5NcrbJP8L9NC
stmeHz0aprCT+q73znEbfaiteBMgNyFH4b+cO7wu1kcbfV7x+WMH3J/1tqcl
vl/kstNz2B42uNb3d7vXy35Rvw73GTE3/1eP8vjUfdvtp/BPT+ewIXKwbm6j
D98yBrqgE/Umtey3Of4f5f/CESnmwmawlV1vIdgobysj3PaDbYbzm2d9Znu/
oJHxXxFvMfy/x/+V1E2dTFMr8d8wb0XUuSX+PxMZ+eTe/r8W/dd4PayrdYpv
GYNxqbeSc0Nqq1vt677P8d8A+Sk0Mvwg+SR13Z7+T436jrcr/rPjrYt4R52W
/b7FmK3MI2e+5t6TK3yfKlo3dEXn5R6fupJ6kv+Wt+X4r5l6k7q2gv8vp16g
fud95lLft2k+M+pwYtg2j8F31Nvkz9X8fyv2Pd02RMwiH+EtoZ7/7+WMN+Tg
kfN/AzQybBmbPtLjMS7+t6n1QS/sqarvHnMx59Ne87c+D9bKnlIvTfJ94v9n
6k58PHUn/+ffZb6c3zY464k+f2T04zyovcr7/+eu9l34NHwNPod6q7xrNOqN
8q7F2Mt7rDtrIH7yHvCU9Vnh+w2NDFvH5v8PtKYX4g==
             "]], 
            Polygon[CompressedData["
1:eJwtlHeIz2Ecx5/H4Y5zZpIkSZIkSUKyMjIyOmRkZGRkk5F59nb2dogSJUqU
KFGirDubs+e5c8dxx9le7z6fP96/17N+3+fz+Tzv56k7ckrq5FIhhJYoCc1A
KQzshqViCDNhAWwC82EV5hbQvky7GSyEc2EyzIDT0T+0C1Vg7TT4kbnG8Ays
xtgS2tdot4BFcBGsDA/43orhLP1GMA9OhTFaTLNRadp7YEXWzoKf6DeF56N9
W3voW1XoL4PfYWv4Dc6BlZjfCxM99kLP5XO03JSjcqngsRV5rF/hfFgO7lPM
rJsHv9BvDi9F+7b2uOA1K/Aalo225zSvi+rzF01CJ5lrCE/DZOYm0z5FuwHM
gRPgb7QT9UB/GFsDH6Oe6L72hfdgd/gArdZ/6HeDd2EKXAF/oPa058MEuBB2
gLc0jzqj22gl+slcJ5gFy8E02AX+gqu0H+qK7ihu/S9abIpxtY9pTmseBYt5
IipPjjvgDzQOHWNNfXgi2re1x1KYCDNhR+UQbM9eqhtja2F2sHxXeH5rYT/4
Eq0PMnAIfVUnxqvDzfAf6kM73Wum2qmGz9C6YH6Sr+SvhGh+PuP+PQcjc/1p
b5OXlRdMha/RhmB+kC/kj6Rofj3v/rwI28EbaDkqod8W3oRl5G2PTTEqlufB
vv3I93roZ6cz1FllBqtNptfqFuwNnwSrj+qkej3QvVV+MA1WJb79MMX9fMn9
e8X9It/IP/fdD2l+/svdD/KF/JEVLJ/ZHv+iaPVW3VX/F8HiWef7b4KjYSLz
W+FXNAa9ZbwefANHwc9oCyrLupGqLeN14WHtw9hw2gdp11KN4BCYr/NFg3Vu
rNkIPwSbe+5rn0Wb05o9tGuoVnAAzAn2H93Hn8H8KZ/Krx/8fuqeam/FoL0K
0Aj0ivE68h0cBvOUKyrNuqGqA+O1YYbqyNh42sc9Z+WuGnxH24Pdfb0Buut/
gr19ef4W5kb7r76htSXB3oYcfyvew4EqP/Pp+naw+7DZ/b8jWj1VV9X3U7B4
Mzy+Q3CsfMv8NlgU7DwOe/2PwsW6H9H8Ix/JT8X0W8Gr0fJV3so/Fw1COxmv
CfdF678LFp/iVLxPfV7rdLd0x3SX3gQ7myd+VtnR3oviYPEpTsX7zt8PvSPy
ljx2xM9EZ6Mz+hLMc7pvune6f9dRG3RD9xrO4uc/7pzfPg==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1:eJwt0k0omHEcwPEHO1ixdlAcHCgHh7WsHLyLkpLSlhYpLVpJobQakRKSJEmS
pLWWpCVJkuwF8/5y2A4ctgOHOXDYDpY44PNkh8//+/tfnuf5/3uSa5peNEYE
QTBAiyGcDyy5uk9PuCef7/TygyIO6eOIEn7Szy/KOP7/3BPK+c0gp1RyxhDn
VPOHYf5SywUj/KOOK0a5poEbxrilmSjfPa4P9K1G64Q+1HaN1Xf6SDt1WzM1
LzIIKsy7ZIVnta8075Ntf6nd+okc9uhimQx26WCJdHZoZZG08D28YYEnbNHE
PKlsUs8cKWzwmlmSWOcVMyTyjSo+ksAaL5kmjlWeM8VjVihlkhi+UsyH8I74
QiHvw7vjMwXhmZw7SuPdxzNzG5HhOyxPI+7/lzsvIkoC
           "]]}}}]}, {
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImagePadding -> 1.1, 
      Method -> {
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
        "AxesInFront" -> True}, PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Unevaluated[
     Unevaluated[
      Unevaluated[{
        Placed[
        "\!\(\*FormBox[TagBox[GridBox[{{\"\\\"\[Theta] -> \
\[Delta]\[Theta]\\\"\"}, {\"\\\"a -> b\\\"\"}, {\"\\\"b -> a\\\"\"}}, \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\"Columns\", \
List[List[Automatic]]], Rule[\"Rows\", List[List[Automatic]]]]]], \"Grid\"], \
TraditionalForm]\)", {0.7121320343559643, 0.2878679656440358}, Identity], 
        Placed[Rational[3, 2] Pi, {
          ImageScaled[{0.5, 0.09999999999999998}], {0.5, 1.}}, 
         Identity]}]]]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.659161937874318*^9, 3.659161988334276*^9, 
  3.6591933360047827`*^9, 3.659198834821389*^9}]
}, Open  ]],

Cell[BoxData["piecew"], "Input",
 CellChangeTimes->{{3.65916145906035*^9, 3.659161461663975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", "=", "0.2"}], ",", 
     RowBox[{"x0", "=", "2"}], ",", 
     RowBox[{"y0", "=", "3"}], ",", 
     RowBox[{"a", "=", "3"}], ",", 
     RowBox[{"b", "=", "2"}], ",", "aa", ",", "bb", ",", "at", ",", "bt", ",", 
     RowBox[{"gfxSz", "=", "500"}]}], "}"}], ",", "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", 
       RowBox[{"Quotient", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], "]"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"aa", "=", "b"}], ";", 
       RowBox[{"bb", "=", "a"}], ";", 
       RowBox[{"at", "=", "\"\<b\>\""}], ";", 
       RowBox[{"bt", "=", "\"\<a\>\""}], ";"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"aa", "=", "a"}], ";", 
       RowBox[{"bb", "=", "b"}], ";", 
       RowBox[{"at", "=", "\"\<a\>\""}], ";", 
       RowBox[{"bt", "=", "\"\<b\>\""}], ";"}]}], "]"}], ";", "\n", 
    RowBox[{"\[CapitalTheta]", "=", 
     RowBox[{
      RowBox[{"Quotient", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], 
      RowBox[{"Pi", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Delta]\[Theta]", "=", 
     RowBox[{"Mod", "[", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ellipseBoundingPoints", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x0", ",", "y0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"aa", ",", "bb"}], "}"}], ",", "\[Delta]\[Theta]"}], "}"}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ellipseBoundingBox", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x0", ",", "y0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"aa", ",", "bb"}], "}"}], ",", "\[Delta]\[Theta]"}], "}"}],
         "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6592001826384993`*^9, 3.6592001862515297`*^9}, {
  3.659200216387933*^9, 3.659200222929337*^9}, {3.659200478431332*^9, 
  3.6592004897022247`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.475191811812298`", ",", "5.048742910907269`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.524808188187702`", ",", "0.9512570890927314`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.966926437410812`"}], ",", "2.671867207930769`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.966926437410812`", ",", "3.328132792069231`"}], "}"}]}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.659200152057811*^9, 3.659200187360937*^9, 
  3.659200223579905*^9, 3.659200490692728*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"EllipticalBoundsFig", "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x0", "=", "2"}], ",", 
        RowBox[{"y0", "=", "3"}], ",", 
        RowBox[{"a", "=", "30"}], ",", 
        RowBox[{"b", "=", "20"}], ",", "aa", ",", "bb", ",", "at", ",", "bt", 
        ",", 
        RowBox[{"gfxSz", "=", "500"}]}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", 
          RowBox[{"Quotient", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "2"}]}], "]"}], "]"}], ",", "\n", "  ", 
         RowBox[{
          RowBox[{"aa", "=", "b"}], ";", 
          RowBox[{"bb", "=", "a"}], ";", 
          RowBox[{"at", "=", "\"\<b\>\""}], ";", 
          RowBox[{"bt", "=", "\"\<a\>\""}], ";"}], ",", "\n", "  ", 
         RowBox[{
          RowBox[{"aa", "=", "a"}], ";", 
          RowBox[{"bb", "=", "b"}], ";", 
          RowBox[{"at", "=", "\"\<a\>\""}], ";", 
          RowBox[{"bt", "=", "\"\<b\>\""}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"\[CapitalTheta]", "=", 
        RowBox[{
         RowBox[{"Quotient", "[", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"Pi", "/", "2"}]}], "]"}], 
         RowBox[{"Pi", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Delta]\[Theta]", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bBox", "=", 
        RowBox[{"ellipseBoundingBox", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"aa", ",", "bb"}], "}"}], ",", "\[Delta]\[Theta]"}], 
          "}"}], "]"}]}], ";", "\n", 
       RowBox[{"imgSz", "=", 
        RowBox[{"ImageDimensions", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
             RowBox[{"FaceForm", "[", "None", "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"Transpose", "[", "bBox", "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "gfxSz"}]}], "]"}], "]"}]}], ";", 
       "\n", 
       RowBox[{"imgPltRng", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "]"}], "&"}], ",", 
          RowBox[{"plotRange", "[", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
               RowBox[{"FaceForm", "[", "None", "]"}], ",", 
               RowBox[{"Rectangle", "[", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Transpose", "[", "bBox", "]"}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "gfxSz"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"ebp", "=", 
        RowBox[{"ellipseBoundingPoints", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"aa", ",", "bb"}], "}"}], ",", "\[Delta]\[Theta]"}], 
          "}"}], "]"}]}], ";", "\n", 
       RowBox[{"tebp", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"11", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x0", ",", "y0"}], "}"}], " ", "-", " ", "#"}], 
                ")"}], "/", "12"}]}], "+", 
             RowBox[{"{", 
              RowBox[{"x0", ",", "y0"}], "}"}]}], ")"}], "&"}], ",", "ebp"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", "\n", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "-", 
                    RowBox[{"bb", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "+", 
                    RowBox[{"bb", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}]}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "-", 
                    RowBox[{"aa", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Delta]\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Delta]\[Theta]", "]"}]}], 
                    "}"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "+", 
                    RowBox[{"aa", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Delta]\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Delta]\[Theta]", "]"}]}], 
                    "}"}]}]}]}], "}"}], "]"}]}], "}"}], ",", "\n", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"x0", ",", "y0"}], "}"}], "]"}], ",", "\n", "  ", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<(x0,y0)\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x0", "+", "0.1"}], ",", 
                    RowBox[{"y0", "-", "0.1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                  RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                "\n", "  ", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<b\>\"", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "+", "0.1"}], ",", "y0"}], "}"}], "+", 
                   RowBox[{
                    RowBox[{"bb", "/", "2"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Delta]\[Theta]", "+", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\n", "  ", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<a\>\"", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "-", 
                   RowBox[{
                    RowBox[{"aa", "/", "2"}], " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Delta]\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Delta]\[Theta]", "]"}]}], 
                    "}"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], 
              ",", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                RowBox[{"ellipse", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"aa", ",", "bb"}], "}"}], ",", 
                   "\[Delta]\[Theta]"}], "}"}], "]"}]}], "}"}], ",", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
                RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"Transpose", "[", "bBox", "]"}]}], "]"}]}], "}"}], 
              ",", "\n", 
              RowBox[{"{", 
               RowBox[{"Orange", ",", 
                RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                RowBox[{"Point", "[", "ebp", "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    StyleBox[
                    SubscriptBox[
                    StyleBox["E",
                    FontSize->10], "i"],
                    FontSize->10], ",", 
                    RowBox[{"tebp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "}"}],
               ",", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Delta]\[Theta]", ">", "0"}], ",", 
                RowBox[{"angleSymbol", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x0", ",", "y0"}], "}"}], ",", 
                  "\"\<\[Delta]\[Theta]\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\[Delta]\[Theta]"}], "}"}], ",", 
                  "Green", ",", "imgSz", ",", "imgPltRng"}], "]"}]}], "]"}]}],
              "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "gfxSz"}]}], "]"}], ",", "\n", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Theta] = \>\"", ",", "\[CapitalTheta]", ",", "\"\< + \>\"",
              ",", "\[Delta]\[Theta]"}], "}"}], "]"}], ",", "\n", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Theta] -> \>\"", ",", "\[Delta]\[Theta]"}], "}"}], 
           "]"}], ",", "\n", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<a -> \>\"", ",", "at"}], "}"}], "]"}], ",", "\n", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<b -> \>\"", ",", "bt"}], "}"}], "]"}]}], "\n", "}"}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0.2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "Pi"}], ",", " ", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.658642017642272*^9, 3.6586420409486437`*^9}, {
   3.658642248482767*^9, 3.658642362442567*^9}, {3.658642503714367*^9, 
   3.658642506465004*^9}, 3.658642551905423*^9, {3.6586453751320753`*^9, 
   3.658645388651311*^9}, {3.65864552240771*^9, 3.658645554546311*^9}, {
   3.658645679808135*^9, 3.6586456890813713`*^9}, {3.658684559075248*^9, 
   3.65868456872202*^9}, {3.658686476324561*^9, 3.658686517227944*^9}, {
   3.658686763228354*^9, 3.6586868191950483`*^9}, {3.658686875295334*^9, 
   3.658686902572728*^9}, {3.658687263008761*^9, 3.65868732950876*^9}, {
   3.658687362082717*^9, 3.6586873897612457`*^9}, 3.658687427858635*^9, {
   3.6586875614286547`*^9, 3.658687586889575*^9}, 3.658689141505354*^9, {
   3.658689468914757*^9, 3.658689513728691*^9}, {3.658689547047577*^9, 
   3.658689733047358*^9}, {3.658689782704296*^9, 3.658689788438222*^9}, {
   3.658690802809807*^9, 3.658690875630332*^9}, {3.658690965786474*^9, 
   3.658690979071753*^9}, {3.6586912296393223`*^9, 3.658691244854939*^9}, {
   3.658691320914296*^9, 3.658691347488761*^9}, {3.6586913798965054`*^9, 
   3.6586914010152283`*^9}, {3.6586914400234823`*^9, 3.658691441084055*^9}, {
   3.65872875584037*^9, 3.6587288211226597`*^9}, {3.658729404806551*^9, 
   3.658729433378834*^9}, {3.658729834047845*^9, 3.658729950254384*^9}, {
   3.65873027419755*^9, 3.658730283457819*^9}, {3.6587603497260227`*^9, 
   3.6587603869401207`*^9}, {3.658761590365309*^9, 3.6587615955495663`*^9}, {
   3.658761628191661*^9, 3.658761640614479*^9}, {3.6587617959258966`*^9, 
   3.65876180201429*^9}, {3.6587618864152*^9, 3.658761929119237*^9}, {
   3.6587620053547783`*^9, 3.6587620067789173`*^9}, {3.658765120414106*^9, 
   3.65876512073302*^9}, {3.658766075602295*^9, 3.65876619309046*^9}, {
   3.6587662413717422`*^9, 3.658766242531343*^9}, {3.658769375011012*^9, 
   3.65876937854567*^9}, {3.658771380458268*^9, 3.6587713853854094`*^9}, {
   3.658771427510983*^9, 3.658771478724783*^9}, {3.658771600611463*^9, 
   3.658771666632935*^9}, {3.658771773238618*^9, 3.6587717772706614`*^9}, {
   3.658771878326264*^9, 3.658771882316551*^9}, {3.658771989141597*^9, 
   3.658772000649394*^9}, {3.658772099284738*^9, 3.658772099425907*^9}, {
   3.658773184612599*^9, 3.658773199288677*^9}, {3.658773239673455*^9, 
   3.658773308084553*^9}, {3.658776704748843*^9, 3.658776722782833*^9}, {
   3.658776768496766*^9, 3.658776797310855*^9}, {3.658812014788813*^9, 
   3.658812049037867*^9}, {3.658815425836529*^9, 3.6588154601837997`*^9}, {
   3.658815514761882*^9, 3.658815518863965*^9}, {3.658823878894182*^9, 
   3.658823892259837*^9}, {3.658832694542307*^9, 3.658832782649633*^9}, {
   3.6588330574022913`*^9, 3.658833113576826*^9}, {3.658833157983597*^9, 
   3.658833237373513*^9}, {3.658833292963126*^9, 3.6588333062032347`*^9}, {
   3.6588348620486097`*^9, 3.658834920682324*^9}, {3.658835025921743*^9, 
   3.658835035937892*^9}, {3.6588356406528482`*^9, 3.658835659475477*^9}, {
   3.65883600028592*^9, 3.658836014619905*^9}, {3.659156072925167*^9, 
   3.659156229337558*^9}, {3.659156261528528*^9, 3.6591563436479483`*^9}, {
   3.6592005558619328`*^9, 3.659200558582418*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 1.2063715789784801`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 0.2}, (-2) Pi, 2 Pi}}, 
    Typeset`size$$ = {500., {356.634033203125, 362.365966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$58492$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$58492$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`EllipticalBoundsFig = 
       Block[{$CellContext`x0 = 2, $CellContext`y0 = 3, $CellContext`a = 
          30, $CellContext`b = 
          20, $CellContext`aa, $CellContext`bb, $CellContext`at, \
$CellContext`bt, $CellContext`gfxSz = 500}, If[
           OddQ[
            
            Quotient[$CellContext`\[Theta]$$, Pi/
             2]], $CellContext`aa = $CellContext`b; $CellContext`bb = \
$CellContext`a; $CellContext`at = "b"; $CellContext`bt = "a"; 
           Null, $CellContext`aa = $CellContext`a; $CellContext`bb = \
$CellContext`b; $CellContext`at = "a"; $CellContext`bt = "b"; 
           Null]; $CellContext`\[CapitalTheta] = 
          Quotient[$CellContext`\[Theta]$$, Pi/2] (Pi/
            2); $CellContext`\[Delta]\[Theta] = 
          Mod[$CellContext`\[Theta]$$, Pi/
            2]; $CellContext`bBox = \
$CellContext`ellipseBoundingBox[{{$CellContext`x0, $CellContext`y0}, \
{$CellContext`aa, $CellContext`bb}, $CellContext`\[Delta]\[Theta]}]; \
$CellContext`imgSz = ImageDimensions[
            Graphics[{
              EdgeForm[Red], 
              FaceForm[None], 
              Rectangle[
               Apply[Sequence, 
                Transpose[$CellContext`bBox]]]}, 
             ImageSize -> $CellContext`gfxSz]]; $CellContext`imgPltRng = 
          Map[Abs[Part[#, 2] - Part[#, 1]]& , 
            $CellContext`plotRange[
             Graphics[{
               EdgeForm[Red], 
               FaceForm[None], 
               Rectangle[
                Apply[Sequence, 
                 Transpose[$CellContext`bBox]]]}, 
              ImageSize -> $CellContext`gfxSz]]]; $CellContext`ebp = \
$CellContext`ellipseBoundingPoints[{{$CellContext`x0, $CellContext`y0}, \
{$CellContext`aa, $CellContext`bb}, $CellContext`\[Delta]\[Theta]}]; \
$CellContext`tebp = 
          Map[11 (({$CellContext`x0, $CellContext`y0} - #)/
              12) + {$CellContext`x0, $CellContext`y0}& , $CellContext`ebp]; 
         Column[{
            Graphics[{{Dashed, 
               Line[{{$CellContext`x0, $CellContext`y0} - $CellContext`bb {
                   Cos[$CellContext`\[Delta]\[Theta] + Pi/2], 
                   
                   Sin[$CellContext`\[Delta]\[Theta] + 
                    Pi/2]}, {$CellContext`x0, $CellContext`y0} + \
$CellContext`bb {
                    Cos[$CellContext`\[Delta]\[Theta] + Pi/2], 
                    Sin[$CellContext`\[Delta]\[Theta] + Pi/2]}}], 
               Line[{{$CellContext`x0, $CellContext`y0} - $CellContext`aa {
                   Cos[$CellContext`\[Delta]\[Theta]], 
                   
                   Sin[$CellContext`\[Delta]\[Theta]]}, {$CellContext`x0, \
$CellContext`y0} + $CellContext`aa {
                    Cos[$CellContext`\[Delta]\[Theta]], 
                    Sin[$CellContext`\[Delta]\[Theta]]}}]}, {Black, 
               PointSize[Large], 
               Point[{$CellContext`x0, $CellContext`y0}], 
               Text[
               "(x0,y0)", {$CellContext`x0 + 0.1, $CellContext`y0 - 0.1}, {-1,
                 1}, Background -> White], 
               Text[
               "b", {$CellContext`x0 + 
                  0.1, $CellContext`y0} + ($CellContext`bb/2) {
                   Cos[$CellContext`\[Delta]\[Theta] + Pi/2], 
                   Sin[$CellContext`\[Delta]\[Theta] + Pi/2]}, {-1, -1}], 
               Text[
               "a", {$CellContext`x0, $CellContext`y0} - ($CellContext`aa/2) {
                 
                  Cos[$CellContext`\[Delta]\[Theta]], 
                  Sin[$CellContext`\[Delta]\[Theta]]}, {-1, 1}]}, {
               EdgeForm[Black], 
               FaceForm[None], 
               $CellContext`ellipse[{{$CellContext`x0, $CellContext`y0}, \
{$CellContext`aa, $CellContext`bb}, $CellContext`\[Delta]\[Theta]}]}, {
               EdgeForm[Red], 
               FaceForm[None], 
               Rectangle[
                Apply[Sequence, 
                 Transpose[$CellContext`bBox]]]}, {Orange, 
               PointSize[Large], 
               Point[$CellContext`ebp], 
               Table[{
                 Text[
                  Subscript[E, $CellContext`i], 
                  Part[$CellContext`tebp, $CellContext`i]]}, {$CellContext`i, 
                 1, 4}]}, 
              If[$CellContext`\[Delta]\[Theta] > 0, 
               $CellContext`angleSymbol[{$CellContext`x0, $CellContext`y0}, 
                "\[Delta]\[Theta]", {0, $CellContext`\[Delta]\[Theta]}, 
                Green, $CellContext`imgSz, $CellContext`imgPltRng]]}, 
             ImageSize -> $CellContext`gfxSz], 
            
            Row[{"\[Theta] = ", $CellContext`\[CapitalTheta], 
              " + ", $CellContext`\[Delta]\[Theta]}], 
            Row[{"\[Theta] -> ", $CellContext`\[Delta]\[Theta]}], 
            Row[{"a -> ", $CellContext`at}], 
            Row[{"b -> ", $CellContext`bt}]}]]), 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 0.2}, (-2) Pi, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{545., {402., 407.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.659156281207243*^9, 3.6591563495201683`*^9, 
  3.6591998690899343`*^9, 3.65919992440924*^9, 3.659200064460841*^9, 
  3.6592005592741117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "figPath", "<>", "\"\<Elliptical_Bounds\>\"", "<>", "\"\<.jpg\>\""}], ",", 
   "EllipticalBoundsFig", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageFormattingWidth", "\[Rule]", "Infinity"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.6588239144179907`*^9, 3.658823925663793*^9}}],

Cell[BoxData["\<\"/Users/jaspershemilt/Developer/projects/Color-Space-WriteUp/\
WriteUp/Dissertation/Chapter4/Figs/Elliptical_Bounds.jpg\"\>"], "Output",
 CellChangeTimes->{3.658823931810788*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellipseBoundingPoints", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "\[Theta]"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}], ",", 
     RowBox[{"y0", "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x0", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}], ",", 
     RowBox[{"y0", "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x0", "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], ",", 
     RowBox[{"y0", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], ",", 
     RowBox[{"y0", "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]}]]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.65876604364462*^9, 3.6588239734335318`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ellipseBoundingBox", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0_", ",", "y0_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], ",", "\[Theta]_"}], "}"}], "}"}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["b", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}], 
      SuperscriptBox["a", "2"]]}]], "==", 
   RowBox[{
    FractionBox["1", "a"], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{
       SuperscriptBox["b", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.658596920655241*^9, 3.658596936956931*^9}, {
  3.658597092829547*^9, 3.658597105164257*^9}, {3.658598192330258*^9, 
  3.6585982817940683`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "useq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The answer found by Reduce contains unsolved equation(s) \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"0\\\", \\\"\[Equal]\
\\\", FractionBox[RowBox[{RowBox[{\\\"-\\\", \
SqrtBox[RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\
\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}]]}], \\\"-\\\", RowBox[{\\\"a\\\", \\\" \
\\\", SqrtBox[RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]]}]}], \\\"a\\\"]}], \
\\\",\\\", RowBox[{\\\"0\\\", \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
SqrtBox[RowBox[{SuperscriptBox[\\\"a\\\", \\\"2\\\"], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}]]}], \\\"+\\\", RowBox[{\\\"a\\\", \
\\\" \\\", SqrtBox[FractionBox[RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
SuperscriptBox[\\\"a\\\", \\\"2\\\"]]]}]}]}], \\\",\\\", RowBox[{\\\"0\\\", \
\\\"\[Equal]\\\", \
FractionBox[RowBox[{SqrtBox[RowBox[{SuperscriptBox[\\\"a\\\", \\\"2\\\"], \
\\\"+\\\", RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}]], \\\"-\\\", \
RowBox[{\\\"a\\\", \\\" \\\", SqrtBox[RowBox[{RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]]}]}], \\\"a\\\"]}], \\\",\\\", RowBox[{\\\"0\\\", \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
SqrtBox[RowBox[{SuperscriptBox[\\\"a\\\", \\\"2\\\"], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}]]}], \\\"+\\\", RowBox[{\\\"a\\\", \
\\\" \\\", SqrtBox[FractionBox[RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
SuperscriptBox[\\\"a\\\", \\\"2\\\"]]]}]}]}]}], \\\"}\\\"}]\\)\[NoBreak]. A \
likely reason for this is that the solution set depends on branch cuts of \
Wolfram Language functions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Reduce\\\", ButtonNote -> \\\"Reduce::useq\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658598282365707*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"0", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
       RowBox[{"a", " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}], 
          SuperscriptBox["a", "2"]]]}]}], "a"]}], "&&", 
    RowBox[{"0", "\[Equal]", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}]]}], "+", 
      RowBox[{"a", " ", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}], 
         SuperscriptBox["a", "2"]]]}]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"0", "\[Equal]", 
     FractionBox[
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
       RowBox[{"a", " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}], 
          SuperscriptBox["a", "2"]]]}]}], "a"]}], "&&", 
    RowBox[{"0", "\[Equal]", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}]]}], "+", 
      RowBox[{"a", " ", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}]}], 
         SuperscriptBox["a", "2"]]]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.658596917406541*^9, 3.658596937731969*^9}, 
   3.658597106076593*^9, {3.658598258449782*^9, 3.658598282376834*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalTheta]", ",", "\[Delta]\[Theta]"}], "}"}], ",", "\n", 
     
     RowBox[{
      RowBox[{"\[CapitalTheta]", "=", 
       RowBox[{
        RowBox[{"Quotient", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], 
        RowBox[{"Pi", "/", "2"}]}]}], ";", " ", 
      RowBox[{"\[Delta]\[Theta]", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta] = \>\"", ",", "\[CapitalTheta]", ",", "\"\< + \>\"", 
         ",", "\[Delta]\[Theta]"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0.2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658832895658978*^9, 3.6588329289738073`*^9}, {
  3.658832988549427*^9, 3.6588330002486258`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 4.9260172808287965`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 0.2}, (-2) Pi, 2 Pi}}, 
    Typeset`size$$ = {141.68076171875, {10.45797815322876, 18.6741943359375}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$11366$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$11366$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`\[CapitalTheta], $CellContext`\[Delta]\[Theta]}, \
$CellContext`\[CapitalTheta] = 
         Quotient[$CellContext`\[Theta]$$, Pi/2] (Pi/
           2); $CellContext`\[Delta]\[Theta] = 
         Mod[$CellContext`\[Theta]$$, Pi/2]; 
        Row[{"\[Theta] = ", $CellContext`\[CapitalTheta], 
           " + ", $CellContext`\[Delta]\[Theta]}]], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 0.2}, (-2) Pi, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{247., {57., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.658832930637578*^9, 3.65883300870439*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"\[CapitalTheta]", "=", 
  RowBox[{
   RowBox[{"Quotient", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"Pi", "/", "2"}]}], "]"}], 
   RowBox[{"Pi", "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[Theta]", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{"\[Theta]", ",", 
    RowBox[{"Pi", "/", "2"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.658832496980929*^9, 3.658832571210011*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1236, 805},
WindowMargins->{{63, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[700, 27, 108, 1, 64, "Section"],
Cell[811, 30, 782, 19, 127, "Text"],
Cell[CellGroupData[{
Cell[1618, 53, 464, 14, 28, "Input"],
Cell[2085, 69, 429, 14, 51, "Output"]
}, Open  ]],
Cell[2529, 86, 275, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[2829, 95, 425, 12, 28, "Input"],
Cell[3257, 109, 353, 10, 32, "Output"]
}, Open  ]],
Cell[3625, 122, 160, 2, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3822, 129, 167, 3, 64, "Section"],
Cell[3992, 134, 103, 1, 30, "Text"],
Cell[4098, 137, 155, 6, 68, "Text"],
Cell[4256, 145, 163, 2, 30, "Text"],
Cell[4422, 149, 127, 6, 68, "Text"],
Cell[4552, 157, 147, 2, 30, "Text"],
Cell[4702, 161, 190, 7, 87, "Text"],
Cell[4895, 170, 182, 4, 30, "Text"],
Cell[5080, 176, 188, 7, 87, "Text"],
Cell[5271, 185, 161, 2, 30, "Text"],
Cell[5435, 189, 139, 2, 30, "Text"],
Cell[5577, 193, 200, 10, 144, "Text"],
Cell[5780, 205, 135, 1, 30, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[5952, 211, 145, 1, 50, "Section"],
Cell[6100, 214, 1441, 40, 165, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[7578, 259, 161, 3, 50, "Section"],
Cell[7742, 264, 1131, 30, 165, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[8910, 299, 162, 3, 50, "Section"],
Cell[9075, 304, 5559, 135, 675, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[14671, 444, 166, 3, 50, "Section"],
Cell[14840, 449, 372, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[15237, 461, 586, 15, 28, "Input"],
Cell[15826, 478, 1302, 32, 47, "Output"]
}, Open  ]],
Cell[17143, 513, 163, 3, 30, "Text"],
Cell[17309, 518, 955, 30, 70, "Input"],
Cell[CellGroupData[{
Cell[18289, 552, 1309, 40, 46, "Input"],
Cell[19601, 594, 805, 24, 51, "Output"],
Cell[20409, 620, 1045, 32, 51, "Output"]
}, Open  ]],
Cell[21469, 655, 255, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[21749, 664, 566, 18, 46, "Input"],
Cell[22318, 684, 4080, 113, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26435, 802, 1484, 43, 63, "Input"],
Cell[27922, 847, 4983, 115, 69, "Output"]
}, Open  ]],
Cell[32920, 965, 139, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[33084, 970, 554, 15, 28, "Input"],
Cell[33641, 987, 4963, 114, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38641, 1106, 1053, 28, 28, "Input"],
Cell[39697, 1136, 5128, 127, 127, "Output"]
}, Open  ]],
Cell[44840, 1266, 3909, 113, 216, "Input"],
Cell[48752, 1381, 170, 4, 49, "Text"],
Cell[48925, 1387, 5397, 133, 194, "Code"],
Cell[54325, 1522, 1987, 64, 148, "Input"],
Cell[CellGroupData[{
Cell[56337, 1590, 1769, 52, 97, "Input"],
Cell[58109, 1644, 547, 12, 32, "Output"],
Cell[58659, 1658, 1000, 24, 84, "Output"],
Cell[59662, 1684, 629, 13, 32, "Output"],
Cell[60294, 1699, 1236, 28, 84, "Output"],
Cell[61533, 1729, 30856, 520, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92426, 2254, 193, 6, 28, "Input"],
Cell[92622, 2262, 999, 28, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93658, 2295, 120, 1, 44, "Subsection"],
Cell[93781, 2298, 90, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[93896, 2303, 507, 14, 28, "Input"],
Cell[94406, 2319, 375, 10, 32, "Output"]
}, Open  ]],
Cell[94796, 2332, 93, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[94914, 2337, 143, 3, 28, "Input"],
Cell[95060, 2342, 197, 5, 28, "Output"]
}, Open  ]],
Cell[95272, 2350, 212, 5, 28, "Input"],
Cell[95487, 2357, 94, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[95606, 2362, 77, 2, 28, "Input"],
Cell[95686, 2366, 197, 5, 28, "Output"]
}, Open  ]],
Cell[95898, 2374, 146, 4, 28, "Input"],
Cell[96047, 2380, 315, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[96387, 2391, 69, 1, 28, "Input"],
Cell[96459, 2394, 353, 10, 32, "Output"]
}, Open  ]],
Cell[96827, 2407, 92, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[96944, 2412, 391, 11, 46, "Input"],
Cell[97338, 2425, 284, 9, 50, "Output"],
Cell[97625, 2436, 298, 9, 49, "Output"]
}, Open  ]],
Cell[97938, 2448, 95, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[98058, 2453, 792, 22, 46, "Input"],
Cell[98853, 2477, 932, 28, 54, "Output"],
Cell[99788, 2507, 664, 20, 54, "Output"]
}, Open  ]],
Cell[100467, 2530, 116, 2, 28, "Input"],
Cell[100586, 2534, 15607, 450, 1635, "Input"],
Cell[CellGroupData[{
Cell[116218, 2988, 709, 21, 28, "Input"],
Cell[116930, 3011, 3572, 115, 116, "Output"]
}, Open  ]],
Cell[120517, 3129, 459, 13, 63, "Input"],
Cell[CellGroupData[{
Cell[121001, 3146, 887, 25, 28, "Input"],
Cell[121891, 3173, 2066, 60, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123994, 3238, 435, 12, 63, "Input"],
Cell[124432, 3252, 352, 9, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124821, 3266, 1534, 38, 63, "Input"],
Cell[126358, 3306, 168971, 2842, 692, "Output"]
}, Open  ]],
Cell[295344, 6151, 97, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[295466, 6156, 2320, 60, 199, "Input"],
Cell[297789, 6218, 1025, 31, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298851, 6254, 15376, 340, 473, "Code"],
Cell[314230, 6596, 6624, 135, 826, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320891, 6736, 377, 9, 28, "Input"],
Cell[321271, 6747, 195, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321503, 6754, 242, 7, 28, "Input"],
Cell[321748, 6763, 3485, 113, 111, "Output"]
}, Open  ]],
Cell[325248, 6879, 276, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[325549, 6892, 712, 23, 70, "Input"],
Cell[326264, 6917, 3621, 54, 148, "Message"],
Cell[329888, 6973, 2853, 90, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332778, 7068, 1159, 33, 80, "Input"],
Cell[333940, 7103, 2056, 40, 136, "Output"]
}, Open  ]],
Cell[336011, 7146, 421, 11, 46, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
