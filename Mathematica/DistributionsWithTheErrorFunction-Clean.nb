(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1612235,      37792]
NotebookOptionsPosition[   1594273,      37292]
NotebookOutlinePosition[   1594753,      37311]
CellTagsIndexPosition[   1594710,      37308]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", " ", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ColorSpacePackage`"}]}], "Input",
 CellChangeTimes->{{3.6209621415019417`*^9, 3.620962165664956*^9}, 
   3.628970254131633*^9}],

Cell[CellGroupData[{

Cell["Init", "Section",
 CellChangeTimes->{{3.6200159882945127`*^9, 3.620015995105857*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"togButton", "[", "var_", "]"}], ":=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"var", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"show", "[", "var", "]"}], ",", 
         RowBox[{"Directive", "[", " ", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Bold"}], "]"}], ",", 
         " ", "Black"}], "]"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"show", "[", "var", "]"}], " ", "=", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"show", "[", "var", "]"}], ",", "False", ",", "True", ",", 
       "True"}], "]"}]}], ",", " ", 
    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", "\n", "    ", 
    RowBox[{"Evaluator", " ", "->", " ", "Automatic"}], ",", " ", 
    RowBox[{"Method", " ", "->", " ", "\"\<Preemptive\>\""}], ",", " ", 
    RowBox[{"ContentPadding", " ", "\[Rule]", " ", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"togButton", "[", 
   RowBox[{"var_", ",", "txt_"}], "]"}], ":=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"txt", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"show", "[", "var", "]"}], ",", 
         RowBox[{"Directive", "[", " ", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Bold"}], "]"}], ",", 
         " ", "Black"}], "]"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"show", "[", "var", "]"}], " ", "=", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"show", "[", "var", "]"}], ",", "False", ",", "True", ",", 
       "True"}], "]"}]}], ",", " ", 
    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", "\n", "    ", 
    RowBox[{"Evaluator", " ", "->", " ", "Automatic"}], ",", " ", 
    RowBox[{"Method", " ", "->", " ", "\"\<Preemptive\>\""}], ",", " ", 
    RowBox[{"ContentPadding", " ", "\[Rule]", " ", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUnitButton", "=", 
   RowBox[{"Button", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<0-1\>\"", ",", "Bold", ",", "Small"}], "]"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"show", "[", "\"\<\[Mu]\>\"", "]"}], "=", "True"}], ";", "  ", 
      
      RowBox[{
       RowBox[{"show", "[", "\"\<\[Sigma]\>\"", "]"}], "=", "True"}], ";", 
      "   ", 
      RowBox[{
       RowBox[{"show", "[", "\"\<\[Gamma]\>\"", "]"}], "=", "True"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"show", "[", "\"\<c\>\"", "]"}], "=", "False"}], ";", 
      RowBox[{
       RowBox[{"show", "[", "\"\<s\>\"", "]"}], "=", "False"}], ";", 
      RowBox[{
       RowBox[{"show", "[", "\"\<g\>\"", "]"}], "=", "False"}], ";"}], ",", 
     " ", 
     RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", "\n", "    ", 
     RowBox[{"Evaluator", " ", "->", " ", "Automatic"}], ",", " ", 
     RowBox[{"Method", " ", "->", " ", "\"\<Preemptive\>\""}], ",", " ", 
     RowBox[{"ContentPadding", " ", "\[Rule]", " ", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setRangeButton", "[", 
   RowBox[{"min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "min", "]"}], ",", "\"\< - \>\"", ",", 
        RowBox[{"ToString", "[", "max", "]"}]}], "]"}], ",", "Bold", ",", 
      "Small"}], "]"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"show", "[", "\"\<\[Mu]\>\"", "]"}], "=", "False"}], ";", 
     RowBox[{
      RowBox[{"show", "[", "\"\<\[Sigma]\>\"", "]"}], "=", "False"}], ";", 
     " ", 
     RowBox[{
      RowBox[{"show", "[", "\"\<\[Gamma]\>\"", "]"}], "=", "False"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"show", "[", "\"\<c\>\"", "]"}], "=", "True"}], ";", "  ", 
     RowBox[{
      RowBox[{"show", "[", "\"\<s\>\"", "]"}], "=", "True"}], ";", "    ", 
     RowBox[{
      RowBox[{"show", "[", "\"\<g\>\"", "]"}], "=", "True"}], ";"}], ",", " ", 
    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", "\n", "    ", 
    RowBox[{"Evaluator", " ", "->", " ", "Automatic"}], ",", " ", 
    RowBox[{"Method", " ", "->", " ", "\"\<Preemptive\>\""}], ",", " ", 
    RowBox[{"ContentPadding", " ", "\[Rule]", " ", "True"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.62002543873173*^9, 3.620025471375963*^9}, {
  3.6200255074393797`*^9, 3.6200255333935633`*^9}, {3.620025642068771*^9, 
  3.620025672797632*^9}, {3.6200257112366133`*^9, 3.620025734365696*^9}, {
  3.6200257927582903`*^9, 3.620025814868354*^9}, {3.6200258703331347`*^9, 
  3.620025945037499*^9}, {3.620026216923874*^9, 3.62002621816391*^9}, {
  3.620031145474372*^9, 3.620031159194332*^9}, {3.620031993730823*^9, 
  3.620032003078988*^9}, {3.6200321052524967`*^9, 3.620032116507468*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "pointToUnit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointToUnit", "[", 
   RowBox[{
    RowBox[{"pnt", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}], ",", 
      RowBox[{"max", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"pnt", "-", "min"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"max", "-", "min"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointToUnit", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pnt_", ",", "restPnt__"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"min_", ",", "max_"}], "}"}], ",", "restRanges__"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointToUnit", "[", 
      RowBox[{"pnt", ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"pointToUnit", "[", 
      RowBox[{
       RowBox[{"{", "restPnt", "}"}], ",", 
       RowBox[{"{", "restRanges", "}"}]}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointToUnit", "[", 
   RowBox[{
    RowBox[{"{", "pnt_", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_"}], "}"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"pointToUnit", "[", 
    RowBox[{"pnt", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.619445928763629*^9, 3.619446046698084*^9}, 
   3.619446109571069*^9, {3.6194461543788424`*^9, 3.619446158512992*^9}, {
   3.619446197358245*^9, 3.6194462264419613`*^9}, {3.61944626869741*^9, 
   3.6194464346949253`*^9}, {3.619446536245172*^9, 3.619446574812932*^9}, {
   3.619446781980466*^9, 3.619446792278516*^9}, {3.619446828398449*^9, 
   3.619446843398691*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "pointFromUnit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointFromUnit", "[", 
   RowBox[{
    RowBox[{"pnt", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}], ",", 
      RowBox[{"max", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"max", "-", "min"}], ")"}], "pnt"}], "+", 
   "min"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointFromUnit", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pnt_", ",", "restPnt__"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"min_", ",", "max_"}], "}"}], ",", "restRanges__"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointFromUnit", "[", 
      RowBox[{"pnt", ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"pointFromUnit", "[", 
      RowBox[{
       RowBox[{"{", "restPnt", "}"}], ",", 
       RowBox[{"{", "restRanges", "}"}]}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointFromUnit", "[", 
   RowBox[{
    RowBox[{"{", "pnt_", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_"}], "}"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"pointFromUnit", "[", 
    RowBox[{"pnt", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.619448745397517*^9, 3.6194487479023867`*^9}, {
   3.61944900026571*^9, 3.619449003420392*^9}, {3.619450985329052*^9, 
   3.619450997161119*^9}, {3.619454127402499*^9, 3.6194541340758457`*^9}, 
   3.619510901601556*^9, {3.619970645047206*^9, 3.619970645734281*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "scaleToUnit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleToUnit", "[", 
   RowBox[{
    RowBox[{"pnt", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}], ",", 
      RowBox[{"max", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "pnt", ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"max", "-", "min"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleToUnit", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pnt_", ",", "restPnt__"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"min_", ",", "max_"}], "}"}], ",", "restRanges__"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointToUnit", "[", 
      RowBox[{"pnt", ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"pointToUnit", "[", 
      RowBox[{
       RowBox[{"{", "restPnt", "}"}], ",", 
       RowBox[{"{", "restRanges", "}"}]}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleToUnit", "[", 
   RowBox[{
    RowBox[{"{", "pnt_", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_"}], "}"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"pointToUnit", "[", 
    RowBox[{"pnt", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.619445928763629*^9, 3.619446046698084*^9}, 
   3.619446109571069*^9, {3.6194461543788424`*^9, 3.619446158512992*^9}, {
   3.619446197358245*^9, 3.6194462264419613`*^9}, {3.61944626869741*^9, 
   3.6194464346949253`*^9}, {3.619446536245172*^9, 3.619446574812932*^9}, {
   3.619446781980466*^9, 3.619446792278516*^9}, {3.619446828398449*^9, 
   3.619446843398691*^9}, {3.6194471784463863`*^9, 3.619447204153061*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "scaleFromUnit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleFromUnit", "[", 
   RowBox[{
    RowBox[{"pnt", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}], ",", 
      RowBox[{"max", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "pnt", ")"}], 
   RowBox[{"(", 
    RowBox[{"max", "-", "min"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleFromUnit", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pnt_", ",", "restPnt__"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"min_", ",", "max_"}], "}"}], ",", "restRanges__"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scaleFromUnit", "[", 
      RowBox[{"pnt", ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"scaleFromUnit", "[", 
      RowBox[{
       RowBox[{"{", "restPnt", "}"}], ",", 
       RowBox[{"{", "restRanges", "}"}]}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleFromUnit", "[", 
   RowBox[{
    RowBox[{"{", "pnt_", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"min_", ",", "max_"}], "}"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"scaleFromUnit", "[", 
    RowBox[{"pnt", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6194542965028687`*^9, 3.619454319058015*^9}, 
   3.619458106323637*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gradientFromUnit", "[", 
   RowBox[{
    RowBox[{"pnt", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"minX", ":", 
         RowBox[{"Except", "[", "_List", "]"}]}], ",", 
        RowBox[{"maxX", ":", 
         RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"minY", ":", 
         RowBox[{"Except", "[", "_List", "]"}]}], ",", 
        RowBox[{"maxY", ":", 
         RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"pnt", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxY", "-", "minY"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"maxX", "-", "minX"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"gradientToUnit", "[", 
    RowBox[{
     RowBox[{"pnt", ":", 
      RowBox[{"Except", "[", "_List", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minX", ":", 
          RowBox[{"Except", "[", "_List", "]"}]}], ",", 
         RowBox[{"maxX", ":", 
          RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minY", ":", 
          RowBox[{"Except", "[", "_List", "]"}]}], ",", 
         RowBox[{"maxY", ":", 
          RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}]}], "}"}]}], "]"}], 
   ":=", 
   RowBox[{"pnt", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"maxX", "-", "minX"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"maxY", "-", "minY"}], ")"}]}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6194472171962833`*^9, 3.619447278557465*^9}, {
  3.6194473615088367`*^9, 3.619447394965229*^9}, {3.61945885423479*^9, 
  3.619458875586335*^9}, {3.619499178312531*^9, 3.61949918747398*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "setDistroValues", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "setDistroValues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Unit", "\[Rule]", "True"}], ",", 
     RowBox[{"G", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setDistroValues", "[", " ", 
   RowBox[{"\[Sigma]g_", ",", "\[Mu]c_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", 
      "g"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "Unit", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"\[Mu]", "=", "\[Mu]c"}], " ", ";", 
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"pointFromUnit", "[", 
          RowBox[{"\[Mu]c", " ", ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "G", "]"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"\[Gamma]", "=", "\[Sigma]g"}], ";", " ", 
           RowBox[{"\[Sigma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Gamma]", "]"}]}], ";", " ", 
           RowBox[{"s", "=", 
            RowBox[{"scaleFromUnit", "[", 
             RowBox[{"\[Sigma]", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Sigma]", " ", "=", "\[Sigma]g"}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";", 
           RowBox[{"s", "=", 
            RowBox[{"scaleFromUnit", "[", 
             RowBox[{"\[Sigma]", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "=", 
         RowBox[{"pointToUnit", "[", 
          RowBox[{"\[Mu]c", " ", ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], " ", ";", 
        RowBox[{"c", " ", "=", " ", "\[Mu]c"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "G", "]"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"g", "=", "\[Sigma]g"}], ";", "  ", 
           RowBox[{"s", " ", "=", " ", 
            RowBox[{"uG", "[", "g", "]"}]}], ";", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"scaleToUnit", "[", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s", " ", "=", "\[Sigma]g"}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";", " ", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"scaleToUnit", "[", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setDistroValues", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]i_", ",", "ci_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]i_", ",", "si_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]i_", ",", "gi_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", 
      "g"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "Unit", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"\[Mu]", "=", "\[Mu]i"}], " ", ";", 
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"pointFromUnit", "[", 
          RowBox[{"\[Mu]i", " ", ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "G", "]"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"\[Gamma]", "=", "\[Gamma]i"}], ";", " ", 
           RowBox[{"\[Sigma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Gamma]", "]"}]}], ";", " ", 
           RowBox[{"s", "=", 
            RowBox[{"scaleFromUnit", "[", 
             RowBox[{"\[Sigma]", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Sigma]", " ", "=", "\[Sigma]i"}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";", 
           RowBox[{"s", "=", 
            RowBox[{"scaleFromUnit", "[", 
             RowBox[{"\[Sigma]", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "=", 
         RowBox[{"pointToUnit", "[", 
          RowBox[{"ci", " ", ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], " ", ";", 
        RowBox[{"c", " ", "=", " ", "ci"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "G", "]"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"g", "=", "gi"}], ";", "  ", 
           RowBox[{"s", " ", "=", " ", 
            RowBox[{"uG", "[", "g", "]"}]}], ";", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"scaleToUnit", "[", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s", " ", "=", "si"}], ";", " ", 
           RowBox[{"g", " ", "=", " ", 
            RowBox[{"uG", "[", "s", "]"}]}], ";", " ", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"scaleToUnit", "[", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"\[Gamma]", " ", "=", " ", 
            RowBox[{"uG", "[", "\[Sigma]", " ", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.619589309390584*^9, 3.61958932739108*^9}, {
   3.619589428481077*^9, 3.619589457201664*^9}, 3.619589518140764*^9, {
   3.619590363195215*^9, 3.619590383440091*^9}, 3.619592533439856*^9, {
   3.619592735080481*^9, 3.619592762899355*^9}, {3.61959279622229*^9, 
   3.619592805282981*^9}, {3.619592896380271*^9, 3.619592902587595*^9}, 
   3.619592970622632*^9, {3.619593379205291*^9, 3.61959345919396*^9}, 
   3.6195995128166227`*^9, {3.6196104732452908`*^9, 3.619610495634572*^9}, 
   3.6196105268675423`*^9, {3.619610607745962*^9, 3.619610651646893*^9}, {
   3.6196108918283043`*^9, 3.619610967563444*^9}, {3.6196112336213627`*^9, 
   3.619611250087551*^9}, {3.6196113794326887`*^9, 3.619611463749599*^9}, {
   3.619611504824808*^9, 3.619611513068324*^9}, {3.619611562894823*^9, 
   3.6196115637873497`*^9}, {3.619611740223081*^9, 3.619611790515273*^9}, 
   3.619611822688105*^9, {3.6196290911702757`*^9, 3.619629092060051*^9}, {
   3.619629141488028*^9, 3.6196291799064283`*^9}, {3.619631139512793*^9, 
   3.619631166461783*^9}, {3.619632744248955*^9, 3.6196327784101877`*^9}, {
   3.6196329026472597`*^9, 3.619632903169541*^9}, {3.6196620465243387`*^9, 
   3.6196620528435783`*^9}, {3.6196627981597013`*^9, 3.619662827281485*^9}, {
   3.619862371244956*^9, 3.6198623893471937`*^9}, {3.620743047281754*^9, 
   3.620743053795499*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "setDistroParams", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setDistroParams", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]_", ",", "c_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]_", ",", "s_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]_", ",", "g_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sRange", ",", "dRange", ",", "s\[CapitalDelta]", ",", 
      "d\[CapitalDelta]", ",", "\[Kappa]", ",", "\[Delta]", ",", "m", ",", 
      "\[Omega]", ",", "\[CapitalOmega]", ",", "\[Lambda]", ",", "L"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sRange", ",", "dRange"}], "}"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sMax", "-", "sMin"}], ",", " ", 
        RowBox[{"dMax", "-", "dMin"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Kappa]", " ", "=", " ", 
      RowBox[{"sRange", "/", "dRange"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      FractionBox[
       RowBox[{"2", "  ", "\[Gamma]"}], 
       RowBox[{
        SqrtBox["\[Pi]"], "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}], "+", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "-", " ", "\[Mu]"}], ")"}]}], "]"}]}], ")"}]}]]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"m", " ", "=", " ", 
      RowBox[{"gradientFromUnit", "[", 
       RowBox[{"\[Delta]", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s\[CapitalDelta]", ",", "d\[CapitalDelta]"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "sRange"}], ",", 
        RowBox[{"1", "/", "dRange"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Mu]", "-", 
         RowBox[{
          FractionBox["1", "\[Gamma]"], 
          RowBox[{"InverseErf", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "d\[CapitalDelta]"}], ")"}], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "-", 
            RowBox[{"d\[CapitalDelta]", " ", 
             RowBox[{"Erf", "[", 
              RowBox[{"\[Gamma]", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}]}]}], 
        ",", 
        RowBox[{"\[Mu]", "+", 
         RowBox[{
          FractionBox["1", "\[Gamma]"], 
          RowBox[{"InverseErf", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", " ", "d\[CapitalDelta]"}], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "d\[CapitalDelta]"}], ")"}], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{"\[Gamma]", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}]}]}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L", "=", 
      RowBox[{"pointFromUnit", "[", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"sMin", ",", "sMax"}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"\[Delta]", " ", "<", " ", "\[Kappa]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"\[CapitalOmega]", " ", "=", 
         RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", " ", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             FractionBox["1", "\[Gamma]"], 
             SqrtBox[
              RowBox[{"Log", "[", 
               FractionBox["\[Delta]", "\[Kappa]"], "]"}]]}]}], ",", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             FractionBox["1", "\[Gamma]"], 
             SqrtBox[
              RowBox[{"Log", "[", 
               FractionBox["\[Delta]", "\[Kappa]"], "]"}]]}]}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalOmega]", " ", "=", 
         RowBox[{"pointFromUnit", "[", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"sMin", ",", "sMax"}], "}"}]}], "}"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.621058463908287*^9, 3.6210585049916267`*^9}, {
   3.621061910976907*^9, 3.62106192397584*^9}, {3.621061976452869*^9, 
   3.621062105771709*^9}, 3.621062237721483*^9, {3.621062276334993*^9, 
   3.621062279580065*^9}, {3.62106233588538*^9, 3.6210623857262287`*^9}, {
   3.621062419833313*^9, 3.621062565193614*^9}, {3.621062617822501*^9, 
   3.621062668769266*^9}, {3.621062827647732*^9, 3.6210628802453403`*^9}, {
   3.621063560217668*^9, 3.621063570754705*^9}, {3.621071620798893*^9, 
   3.62107164274299*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"sMin", ",", "sMax", ",", "dMin", ",", "dMax"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"setDistroValues", "[", " ", 
  RowBox[{"g", ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
   RowBox[{"Unit", "\[Rule]", "False"}], ",", 
   RowBox[{"G", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6207429812257347`*^9, 3.6207430021622353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"c", "-", "sMin"}], 
      RowBox[{"sMax", "-", "sMin"}]], ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"uG", "[", "g", "]"}], 
      RowBox[{"sMax", "-", "sMin"}]], ",", 
     RowBox[{"uG", "[", "g", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"uG", "[", 
      FractionBox[
       RowBox[{"uG", "[", "g", "]"}], 
       RowBox[{"sMax", "-", "sMin"}]], "]"}], ",", "g"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.620988529007867*^9, 3.6210736184383307`*^9, 
  3.6289709249054127`*^9, 3.630780206121551*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"show", "[", "\"\<c\>\"", "]"}], "=", "False"}], ";", 
  RowBox[{
   RowBox[{"show", "[", "\"\<g\>\"", "]"}], "=", "False"}], ";", " ", 
  RowBox[{
   RowBox[{"show", "[", "\"\<dRange\>\"", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"show", "[", "\"\<s\>\"", "]"}], "=", "False"}], ";", 
  RowBox[{
   RowBox[{"show", "[", "\"\<\[Gamma]\>\"", "]"}], "=", "True"}], ";", "   ", 
  
  RowBox[{
   RowBox[{"show", "[", "\"\<\[Mu]\>\"", "]"}], "=", "True"}], ";", 
  RowBox[{
   RowBox[{"show", "[", "\"\<\[Sigma]\>\"", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "DynamicDistroPanel", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"layout", "[", 
     RowBox[{"sliders_", ",", "selector_", ",", "output_"}], "]"}], ":=", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sliders", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Panel", "[", 
              RowBox[{"selector", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".2", "]"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\"\<   \>\"", ",", 
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"output", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.7", "]"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "0.6", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DynamicDistroPanel", "[", 
   RowBox[{"funcs_List", ",", 
    RowBox[{"layoutFun_:", "layout"}]}], "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "=", "0.5"}], ",", 
      RowBox[{"c", "=", "128"}], ",", 
      RowBox[{"\[Sigma]", "=", 
       FractionBox["8", "51"]}], ",", 
      RowBox[{"s", "=", "40"}], ",", 
      RowBox[{"\[Gamma]", "=", 
       FractionBox["51", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]]}], ",", 
      RowBox[{"g", "=", 
       FractionBox["1", 
        RowBox[{"40", " ", 
         SqrtBox["2"]}]]}], ",", 
      RowBox[{"sMin", "=", "0"}], ",", 
      RowBox[{"sMax", "=", "255"}], ",", 
      RowBox[{"dMin", "=", "0"}], ",", 
      RowBox[{"dMax", "=", "255"}], ",", "sRange", ",", "dRange", ",", 
      "s\[CapitalDelta]", ",", "d\[CapitalDelta]", ",", "\[Kappa]", ",", 
      "\[Delta]", ",", "m", ",", "\[Omega]", ",", "\[CapitalOmega]", ",", 
      "\[Lambda]", ",", "L", ",", "center", ",", "fun", ",", "sliders", ",", 
      "selector", ",", "output"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"sMin", "=", "0"}], ";", 
      RowBox[{"sMax", "=", "255"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dMin", "=", "0"}], ";", 
      RowBox[{"dMax", "=", "255"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=", 
       RowBox[{"setDistroParams", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ssMin", "=", 
       RowBox[{"1", "/", "2"}]}], ";", " ", 
      RowBox[{"ssMax", "=", 
       RowBox[{
        RowBox[{"3", "/", "2"}], " ", "255"}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]Min", ",", "cMin"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]Min", ",", "ssMin"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]Max", ",", "gMax"}], "}"}]}], "}"}], "=", 
       RowBox[{"N", "[", 
        RowBox[{"setDistroValues", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "sMin"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Sigma]Min", ",", "ssMin"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]Max", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
          RowBox[{"Unit", "\[Rule]", "False"}], ",", 
          RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]Max", ",", "cMax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]Max", ",", "ssMax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "gMin"}], "}"}]}], "}"}], "=", 
       RowBox[{"N", "[", 
        RowBox[{"setDistroValues", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "sMax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Sigma]Max", ",", "ssMax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]Max", ",", "gMax"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
          RowBox[{"Unit", "\[Rule]", "False"}], ",", 
          RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sliders", "=", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Column", "[", 
         RowBox[{"ReplaceRepeated", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<\[Mu]\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", "\[Mu]", "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Mu]", "=", "#1"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "True"}], ",", 
                    RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Mu]Min", ",", "\[Mu]Max", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["1", "255"], "]"}]}], "}"}]}], "]"}], ",", 
               "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<c\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"sMin", ",", "c", ",", "sMax"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sMin", "=", "#1"}], ";", 
                    RowBox[{"sMax", "=", "#3"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]Min", ",", "cMin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]Min", ",", "ssMin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]Max", ",", "gMax"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]Min", ",", "ssMin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]Max", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "False"}], ",", 
                    RowBox[{"G", "\[Rule]", "True"}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]Max", ",", "cMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]Max", ",", "ssMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]Min", ",", "gMin"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "#3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]Max", ",", "ssMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]Max", ",", "gMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "True"}], ",", 
                    RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "#2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "False"}], ",", 
                    RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "255", ",", "1"}], "}"}]}], "]"}], ",", 
               "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<dRange\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dMin", "=", "#1"}], ";", 
                    RowBox[{"dMax", "=", "#2"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "255", ",", "1"}], "}"}]}], "]"}], ",", 
               "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<\[Sigma]\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", "\[Sigma]", "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", "=", "#1"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "True"}], ",", 
                    RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "\[Sigma]Min", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "\[Sigma]Max", "]"}]}], "}"}]}], 
                "]"}], ",", "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<s\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", "s", "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"s", "=", "#1"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "False"}], ",", 
                    RowBox[{"G", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "ssMin", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "ssMax", "]"}]}], "}"}]}], "]"}], 
               ",", "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<\[Gamma]\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", "\[Gamma]", "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Gamma]", "=", "#1"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "True"}], ",", 
                    RowBox[{"G", "\[Rule]", "True"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "\[Gamma]Min", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "\[Gamma]Max", "]"}]}], "}"}]}], 
                "]"}], ",", "Null"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"show", "[", "\"\<g\>\"", "]"}], ",", 
               RowBox[{"ValueThumbSlider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", "g", "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", "=", "#1"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"setDistroValues", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "#1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
                    RowBox[{"Unit", "\[Rule]", "False"}], ",", 
                    RowBox[{"G", "\[Rule]", "True"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
                    "}"}], "=", 
                    RowBox[{"setDistroParams", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "gMin", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "gMax", "]"}]}], "}"}]}], "]"}], 
               ",", "Null"}], "]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x___", ",", "Null", ",", "y___"}], "}"}], ":>", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"selector", "=", " ", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"togButton", "[", 
               RowBox[{"\"\<dRange\>\"", ",", "\"\<dst\>\""}], "]"}], ",", 
              "setUnitButton", ",", 
              RowBox[{"setRangeButton", "[", 
               RowBox[{"sMin", ",", "sMax"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Mean\>\"", ",", 
              RowBox[{"togButton", "[", "\"\<\[Mu]\>\"", "]"}], ",", 
              RowBox[{"togButton", "[", "\"\<c\>\"", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Std\>\"", ",", 
              RowBox[{"togButton", "[", "\"\<\[Sigma]\>\"", "]"}], ",", 
              RowBox[{"togButton", "[", "\"\<s\>\"", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<G\>\"", ",", 
              RowBox[{"togButton", "[", "\"\<\[Gamma]\>\"", "]"}], ",", 
              RowBox[{"togButton", "[", "\"\<g\>\"", "]"}]}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"Dividers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Rule]", "Black"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", "\[Rule]", "Black"}], "}"}]}], "}"}]}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"output", " ", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"#", " ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], 
              "}"}]}], "]"}], "]"}], "&"}], ",", "funcs"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ";", "\[IndentingNewLine]", 
     RowBox[{"layoutFun", "[", 
      RowBox[{"sliders", ",", "selector", ",", "output"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DynamicDistroPanel", "[", 
    RowBox[{"funcs_Function", ",", 
     RowBox[{"layoutFun_:", "layout"}]}], "]"}], ":=", 
   RowBox[{"DynamicDistroPanel", "[", 
    RowBox[{
     RowBox[{"{", "funcs", "}"}], ",", "layoutFun"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6196221740962753`*^9, 3.6196221754115334`*^9}, 
   3.619622245623448*^9, {3.619622349956195*^9, 3.619622366342854*^9}, 
   3.6196224224073763`*^9, {3.6196224605145082`*^9, 3.619622464811204*^9}, 
   3.619622495697418*^9, {3.6196225373098993`*^9, 3.619622539100238*^9}, 
   3.619662414789261*^9, {3.619662454736833*^9, 3.619662473977264*^9}, 
   3.619664433411682*^9, {3.619664466936501*^9, 3.619664531038169*^9}, {
   3.6196647263464127`*^9, 3.619664732527748*^9}, {3.619666894218793*^9, 
   3.619666908576826*^9}, {3.6196669510025167`*^9, 3.619666959039998*^9}, {
   3.619667007392087*^9, 3.619667010125201*^9}, {3.6196674549491177`*^9, 
   3.619667480846219*^9}, {3.619667531449657*^9, 3.6196675445626717`*^9}, {
   3.6196676369949217`*^9, 3.6196676625847282`*^9}, {3.619667699684989*^9, 
   3.619667763674788*^9}, {3.619667822308134*^9, 3.6196678283869677`*^9}, 
   3.619667879667902*^9, 3.619759224922151*^9, {3.6197592600458317`*^9, 
   3.619759411534412*^9}, {3.619759899683627*^9, 3.619760165176506*^9}, {
   3.61976163850035*^9, 3.6197616510354137`*^9}, {3.619764008266478*^9, 
   3.619764025558628*^9}, {3.619764076019289*^9, 3.619764078212504*^9}, {
   3.6197643828001947`*^9, 3.619764496211708*^9}, {3.619958900106711*^9, 
   3.619958900896791*^9}, {3.619969522970675*^9, 3.61996954840786*^9}, 
   3.619969594405748*^9, {3.6199696311213427`*^9, 3.61996985639774*^9}, 
   3.619975192303143*^9, {3.619975244086856*^9, 3.619975250750256*^9}, {
   3.6199752908163767`*^9, 3.6199753478096743`*^9}, {3.619975956571645*^9, 
   3.619975968651908*^9}, {3.619981831667048*^9, 3.619981842545175*^9}, {
   3.620013908135819*^9, 3.620013968837068*^9}, {3.6200142076370707`*^9, 
   3.6200142572400417`*^9}, {3.620014301790596*^9, 3.620014306324132*^9}, {
   3.620014948267623*^9, 3.62001495490318*^9}, {3.620015017859803*^9, 
   3.620015041647175*^9}, {3.620015132006516*^9, 3.6200151855607843`*^9}, {
   3.620020320308453*^9, 3.620020354270032*^9}, {3.62002039256669*^9, 
   3.6200205597156773`*^9}, {3.620020609989806*^9, 3.620020620405487*^9}, {
   3.620020766134598*^9, 3.620020819862195*^9}, {3.620021027860273*^9, 
   3.620021065509553*^9}, {3.62002310067421*^9, 3.6200231228409452`*^9}, {
   3.620023154472226*^9, 3.6200232798678102`*^9}, 3.620026044107099*^9, {
   3.620026598381281*^9, 3.620026611260607*^9}, {3.620026645380877*^9, 
   3.620026732862567*^9}, {3.620027122353384*^9, 3.6200271493834248`*^9}, {
   3.620027197022934*^9, 3.620027232086814*^9}, 3.6200274115788937`*^9, {
   3.620027671274032*^9, 3.620027830726843*^9}, {3.620027913162726*^9, 
   3.620027919789361*^9}, {3.620028289887857*^9, 3.620028310095487*^9}, {
   3.6200283457489357`*^9, 3.6200283643679323`*^9}, {3.620028418849388*^9, 
   3.62002846622228*^9}, 3.620028514461232*^9, {3.620028692932393*^9, 
   3.620028734751474*^9}, {3.620028802627289*^9, 3.620028803160047*^9}, {
   3.6200288647801323`*^9, 3.620028870814952*^9}, {3.6200289141496067`*^9, 
   3.6200289492046623`*^9}, {3.620028990382387*^9, 3.620029010713346*^9}, {
   3.620029067139124*^9, 3.6200290791049013`*^9}, {3.62002913251645*^9, 
   3.6200291918729267`*^9}, {3.620029228842258*^9, 3.620029281295911*^9}, {
   3.6200293244100533`*^9, 3.62002932766691*^9}, {3.620029453616252*^9, 
   3.620029454139629*^9}, {3.620029566583371*^9, 3.620029568921892*^9}, {
   3.620029601320424*^9, 3.620029606483182*^9}, {3.620029666362628*^9, 
   3.6200296707250137`*^9}, 3.620031629391361*^9, {3.620031773310832*^9, 
   3.6200317746264343`*^9}, {3.620031806001088*^9, 3.6200319030193977`*^9}, {
   3.62003202940431*^9, 3.620032050963573*^9}, {3.620122242717545*^9, 
   3.620122252334103*^9}, {3.620122329340041*^9, 3.620122338528273*^9}, {
   3.620122370519278*^9, 3.620122375610531*^9}, {3.6201225517920647`*^9, 
   3.6201227032920322`*^9}, 3.620123476707333*^9, {3.620124642283609*^9, 
   3.620124785989223*^9}, 3.620124842175468*^9, {3.620125483255971*^9, 
   3.6201255462476797`*^9}, {3.620125583861949*^9, 3.620125584204208*^9}, {
   3.6201259623055277`*^9, 3.620125964469872*^9}, {3.620126158461584*^9, 
   3.620126183705653*^9}, {3.6201391762884817`*^9, 3.620139178642294*^9}, {
   3.620139226784925*^9, 3.6201392297985497`*^9}, {3.620139300947592*^9, 
   3.6201393013760767`*^9}, {3.620140065256235*^9, 3.620140066703207*^9}, {
   3.620140166739853*^9, 3.620140174574538*^9}, {3.620140978362173*^9, 
   3.62014099071695*^9}, {3.6201410762850637`*^9, 3.620141117667087*^9}, 
   3.620141183733768*^9, 3.6201412159308558`*^9, {3.620141267436523*^9, 
   3.620141272347327*^9}, {3.620141318164194*^9, 3.620141323968623*^9}, {
   3.620142372858767*^9, 3.620142385817305*^9}, {3.620142507548729*^9, 
   3.620142537821608*^9}, 3.620143114361514*^9, {3.620195681228551*^9, 
   3.6201957155862513`*^9}, {3.620201072285408*^9, 3.620201074392426*^9}, 
   3.620201119134645*^9, {3.620203657085659*^9, 3.620203667564398*^9}, {
   3.6210588535724993`*^9, 3.621058854639697*^9}, {3.62105943637656*^9, 
   3.6210595230614567`*^9}, {3.621059574923101*^9, 3.621059598924259*^9}, {
   3.6210597332792892`*^9, 3.621059734005698*^9}, {3.621062921552384*^9, 
   3.621062930965925*^9}, 3.6210629614076014`*^9, {3.621062996634647*^9, 
   3.621063003794115*^9}, 3.621063180952186*^9, {3.621063444952636*^9, 
   3.6210634606003428`*^9}, {3.621071658511189*^9, 3.621071668283284*^9}, {
   3.621072967198502*^9, 3.62107297436616*^9}, {3.621073064814047*^9, 
   3.621073067984098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dis", "[", " ", 
   RowBox[{
   "x_", ",", "s_", ",", "c_", ",", "sMin_", ",", "sMax_", ",", "dMin_", ",", 
    "dMax_"}], "]"}], ":=", 
  RowBox[{"dMin", "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"c", "-", "sMin"}], 
         RowBox[{
          SqrtBox["2"], " ", "s"}]], "]"}], "-", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"c", "-", "x"}], 
         RowBox[{
          SqrtBox["2"], " ", "s"}]], "]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"c", "-", "sMax"}], 
        RowBox[{
         SqrtBox["2"], " ", "s"}]], "]"}]}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"c", "-", "sMin"}], 
       RowBox[{
        SqrtBox["2"], " ", "s"}]], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{3.6201958869610767`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eErf", "[", " ", 
   RowBox[{
   "x_", ",", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_", ",", 
    "yMax_"}], "]"}], ":=", 
  RowBox[{"yMin", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "yMax"}], "+", "yMin"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         RowBox[{"(", 
          RowBox[{"g", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], "]"}], "+", 
        RowBox[{"Erf", "[", 
         RowBox[{"(", 
          RowBox[{"g", "*", 
           RowBox[{"(", 
            RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], "]"}]}], ")"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       RowBox[{"(", 
        RowBox[{"g", "*", 
         RowBox[{"(", 
          RowBox[{"c", "-", "xMax"}], ")"}]}], ")"}], "]"}], "+", 
      RowBox[{"Erf", "[", 
       RowBox[{"(", 
        RowBox[{"g", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "xMin"}], ")"}]}], ")"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.594021532664631*^9, 3.594021566327829*^9}, {
  3.5965643120706353`*^9, 3.5965643561341553`*^9}, {3.620201639480136*^9, 
  3.620201656602214*^9}, {3.620201768457863*^9, 3.620201773149221*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "gradC", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradC", "[", " ", 
    RowBox[{
    "g_", ",", "c_", ",", "sMin_", ",", "sMax_", ",", "dMin_", ",", "dMax_"}],
     "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "dMax"}], "+", "dMin"}], ")"}], " ", "g"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"c", "-", "sMax"}], ")"}]}], "]"}], "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "c"}], "+", "sMin"}], ")"}]}], "]"}]}], ")"}]}]]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6206576018745327`*^9, 3.620657627396678*^9}, {
  3.620657707983061*^9, 3.620657757742922*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "uUnitGrad", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uUnitGrad", "[", " ", 
   RowBox[{"\[Sigma]_", ",", "\[Mu]_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "-", 
     RowBox[{"\[Sigma]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"Log", "[", 
         FractionBox["2", "\[Pi]"], "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"dMax", "-", "dMin"}], 
           RowBox[{"sMax", "-", "sMin", " "}]], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Erf", "[", 
              FractionBox["\[Mu]", 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "-", 
             RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{"\[Mu]", " ", "-", " ", "1"}], 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
          "]"}]}]}]]}]}], ",", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{"\[Sigma]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"Log", "[", 
         FractionBox["2", "\[Pi]"], "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"dMax", "-", "dMin"}], 
           RowBox[{"sMax", "-", "sMin", " "}]], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Erf", "[", 
              FractionBox["\[Mu]", 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "-", 
             RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{"\[Mu]", " ", "-", " ", "1"}], 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
          "]"}]}]}]]}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.619519296061514*^9, 3.6195193592850103`*^9}, {
   3.6195343160847673`*^9, 3.619534330167776*^9}, {3.61953436455713*^9, 
   3.619534375678091*^9}, {3.619534466458729*^9, 3.6195345314142427`*^9}, {
   3.6195345670331593`*^9, 3.619534623262113*^9}, {3.619534777616619*^9, 
   3.619534779007534*^9}, {3.619585997561702*^9, 3.619586150121578*^9}, {
   3.619586708888131*^9, 3.6195868080666113`*^9}, {3.619586844877553*^9, 
   3.619586845370368*^9}, {3.619586881696817*^9, 3.619586937151237*^9}, 
   3.619587206013509*^9, {3.619587315265586*^9, 3.619587359656855*^9}, {
   3.619587404008321*^9, 3.619587572106324*^9}, {3.619587607575325*^9, 
   3.619587763525237*^9}, {3.619587795665126*^9, 3.61958780246443*^9}, {
   3.619587846261962*^9, 3.6195878484057627`*^9}, {3.619587933376082*^9, 
   3.619588018454644*^9}, {3.619588236836216*^9, 3.619588453006431*^9}, {
   3.619588594213668*^9, 3.619588661107292*^9}, {3.619593611878262*^9, 
   3.619593638327533*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uUnitGradCond", "[", " ", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Gamma]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}], "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"\[Gamma]", "-", 
         RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}], ")"}]}]], 
   "\[GreaterEqual]", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"dMax", "-", "dMin"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.620639824703803*^9, 3.620639873375787*^9}, {
  3.620640002266589*^9, 3.62064000505481*^9}, {3.620640122399303*^9, 
  3.620640159577077*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uErfLowHigh", "[", " ", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "+", 
     FractionBox[
      RowBox[{"InverseErf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dMax", "+", "dMin"}], ")"}], " ", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
         RowBox[{"Erf", "[", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}], 
        RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}], ",", 
    RowBox[{"\[Mu]", "+", 
     FractionBox[
      RowBox[{"InverseErf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "dMax", "-", "dMin"}], ")"}], " ", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", "-", 
            RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}]}], 
        RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}]}], 
   "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"uG", "[", "\[Sigma]_", "]"}], ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.5965642791167507`*^9, 3.596564291764474*^9}, {
  3.619588057771426*^9, 3.619588080034791*^9}, {3.619588141252033*^9, 
  3.619588141686363*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peakNormedNormalDistribution", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "t"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "t"}], "]"}], "/", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "\[Mu]"}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.619416386152231*^9, 3.6194164023838673`*^9}, {
  3.6194164375577097`*^9, 3.6194164693993177`*^9}, {3.6194165521442337`*^9, 
  3.619416604697711*^9}, {3.619416888169894*^9, 3.619416906037196*^9}, {
  3.619880985908037*^9, 3.619880994338525*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valTable", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vars", ",", "ranges"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", 
         "g", ",", "sMin", ",", "sMax", ",", "sRange", ",", "dMin", ",", 
         "dMax", ",", "dRange", ",", "s\[CapitalDelta]", ",", 
         "d\[CapitalDelta]", ",", "\[Kappa]", ",", "\[Delta]", ",", "m", ",", 
         "\[Omega]", ",", "\[CapitalOmega]", ",", "\[Lambda]", ",", "L"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "vars"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "ranges"}], 
        ";", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Mu] = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"\[Mu]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<c = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"c", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Sigma] = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"\[Sigma]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
              
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<s = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"s", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Gamma] = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"\[Gamma]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
              
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<g = \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"g", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
           "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Mean\>\"", ",", "\"\<Std\>\"", ",", "\"\<G\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<0-1\>\"", ",", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", "sMin", "]"}], ",", "\"\< - \>\"", 
                 ",", 
                 RowBox[{"ToString", "[", "sMax", "]"}]}], "]"}]}], "}"}]}], 
            "}"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tableGammaFuncs", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vars", ",", "ranges"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", 
         "g", ",", "sMin", ",", "sMax", ",", "sRange", ",", "dMin", ",", 
         "dMax", ",", "dRange", ",", "s\[CapitalDelta]", ",", 
         "d\[CapitalDelta]", ",", "\[Kappa]", ",", "\[Delta]", ",", "m", ",", 
         "\[Omega]", ",", "\[CapitalOmega]", ",", "\[Lambda]", ",", "L"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "vars"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "ranges"}], 
        ";", 
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"peakNormedNormalDistribution", "[", 
                RowBox[{
                 RowBox[{"pointToUnit", "[", 
                  RowBox[{"c", ",", 
                   RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", 
                 RowBox[{"scaleToUnit", "[", 
                  RowBox[{"s", ",", 
                   RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", "t"}],
                 "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"peakNormedNormalDistribution", "[", 
                RowBox[{"c", ",", "s", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"sMin", ",", "sMax"}], "}"}], ",", "All"}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"PDF", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{
                   RowBox[{"pointToUnit", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", 
                   RowBox[{"scaleToUnit", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{"{", 
                    RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], "]"}], 
                 ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"PDF", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{"c", ",", "s"}], "]"}], ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"sMin", ",", "sMax"}], "}"}], ",", "All"}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}]}], "}"}]}], 
          "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.620143308333747*^9, 3.62014336371056*^9}, {
  3.620143477602672*^9, 3.6201434825654507`*^9}, {3.6201436035222197`*^9, 
  3.620143624970749*^9}, {3.620143706473003*^9, 3.6201437067742558`*^9}, {
  3.6201445579472733`*^9, 3.6201445864802513`*^9}, {3.620144667696735*^9, 
  3.6201446991629133`*^9}, {3.6201983086107616`*^9, 3.620198348050084*^9}, {
  3.6201983963043833`*^9, 3.620198428752734*^9}, {3.620198547797741*^9, 
  3.620198565091063*^9}, {3.620198601607729*^9, 3.620198603310652*^9}, {
  3.621063316784995*^9, 3.621063380942*^9}, {3.621071701982751*^9, 
  3.621071703485614*^9}, {3.630839599192416*^9, 3.630839617925515*^9}, {
  3.630839748139751*^9, 3.630839775492387*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.630839664952076*^9, 3.630839666817007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< = \>\""}], ",", 
       RowBox[{"numberForm", "[", 
        RowBox[{"#", ",", "4"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6308396448339977`*^9, 3.6308396540780697`*^9}, 
   3.630839692729224*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Mu] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Mu]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"c = \"",RowBox[{"numberForm", "[", 
         RowBox[{"c", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Sigma] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Sigma]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"s = \"",RowBox[{"numberForm", "[", 
         RowBox[{"s", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Gamma] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Gamma]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"g = \"",RowBox[{"numberForm", "[", 
         RowBox[{"g", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.630839627233753*^9, {3.630839658871641*^9, 3.630839693281789*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Mu] = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"\[Mu]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<c = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"c", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"\[Sigma]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<s = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"s", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Gamma] = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"\[Gamma]", ",", "4"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<g = \>\"", ",", 
        RowBox[{"numberForm", "[", 
         RowBox[{"g", ",", "4"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.630839729096696*^9, 3.630839729101262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Mu] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Mu]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"c = \"",RowBox[{"numberForm", "[", 
         RowBox[{"c", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Sigma] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Sigma]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"s = \"",RowBox[{"numberForm", "[", 
         RowBox[{"s", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[Gamma] = \"",RowBox[{"numberForm", "[", 
         RowBox[{"\[Gamma]", ",", "4"}], "]"}]},
      "RowDefault"], ",", 
     TemplateBox[{"\"g = \"",RowBox[{"numberForm", "[", 
         RowBox[{"g", ",", "4"}], "]"}]},
      "RowDefault"]}], "}"}]}], "}"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normal Distribution Function", "Title"],

Cell["\<\
In collecting the statistics we used a peak normalised gaussian\
\>", "Text",
 CellChangeTimes->{{3.619418692496483*^9, 3.6194187450708933`*^9}}],

Cell[BoxData[
 RowBox[{"peakNormedNormalDistribution", "[", 
  RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.620651991584174*^9, 3.620651999500372*^9}}],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{3.619416342175474*^9}],

Cell["we wish to relate the statistics to a unit range", "Text",
 CellChangeTimes->{{3.6194187752972593`*^9, 3.619418793934647*^9}, {
  3.619418856181759*^9, 3.61941886679123*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pointToUnit", "[", 
    RowBox[{"50", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], "]"}], ",", "  ", 
   RowBox[{"pointToUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "60"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}], ",", "  ", 
   RowBox[{"pointToUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}]}], "}"}]], "Input",\

 CellChangeTimes->{{3.6194464525612507`*^9, 3.6194464912751207`*^9}, {
  3.6194468818761673`*^9, 3.619446892268202*^9}, {3.620139675973873*^9, 
  3.6201396913482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pointFromUnit", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"pointFromUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["3", "5"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"pointFromUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["3", "5"], ",", 
       FractionBox["7", "10"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}]}], "}"}]], "Input",\

 CellChangeTimes->{{3.619510854266581*^9, 3.6195108831666527`*^9}, {
  3.62013972383222*^9, 3.620139736714048*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"scaleToUnit", "[", 
    RowBox[{"50", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"scaleToUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "60"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"scaleToUnit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "60", ",", "70"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], "]"}]}], "}"}]], "Input",\

 CellChangeTimes->{{3.6194464525612507`*^9, 3.6194464912751207`*^9}, {
  3.6194468818761673`*^9, 3.619446892268202*^9}, {3.619447452884842*^9, 
  3.6194474575243187`*^9}, {3.6201397434832897`*^9, 3.620139760941874*^9}}],

Cell["\<\
There are only two numbers which characterise the distribution, the mean and \
standard deviation \[Sigma] , however the std \[Sigma] is also expressed in \
its reciprocal form g and all can be writen in either the unit range 0-1 or \
in the src range sMin - sMax. The conversion path is g <-> s <-> \[Sigma] <-> \
\[Gamma] \
\>", "Text",
 CellChangeTimes->{{3.619610734529245*^9, 3.619610821583846*^9}, {
  3.6196622053485203`*^9, 3.619662213332342*^9}, {3.6200163115093718`*^9, 
  3.6200163403419857`*^9}, {3.620016375761568*^9, 3.6200164074853992`*^9}, {
  3.6200166257738113`*^9, 3.62001671291295*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Mean\>\"", ",", "\"\<Std\>\"", ",", "\"\<G\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<0-1\>\"", ",", "\"\<Min-Max\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6200180327198887`*^9, 3.620018057760495*^9}, {
   3.6200181922723007`*^9, 3.620018195270918*^9}, {3.6200182292133636`*^9, 
   3.620018237981669*^9}, 3.620018536492217*^9}],

Cell["\<\
All values are set by specifying a mean and a std along with a range and \
options which specify in which space we are.\
\>", "Text",
 CellChangeTimes->{{3.620018811026506*^9, 3.6200188416147947`*^9}, {
  3.6200189241746807`*^9, 3.6200190026383543`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g"}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.6207424220120687`*^9, 3.620742424456822*^9}}],

Cell[BoxData[
 RowBox[{"setDistroValues", "[", " ", 
  RowBox[{"g", ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
   RowBox[{"Unit", "\[Rule]", "False"}], ",", 
   RowBox[{"G", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g", 
   ",", "val"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"setDistroValues", "[", " ", 
    RowBox[{"s", ",", "c", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "False"}], ",", 
     RowBox[{"G", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"valTable", "[", 
  RowBox[{"val", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g", 
   ",", "val"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"setDistroValues", "[", " ", 
    RowBox[{"g", ",", "c", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "False"}], ",", 
     RowBox[{"G", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"valTable", "[", 
  RowBox[{"val", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g", 
   ",", "val"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"setDistroValues", "[", " ", 
    RowBox[{"\[Sigma]", ",", "\[Mu]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "True"}], ",", 
     RowBox[{"G", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"valTable", "[", 
  RowBox[{"val", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", ",", "g", 
   ",", "val"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"setDistroValues", "[", " ", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "True"}], ",", 
     RowBox[{"G", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"valTable", "[", 
  RowBox[{"val", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6200191111901712`*^9, 3.6200192672009983`*^9}, {
  3.620019632940621*^9, 3.620019653136229*^9}, {3.620019694461577*^9, 
  3.62001969959481*^9}, {3.620742034770073*^9, 3.6207421003032703`*^9}, {
  3.6207423371143923`*^9, 3.620742355415132*^9}, {3.6207424456763372`*^9, 
  3.620742468899438*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"c", "-", "sMin"}], 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["c",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox["s", 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["s",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"sMax", "-", "sMin"}], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "s"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "s"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{3.6307809151232357`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"c", "-", "sMin"}], 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["c",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "g", " ", 
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}]}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "g"}]],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"sMax", "-", "sMin"}], ")"}]}],
       NumberForm[#, 4]& ], 
      TagBox["g",
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{3.630780915130706*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox["\[Mu]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{"sMin", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Mu]"}]}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox["\[Sigma]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Sigma]"}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Sigma]"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", 
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Sigma]"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{3.6307809151379538`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox["\[Mu]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{"sMin", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Mu]"}]}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Gamma]"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        RowBox[{"sMax", "-", "sMin"}], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Gamma]"}]],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox["\[Gamma]",
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox["\[Gamma]", 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{3.630780915145069*^9}]
}, Open  ]],

Cell["A dynamic panel can be generated by", "Text",
 CellChangeTimes->{{3.6200193613603973`*^9, 3.62001939105676*^9}}],

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{"{", "tableGammaFuncs", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.620144714604886*^9, 3.620144721299568*^9}}],

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{"{", "valTable", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6201436742082863`*^9, 3.620143681463052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tableGammaFuncs", ",", "valTable"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Panel", "[", 
                 RowBox[{"#2", ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", ".2", "]"}]}], ",", 
                  RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                RowBox[{"#3", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             "\"\<   \>\"", ",", 
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"#3", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.7", "]"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "0.6", "]"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.62014581360639*^9, 3.620145814341218*^9}, {
  3.620145935949628*^9, 3.620145993179295*^9}, {3.620146035057044*^9, 
  3.6201461089719143`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Mu]$$ = 0.5, $CellContext`c$$ = 
  128, $CellContext`\[Sigma]$$ = Rational[8, 51], $CellContext`s$$ = 
  40, $CellContext`\[Gamma]$$ = Rational[51, 8] 
  2^Rational[-1, 2], $CellContext`g$$ = Rational[1, 40] 
  2^Rational[-1, 2], $CellContext`sMin$$ = 0, $CellContext`sMax$$ = 
  255, $CellContext`dMin$$ = 0, $CellContext`dMax$$ = 
  255, $CellContext`sRange$$ = 255, $CellContext`dRange$$ = 
  255, $CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$ = 1, $CellContext`\[Delta]$$ = 
  2.546912071799196, $CellContext`m$$ = 
  2.546912071799196, $CellContext`\[Omega]$$ = {0.28550699588864314`, 
  0.7144930041113569}, $CellContext`\[CapitalOmega]$$ = {72.804283951604, 
  182.195716048396}, $CellContext`\[Lambda]$$ = {0.09183606158286672, 
  0.9081639384171333}, $CellContext`L$$ = {23.418195703631014`, 
  231.58180429636897`}, $CellContext`center$$, $CellContext`fun$$, \
$CellContext`sliders$$ = Dynamic[
   Column[
    ReplaceRepeated[{
      If[
       $CellContext`show["\[Mu]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
         N[1/255]}], Null], 
      If[
       $CellContext`show["c"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`sMin$$, $CellContext`c$$, $CellContext`sMax$$}, \
($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; {{$CellContext`\[Mu]Min, \
$CellContext`cMin}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
            $CellContext`setDistroValues[{{
              0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
               1}}, {{#, #3}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
$CellContext`Unit -> False, $CellContext`G -> 
             True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
            $CellContext`setDistroValues[{{
              1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["dRange"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["\[Sigma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Sigma]Min], 
         Dynamic[$CellContext`\[Sigma]Max]}], Null], 
      If[
       $CellContext`show["s"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`ssMin], 
         Dynamic[$CellContext`ssMax]}], Null], 
      If[
       $CellContext`show["\[Gamma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Gamma]Min], 
         Dynamic[$CellContext`\[Gamma]Max]}], Null], 
      If[
       $CellContext`show["g"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`gMin], 
         Dynamic[$CellContext`gMax]}], Null]}, {
       Pattern[$CellContext`x, 
        BlankNullSequence[]], Null, 
       Pattern[$CellContext`y, 
        BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]]], \
$CellContext`selector$$ = Dynamic[
   Grid[{{
      $CellContext`togButton["dRange", "dst"], $CellContext`setUnitButton, 
      $CellContext`setRangeButton[$CellContext`sMin$$, $CellContext`sMax$$]}, \
{"Mean", 
      $CellContext`togButton["\[Mu]"], 
      $CellContext`togButton["c"]}, {"Std", 
      $CellContext`togButton["\[Sigma]"], 
      $CellContext`togButton["s"]}, {"G", 
      $CellContext`togButton["\[Gamma]"], 
      $CellContext`togButton["g"]}}, 
    Dividers -> {{2 -> Black}, {2 -> Black}}]], $CellContext`output$$ = {
   Dynamic[
    Function[{$CellContext`vars$, $CellContext`ranges$}, 
     Block[{$CellContext`\[Mu]$$, $CellContext`c$$, $CellContext`\[Sigma]$$, \
$CellContext`s$$, $CellContext`\[Gamma]$$, $CellContext`g$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`sRange$$, \
$CellContext`dMin$$, $CellContext`dMax$$, $CellContext`dRange$$, \
$CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$, $CellContext`\[Delta]$$, $CellContext`m$$, \
$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$, $CellContext`\
\[Lambda]$$, $CellContext`L$$}, {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = $CellContext`vars$; {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}} = \
$CellContext`ranges$; Grid[{{
          Plot[
           $CellContext`peakNormedNormalDistribution[
            $CellContext`pointToUnit[$CellContext`c$$, {$CellContext`sMin$$, \
$CellContext`sMax$$}], 
            $CellContext`scaleToUnit[$CellContext`s$$, {$CellContext`sMin$$, \
$CellContext`sMax$$}], $CellContext`t], {$CellContext`t, 0, 1}, 
           PlotRange -> {{0, 1}, Automatic}, ImageSize -> {200, 200}], 
          Plot[
           $CellContext`peakNormedNormalDistribution[$CellContext`c$$, \
$CellContext`s$$, $CellContext`t], {$CellContext`t, $CellContext`sMin$$, \
$CellContext`sMax$$}, 
           PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, All}, 
           ImageSize -> {200, 200}]}, {
          Plot[
           PDF[
            NormalDistribution[
             $CellContext`pointToUnit[$CellContext`c$$, {$CellContext`sMin$$, \
$CellContext`sMax$$}], 
             $CellContext`scaleToUnit[$CellContext`s$$, {$CellContext`sMin$$, \
$CellContext`sMax$$}]], $CellContext`t], {$CellContext`t, 0, 1}, 
           PlotRange -> {{0, 1}, Automatic}, ImageSize -> {200, 200}], 
          Plot[
           PDF[
            
            NormalDistribution[$CellContext`c$$, $CellContext`s$$], \
$CellContext`t], {$CellContext`t, $CellContext`sMin$$, $CellContext`sMax$$}, 
           PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, All}, 
           ImageSize -> {200, 
            200}]}}]]][{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}]], 
   Dynamic[
    Function[{$CellContext`vars$, $CellContext`ranges$}, 
     Block[{$CellContext`\[Mu]$$, $CellContext`c$$, $CellContext`\[Sigma]$$, \
$CellContext`s$$, $CellContext`\[Gamma]$$, $CellContext`g$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`sRange$$, \
$CellContext`dMin$$, $CellContext`dMax$$, $CellContext`dRange$$, \
$CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$, $CellContext`\[Delta]$$, $CellContext`m$$, \
$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$, $CellContext`\
\[Lambda]$$, $CellContext`L$$}, {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = $CellContext`vars$; {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}} = \
$CellContext`ranges$; TableForm[
        Map[
        NumberForm[#, 
          4]& , {{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\
\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}}, {
         2}], TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", 
           StringJoin[
            ToString[$CellContext`sMin$$], " - ", 
            
            ToString[$CellContext`sMax$$]]}}]]][{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}}, {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
{{$CellContext`sRange$$, $CellContext`dRange$$, $CellContext`\[Kappa]$$}, \
{$CellContext`\[Delta]$$, $CellContext`m$$}, {$CellContext`\[Lambda]$$, \
$CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}}]]}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Column[
          ReplaceRepeated[{
            If[
             $CellContext`show["\[Mu]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
               N[1/255]}], Null], 
            If[
             $CellContext`show["c"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`sMin$$, $CellContext`c$$, \
$CellContext`sMax$$}, ($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; \
{{$CellContext`\[Mu]Min, $CellContext`cMin}, {$CellContext`\[Sigma]Min, \
$CellContext`ssMin}, {$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
                  $CellContext`setDistroValues[{{
                    0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
                    1}}, {{#, #3}, {$CellContext`dMin$$, \
$CellContext`dMax$$}}, $CellContext`Unit -> False, $CellContext`G -> 
                   True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
                  $CellContext`setDistroValues[{{
                    1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["dRange"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["\[Sigma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Sigma]Min], 
               Dynamic[$CellContext`\[Sigma]Max]}], Null], 
            If[
             $CellContext`show["s"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`ssMin], 
               Dynamic[$CellContext`ssMax]}], Null], 
            If[
             $CellContext`show["\[Gamma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Gamma]Min], 
               Dynamic[$CellContext`\[Gamma]Max]}], Null], 
            If[
             $CellContext`show["g"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`gMin], 
               Dynamic[$CellContext`gMax]}], Null]}, {
             Pattern[$CellContext`x, 
              BlankNullSequence[]], Null, 
             Pattern[$CellContext`y, 
              BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]], 
         StandardForm],
        ImageSizeCache->{628., {76., 81.}}]},
      {
       TemplateBox[{TagBox[
          GridBox[{{
             PanelBox[
              DynamicBox[
               ToBoxes[
                Grid[{{
                   $CellContext`togButton[
                   "dRange", "dst"], $CellContext`setUnitButton, 
                   $CellContext`setRangeButton[$CellContext`sMin$$, \
$CellContext`sMax$$]}, {"Mean", 
                   $CellContext`togButton["\[Mu]"], 
                   $CellContext`togButton["c"]}, {"Std", 
                   $CellContext`togButton["\[Sigma]"], 
                   $CellContext`togButton["s"]}, {"G", 
                   $CellContext`togButton["\[Gamma]"], 
                   $CellContext`togButton["g"]}}, 
                 Dividers -> {{2 -> Black}, {2 -> Black}}], StandardForm]], 
              ImageSize -> Scaled[0.2], Alignment -> Center]}, {
             DynamicBox[
              ToBoxes[
               Function[{$CellContext`vars$, $CellContext`ranges$}, 
                
                Block[{$CellContext`\[Mu]$$, $CellContext`c$$, $CellContext`\
\[Sigma]$$, $CellContext`s$$, $CellContext`\[Gamma]$$, $CellContext`g$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`sRange$$, \
$CellContext`dMin$$, $CellContext`dMax$$, $CellContext`dRange$$, \
$CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$, $CellContext`\[Delta]$$, $CellContext`m$$, \
$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$, $CellContext`\
\[Lambda]$$, $CellContext`L$$}, {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = $CellContext`vars$; {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}} = \
$CellContext`ranges$; TableForm[
                   Map[
                   NumberForm[#, 
                    4]& , {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {2}], TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", 
                    StringJoin[
                    ToString[$CellContext`sMin$$], " - ", 
                    
                    ToString[$CellContext`sMax$$]]}}]]][{{$CellContext`\[Mu]$$\
, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}}, {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
{{$CellContext`sRange$$, $CellContext`dRange$$, $CellContext`\[Kappa]$$}, \
{$CellContext`\[Delta]$$, $CellContext`m$$}, {$CellContext`\[Lambda]$$, \
$CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}}], StandardForm]]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
         "\"   \"",PanelBox[
          DynamicBox[
           ToBoxes[
            Function[{$CellContext`vars$, $CellContext`ranges$}, 
             
             Block[{$CellContext`\[Mu]$$, $CellContext`c$$, $CellContext`\
\[Sigma]$$, $CellContext`s$$, $CellContext`\[Gamma]$$, $CellContext`g$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`sRange$$, \
$CellContext`dMin$$, $CellContext`dMax$$, $CellContext`dRange$$, \
$CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$, $CellContext`\[Delta]$$, $CellContext`m$$, \
$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$, $CellContext`\
\[Lambda]$$, $CellContext`L$$}, {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = $CellContext`vars$; {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}} = \
$CellContext`ranges$; Grid[{{
                  Plot[
                   $CellContext`peakNormedNormalDistribution[
                    $CellContext`pointToUnit[$CellContext`c$$, \
{$CellContext`sMin$$, $CellContext`sMax$$}], 
                    $CellContext`scaleToUnit[$CellContext`s$$, \
{$CellContext`sMin$$, $CellContext`sMax$$}], $CellContext`t], {$CellContext`t,
                     0, 1}, PlotRange -> {{0, 1}, Automatic}, 
                   ImageSize -> {200, 200}], 
                  Plot[
                   $CellContext`peakNormedNormalDistribution[$CellContext`c$$,\
 $CellContext`s$$, $CellContext`t], {$CellContext`t, $CellContext`sMin$$, \
$CellContext`sMax$$}, 
                   PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, 
                    All}, ImageSize -> {200, 200}]}, {
                  Plot[
                   PDF[
                    NormalDistribution[
                    $CellContext`pointToUnit[$CellContext`c$$, \
{$CellContext`sMin$$, $CellContext`sMax$$}], 
                    $CellContext`scaleToUnit[$CellContext`s$$, \
{$CellContext`sMin$$, $CellContext`sMax$$}]], $CellContext`t], \
{$CellContext`t, 0, 1}, PlotRange -> {{0, 1}, Automatic}, 
                   ImageSize -> {200, 200}], 
                  Plot[
                   PDF[
                    
                    NormalDistribution[$CellContext`c$$, $CellContext`s$$], \
$CellContext`t], {$CellContext`t, $CellContext`sMin$$, $CellContext`sMax$$}, 
                   PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, 
                    All}, ImageSize -> {200, 
                    200}]}}]]][{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}], StandardForm]], 
          ImageSize -> Scaled[0.7], Alignment -> Center]},
        "RowDefault"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->Scaled[0.6]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.621073419485725*^9, 3.6210736900350723`*^9, 3.628970224768507*^9, 
   3.628970313506217*^9, 3.628970899246181*^9, 3.6289709343272247`*^9, {
   3.63078018345897*^9, 3.630780211087861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Section"],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   SqrtBox["\[Pi]"]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"t", "^", "2"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "x"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.620878741692912*^9, 3.62087877164555*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "1"}], "]"}], ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "x"}], "}"}]}], "]"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First we make an adjustable version of the error function", "Subtitle",
 CellChangeTimes->{{3.569232372544649*^9, 3.569232376546302*^9}, {
   3.5700120627296553`*^9, 3.5700120754251957`*^9}, 3.570012116503253*^9}],

Cell["The maximum taken on the Range sMin to sMax is ", "Text",
 CellChangeTimes->{{3.5965520353614473`*^9, 3.596552064988142*^9}}],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(TraditionalForm\`\*SubsuperscriptBox[\(\[Integral]\), \(sMin\), \
\(sMax\)]A\\\ \*FractionBox[SuperscriptBox[\(\[ExponentialE]\), \
\(-\*FractionBox[SuperscriptBox[\((t - \[Mu])\), \(2\)], \(2\\\ \
\*SuperscriptBox[\(\[Sigma]\), \(2\)]\)]\)], \(\*SqrtBox[\(2\\\ \[Pi]\)]\\\ \
\[Sigma]\)] \[DifferentialD]t\)\>\"", ",", "\"\< = \>\"", ",", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], " ", ",", "t"}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.596550109318284*^9, 3.59655011081637*^9}, {
  3.5965513931827173`*^9, 3.596551396262893*^9}}],

Cell["Scaling and shifting to the destination range.", "Text",
 CellChangeTimes->{{3.5965569661334715`*^9, 3.5965570099229765`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dis", "[", " ", 
   RowBox[{
   "x_", ",", "s_", ",", "c_", ",", "sMin_", ",", "sMax_", ",", "dMin_", ",", 
    "dMax_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"dMin", " ", "+", " ", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dMax", " ", "-", " ", "dMin"}], ")"}], " ", 
       RowBox[{"Integrate", "[", " ", 
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"c", ",", "s"}], "]"}], " ", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "sMin", ",", "x"}], "}"}]}], "]"}]}], "]"}], "/", 
     
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Integrate", "[", " ", 
       RowBox[{
        RowBox[{"A", " ", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"c", ",", "s"}], "]"}], " ", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.596552108620638*^9, 3.5965521162780757`*^9}, {
  3.5965522330767565`*^9, 3.5965522795564146`*^9}, {3.5965570247498245`*^9, 
  3.5965570500852737`*^9}, {3.5965570998141174`*^9, 3.5965571073105464`*^9}, {
  3.5965574854861765`*^9, 3.596557493101612*^9}, {3.620195842797264*^9, 
  3.6201958626568193`*^9}}],

Cell[BoxData[
 RowBox[{"dis", "[", " ", 
  RowBox[{
  "x", ",", "s", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", 
   "dMax"}], "]"}]], "Input",
 CellChangeTimes->{{3.59655716017257*^9, 3.59655716926009*^9}, {
  3.6201958109393578`*^9, 3.620195811840601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "#1"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "#2"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=", 
       "#3"}], ";", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"dis", "[", " ", 
         RowBox[{
         "x", ",", "s", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", 
          "dMax"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
        RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}]}], "]"}]}], ")"}],
     "&"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6200331993435307`*^9, 3.620035555314999*^9, {3.6201956116498337`*^9, 
   3.620195614865862*^9}, {3.621061228156584*^9, 3.6210612341100073`*^9}, 
   3.621063005682003*^9, 3.621071705966555*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Mu]$$ = 0.57647079, $CellContext`c$$ = 
  147.00005145, $CellContext`\[Sigma]$$ = 0.149, $CellContext`s$$ = 
  37.995, $CellContext`\[Gamma]$$ = 4.745683095211728, $CellContext`g$$ = 
  0.018610521942006776`, $CellContext`sMin$$ = 0, $CellContext`sMax$$ = 
  255, $CellContext`dMin$$ = 0, $CellContext`dMax$$ = 
  255, $CellContext`sRange$$ = 255, $CellContext`dRange$$ = 
  255, $CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$ = 1, $CellContext`\[Delta]$$ = 
  2.683618165486719, $CellContext`m$$ = 
  2.683618165486719, $CellContext`\[Omega]$$ = {0.3671095177371282, 
  0.7858320622628718}, $CellContext`\[CapitalOmega]$$ = {93.61292702296768, 
  200.38717587703232`}, $CellContext`\[Lambda]$$ = {0.18089876808495742`, 
  0.9494733455772277}, $CellContext`L$$ = {46.12918586166414, 
  242.11570312219308`}, $CellContext`center$$, $CellContext`fun$$, \
$CellContext`sliders$$ = Dynamic[
   Column[
    ReplaceRepeated[{
      If[
       $CellContext`show["\[Mu]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
         N[1/255]}], Null], 
      If[
       $CellContext`show["c"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`sMin$$, $CellContext`c$$, $CellContext`sMax$$}, \
($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; {{$CellContext`\[Mu]Min, \
$CellContext`cMin}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
            $CellContext`setDistroValues[{{
              0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
               1}}, {{#, #3}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
$CellContext`Unit -> False, $CellContext`G -> 
             True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
            $CellContext`setDistroValues[{{
              1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["dRange"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["\[Sigma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Sigma]Min], 
         Dynamic[$CellContext`\[Sigma]Max]}], Null], 
      If[
       $CellContext`show["s"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`ssMin], 
         Dynamic[$CellContext`ssMax]}], Null], 
      If[
       $CellContext`show["\[Gamma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Gamma]Min], 
         Dynamic[$CellContext`\[Gamma]Max]}], Null], 
      If[
       $CellContext`show["g"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`gMin], 
         Dynamic[$CellContext`gMax]}], Null]}, {
       Pattern[$CellContext`x, 
        BlankNullSequence[]], Null, 
       Pattern[$CellContext`y, 
        BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]]], \
$CellContext`selector$$ = Dynamic[
   Grid[{{
      $CellContext`togButton["dRange", "dst"], $CellContext`setUnitButton, 
      $CellContext`setRangeButton[$CellContext`sMin$$, $CellContext`sMax$$]}, \
{"Mean", 
      $CellContext`togButton["\[Mu]"], 
      $CellContext`togButton["c"]}, {"Std", 
      $CellContext`togButton["\[Sigma]"], 
      $CellContext`togButton["s"]}, {"G", 
      $CellContext`togButton["\[Gamma]"], 
      $CellContext`togButton["g"]}}, 
    Dividers -> {{2 -> Black}, {2 -> Black}}]], $CellContext`output$$ = {
   Dynamic[
    (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = #; \
{{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; Plot[
      $CellContext`dis[$CellContext`x, $CellContext`s$$, $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$], {$CellContext`x, 0, 255}, Frame -> True, 
      PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& )[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}}, {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
{{$CellContext`sRange$$, $CellContext`dRange$$, $CellContext`\[Kappa]$$}, \
{$CellContext`\[Delta]$$, $CellContext`m$$}, {$CellContext`\[Lambda]$$, \
$CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}}]]}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Column[
          ReplaceRepeated[{
            If[
             $CellContext`show["\[Mu]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
               N[1/255]}], Null], 
            If[
             $CellContext`show["c"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`sMin$$, $CellContext`c$$, \
$CellContext`sMax$$}, ($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; \
{{$CellContext`\[Mu]Min, $CellContext`cMin}, {$CellContext`\[Sigma]Min, \
$CellContext`ssMin}, {$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
                  $CellContext`setDistroValues[{{
                    0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
                    1}}, {{#, #3}, {$CellContext`dMin$$, \
$CellContext`dMax$$}}, $CellContext`Unit -> False, $CellContext`G -> 
                   True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
                  $CellContext`setDistroValues[{{
                    1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["dRange"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["\[Sigma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Sigma]Min], 
               Dynamic[$CellContext`\[Sigma]Max]}], Null], 
            If[
             $CellContext`show["s"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`ssMin], 
               Dynamic[$CellContext`ssMax]}], Null], 
            If[
             $CellContext`show["\[Gamma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Gamma]Min], 
               Dynamic[$CellContext`\[Gamma]Max]}], Null], 
            If[
             $CellContext`show["g"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`gMin], 
               Dynamic[$CellContext`gMax]}], Null]}, {
             Pattern[$CellContext`x, 
              BlankNullSequence[]], Null, 
             Pattern[$CellContext`y, 
              BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]], 
         StandardForm],
        ImageSizeCache->{623., {76., 81.}}]},
      {
       TemplateBox[{PanelBox[
          DynamicBox[
           ToBoxes[
            Grid[{{
               $CellContext`togButton[
               "dRange", "dst"], $CellContext`setUnitButton, 
               $CellContext`setRangeButton[$CellContext`sMin$$, \
$CellContext`sMax$$]}, {"Mean", 
               $CellContext`togButton["\[Mu]"], 
               $CellContext`togButton["c"]}, {"Std", 
               $CellContext`togButton["\[Sigma]"], 
               $CellContext`togButton["s"]}, {"G", 
               $CellContext`togButton["\[Gamma]"], 
               $CellContext`togButton["g"]}}, 
             Dividers -> {{2 -> Black}, {2 -> Black}}], StandardForm], 
           ImageSizeCache -> {95., {35.90625, 41.09375}}], Alignment -> 
          Center, ImageSize -> Scaled[0.2]],"\"   \"",PanelBox[
          DynamicBox[
           ToBoxes[
            (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\
\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = \
#; {{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; Plot[
              $CellContext`dis[$CellContext`x, $CellContext`s$$, \
$CellContext`c$$, $CellContext`sMin$$, $CellContext`sMax$$, \
$CellContext`dMin$$, $CellContext`dMax$$], {$CellContext`x, 0, 255}, Frame -> 
              True, PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& )[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}}, {{$CellContext`sMin$$, \
$CellContext`sMax$$}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
{{$CellContext`sRange$$, $CellContext`dRange$$, $CellContext`\[Kappa]$$}, \
{$CellContext`\[Delta]$$, $CellContext`m$$}, {$CellContext`\[Lambda]$$, \
$CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}}], StandardForm], 
           ImageSizeCache -> {360., {110., 115.}}], Alignment -> Center, 
          ImageSize -> Scaled[0.7]]},
        "RowDefault"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->Scaled[0.6]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.62106342218079*^9, 3.621063474934848*^9, 
  3.6210737484210997`*^9}]
}, Open  ]],

Cell["Introducing a factor uG ", "Text",
 CellChangeTimes->{{3.596564242603662*^9, 3.596564270340248*^9}, 
   3.596564300891996*^9}],

Cell[BoxData[
 RowBox[{"uG", "[", "\[Sigma]", "]"}]], "Input",
 CellChangeTimes->{{3.5965642791167507`*^9, 3.596564291764474*^9}, {
  3.619588057771426*^9, 3.619588080034791*^9}, {3.619588141252033*^9, 
  3.619588141686363*^9}, {3.620657023047044*^9, 3.6206570299080467`*^9}}],

Cell["uG is idempotent", "Text",
 CellChangeTimes->{{3.621063497180415*^9, 3.6210635056667223`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uG", "[", 
  RowBox[{"uG", "[", "\[Sigma]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.619588123734795*^9, 3.619588130895028*^9}}],

Cell[BoxData["\[Sigma]"], "Output",
 CellChangeTimes->{3.62107379751036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"eErf", "[", " ", 
     RowBox[{"x", ",", 
      RowBox[{"uG", "[", "s", "]"}], ",", "c", ",", "sMin", ",", "sMax", ",", 
      "dMin", ",", "dMax"}], "]"}], ",", "\"\< = \>\"", ",", 
    RowBox[{"eErf", "[", " ", 
     RowBox[{
     "x", ",", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", 
      "dMax"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5940312515447083`*^9, 3.594031252590361*^9}, {
  3.59656436355658*^9, 3.5965643651006684`*^9}, {3.596567195733571*^9, 
  3.596567201548904*^9}, {3.620201680221464*^9, 3.6202017133455763`*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"dMin", "+", 
     FractionBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "dMax"}], "+", "dMin"}], ")"}], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{"c", "-", "sMin"}], 
               RowBox[{
                 SqrtBox["2"], " ", "s"}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{
                 RowBox[{"-", "c"}], "+", "x"}], 
               RowBox[{
                 SqrtBox["2"], " ", "s"}]], "]"}]}], ")"}]}], 
      RowBox[{
        RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"c", "-", "sMax"}], 
           RowBox[{
             SqrtBox["2"], " ", "s"}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{
             RowBox[{"-", "c"}], "+", "sMin"}], 
           RowBox[{
             SqrtBox["2"], " ", "s"}]], "]"}]}]]}],"\" = \"",
   RowBox[{"dMin", "+", 
     FractionBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "dMax"}], "+", "dMin"}], ")"}], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
                RowBox[{"(", 
                  RowBox[{"c", "-", "sMin"}], ")"}]}], "]"}], "+", 
            RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "c"}], "+", "x"}], ")"}]}], "]"}]}], ")"}]}], 
      RowBox[{
        RowBox[{"Erf", "[", 
          RowBox[{"g", " ", 
            RowBox[{"(", 
              RowBox[{"c", "-", "sMax"}], ")"}]}], "]"}], "+", 
        RowBox[{"Erf", "[", 
          RowBox[{"g", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "c"}], "+", "sMin"}], ")"}]}], "]"}]}]]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.630780256268594*^9}]
}, Open  ]],

Cell["\<\
Tidying up and making sure that the terms in the Erf are always positive and \
intriducing a rational version of the error function Erf[a, b] = Erf[a/b]\
\>", "Text",
 CellChangeTimes->{{3.57001213929503*^9, 3.570012256942769*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Erf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Erf", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Erf", "[", 
    RowBox[{"a", "/", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Erf", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5700122784851933`*^9, 3.570012344788007*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"aErf", "[", 
      RowBox[{
      "x_", ",", " ", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", 
       "yMin_", ",", "yMax_", ",", 
       RowBox[{"erf_:", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", 
          RowBox[{"Erf", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}]}], "]"}], ":=", 
     RowBox[{"yMin", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yMax", "-", "yMin"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"erf", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
                  "1"}], "]"}], ",", 
                RowBox[{"x", "\[GreaterEqual]", "c"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"erf", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{"c", "-", "x"}], ")"}]}], ")"}], ",", "1"}], 
                  "]"}]}], ",", 
                RowBox[{"x", "<", "c"}]}], "}"}]}], "}"}], "]"}], "+", 
           RowBox[{"erf", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "*", 
               RowBox[{"(", 
                RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", "1"}], 
            "]"}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "c"}], "+", "xMax"}], ")"}]}], ")"}], ",", "1"}], 
          "]"}], "+", 
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", "1"}], "]"}]}],
         ")"}]}]}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.569231798384149*^9, 3.569231842385067*^9}, 
   3.5692323012032623`*^9, 3.569232390376411*^9, {3.5696056312234364`*^9, 
   3.569605666790227*^9}, {3.569606608774123*^9, 3.569606671995515*^9}, {
   3.5696067495639143`*^9, 3.569606793729053*^9}, {3.569658522090856*^9, 
   3.5696585325697927`*^9}, {3.569658570466051*^9, 3.569658596288782*^9}, {
   3.5696588974031343`*^9, 3.569658933006098*^9}, {3.5696589902807913`*^9, 
   3.5696591062031813`*^9}, {3.569659305497343*^9, 3.56965930674369*^9}, {
   3.570012272921792*^9, 3.570012273857708*^9}, 3.570012365015205*^9, 
   3.570012535409162*^9, 3.570013831762528*^9, 3.5701818353400717`*^9, {
   3.5965644332885685`*^9, 3.5965644741749067`*^9}, {3.5965645735195894`*^9, 
   3.5965645915116186`*^9}, 3.619421533293001*^9, {3.619421621270561*^9, 
   3.619421621890091*^9}, {3.620202029045844*^9, 3.620202045330711*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aErf", "[", 
   RowBox[{
   "x", ",", " ", "g", ",", "c", ",", "xMin", ",", "xMax", ",", "yMin", ",", 
    "yMax"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.570473140509256*^9, 3.570473156339593*^9}, 
   3.596564599141055*^9}],

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "#1"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "#2"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=", 
       "#3"}], ";", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", " ", 
         RowBox[{
         "x", ",", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", 
          "dMax"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
        RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"SetterBar", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "f", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"eErf", ",", "aErf"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], " ", "]"}]}], 
     ")"}], "&"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.62004467290858*^9, 3.620044706523929*^9, {3.620044737106583*^9, 
   3.6200447533990927`*^9}, {3.620147160104488*^9, 3.620147163813261*^9}, 
   3.621061247674982*^9, 3.621063007409811*^9, 3.6210717077245913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximum gradient at c", "Subtitle",
 CellChangeTimes->{{3.615186169085878*^9, 3.615186172451868*^9}, 
   3.615186211673214*^9}],

Cell["\<\
We are interested in the maximum gradient taken by the distribution which is \
the gradient at at c\
\>", "Text",
 CellChangeTimes->{{3.593939578720766*^9, 3.593939610649925*^9}, {
   3.594744049409127*^9, 3.594744124039084*^9}, 3.594744392600883*^9, {
   3.594744463143076*^9, 3.594744572883864*^9}, 3.594744934701384*^9, {
   3.596198954261702*^9, 3.596198974131695*^9}, {3.6194375936427107`*^9, 
   3.619437599310411*^9}, {3.620147485555306*^9, 3.620147517094287*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"eErf", "[", " ", 
           RowBox[{
           "x", ",", "\[Gamma]", ",", " ", "\[Mu]", ",", "0", ",", "1", ",", 
            "0", ",", "1"}], "]"}], ",", "x"}], "]"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grad", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.620797139452264*^9, 3.620797191303033*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "x", ",", "\[Sigma]", ",", "\[Mu]", ",", "s", ",", "c", ",", "sMin", ",", 
    "sMax", ",", "dMin", ",", "dMax"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradC", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}], 
      "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"eErf", "[", " ", 
           RowBox[{
           "x", ",", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", 
            ",", "dMax"}], "]"}], ",", "x"}], "]"}], "/.", 
        RowBox[{"x", "\[Rule]", "c"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.619365687283445*^9, 3.619365720918931*^9}, 
   3.619445305340035*^9, {3.6194453407772512`*^9, 3.619445356637866*^9}, {
   3.6194455119357567`*^9, 3.619445526429996*^9}, {3.619881542088512*^9, 
   3.6198815450601788`*^9}, {3.619881590949258*^9, 3.619881591377235*^9}, {
   3.619881862313636*^9, 3.61988186275917*^9}, {3.620657450264635*^9, 
   3.620657461875494*^9}, {3.6206576204712133`*^9, 3.62065762354805*^9}}],

Cell["In the unit range the maxumum gradient is", "Text",
 CellChangeTimes->{{3.619366499726207*^9, 3.619366547239555*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_"}], "]"}], ":=", 
   RowBox[{"gradC", "[", " ", 
    RowBox[{
    "\[Gamma]", ",", "\[Mu]", ",", "0", ",", "1", ",", "0", ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]", "[", 
  RowBox[{"\[Gamma]", ",", "\[Mu]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.619366553585169*^9, 3.61936656051169*^9}, 
   3.619445224767119*^9, {3.620727481432173*^9, 3.620727487060431*^9}, {
   3.62079778020232*^9, 3.620797824147468*^9}}],

Cell["\<\
The gradient at any point is given by the product of a gaussian with the \
gradient at c\
\>", "Text",
 CellChangeTimes->{{3.620797487154778*^9, 3.6207975277792997`*^9}}],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"grad", "[", "x", "]"}], ",", "\"\< = \>\"", ",", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "/", "\[Kappa]"}], ")"}], " ", 
     RowBox[{"gradC", "[", " ", 
      RowBox[{
      "\[Gamma]", ",", "\[Mu]", ",", "0", ",", "1", ",", "0", ",", "1"}], 
      "]"}]}], ",", "\"\< = \>\"", ",", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "/", "\[Kappa]"}], ")"}]}]}], " ", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6207975548068523`*^9, 3.620797608392274*^9}, {
  3.6207978443527393`*^9, 3.62079786597655*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Mu]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"gradC", "[", " ", 
   RowBox[{
    RowBox[{"uG", "[", 
     RowBox[{"scaleFromUnit", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{"{", 
        RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"pointFromUnit", "[", 
     RowBox[{"\[Mu]", ",", 
      RowBox[{"{", 
       RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", "sMin", ",", 
    "sMax", ",", "dMin", ",", "dMax"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.619495188752536*^9, 3.6194952203498096`*^9}, {
  3.619495261320538*^9, 3.6194953575943127`*^9}, {3.619495508027944*^9, 
  3.619495516465783*^9}, {3.620657807180695*^9, 3.6206578121084843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "#1"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "#2"}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=", 
       "#3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"eErf", "[", 
           RowBox[{"x", ",", " ", 
            RowBox[{"uG", "[", "s", "]"}], ",", " ", "c", ",", " ", "sMin", 
            ",", " ", "sMax", ",", " ", "dMin", ",", " ", "dMax"}], "]"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"m", "*", 
            RowBox[{"(", 
             RowBox[{"x", "-", "c"}], ")"}]}], " ", "+", " ", 
           RowBox[{"eErf", "[", " ", 
            RowBox[{
            "c", ",", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", 
             ",", "dMax"}], "]"}]}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "255"}], "}"}], ",", " ", 
        RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", "\n", "        ", 
        RowBox[{"PlotRange", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"Epilog", " ", "->", "  ", 
         RowBox[{"LabelPoint", "[", 
          RowBox[{"c", ",", " ", 
           RowBox[{
            RowBox[{"eErf", "[", 
             RowBox[{
             "#1", ",", " ", "g", ",", " ", "c", ",", " ", "sMin", ",", " ", 
              "sMax", ",", " ", "dMin", ",", " ", "dMax"}], "]"}], " ", "&"}],
            " ", ",", " ", "\n", "          ", "m"}], "]"}]}]}], "]"}]}], 
     ")"}], "&"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.620053439975182*^9, {3.6201488058451643`*^9, 3.620148809889802*^9}, 
   3.620727441633155*^9, 3.620727502271254*^9, {3.6210612659942408`*^9, 
   3.621061309975718*^9}, {3.621061576495914*^9, 3.6210615915745907`*^9}, 
   3.6210630125887003`*^9, 3.6210717239019833`*^9, {3.6210738826021557`*^9, 
   3.621073890372435*^9}, 3.621073922796054*^9, {3.621073967797987*^9, 
   3.6210739696670923`*^9}, 3.630786407200576*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Mu]$$ = 
  0.6368159203980099, $CellContext`c$$ = 128., $CellContext`\[Sigma]$$ = 
  0.17400000000000002`, $CellContext`s$$ = 
  34.974000000000004`, $CellContext`\[Gamma]$$ = 
  4.063832075784755, $CellContext`g$$ = 
  0.020218070028779875`, $CellContext`sMin$$ = 0, $CellContext`sMax$$ = 
  201., $CellContext`dMin$$ = 0, $CellContext`dMax$$ = 
  255, $CellContext`sRange$$ = 201., $CellContext`dRange$$ = 
  255, $CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$ = 0.788235294117647, $CellContext`\[Delta]$$ = 
  2.336126203642917, $CellContext`m$$ = 
  2.9637421986514614`, $CellContext`\[Omega]$$ = {0.3803263777786026, 
  0.8933054630174173}, $CellContext`\[CapitalOmega]$$ = {76.44560193349912, 
  179.55439806650088`}, $CellContext`\[Lambda]$$ = {0.1749870724121329, 
  0.9863414847276188}, $CellContext`L$$ = {35.172401554838714`, 
  198.2546384302514}, $CellContext`center$$, $CellContext`fun$$, \
$CellContext`sliders$$ = Dynamic[
   Column[
    ReplaceRepeated[{
      If[
       $CellContext`show["\[Mu]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
         N[1/255]}], Null], 
      If[
       $CellContext`show["c"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`sMin$$, $CellContext`c$$, $CellContext`sMax$$}, \
($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; {{$CellContext`\[Mu]Min, \
$CellContext`cMin}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
            $CellContext`setDistroValues[{{
              0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
               1}}, {{#, #3}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
$CellContext`Unit -> False, $CellContext`G -> 
             True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
            $CellContext`setDistroValues[{{
              1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["dRange"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["\[Sigma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Sigma]Min], 
         Dynamic[$CellContext`\[Sigma]Max]}], Null], 
      If[
       $CellContext`show["s"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`ssMin], 
         Dynamic[$CellContext`ssMax]}], Null], 
      If[
       $CellContext`show["\[Gamma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Gamma]Min], 
         Dynamic[$CellContext`\[Gamma]Max]}], Null], 
      If[
       $CellContext`show["g"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`gMin], 
         Dynamic[$CellContext`gMax]}], Null]}, {
       Pattern[$CellContext`x, 
        BlankNullSequence[]], Null, 
       Pattern[$CellContext`y, 
        BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]]], \
$CellContext`selector$$ = Dynamic[
   Grid[{{
      $CellContext`togButton["dRange", "dst"], $CellContext`setUnitButton, 
      $CellContext`setRangeButton[$CellContext`sMin$$, $CellContext`sMax$$]}, \
{"Mean", 
      $CellContext`togButton["\[Mu]"], 
      $CellContext`togButton["c"]}, {"Std", 
      $CellContext`togButton["\[Sigma]"], 
      $CellContext`togButton["s"]}, {"G", 
      $CellContext`togButton["\[Gamma]"], 
      $CellContext`togButton["g"]}}, 
    Dividers -> {{2 -> Black}, {2 -> Black}}]], $CellContext`output$$ = {
   Dynamic[
    (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = #; \
{{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; Plot[{
       $CellContext`eErf[$CellContext`x, 
        $CellContext`uG[$CellContext`s$$], $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$], $CellContext`m$$ ($CellContext`x - $CellContext`c$$) + \
$CellContext`eErf[$CellContext`c$$, $CellContext`g$$, $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$]}, {$CellContext`x, 0, 255}, Frame -> True, 
      PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, 
      Epilog -> $CellContext`LablePoint[$CellContext`c$$, \
$CellContext`eErf[#, $CellContext`g$$, $CellContext`c$$, $CellContext`sMin$$, \
$CellContext`sMax$$, $CellContext`dMin$$, $CellContext`dMax$$]& , \
$CellContext`m$$]])& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}]]}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Column[
          ReplaceRepeated[{
            If[
             $CellContext`show["\[Mu]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
               N[1/255]}], Null], 
            If[
             $CellContext`show["c"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`sMin$$, $CellContext`c$$, \
$CellContext`sMax$$}, ($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; \
{{$CellContext`\[Mu]Min, $CellContext`cMin}, {$CellContext`\[Sigma]Min, \
$CellContext`ssMin}, {$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
                  $CellContext`setDistroValues[{{
                    0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
                    1}}, {{#, #3}, {$CellContext`dMin$$, \
$CellContext`dMax$$}}, $CellContext`Unit -> False, $CellContext`G -> 
                   True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
                  $CellContext`setDistroValues[{{
                    1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["dRange"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["\[Sigma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Sigma]Min], 
               Dynamic[$CellContext`\[Sigma]Max]}], Null], 
            If[
             $CellContext`show["s"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`ssMin], 
               Dynamic[$CellContext`ssMax]}], Null], 
            If[
             $CellContext`show["\[Gamma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Gamma]Min], 
               Dynamic[$CellContext`\[Gamma]Max]}], Null], 
            If[
             $CellContext`show["g"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`gMin], 
               Dynamic[$CellContext`gMax]}], Null]}, {
             Pattern[$CellContext`x, 
              BlankNullSequence[]], Null, 
             Pattern[$CellContext`y, 
              BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]], 
         StandardForm],
        ImageSizeCache->{623., {76., 81.}}]},
      {
       TemplateBox[{PanelBox[
          DynamicBox[
           ToBoxes[
            Grid[{{
               $CellContext`togButton[
               "dRange", "dst"], $CellContext`setUnitButton, 
               $CellContext`setRangeButton[$CellContext`sMin$$, \
$CellContext`sMax$$]}, {"Mean", 
               $CellContext`togButton["\[Mu]"], 
               $CellContext`togButton["c"]}, {"Std", 
               $CellContext`togButton["\[Sigma]"], 
               $CellContext`togButton["s"]}, {"G", 
               $CellContext`togButton["\[Gamma]"], 
               $CellContext`togButton["g"]}}, 
             Dividers -> {{2 -> Black}, {2 -> Black}}], StandardForm], 
           ImageSizeCache -> {97., {35.90625, 41.09375}}], Alignment -> 
          Center, ImageSize -> Scaled[0.2]],"\"   \"",PanelBox[
          DynamicBox[
           ToBoxes[
            (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\
\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = \
#; {{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; Plot[{
               $CellContext`eErf[$CellContext`x, 
                $CellContext`uG[$CellContext`s$$], $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$], $CellContext`m$$ ($CellContext`x - $CellContext`c$$) + \
$CellContext`eErf[$CellContext`c$$, $CellContext`g$$, $CellContext`c$$, \
$CellContext`sMin$$, $CellContext`sMax$$, $CellContext`dMin$$, \
$CellContext`dMax$$]}, {$CellContext`x, 0, 255}, Frame -> True, 
              PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, 
              Epilog -> $CellContext`LablePoint[$CellContext`c$$, \
$CellContext`eErf[#, $CellContext`g$$, $CellContext`c$$, $CellContext`sMin$$, \
$CellContext`sMax$$, $CellContext`dMin$$, $CellContext`dMax$$]& , \
$CellContext`m$$]])& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}], StandardForm], 
           ImageSizeCache -> {360., {109., 113.}}], Alignment -> Center, 
          ImageSize -> Scaled[0.7]]},
        "RowDefault"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->Scaled[0.6]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.621061593254833*^9, 3.621061615633404*^9}, 
   3.62106174928579*^9, 3.621073971353909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit Grad", "Subsection",
 CellChangeTimes->{{3.615186302230215*^9, 3.6151863238213*^9}}],

Cell["\<\
We are interested in where the gradient of the distribution function equals \
one in the src dst space however in the unit 0:1 space this is where the \
gradient is equal to 
k = sRange / dRange.\
\>", "Text",
 CellChangeTimes->{{3.593939578720766*^9, 3.593939610649925*^9}, {
   3.594744049409127*^9, 3.594744124039084*^9}, 3.594744392600883*^9, {
   3.594744463143076*^9, 3.594744572883864*^9}, 3.594744934701384*^9, {
   3.619428718981694*^9, 3.619428725882285*^9}, {3.619518792409548*^9, 
   3.619518801886462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradientToUnit", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.61951882190032*^9, 3.619518863574971*^9}, {
  3.619518905631146*^9, 3.619518907896208*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"sMax", "-", "sMin"}], 
  RowBox[{"dMax", "-", "dMin"}]]], "Output",
 CellChangeTimes->{3.630852805604059*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"eErf", "[", " ", 
    RowBox[{"x", ",", 
     RowBox[{"uG", "[", "\[Sigma]", "]"}], ",", "\[Mu]", ",", "0", ",", "1", 
     ",", "0", ",", "1"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.619519158279841*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Sigma]", ",", "\[Mu]", ",", "x", ",", "k", ",", "g", ",", "s", ",", "c", 
   ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"eErf", "[", " ", 
      RowBox[{"x", ",", 
       RowBox[{"uG", "[", "\[Sigma]", "]"}], ",", "\[Mu]", ",", "0", ",", "1",
        ",", "0", ",", "1"}], "]"}], ",", "x"}], "]"}], "]"}], "\[Equal]", 
  "k"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"x", "/.", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"%", ",", "x", ",", 
       RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "/.", " ", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", 
    RowBox[{"gradientToUnit", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.619517813185398*^9, 3.619517823495936*^9}, {
   3.6195189184206247`*^9, 3.619518949915223*^9}, {3.619519080157178*^9, 
   3.619519082253704*^9}, 3.6195192013452053`*^9, {3.619519244490046*^9, 
   3.6195192464680347`*^9}}],

Cell["Or using the gradient at c", "Text",
 CellChangeTimes->{{3.6207979892235126`*^9, 3.620797999360368*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"x", "/.", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Gamma]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "/", "\[Kappa]"}], ")"}]}], "\[Equal]", "1"}], 
       ",", "x", ",", 
       RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "/.", " ", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620797924223946*^9, 3.620797979473652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uUnitGrad", "[", " ", 
  RowBox[{"\[Sigma]", ",", "\[Mu]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.620640084630941*^9, 3.620640180438117*^9, {3.620658911361272*^9, 
   3.6206589325433283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Mu]", "-", 
    RowBox[{"\[Sigma]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["2", "\[Pi]"], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"dMax", "-", "dMin"}], 
          RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox["\[Mu]", 
              RowBox[{
               SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
         "]"}]}]}]]}]}], ",", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"\[Sigma]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["2", "\[Pi]"], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"dMax", "-", "dMin"}], 
          RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], 
               RowBox[{
                SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox["\[Mu]", 
              RowBox[{
               SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
         "]"}]}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.630852290534086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limits for a solution", "Subsubsection",
 CellChangeTimes->{{3.619583983293537*^9, 3.619583995737274*^9}}],

Cell["real solutions exist when \[Delta] >= \[Kappa] ", "Text",
 CellChangeTimes->{{3.6206592619497423`*^9, 3.6206592663359756`*^9}, {
  3.620922856356185*^9, 3.6209228663729887`*^9}, {3.620922906454069*^9, 
  3.620922909457418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uUnitGradCond", "[", " ", 
  RowBox[{"\[Gamma]", ",", "\[Mu]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620639824703803*^9, 3.620639873375787*^9}, {
  3.620640002266589*^9, 3.62064000505481*^9}, {3.620640122399303*^9, 
  3.620640159577077*^9}, {3.620659275721365*^9, 3.6206592902165527`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "\[Gamma]"}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}], "+", 
      RowBox[{"Erf", "[", 
       RowBox[{"\[Gamma]", "-", 
        RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}], ")"}]}]], 
  "\[GreaterEqual]", 
  FractionBox[
   RowBox[{"sMax", "-", "sMin"}], 
   RowBox[{"dMax", "-", "dMin"}]]}]], "Output",
 CellChangeTimes->{3.630852269566917*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extention to the solution.", "Subsubsection",
 CellChangeTimes->{{3.619583983293537*^9, 3.619583995737274*^9}, {
  3.6308506994510717`*^9, 3.630850701621933*^9}, {3.630850795616981*^9, 
  3.630850811669495*^9}}],

Cell["The unit gradient position ", "Text",
 CellChangeTimes->{{3.6308509377829027`*^9, 3.630850953347039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
  RowBox[{"[", 
   RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630851416912878*^9, 3.6308514373537416`*^9}}],

Cell[BoxData[
 RowBox[{"255", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["128", "255"], "+", 
    RowBox[{
     FractionBox["5", "51"], " ", 
     SqrtBox[
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"51", " ", 
          SqrtBox[
           FractionBox["2", "\[Pi]"]]}], 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox["127", 
              RowBox[{"25", " ", 
               SqrtBox["2"]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"64", " ", 
               SqrtBox["2"]}], "25"], "]"}]}], ")"}]}]], "]"}]}]]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.6308514100858393`*^9, 3.630851438592407*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["G"], "Input",
 CellChangeTimes->{{3.630857902230702*^9, 3.630857906572919*^9}}],

Cell[BoxData["G"], "Output",
 CellChangeTimes->{{3.630857903192535*^9, 3.6308579076157713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", "[", 
  RowBox[{"x", ",", 
   RowBox[{"uG", "[", "25", "]"}], ",", "128", ",", "0", ",", "255", ",", "0",
    ",", "255"}], "]"}]], "Input",
 CellChangeTimes->{{3.630858141027226*^9, 3.6308581488456097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "129"}], "+", "x", "-", 
  FractionBox[
   RowBox[{"255", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"64", " ", 
         SqrtBox["2"]}], "25"], "]"}], "+", 
      RowBox[{"Erf", "[", 
       SqrtBox[
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"51", " ", 
           SqrtBox[
            FractionBox["2", "\[Pi]"]]}], 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Erf", "[", 
              FractionBox["127", 
               RowBox[{"25", " ", 
                SqrtBox["2"]}]], "]"}], "+", 
             RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{"64", " ", 
                SqrtBox["2"]}], "25"], "]"}]}], ")"}]}]], "]"}]], "]"}]}], 
     ")"}]}], 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      FractionBox["127", 
       RowBox[{"25", " ", 
        SqrtBox["2"]}]], "]"}]}], "-", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"64", " ", 
       SqrtBox["2"]}], "25"], "]"}]}]], "-", 
  RowBox[{"25", " ", 
   SqrtBox[
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{"51", " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]]}], 
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           FractionBox["127", 
            RowBox[{"25", " ", 
             SqrtBox["2"]}]], "]"}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"64", " ", 
             SqrtBox["2"]}], "25"], "]"}]}], ")"}]}]], "]"}]}]]}]}]], "Output",\

 CellChangeTimes->{3.6308581820668783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"setUpErf", "[", " ", 
    RowBox[{"25", ",", "128", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "False"}], ",", 
     RowBox[{"G", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rangesTest", "=", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Delete", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"dist", "[", "\"\<ticks\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}], ",", "3"}], 
       "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testBg", "=", 
   RowBox[{"CheckerBoardFromList", "[", 
    RowBox[{"rangesTest", ",", " ", 
     RowBox[{
      RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"dist", "[", "\"\<color\>\"", "]"}], "@@", "#1"}], ")"}], 
         "}"}], "&"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "1"}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Rest", "[", "rangesTest", "]"}], "+", 
            RowBox[{"Most", "[", "rangesTest", "]"}]}], ")"}], "/", "2"}]}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\"\<Disgard\>\"", "}"}], ",", 
       RowBox[{"{", "\"\<Redistribute\>\"", "}"}], ",", 
       RowBox[{"{", "\"\<Keep\>\"", "}"}], ",", 
       RowBox[{"{", "\"\<Redistribute\>\"", "}"}], ",", 
       RowBox[{"{", "\"\<Disgard\>\"", "}"}]}], "}"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "0.8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circSize", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.02", ",", "0.02"}], "}"}], 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", " ", 
      RowBox[{
       RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Omega", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", 
       RowBox[{
        RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}], ",", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", 
         RowBox[{"Round", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", 
         RowBox[{"Round", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"dist", "[", "\"\<linearExtensionFunc\>\"", "]"}], "[", "x", 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "-", "10"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "+", "10"}]}], 
      "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Black", ",", "Black", ",", "Blue"}], "}"}]}], 
     ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"BinaryTicks", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
          "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MixTicks", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/", "256"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"BinaryTicks", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "5"}], "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{
             RowBox[{"dist", "[", "\"\<ticks\>\"", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "10"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MixTicks", "[", 
           RowBox[{
            RowBox[{"BinaryTicks", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "5"}], "]"}], ",",
             " ", 
            RowBox[{
             RowBox[{"dist", "[", "\"\<ticks\>\"", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "10"}], "]"}]}], " ", 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"LabelPointGrad", "[", " ", 
        RowBox[{
         RowBox[{"Omega", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], " ", 
          "&"}], ",", 
         RowBox[{"Round", "[", " ", 
          RowBox[{
           RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
         "Green", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "11", ",", "circSize"}], " ", 
        "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
             "10"}], ",", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], "+", 
             "10"}], ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{"Omega", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", "10"}], ",", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{"Omega", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "+", "10"}], ",", "1"}],
            "}"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"plt", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.15", "]"}], ",", "testBg"}], "}"}], "]"}], 
    ",", "plt"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6308509845556393`*^9, 3.6308509948801928`*^9}, {
   3.630851060242248*^9, 3.6308511185533047`*^9}, {3.6308511651195803`*^9, 
   3.630851173616088*^9}, {3.6308512118320417`*^9, 3.6308512207936697`*^9}, {
   3.6308512697314167`*^9, 3.630851270648782*^9}, {3.6308513891446037`*^9, 
   3.630851389686167*^9}, {3.6308514593170013`*^9, 3.630851470580947*^9}, {
   3.630851519315516*^9, 3.630851599850314*^9}, {3.630851789701529*^9, 
   3.6308517971677923`*^9}, {3.630851905531493*^9, 3.6308520172121677`*^9}, 
   3.630852079336113*^9, {3.630852125833151*^9, 3.63085214466891*^9}, {
   3.630852191867463*^9, 3.630852216330085*^9}, {3.63085301580995*^9, 
   3.630853043531962*^9}, {3.630855571874704*^9, 3.630855583571499*^9}, {
   3.630858006435542*^9, 3.630858038247506*^9}, 3.630858212858729*^9, {
   3.630860792956829*^9, 3.6308608153018847`*^9}, {3.63086171784247*^9, 
   3.6308617909835978`*^9}, {3.6308622976456423`*^9, 3.6308623061090612`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
MfWTfdSEz2HqVbF31motU6/Tj4pVLkx9vMraHP6T8f/GvPa/rmP8/aJ8+Gwi
4+cWm0YXtzH71Ua55pUb49/b4Xk7+jJ+hXkJecWMH0t42V7C5OPhxPGpzZl8
HOIxYVossx8c6m9/U8r40SfmzubLTP/vnt11+hfGj38KE173YfKiIvJhjhez
3+sZ/7xxILOfb5239Cxn/Di0eZ/tdOa8fFSRHjiROa/iShaf/515Hg17YqQI
Yfqpm+WpCHPm+Wjrq5ZmjZn3tY3GtMDM+2CLVYG3ZUw/VLWPgXl+di2NXp3G
1N+q6xrLaYz/d+l2lDH+h1A7ZIz/Ve0jY/wWNK8c/Bh/HU+5HbrC+Nd2nZFB
xviXQu2RMf4FfaUTZPy71i+rXzrj37rgAVdcGP+2bBVyOzL+XaVxLGP8S409
v3Yo0x9jMg6GRTB+TL7TUDecqX+2U2jHTkz9m1UZyPjRoZl/pprxo7XbjHNz
GT9ajDn+YBbjx2eTrMR0xg8rxy5WnZjzrN/oE2bhjB/HOpzqFMz40X/LOUsd
48fdbgpnB+b57/qFJpEJjB9Wk95XxDJ+HP85OWQm40f1T7repl7z7Rpm1PIc
6k/SLDN+E1f7e/p5z40LJnV2pe/jVZqu7/TxmExLZe3v6fyP7W51m6yt1XS+
jikVYbfP136ezm+i+mVO7ova39P5VNw1LQhorKn9fiXZsaHYJ8mlVlO/ve7a
uK72rdW0PsWV52L8Qmo17X+bK497lMVpasaPVRK+/PKQfftrNa3HZIF0U6fV
fp76lXfkw72A/FpN/X0stFyY9EH8fhVplrrmm3cDbe33q4hj/wEF/r/U6uEq
MuqTRlnmqCVVjwuyWNh/H+rTgP8T9Ik2tKHNId8+O01wM/hAPTp4aqwNzPMG
3i9vvyXWMzD5TU8rmYHJ217PL9UzMHlbtX0MTN7i8w2fX1Xb1cDkK857nG84
r/B5gc+3KnsMzP5QbZcdKWX6HecP5ilcbT3F8aqWI2sC6xHrJWpTup1kw2F8
sV6ixnmF/cf5hZ/fcD1wXuH64PzC9cJ5huvnTNtFxuxfXM9KOh0Zs59xfXHe
4XqHUrtlTJ7h+ldNV8bkEe6Hqq+TMXmD+wM/j+DzB583uF/w+wbuHwkfFRAf
FRAfNQRJ+aghSMpHqZbwUQ7xUQ7xUYL4KEF8VI74qBzxUTniowLiowLio3rE
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
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, 
      {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{416, 466, 417, 509, 467, 647, 309, 129, 171, 79, 128, 
          78}}], 
         PolygonBox[{{553, 599, 525, 570, 508, 542, 465, 127, 204, 170, 232, 
          187, 261, 215}}], 
         PolygonBox[{{605, 642, 494, 537, 445, 495, 446, 697, 361, 108, 157, 
          107, 199, 156, 304, 267}}], 
         PolygonBox[{{447, 448, 496, 449, 550, 521, 589, 567, 700, 364, 229, 
          251, 183, 212, 111, 158, 110, 109}, {457, 458, 504, 459, 581, 552, 
          622, 598, 706, 370, 260, 284, 214, 243, 121, 166, 120, 119}}], 
         PolygonBox[{{462, 463, 507, 464, 614, 582, 653, 631, 670, 715, 379, 
          332, 293, 315, 244, 276, 126, 169, 125, 124}}], 
         PolygonBox[{{655, 635, 672, 568, 607, 502, 540, 455, 503, 456, 698, 
          362, 118, 165, 117, 202, 164, 269, 230, 334, 297, 317}, {659, 639, 
          676, 524, 569, 505, 541, 460, 506, 461, 699, 363, 123, 168, 122, 
          203, 167, 231, 186, 338, 301, 321}}], 
         PolygonBox[{{665, 585, 633, 558, 602, 535, 575, 440, 490, 441, 491, 
          442, 104, 153, 103, 152, 102, 237, 197, 264, 220, 295, 247, 327}}], 
         PolygonBox[{{660, 640, 677, 533, 574, 435, 485, 436, 486, 437, 612, 
          579, 702, 366, 241, 274, 99, 148, 98, 147, 97, 236, 195, 339, 302, 
          322}}], PolygonBox[{{615, 664, 583, 632, 554, 600, 526, 571, 418, 
          468, 419, 469, 420, 645, 307, 82, 131, 81, 130, 80, 233, 188, 262, 
          216, 294, 245, 326, 277}, {661, 641, 678, 472, 528, 423, 473, 424, 
          512, 474, 555, 529, 591, 572, 234, 253, 191, 217, 136, 174, 86, 135,
           85, 190, 134, 340, 303, 323}}], PolygonBox[CompressedData["
1:eJwVzr9KglEYwOGTCoEuUg01GDQ1WEtdQI0tibr1BwxHhYx07QoqyG4g0LUg
3Zo0K++gpajMmpuyKaSn4eHH+37nHL6FYiW/HwkhRJnnwrDCLi8TIUzppb5y
RcT8pks6TZksXQ7sx96Y01t94pRrdjhhmy7HxJ0b6KY23Y+yytA8oy39oE3M
/KkbukyFLe6o2k+S4tl7P5zTZo86BXqc8U6LnPN1949osE6Re/tvHhjRZ9E+
QYkMnf9/sP/1zqze6CM1mlRpcEjS9y/Napo1/gA83TAH
          "]], 
         PolygonBox[CompressedData["
1:eJwVz08o3nEcwPHfIxwkbpTnwuOyllqTZAtpNxw0FCsToqgND6GkXbbD9tBD
CodZ8xxthaLN1X9OOI/CxbTLcNrJXr/Dq3ffz/f7fH49RV0Djf1pQRCkE2PS
YZhFOvjAciQIfvGNM75TZB6hj3qSjLPPqPtHVPLPznxd1WNekaCVT7RQ6j6H
unAvz5iyZ4QvFNNMBmVcu8/TH/qbn2Q63+hH7WUv/H34jnIWfGeDHubpZpc5
rlgnzbtTrddinjNjzwQpquhkxfwi/E9cssYL8xhvaWKWdxww5r6EGiJEOfGd
v7QzzWuStJHr/o826GOqSdgzxGfaec+teYFu6x07ZDnf6xON8oaXbBE3f7C3
QI/0nBSbxFlikEO+8tS7bGoppIL/E1BCiw==
          "]], 
         PolygonBox[{{611, 662, 577, 628, 543, 594, 510, 560, 470, 527, 421, 
          471, 422, 544, 511, 586, 561, 624, 603, 708, 372, 265, 286, 223, 
          248, 173, 206, 84, 133, 83, 189, 132, 222, 172, 256, 205, 290, 239, 
          324, 273}}], 
         PolygonBox[{{646, 613, 663, 580, 630, 548, 597, 519, 565, 492, 536, 
          443, 493, 444, 549, 520, 588, 566, 649, 625, 666, 714, 378, 328, 
          287, 311, 228, 250, 182, 211, 106, 155, 105, 198, 154, 227, 181, 
          259, 210, 292, 242, 325, 275, 
          308}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVzkk3wmEYxuE/ZSZjphKhMkQiQ+aZxKZzDJkl7Pj+O1eL6/zu55x38SZr
f5XfpiAI3mn0giN22WKdNZq59SCkYVq4c7dqG/d2u3bwYHdqF91U3T0a4dHu
1T76eXIP6CDP9pBGGebFPaKjvNpjOk6MN3dcJxp/txM6yYc9pUmmqblndJZP
O6VpMtTdczrPl72gi2T5di/pMj92TlfIc8kxexTZoECJE/bZZpMrTjlghzJn
HHLNOTes8g+2ixTc
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{78, 128, 79, 171, 129, 309}], 
       LineBox[{277, 326, 245, 294, 216, 262, 188, 233, 80, 130, 81, 131, 82, 
        307}], LineBox[{273, 324, 239, 290, 205, 256, 172, 222, 132, 189, 83, 
        133, 84, 206, 173, 248, 223, 286, 265, 372}], 
       LineBox[{323, 303, 340, 134, 190, 85, 135, 86, 174, 136, 217, 191, 253,
         234}], LineBox[{313, 289, 330, 270, 306, 87, 137, 88, 138, 89, 207, 
        175, 279, 249, 316, 296, 374}], 
       LineBox[{333, 224, 266, 139, 192, 90, 140, 91, 176, 141, 218, 193, 281,
         254, 368}], 
       LineBox[{318, 298, 335, 235, 271, 92, 142, 93, 143, 94, 240, 208, 283, 
        257, 320, 300, 375}], 
       LineBox[{337, 177, 225, 144, 194, 95, 145, 96, 178, 146, 246, 219, 285,
         263, 371}], 
       LineBox[{322, 302, 339, 195, 236, 97, 147, 98, 148, 99, 274, 241, 
        366}], 
       LineBox[{314, 291, 331, 209, 258, 179, 226, 149, 196, 100, 150, 101, 
        180, 151, 310, 278, 373}], 
       LineBox[{327, 247, 295, 220, 264, 197, 237, 102, 152, 103, 153, 104}], 
       LineBox[{308, 275, 325, 242, 292, 210, 259, 181, 227, 154, 198, 105, 
        155, 106, 211, 182, 250, 228, 311, 287, 328, 378}], 
       LineBox[{267, 304, 156, 199, 107, 157, 108, 361}], 
       LineBox[{109, 110, 158, 111, 212, 183, 251, 229, 364}], 
       LineBox[{312, 288, 329, 268, 305, 159, 200, 112, 160, 113, 184, 161, 
        221, 201, 282, 255, 369}], 
       LineBox[{319, 299, 336, 238, 272, 114, 162, 115, 163, 116, 213, 185, 
        280, 252, 367}], 
       LineBox[{317, 297, 334, 230, 269, 164, 202, 117, 165, 118, 362}], 
       LineBox[{119, 120, 166, 121, 243, 214, 284, 260, 370}], 
       LineBox[{321, 301, 338, 186, 231, 167, 203, 122, 168, 123, 363}], 
       LineBox[{124, 125, 169, 126, 276, 244, 315, 293, 332, 379}], 
       LineBox[{215, 261, 187, 232, 170, 204, 127}]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{416, 466, 417, 509, 467, 647}], 
       LineBox[{615, 664, 583, 632, 554, 600, 526, 571, 418, 468, 419, 469, 
        420, 645}], 
       LineBox[{611, 662, 577, 628, 543, 594, 510, 560, 470, 527, 421, 471, 
        422, 544, 511, 586, 561, 624, 603, 708}], 
       LineBox[{661, 641, 678, 472, 528, 423, 473, 424, 512, 474, 555, 529, 
        591, 572}], 
       LineBox[{651, 627, 668, 608, 644, 425, 475, 426, 476, 427, 545, 513, 
        617, 587, 654, 634, 710}], 
       LineBox[{671, 562, 604, 477, 530, 428, 478, 429, 514, 479, 556, 531, 
        619, 592, 704}], 
       LineBox[{656, 636, 673, 573, 609, 430, 480, 431, 481, 432, 578, 546, 
        621, 595, 658, 638, 711}], 
       LineBox[{675, 515, 563, 482, 532, 433, 483, 434, 516, 484, 584, 557, 
        623, 601, 707}], 
       LineBox[{660, 640, 677, 533, 574, 435, 485, 436, 486, 437, 612, 579, 
        702}], LineBox[{652, 629, 669, 547, 596, 517, 564, 487, 534, 438, 488,
         439, 518, 489, 648, 616, 709}], 
       LineBox[{665, 585, 633, 558, 602, 535, 575, 440, 490, 441, 491, 442}], 
       LineBox[{646, 613, 663, 580, 630, 548, 597, 519, 565, 492, 536, 443, 
        493, 444, 549, 520, 588, 566, 649, 625, 666, 714}], 
       LineBox[{605, 642, 494, 537, 445, 495, 446, 697}], 
       LineBox[{447, 448, 496, 449, 550, 521, 589, 567, 700}], 
       LineBox[{650, 626, 667, 606, 643, 497, 538, 450, 498, 451, 522, 499, 
        559, 539, 620, 593, 705}], 
       LineBox[{657, 637, 674, 576, 610, 452, 500, 453, 501, 454, 551, 523, 
        618, 590, 703}], 
       LineBox[{655, 635, 672, 568, 607, 502, 540, 455, 503, 456, 698}], 
       LineBox[{457, 458, 504, 459, 581, 552, 622, 598, 706}], 
       LineBox[{659, 639, 676, 524, 569, 505, 541, 460, 506, 461, 699}], 
       LineBox[{462, 463, 507, 464, 614, 582, 653, 631, 670, 715}], 
       LineBox[{553, 599, 525, 570, 508, 542, 465}]}, 
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwNy1s6QmEAQNH/FCkqqejmdkLlrhBhCl4aggEw9QhFyHpYT/vb8dPL8DkK
ITwySoTQT4ZwwTFt9mnyqr0x5p0PPpkw5YtvZvzwyx9zgj8iQZIFFkmxRJoM
y6yQJUeeVQqsUaREmXU2qFClRp0Gm2yxzQ673NDlhA4H7HFLj1MOaTHgkjOO
uOOKc+655oGYf1QZGXY=
        "]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{381, 679, 380}], 
       LineBox[{382, 360}], LineBox[{384, 383}], LineBox[{386, 385}], 
       LineBox[{388, 680, 387}], LineBox[{390, 681, 389}], 
       LineBox[{391, 682, 365}], LineBox[{393, 683, 392}], 
       LineBox[{395, 684, 394}], LineBox[{397, 685, 396}], 
       LineBox[{399, 686, 398}], LineBox[{401, 687, 400}], 
       LineBox[{403, 688, 402}], LineBox[{405, 689, 404}], 
       LineBox[{407, 690, 406}], LineBox[{409, 691, 408}], 
       LineBox[{411, 692, 410}], LineBox[{412, 693, 376}], 
       LineBox[{413, 694, 377}], LineBox[{415, 695, 414}], 
       LineBox[{717, 716}], LineBox[{718, 696}], LineBox[{720, 719}], 
       LineBox[{722, 721}], LineBox[{724, 723}], LineBox[{726, 725}], 
       LineBox[{727, 701}], LineBox[{729, 728}], LineBox[{731, 730}], 
       LineBox[{733, 732}], LineBox[{735, 734}], LineBox[{737, 736}], 
       LineBox[{739, 738}], LineBox[{741, 740}], LineBox[{743, 742}], 
       LineBox[{745, 744}], LineBox[{747, 746}], LineBox[{748, 712}], 
       LineBox[{749, 713}], LineBox[{751, 750}]}}, {{}, {}, {}, {}, {}, {}}}], 
   {Opacity[0.15], {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{0, 0}, {61.53160050950483, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {30.765800254752413`, 25.5}, {0, -1}, 
       Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{61.53160050950483, 0}, {86.11549319003993, 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", {73.82354684977238, 25.5}, {0, -1}, 
       Automatic, {0, 1}]}}, {
     {RGBColor[0, 0, 1], Opacity[0.6], 
      RectangleBox[{86.11549319003993, 0}, {169.88450680996007`, 255}]}, 
     {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
      InsetBox["\<\"Keep\"\>", {128., 25.5}, {0, -1}, Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{169.88450680996007`, 0}, {194.46832227411616`, 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", {182.17641454203812`, 25.5}, {0, -1}, 
       Automatic, {0, 1}]}}, {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{194.46832227411616`, 0}, {255, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {224.7341611370581, 25.5}, {0, -1}, 
       Automatic, {0, 1}]}}}, GraphicsComplexBox[CompressedData["
1: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
MfWTfdSEz2HqVbF31motU6/Tj4pVLkx9vMraHP6T8f/GvPa/rmP8/aJ8+Gwi
4+cWm0YXtzH71Ua55pUb49/b4Xk7+jJ+hXkJecWMH0t42V7C5OPhxPGpzZl8
HOIxYVossx8c6m9/U8r40SfmzubLTP/vnt11+hfGj38KE173YfKiIvJhjhez
3+sZ/7xxILOfb5239Cxn/Di0eZ/tdOa8fFSRHjiROa/iShaf/515Hg17YqQI
Yfqpm+WpCHPm+Wjrq5ZmjZn3tY3GtMDM+2CLVYG3ZUw/VLWPgXl+di2NXp3G
1N+q6xrLaYz/d+l2lDH+h1A7ZIz/Ve0jY/wWNK8c/Bh/HU+5HbrC+Nd2nZFB
xviXQu2RMf4FfaUTZPy71i+rXzrj37rgAVdcGP+2bBVyOzL+XaVxLGP8S409
v3Yo0x9jMg6GRTB+TL7TUDecqX+2U2jHTkz9m1UZyPjRoZl/pprxo7XbjHNz
GT9ajDn+YBbjx2eTrMR0xg8rxy5WnZjzrN/oE2bhjB/HOpzqFMz40X/LOUsd
48fdbgpnB+b57/qFJpEJjB9Wk95XxDJ+HP85OWQm40f1T7repl7z7Rpm1PIc
6k/SLDN+E1f7e/p5z40LJnV2pe/jVZqu7/TxmExLZe3v6fyP7W51m6yt1XS+
jikVYbfP136ezm+i+mVO7ova39P5VNw1LQhorKn9fiXZsaHYJ8mlVlO/ve7a
uK72rdW0PsWV52L8Qmo17X+bK497lMVpasaPVRK+/PKQfftrNa3HZIF0U6fV
fp76lXfkw72A/FpN/X0stFyY9EH8fhVplrrmm3cDbe33q4hj/wEF/r/U6uEq
MuqTRlnmqCVVjwuyWNh/H+rTgP8T9Ik2tKHNId8+O01wM/hAPTp4aqwNzPMG
3i9vvyXWMzD5TU8rmYHJ217PL9UzMHlbtX0MTN7i8w2fX1Xb1cDkK857nG84
r/B5gc+3KnsMzP5QbZcdKWX6HecP5ilcbT3F8aqWI2sC6xHrJWpTup1kw2F8
sV6ixnmF/cf5hZ/fcD1wXuH64PzC9cJ5huvnTNtFxuxfXM9KOh0Zs59xfXHe
4XqHUrtlTJ7h+ldNV8bkEe6Hqq+TMXmD+wM/j+DzB583uF/w+wbuHwkfFRAf
FRAfNQRJ+aghSMpHqZbwUQ7xUQ7xUYL4KEF8VI74qBzxUTniowLiowLio3rE
R/WIj+oRHzWopXyUagkf5REf5REf5REfJYiPEsRH5YiPytF+liM+qkN8VIf4
qID4qID4qID4qID4qID4qB7xUT3iowaNlI8aNFI+atBI+SiH+CiH+CiH+CiH
+CiH+CiP+CiP+CiP+CiP+CiP+ChBfFRAfFRAfJT2v4SPUi3hoxzioxziowTx
UYL4KEF8VI74qBzxUQHxUQHxUQHxUT3io3rER2n/S/go1RI+SrWEj/KIj/KI
jxLERwniowTxUTnio3LER3WIj+oQHxUQHxUQHxUQH9UjPqpHfFSP+Cjtbwkf
pVrCRznERznERznER3nER3nER3nERwniowLioxzioxziowTxUTniowLio7Te
Ej5KtYSPEsRHCeKjOsRHdYiPCoiP6hEfreIXLB/lER8liI/S/SjhoxziowTx
UYL4qID4qID4KF2/hI/yiI8SxEfliI/qEB8VEB/VIz6qR3yUQ3yUR3yUID7K
IT7KIT4qR3xUj/goQXxUh/ioDvFRAfFRWj8JH+UQHyWIj9L6SfgoQXxUQHyU
1kPCR+WIj+oRH+UQH+UQHxUQH6XjS/goQXxUh/ioDvFRAfFRDvFRHvFRgvgo
9UPyfE0QH9UjPsojPipHfJTWQ8JHOcRH9YiP8oiP6hAf5RAf5REfpfOX8FHq
p4SPyhEf5RAflSM+qkN8VEB8lK5PwkcJ4qMC4qN6xEc5xEf1iI8SxEd16P2R
Q3yUID5K/ZC8f1A/JHxUjvgoh/iogN4fBcRH9YiPcoiPyhEf1SM+Sv2TvI9w
iI/yiI/qEB/lER+l65W8LxHER+WIj9Lvl/BRAfFRPeKjesRHOcRHqb8SPsoh
PqpDfFSP+Kgc8VEO8VGC+KgO8VEe8VHqh4SPYn4gR3yUQ3xUj/ioAb1P6hEf
5REf5REfJYiPCoiP6hEflaP3U7oeCZ/QIT4qID5KEB/VIT6K+YIc8VGC+CiP
+Kgc8VHMFzBPoP5J+Kge8VEe8VEe8QKC+CiH+KgO8VHql4SPyhEf1SE+qkd8
VI74KEF8lEd8VEB8lEN8VI/4KPVDwkfp/pHwUR7xUR7xUSLyTyXZWfUztpZP
0fUMqPp5Q+SRCrK3+qfIU5VkQvXfAW8Mr/7/Wj5F55tQSf9l1X6ezjew+nMi
/1SRTY833XO3rv08nV+/yG6t7RqKPFRB+4iZH/X/etNz+7IUIj9TkP6Z44vN
VorjK4i8Z/6cpwXi5xUkr3o+wH+9qv0R7/MpSXH1PMX1qciyqu8bjvingPin
gPgnh/gnj/inoPlhP0h4G4/4J62nhKcJiH/qfzy/8Pkk4WGc+oc8x/mF8wif
B/j8kvAsHeKfvPaHfMG8BPsp4Z90PdhfCf/EvJnX/pBH2H+cT/j5DNcD5xGu
D84nXC+cV7h+Ev7Ja3+op4R/8pof6ovzDNdbwj/lmh/qL+GfgvqHfpDwT8OP
/YGfN/D5gs8T3C/4fQL3j8g/93zZmWtWR/2df14xD7+2zUz9nX9ahq7z9mwD
90N33nt6sLQ93A8NqKMhM1zhfuj4cM9R73sB/4wqIeNjhwH/fHEm6lmPCcA/
Fww0W5c8HfinT/a/bi6hwD99Dqf+kbYU+Gd09Od5c2KBf1baBZx8uhX4Z2Lr
1mHyvcA/l5oaOX88Dvxz7QCnwC2pwD8fDNmU9u0m8M8/hnVrHfEI+Kf5jlbF
Jq+Bf1aUOJ3a91n9nX+22RBTT14f+Ke2wib0dnPgn3WmlDyYxAP/vNTKOLW8
E/DPlGuDtx9wB/5Z2idzh1V/uO8+1ny97U5f4J8fcuISyGTgn5fe3dpSqAH+
eTVz2GnfCOCfDfdyWbkrgX8uyv2onL4B+GfHutYlzROBf5q/j9qx8CDwz99c
ut75dBb455yZFhVRV4B/fuA8d9nnAv88vGZjv4KnwD8TDZ0aTHwH/DMt0nT4
8wq47/6brWX0igbAP49aaga4tQL+Of9mhd2u34B/hi+/xDm5AP9Mjrnun9YT
+GfLv8x2zx0C/PPMuJWtX/oB//xzTn/zABXwz4QYz7Jvs4B/bj5ZfMdsMfDP
U8ua3Bptov7Om9pYbwioHwb33Q+TB9nOxurv/GWS3/RDS0KBPzx4c/HXVQvg
vnuneJKTUFdNErN75Vedh5Ult7L1IXDfPXylg3d6ONx39xjlXz54Edx3LxpS
mpND96v4fumjN3mRPxvuu18dPXn0izC47x7Nr2k0YyHcdy9aZvPSQQf33Qcn
DRk7i44nvq98srWaqZ0N991nnw1/FBoG9927rNi9vnwB3Hdf+9or+OwiuO/u
LWswaZsO7rt/8ZnfktDxxfvug8cddHWbDffd04pNE73C4L77itNdx11cAPfd
X8iudY1cBPfdN47caK3UwX334qKILXeo/j/yGZgW
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, 
      {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{416, 466, 417, 509, 467, 647, 309, 129, 171, 79, 128, 
          78}}], PolygonBox[{{553, 599, 525, 570, 508, 542, 465, 127, 204, 
          170, 232, 187, 261, 215}}], 
         PolygonBox[{{605, 642, 494, 537, 445, 495, 446, 697, 361, 108, 157, 
          107, 199, 156, 304, 267}}], 
         PolygonBox[{{447, 448, 496, 449, 550, 521, 589, 567, 700, 364, 229, 
          251, 183, 212, 111, 158, 110, 109}, {457, 458, 504, 459, 581, 552, 
          622, 598, 706, 370, 260, 284, 214, 243, 121, 166, 120, 119}}], 
         PolygonBox[{{462, 463, 507, 464, 614, 582, 653, 631, 670, 715, 379, 
          332, 293, 315, 244, 276, 126, 169, 125, 124}}], 
         PolygonBox[{{655, 635, 672, 568, 607, 502, 540, 455, 503, 456, 698, 
          362, 118, 165, 117, 202, 164, 269, 230, 334, 297, 317}, {659, 639, 
          676, 524, 569, 505, 541, 460, 506, 461, 699, 363, 123, 168, 122, 
          203, 167, 231, 186, 338, 301, 321}}], 
         PolygonBox[{{665, 585, 633, 558, 602, 535, 575, 440, 490, 441, 491, 
          442, 104, 153, 103, 152, 102, 237, 197, 264, 220, 295, 247, 327}}], 
         PolygonBox[{{660, 640, 677, 533, 574, 435, 485, 436, 486, 437, 612, 
          579, 702, 366, 241, 274, 99, 148, 98, 147, 97, 236, 195, 339, 302, 
          322}}], PolygonBox[{{615, 664, 583, 632, 554, 600, 526, 571, 418, 
          468, 419, 469, 420, 645, 307, 82, 131, 81, 130, 80, 233, 188, 262, 
          216, 294, 245, 326, 277}, {661, 641, 678, 472, 528, 423, 473, 424, 
          512, 474, 555, 529, 591, 572, 234, 253, 191, 217, 136, 174, 86, 135,
           85, 190, 134, 340, 303, 323}}], PolygonBox[CompressedData["
1:eJwVzr9KglEYwOGTCoEuUg01GDQ1WEtdQI0tibr1BwxHhYx07QoqyG4g0LUg
3Zo0K++gpajMmpuyKaSn4eHH+37nHL6FYiW/HwkhRJnnwrDCLi8TIUzppb5y
RcT8pks6TZksXQ7sx96Y01t94pRrdjhhmy7HxJ0b6KY23Y+yytA8oy39oE3M
/KkbukyFLe6o2k+S4tl7P5zTZo86BXqc8U6LnPN1949osE6Re/tvHhjRZ9E+
QYkMnf9/sP/1zqze6CM1mlRpcEjS9y/Napo1/gA83TAH
          "]], 
         PolygonBox[CompressedData["
1:eJwVz08o3nEcwPHfIxwkbpTnwuOyllqTZAtpNxw0FCsToqgND6GkXbbD9tBD
CodZ8xxthaLN1X9OOI/CxbTLcNrJXr/Dq3ffz/f7fH49RV0Djf1pQRCkE2PS
YZhFOvjAciQIfvGNM75TZB6hj3qSjLPPqPtHVPLPznxd1WNekaCVT7RQ6j6H
unAvz5iyZ4QvFNNMBmVcu8/TH/qbn2Q63+hH7WUv/H34jnIWfGeDHubpZpc5
rlgnzbtTrddinjNjzwQpquhkxfwi/E9cssYL8xhvaWKWdxww5r6EGiJEOfGd
v7QzzWuStJHr/o826GOqSdgzxGfaec+teYFu6x07ZDnf6xON8oaXbBE3f7C3
QI/0nBSbxFlikEO+8tS7bGoppIL/E1BCiw==
          "]], 
         PolygonBox[{{611, 662, 577, 628, 543, 594, 510, 560, 470, 527, 421, 
          471, 422, 544, 511, 586, 561, 624, 603, 708, 372, 265, 286, 223, 
          248, 173, 206, 84, 133, 83, 189, 132, 222, 172, 256, 205, 290, 239, 
          324, 273}}], 
         PolygonBox[{{646, 613, 663, 580, 630, 548, 597, 519, 565, 492, 536, 
          443, 493, 444, 549, 520, 588, 566, 649, 625, 666, 714, 378, 328, 
          287, 311, 228, 250, 182, 211, 106, 155, 105, 198, 154, 227, 181, 
          259, 210, 292, 242, 325, 275, 
          308}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVzkk3wmEYxuE/ZSZjphKhMkQiQ+aZxKZzDJkl7Pj+O1eL6/zu55x38SZr
f5XfpiAI3mn0giN22WKdNZq59SCkYVq4c7dqG/d2u3bwYHdqF91U3T0a4dHu
1T76eXIP6CDP9pBGGebFPaKjvNpjOk6MN3dcJxp/txM6yYc9pUmmqblndJZP
O6VpMtTdczrPl72gi2T5di/pMj92TlfIc8kxexTZoECJE/bZZpMrTjlghzJn
HHLNOTes8g+2ixTc
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{78, 128, 79, 171, 129, 309}], 
       LineBox[{277, 326, 245, 294, 216, 262, 188, 233, 80, 130, 81, 131, 82, 
        307}], LineBox[{273, 324, 239, 290, 205, 256, 172, 222, 132, 189, 83, 
        133, 84, 206, 173, 248, 223, 286, 265, 372}], 
       LineBox[{323, 303, 340, 134, 190, 85, 135, 86, 174, 136, 217, 191, 253,
         234}], LineBox[{313, 289, 330, 270, 306, 87, 137, 88, 138, 89, 207, 
        175, 279, 249, 316, 296, 374}], 
       LineBox[{333, 224, 266, 139, 192, 90, 140, 91, 176, 141, 218, 193, 281,
         254, 368}], 
       LineBox[{318, 298, 335, 235, 271, 92, 142, 93, 143, 94, 240, 208, 283, 
        257, 320, 300, 375}], 
       LineBox[{337, 177, 225, 144, 194, 95, 145, 96, 178, 146, 246, 219, 285,
         263, 371}], 
       LineBox[{322, 302, 339, 195, 236, 97, 147, 98, 148, 99, 274, 241, 
        366}], LineBox[{314, 291, 331, 209, 258, 179, 226, 149, 196, 100, 150,
         101, 180, 151, 310, 278, 373}], 
       LineBox[{327, 247, 295, 220, 264, 197, 237, 102, 152, 103, 153, 104}], 
       LineBox[{308, 275, 325, 242, 292, 210, 259, 181, 227, 154, 198, 105, 
        155, 106, 211, 182, 250, 228, 311, 287, 328, 378}], 
       LineBox[{267, 304, 156, 199, 107, 157, 108, 361}], 
       LineBox[{109, 110, 158, 111, 212, 183, 251, 229, 364}], 
       LineBox[{312, 288, 329, 268, 305, 159, 200, 112, 160, 113, 184, 161, 
        221, 201, 282, 255, 369}], 
       LineBox[{319, 299, 336, 238, 272, 114, 162, 115, 163, 116, 213, 185, 
        280, 252, 367}], 
       LineBox[{317, 297, 334, 230, 269, 164, 202, 117, 165, 118, 362}], 
       LineBox[{119, 120, 166, 121, 243, 214, 284, 260, 370}], 
       LineBox[{321, 301, 338, 186, 231, 167, 203, 122, 168, 123, 363}], 
       LineBox[{124, 125, 169, 126, 276, 244, 315, 293, 332, 379}], 
       LineBox[{215, 261, 187, 232, 170, 204, 127}]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{416, 466, 417, 509, 467, 647}], 
       LineBox[{615, 664, 583, 632, 554, 600, 526, 571, 418, 468, 419, 469, 
        420, 645}], 
       LineBox[{611, 662, 577, 628, 543, 594, 510, 560, 470, 527, 421, 471, 
        422, 544, 511, 586, 561, 624, 603, 708}], 
       LineBox[{661, 641, 678, 472, 528, 423, 473, 424, 512, 474, 555, 529, 
        591, 572}], 
       LineBox[{651, 627, 668, 608, 644, 425, 475, 426, 476, 427, 545, 513, 
        617, 587, 654, 634, 710}], 
       LineBox[{671, 562, 604, 477, 530, 428, 478, 429, 514, 479, 556, 531, 
        619, 592, 704}], 
       LineBox[{656, 636, 673, 573, 609, 430, 480, 431, 481, 432, 578, 546, 
        621, 595, 658, 638, 711}], 
       LineBox[{675, 515, 563, 482, 532, 433, 483, 434, 516, 484, 584, 557, 
        623, 601, 707}], 
       LineBox[{660, 640, 677, 533, 574, 435, 485, 436, 486, 437, 612, 579, 
        702}], LineBox[{652, 629, 669, 547, 596, 517, 564, 487, 534, 438, 488,
         439, 518, 489, 648, 616, 709}], 
       LineBox[{665, 585, 633, 558, 602, 535, 575, 440, 490, 441, 491, 442}], 
       LineBox[{646, 613, 663, 580, 630, 548, 597, 519, 565, 492, 536, 443, 
        493, 444, 549, 520, 588, 566, 649, 625, 666, 714}], 
       LineBox[{605, 642, 494, 537, 445, 495, 446, 697}], 
       LineBox[{447, 448, 496, 449, 550, 521, 589, 567, 700}], 
       LineBox[{650, 626, 667, 606, 643, 497, 538, 450, 498, 451, 522, 499, 
        559, 539, 620, 593, 705}], 
       LineBox[{657, 637, 674, 576, 610, 452, 500, 453, 501, 454, 551, 523, 
        618, 590, 703}], 
       LineBox[{655, 635, 672, 568, 607, 502, 540, 455, 503, 456, 698}], 
       LineBox[{457, 458, 504, 459, 581, 552, 622, 598, 706}], 
       LineBox[{659, 639, 676, 524, 569, 505, 541, 460, 506, 461, 699}], 
       LineBox[{462, 463, 507, 464, 614, 582, 653, 631, 670, 715}], 
       LineBox[{553, 599, 525, 570, 508, 542, 465}]}, 
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwNy1s6QmEAQNH/FCkqqejmdkLlrhBhCl4aggEw9QhFyHpYT/vb8dPL8DkK
ITwySoTQT4ZwwTFt9mnyqr0x5p0PPpkw5YtvZvzwyx9zgj8iQZIFFkmxRJoM
y6yQJUeeVQqsUaREmXU2qFClRp0Gm2yxzQ673NDlhA4H7HFLj1MOaTHgkjOO
uOOKc+655oGYf1QZGXY=
        "]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{381, 679, 380}], 
       LineBox[{382, 360}], LineBox[{384, 383}], LineBox[{386, 385}], 
       LineBox[{388, 680, 387}], LineBox[{390, 681, 389}], 
       LineBox[{391, 682, 365}], LineBox[{393, 683, 392}], 
       LineBox[{395, 684, 394}], LineBox[{397, 685, 396}], 
       LineBox[{399, 686, 398}], LineBox[{401, 687, 400}], 
       LineBox[{403, 688, 402}], LineBox[{405, 689, 404}], 
       LineBox[{407, 690, 406}], LineBox[{409, 691, 408}], 
       LineBox[{411, 692, 410}], LineBox[{412, 693, 376}], 
       LineBox[{413, 694, 377}], LineBox[{415, 695, 414}], 
       LineBox[{717, 716}], LineBox[{718, 696}], LineBox[{720, 719}], 
       LineBox[{722, 721}], LineBox[{724, 723}], LineBox[{726, 725}], 
       LineBox[{727, 701}], LineBox[{729, 728}], LineBox[{731, 730}], 
       LineBox[{733, 732}], LineBox[{735, 734}], LineBox[{737, 736}], 
       LineBox[{739, 738}], LineBox[{741, 740}], LineBox[{743, 742}], 
       LineBox[{745, 744}], LineBox[{747, 746}], LineBox[{748, 712}], 
       LineBox[{749, 713}], LineBox[{751, 750}]}}, {{}, {}, {}, {}, {}, {}}}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{160., 228.},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{170, 243}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{-11 + 
         255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        11 + 255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{158.88450680996007`, 
       231.88450680996007`}, {180.88450680996007`, 253.88450680996007`}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["170", TraditionalForm], {170, 243}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]]}},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {64, 
       FormBox["64", TraditionalForm]}, {96, 
       FormBox["96", TraditionalForm]}, {128, 
       FormBox["128", TraditionalForm]}, {160, 
       FormBox["160", TraditionalForm]}, {192, 
       FormBox["192", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}}, None}, {{{0, 
       FormBox["0", TraditionalForm]}, {8, 
       FormBox[
        FractionBox["1", "32"], TraditionalForm]}, {16, 
       FormBox[
        FractionBox["1", "16"], TraditionalForm]}, {24, 
       FormBox[
        FractionBox["3", "32"], TraditionalForm]}, {32, 
       FormBox[
        FractionBox["1", "8"], TraditionalForm]}, {40, 
       FormBox[
        FractionBox["5", "32"], TraditionalForm]}, {48, 
       FormBox[
        FractionBox["3", "16"], TraditionalForm]}, {72, 
       FormBox[
        FractionBox["9", "32"], TraditionalForm]}, {104, 
       FormBox[
        FractionBox["13", "32"], TraditionalForm]}, {112, 
       FormBox[
        FractionBox["7", "16"], TraditionalForm]}, {144, 
       FormBox[
        FractionBox["9", "16"], TraditionalForm]}, {152, 
       FormBox[
        FractionBox["19", "32"], TraditionalForm]}, {184, 
       FormBox[
        FractionBox["23", "32"], TraditionalForm]}, {208, 
       FormBox[
        FractionBox["13", "16"], TraditionalForm]}, {216, 
       FormBox[
        FractionBox["27", "32"], TraditionalForm]}, {224, 
       FormBox[
        FractionBox["7", "8"], TraditionalForm]}, {232, 
       FormBox[
        FractionBox["29", "32"], TraditionalForm]}, {240, 
       FormBox[
        FractionBox["15", "16"], TraditionalForm]}, {248, 
       FormBox[
        FractionBox["31", "32"], TraditionalForm]}, {256, 
       FormBox["1", TraditionalForm]}, {61.53160050950483, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        StyleBox[
        "\"  \[Mu]  \"", Bold, Background -> GrayLevel[1], StripOnInput -> 
         False], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}}, {{0, 
       FormBox["0", TraditionalForm]}, {8, 
       FormBox["8", TraditionalForm]}, {16, 
       FormBox["16", TraditionalForm]}, {24, 
       FormBox["24", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {40, 
       FormBox["40", TraditionalForm]}, {48, 
       FormBox["48", TraditionalForm]}, {72, 
       FormBox["72", TraditionalForm]}, {104, 
       FormBox["104", TraditionalForm]}, {112, 
       FormBox["112", TraditionalForm]}, {144, 
       FormBox["144", TraditionalForm]}, {152, 
       FormBox["152", TraditionalForm]}, {184, 
       FormBox["184", TraditionalForm]}, {208, 
       FormBox["208", TraditionalForm]}, {216, 
       FormBox["216", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {232, 
       FormBox["232", TraditionalForm]}, {240, 
       FormBox["240", TraditionalForm]}, {248, 
       FormBox["248", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}, {61.53160050950483, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)  \"", 
         Bold, Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        StyleBox[
        "\"  C  \"", Bold, Background -> GrayLevel[1], StripOnInput -> False],
         TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)  \"", 
         Bold, Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}}}},
  GridLines->{{159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
   171, 172, 173, 174, 175, 176, 177, 178, 179, 180}, {233, 234, 235, 236, 
   237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 
   252, 253, 254}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{595.015625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->
   NCache[{{-10 + 
      255 (Rational[128, 255] + 
        Rational[
          5, 51] (2 
           Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
             Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
             Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 10 + 
      255 (Rational[128, 255] + 
        Rational[
          5, 51] (2 
           Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
             Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
             Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])}, {
     229., 252.0329389268925}}, {{159.88450680996007`, 179.88450680996007`}, {
    229., 252.0329389268925}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.63085099634739*^9, 3.630851121921072*^9, 3.630851178867504*^9, 
   3.63085122686747*^9, 3.630851271766857*^9, 3.630851390790392*^9, 
   3.630851733036817*^9, {3.6308517921341467`*^9, 3.630851797998641*^9}, 
   3.630852020528041*^9, 3.630852148447948*^9, 3.630852217686387*^9, 
   3.630853064260303*^9, {3.630855576843751*^9, 3.630855584585235*^9}, 
   3.6308580393961687`*^9, 3.630858171131105*^9, {3.630858202499998*^9, 
   3.6308582147824583`*^9}, 3.630860853070549*^9, 3.6308609227827377`*^9, 
   3.6308618553053513`*^9, 3.63086237575704*^9}]
}, Open  ]],

Cell["\<\
we wish to find the intersection in the green zone of the cord with the \
distribution function as this is where the non unit gradient affects the \
discrete values allowing us to extend the value of \[Omega]. This is however \
not anylitically soluable so a numerical solution is found by \
\>", "Text",
 CellChangeTimes->{{3.630861026876175*^9, 3.630861150855332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
   RowBox[{"[", 
    RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630862196677545*^9, 3.630862203390973*^9}}],

Cell[BoxData["86.11549319003993`"], "Output",
 CellChangeTimes->{
  3.630862163210745*^9, {3.6308621976844673`*^9, 3.630862203792861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]p", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]p", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{"x", "/.", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"dist", "[", "\"\<linearExtensionFunc\>\"", "]"}], "[", "x",
           "]"}], "==", 
         RowBox[{
          RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}]}], "&&", 
        RowBox[{"x", "\[GreaterEqual]", " ", 
         RowBox[{
          RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}]}]}], ",", "x", ",",
        "Reals"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]p", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]p", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6308611956649837`*^9, 3.630861217278903*^9}, 
   3.6308612866609707`*^9, {3.6308613457913094`*^9, 3.630861350079432*^9}, {
   3.63086140929244*^9, 3.630861454049217*^9}, {3.630861938123494*^9, 
   3.630861987773396*^9}, {3.6308620191239977`*^9, 3.6308621370090923`*^9}, {
   3.630862169742426*^9, 3.630862177304782*^9}}],

Cell[BoxData["176"], "Output",
 CellChangeTimes->{
  3.630861218417161*^9, 3.6308612878945*^9, 3.630861352478202*^9, {
   3.6308614113693943`*^9, 3.6308614558410397`*^9}, 3.6308619910189857`*^9, 
   3.630862103900899*^9, {3.630862140336896*^9, 3.630862178655306*^9}}],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{
  3.630861218417161*^9, 3.6308612878945*^9, 3.630861352478202*^9, {
   3.6308614113693943`*^9, 3.6308614558410397`*^9}, 3.6308619910189857`*^9, 
   3.630862103900899*^9, {3.630862140336896*^9, 3.6308621786664963`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"uUnitGrad", "[", " ", 
   RowBox[{"\[Sigma]", ",", "\[Mu]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630852501808407*^9, 3.6308525028718224`*^9}}],

Cell[BoxData[
 RowBox[{"\[Mu]", "+", 
  RowBox[{"\[Sigma]", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["2", "\[Pi]"], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"dMax", "-", "dMin"}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Erf", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], 
             RowBox[{
              SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox["\[Mu]", 
            RowBox[{
             SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}], 
       "]"}]}]}]]}]}]], "Output",
 CellChangeTimes->{3.63085250385118*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6206401664464893`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Effectivly constant range", "Subsection",
 CellChangeTimes->{{3.6194129263678627`*^9, 3.619412966391687*^9}}],

Cell["\<\
We are interested in where the function equals dMin + 1 and dMax - 1 because \
here the function can be replaced with a simple range test.\
\>", "Text",
 CellChangeTimes->{{3.594021151199852*^9, 3.5940212106218576`*^9}, {
  3.5940607162773743`*^9, 3.594060739747425*^9}, {3.619412995919875*^9, 
  3.6194130080221977`*^9}}],

Cell["\<\
For efficiency it is useful to have the values at which upon rounding the \
function is constant. This is where the function equals dL = {1/dRange, 1 - \
1/dRange}.\
\>", "Text",
 CellChangeTimes->{{3.594744940776745*^9, 3.594744955346952*^9}, {
  3.5947603912686853`*^9, 3.5947603994709663`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "uErfLowHigh", ",", "\[Mu]", ",", "\[Sigma]", ",", "sMin", ",", "sMax", ",",
    "dMin", ",", "dMax"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "uErfLowHigh", ",", "\[Mu]", ",", "\[Sigma]", ",", "sMin", ",", "sMax", ",",
    "dMin", ",", "dMax"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"eErf", "[", " ", 
    RowBox[{
    "x", ",", "\[Gamma]", ",", "\[Mu]", ",", "0", ",", "1", ",", "0", ",", 
     "1"}], "]"}], "]"}], "\[Equal]", "dL"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uErfLowHighf", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dL", ",", "\[Gamma]", ",", "\[Mu]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Solve", "[", 
             RowBox[{"%", ",", "x", ",", 
              RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "/.", 
            " ", 
            RowBox[{
             RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], ")"}]}], ")"}],
         "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"uErfLowHighf", "[", " ", 
  RowBox[{"dL", ",", "\[Gamma]", ",", "\[Mu]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.594744984564384*^9, 3.594745007522423*^9}, {
   3.594745099659281*^9, 3.594745102417795*^9}, {3.5947464274979897`*^9, 
   3.594746434969873*^9}, {3.594760405067442*^9, 3.5947604059432364`*^9}, {
   3.596571104438136*^9, 3.59657112530933*^9}, {3.596571161997429*^9, 
   3.596571170477914*^9}, {3.5965712528376245`*^9, 3.596571303741536*^9}, {
   3.596571359190707*^9, 3.596571378660821*^9}, {3.5965798765758743`*^9, 
   3.5965798915187283`*^9}, 3.5965799671590548`*^9, {3.61943178590667*^9, 
   3.6194318084856462`*^9}, 3.619433848191382*^9, {3.6194338875429688`*^9, 
   3.619433898949181*^9}, {3.619435287960037*^9, 3.61943529910329*^9}, {
   3.619435348089344*^9, 3.619435452387374*^9}, 3.619435522927347*^9, {
   3.619436283548292*^9, 3.619436295873557*^9}, {3.6207281014578857`*^9, 
   3.620728108187016*^9}}],

Cell[BoxData[
 RowBox[{"\[Mu]", "+", 
  FractionBox[
   RowBox[{"InverseErf", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dL", "-", "1"}], ")"}], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
     RowBox[{"dL", " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
   "\[Gamma]"]}]], "Input",
 CellChangeTimes->{{3.6208761595331383`*^9, 3.6208761803901052`*^9}}],

Cell["\<\
dL = {1/dRange, 1 - 1/dRange}. Let  d\[CapitalDelta] = 1/dRange then dL = {d\
\[CapitalDelta], 1 - d\[CapitalDelta]} \
\>", "Text",
 CellChangeTimes->{{3.620876252157441*^9, 3.6208763857252083`*^9}, 
   3.620876488406434*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Mu]", "+", 
    FractionBox[
     RowBox[{"InverseErf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d\[CapitalDelta]", "-", "1"}], ")"}], " ", 
        RowBox[{"Erf", "[", 
         RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
       RowBox[{"d\[CapitalDelta]", " ", 
        RowBox[{"Erf", "[", 
         RowBox[{"\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
     "\[Gamma]"]}], ",", 
   RowBox[{"\[Mu]", "+", 
    FractionBox[
     RowBox[{"InverseErf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "d\[CapitalDelta]", "-", "1"}], ")"}], " ", 
        RowBox[{"Erf", "[", 
         RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "d\[CapitalDelta]"}], ")"}], " ", 
        RowBox[{"Erf", "[", 
         RowBox[{"\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "]"}]}]}], "]"}], 
     "\[Gamma]"]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.620876642602365*^9, 3.62087669168764*^9}}],

Cell[BoxData[
 RowBox[{"tableGammaFuncs", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vars", ",", "ranges"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "vars"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "ranges"}], ";", 
     
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"peakNormedNormalDistribution", "[", 
             RowBox[{
              RowBox[{"pointToUnit", "[", 
               RowBox[{"c", ",", 
                RowBox[{"{", 
                 RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", 
              RowBox[{"scaleToUnit", "[", 
               RowBox[{"s", ",", 
                RowBox[{"{", 
                 RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", "t"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", "Automatic"}], "}"}]}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"peakNormedNormalDistribution", "[", 
             RowBox[{"c", ",", "s", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"sMin", ",", "sMax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"pointToUnit", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{"{", 
                   RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}], ",", 
                RowBox[{"scaleToUnit", "[", 
                 RowBox[{"s", ",", 
                  RowBox[{"{", 
                   RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], "]"}], 
              ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", "Automatic"}], "}"}]}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"c", ",", "s"}], "]"}], ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "sMin", ",", "sMax"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"sMin", ",", "sMax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"200", ",", "200"}], "}"}]}]}], "]"}]}], "}"}]}], "}"}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"uErfLowHighf", "[", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"dMax", "-", "dMin"}], ")"}]}], ",", "\[Gamma]", ",", 
      "\[Mu]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"uErfLowHighf", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"dMax", "-", "dMin"}], ")"}], "-", " ", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"dMax", "-", "dMin"}], ")"}]}], ",", "\[Gamma]", ",", 
      "\[Mu]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6207282807108107`*^9, 3.62072830268817*^9}, {
  3.620730351890272*^9, 3.620730369034349*^9}, {3.620730699124831*^9, 
  3.620730703254027*^9}, {3.620731219319045*^9, 3.6207312744505243`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uErfLowHigh", "[", " ", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "+", 
     FractionBox[
      RowBox[{"InverseErf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dMax", "+", "dMin"}], ")"}], " ", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
         RowBox[{"Erf", "[", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}], 
        RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}], ",", 
    RowBox[{"\[Mu]", "+", 
     FractionBox[
      RowBox[{"InverseErf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "dMax", "-", "dMin"}], ")"}], " ", 
          RowBox[{"Erf", "[", 
           RowBox[{"\[Gamma]", "-", 
            RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}]}], 
        RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.620730744163838*^9, 3.620730805484797*^9}, 
   3.620731150507896*^9, 3.62073120439629*^9, 3.620731500036374*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"uErfLowHigh", "[", " ", 
   RowBox[{"\[Gamma]", ",", "\[Mu]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5965798304462357`*^9, 3.5965798421739063`*^9}, {
   3.5965800155828247`*^9, 3.5965800252073755`*^9}, {3.619435659664659*^9, 
   3.619435664177246*^9}, {3.619435766842804*^9, 3.619435881791131*^9}, {
   3.6194359752068233`*^9, 3.619435999520276*^9}, {3.619436104451179*^9, 
   3.6194361656465483`*^9}, {3.619436201847803*^9, 3.619436212716886*^9}, {
   3.619436359543342*^9, 3.619436366723555*^9}, {3.61943640103922*^9, 
   3.619436410246521*^9}, 3.619436874682021*^9, 3.6206614026639357`*^9, {
   3.6207316586179323`*^9, 3.620731680607883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Mu]", "+", 
    FractionBox[
     RowBox[{"InverseErf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "dMax", "+", "dMin"}], ")"}], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
        RowBox[{"Erf", "[", 
         RowBox[{"\[Gamma]", "-", 
          RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}], 
       RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}], ",", 
   RowBox[{"\[Mu]", "+", 
    FractionBox[
     RowBox[{"InverseErf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Erf", "[", 
          RowBox[{"\[Gamma]", " ", "\[Mu]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "dMax", "-", "dMin"}], ")"}], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], "]"}]}]}], 
       RowBox[{"dMax", "-", "dMin"}]], "]"}], "\[Gamma]"]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.630859649008143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["m"], "Input",
 CellChangeTimes->{3.62099456960813*^9}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "xx$", "}"}], ",", 
   RowBox[{"3.2174545797160095`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.0005000878154203876`"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "128.`"}], "+", "xx$"}], ")"}], "2"]}]]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6209945701804323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicDistroPanel", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", "#1"}], ";", 
        
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], "=", "#2"}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=",
          "#3"}], ";", " ", "\n", "         ", 
        RowBox[{
         RowBox[{"fun", "[", "x_", "]"}], ":=", 
         RowBox[{"eErf", "[", " ", 
          RowBox[{
          "x", ",", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",",
            "dMax"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"center", "=", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"fun", "[", "c", "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<The gradient at the mean is \>\"", ",", 
                  RowBox[{"ToString", "[", "m", "]"}]}], "]"}], ",", "Bold"}],
                "]"}], "]"}], ",", " ", 
             RowBox[{"ImageSize", " ", "->", " ", 
              RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
             RowBox[{"Alignment", " ", "->", " ", "Center"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "\[CapitalOmega]", "]"}], ">", 
                   "1"}], ",", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<The gradient is one at \>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\"\< and \>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ",", 
                  "\"\<The gradient is never one\>\""}], "]"}], ",", "Bold"}],
                "]"}], "]"}], ",", " ", 
             RowBox[{"ImageSize", " ", "->", " ", 
              RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
             RowBox[{"Alignment", " ", "->", " ", "Center"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{
                 "\"\<The distribution is effectivly flat between : 0 - \>\"",
                   ",", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                  "\"\< and \>\"", ",", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
                  "\"\< - \>\"", ",", 
                  RowBox[{"ToString", "[", "sMax", "]"}]}], "]"}], ",", 
                "Bold"}], "]"}], "]"}], ",", " ", 
             RowBox[{"ImageSize", " ", "->", " ", 
              RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
             RowBox[{"Alignment", " ", "->", " ", "Center"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", ")"}], "&"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fun", "[", "x", "]"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"m", "*", 
             RowBox[{"(", 
              RowBox[{"x", "-", "c"}], ")"}]}], " ", "+", " ", 
            RowBox[{"center", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}],
          ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "255"}], "}"}], ",", " ", 
         RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
         RowBox[{"PlotRange", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dMax", "-", "dMin"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"sMax", "-", "sMin"}], ")"}]}]}], ",", 
         RowBox[{"Background", "\[Rule]", "White"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", " ", 
           RowBox[{
            RowBox[{"LabelPointGrad", "[", 
             RowBox[{"c", ",", " ", 
              RowBox[{
               RowBox[{"fun", "[", "#1", "]"}], " ", "&"}], " ", ",", " ", 
              RowBox[{"NumberForm", "[", 
               RowBox[{"m", ",", "3"}], "]"}], ",", "Blue", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", "20"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "\[CapitalOmega]", "]"}], ">", "1"}], 
              ",", " ", 
              RowBox[{"LabelPointGrad", "[", 
               RowBox[{
                RowBox[{"\[CapitalOmega]", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"fun", "[", "#1", "]"}], " ", "&"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[CapitalOmega]", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Green", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "20"}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "\[CapitalOmega]", "]"}], ">", "1"}], 
              ",", " ", 
              RowBox[{"LabelPointGrad", "[", 
               RowBox[{
                RowBox[{"\[CapitalOmega]", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"fun", "[", "#1", "]"}], " ", "&"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[CapitalOmega]", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Green", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "20"}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", " ", 
            RowBox[{"LabelPoint", "[", 
             RowBox[{
              RowBox[{"L", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"fun", "[", "#1", "]"}], " ", "&"}], ",", 
              RowBox[{"L", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Red", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"LabelPoint", "[", 
             RowBox[{
              RowBox[{"L", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"fun", "[", "#1", "]"}], " ", "&"}], ",", 
              RowBox[{"L", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Red", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}], ")"}], "&"}]}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Panel", "[", 
              RowBox[{"#2", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".23", "]"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\"\<  \>\"", ",", 
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"#3", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".74", "]"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"#3", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "[", "1", "]"}], ",", 
               RowBox[{"Scaled", "[", "1", "]"}]}], "}"}]}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "0.6", "]"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620220508829267*^9, 3.620220558083478*^9}, {
   3.62022063847689*^9, 3.620220639185169*^9}, {3.620220728683466*^9, 
   3.620220744887479*^9}, {3.6202207752074137`*^9, 3.620220783106913*^9}, {
   3.620220828493194*^9, 3.6202209437827873`*^9}, {3.620221009227027*^9, 
   3.620221083884714*^9}, {3.620221147927586*^9, 3.620221168956861*^9}, {
   3.6202212603170033`*^9, 3.620221311375404*^9}, 3.620734565424781*^9, {
   3.62098881177666*^9, 3.6209888127050667`*^9}, {3.620994300916453*^9, 
   3.6209943094637547`*^9}, {3.6209945882280207`*^9, 3.620994592571041*^9}, {
   3.620994746482381*^9, 3.620994755926939*^9}, {3.621074055861731*^9, 
   3.6210740569160357`*^9}, {3.62107412078321*^9, 3.621074130454093*^9}, {
   3.621074180801654*^9, 3.621074201309348*^9}, {3.621074241722227*^9, 
   3.621074334311722*^9}, {3.6210766632656393`*^9, 3.621076670834962*^9}, {
   3.621077039278462*^9, 3.6210770918636017`*^9}, {3.621077142718914*^9, 
   3.621077152985298*^9}, {3.621077191460046*^9, 3.6210772672315197`*^9}, {
   3.628972032080357*^9, 3.628972083372851*^9}, {3.628973375503179*^9, 
   3.6289734248150043`*^9}, {3.630786407223576*^9, 3.6307864072419443`*^9}, {
   3.630786479686812*^9, 3.630786479717595*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Mu]$$ = 0.56862765, $CellContext`c$$ = 
  145.00005075, $CellContext`\[Sigma]$$ = 
  0.25254901960784315`, $CellContext`s$$ = 64.4, $CellContext`\[Gamma]$$ = 
  2.7998793354436273`, $CellContext`g$$ = 
  0.010979918962524027`, $CellContext`sMin$$ = 0, $CellContext`sMax$$ = 
  255, $CellContext`dMin$$ = 0, $CellContext`dMax$$ = 
  255, $CellContext`sRange$$ = 255, $CellContext`dRange$$ = 
  255, $CellContext`s\[CapitalDelta]$$, $CellContext`d\[CapitalDelta]$$, \
$CellContext`\[Kappa]$$ = 1, $CellContext`\[Delta]$$ = 
  1.673347772492084, $CellContext`m$$ = 
  1.673347772492084, $CellContext`\[Omega]$$ = {0.31236162282779406`, 
  0.824893677172206}, $CellContext`\[CapitalOmega]$$ = {79.65221382108749, 
  210.3478876789125}, $CellContext`\[Lambda]$$ = {0.026281891095253918`, 
  0.9902475812838892}, $CellContext`L$$ = {6.701882229289749, 
  252.51313322739176`}, $CellContext`center$$ = {145.00005075, 
  131.7728209864213}, $CellContext`fun$$, $CellContext`sliders$$ = Dynamic[
   Column[
    ReplaceRepeated[{
      If[
       $CellContext`show["\[Mu]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
         N[1/255]}], Null], 
      If[
       $CellContext`show["c"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`sMin$$, $CellContext`c$$, $CellContext`sMax$$}, \
($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; {{$CellContext`\[Mu]Min, \
$CellContext`cMin}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
            $CellContext`setDistroValues[{{
              0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
               1}}, {{#, #3}, {$CellContext`dMin$$, $CellContext`dMax$$}}, \
$CellContext`Unit -> False, $CellContext`G -> 
             True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
            $CellContext`setDistroValues[{{
              1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["dRange"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
      If[
       $CellContext`show["\[Sigma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Sigma]Min], 
         Dynamic[$CellContext`\[Sigma]Max]}], Null], 
      If[
       $CellContext`show["s"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`ssMin], 
         Dynamic[$CellContext`ssMax]}], Null], 
      If[
       $CellContext`show["\[Gamma]"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             True, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`\[Gamma]Min], 
         Dynamic[$CellContext`\[Gamma]Max]}], Null], 
      If[
       $CellContext`show["g"], 
       $CellContext`ValueThumbSlider[
        Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; {{$CellContext`\
\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
            $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
             False, $CellContext`G -> 
             True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
         Dynamic[$CellContext`gMin], 
         Dynamic[$CellContext`gMax]}], Null]}, {
       Pattern[$CellContext`x, 
        BlankNullSequence[]], Null, 
       Pattern[$CellContext`y, 
        BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]]], \
$CellContext`selector$$ = Dynamic[
   Grid[{{
      $CellContext`togButton["dRange", "dst"], $CellContext`setUnitButton, 
      $CellContext`setRangeButton[$CellContext`sMin$$, $CellContext`sMax$$]}, \
{"Mean", 
      $CellContext`togButton["\[Mu]"], 
      $CellContext`togButton["c"]}, {"Std", 
      $CellContext`togButton["\[Sigma]"], 
      $CellContext`togButton["s"]}, {"G", 
      $CellContext`togButton["\[Gamma]"], 
      $CellContext`togButton["g"]}}, 
    Dividers -> {{2 -> Black}, {2 -> Black}}]], $CellContext`output$$ = {
   Dynamic[
    (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = #; \
{{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; $CellContext`fun$$[
       Pattern[$CellContext`x$, 
        Blank[]]] := $CellContext`eErf[$CellContext`x$, $CellContext`g$$, \
$CellContext`c$$, $CellContext`sMin$$, $CellContext`sMax$$, \
$CellContext`dMin$$, $CellContext`dMax$$]; $CellContext`center$$ = \
{$CellContext`c$$, 
       $CellContext`fun$$[$CellContext`c$$]}; Column[{
       Panel[
        Dynamic[
         Style[
          StringJoin["The gradient at the mean is ", 
           ToString[$CellContext`m$$]], Bold]], ImageSize -> Scaled[1], 
        Alignment -> Center, Background -> LightBlue], 
       Panel[
        Dynamic[
         Style[
          If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
           StringJoin["The gradient is one at ", 
            ToString[
             Part[$CellContext`\[CapitalOmega]$$, 1]], " and ", 
            ToString[
             Part[$CellContext`\[CapitalOmega]$$, 2]]], 
           "The gradient is never one"], Bold]], ImageSize -> Scaled[1], 
        Alignment -> Center, Background -> LightGreen], 
       Panel[
        Dynamic[
         Style[
          StringJoin["The distribution is effectivly flat between : 0 - ", 
           ToString[
            Part[$CellContext`L$$, 1]], " and ", 
           ToString[
            Part[$CellContext`L$$, 2]], " - ", 
           ToString[$CellContext`sMax$$]], Bold]], ImageSize -> Scaled[1], 
        Alignment -> Center, Background -> 
        LightRed]}])& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}]], 
   Dynamic[
    (Plot[{
      $CellContext`fun$$[$CellContext`x], $CellContext`m$$ ($CellContext`x - \
$CellContext`c$$) + Part[$CellContext`center$$, 2]}, {$CellContext`x, 0, 255},
      Frame -> True, 
     PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, 
     AspectRatio -> ($CellContext`dMax$$ - \
$CellContext`dMin$$)/($CellContext`sMax$$ - $CellContext`sMin$$), Background -> 
     White, Epilog -> {
       $CellContext`LablePointGrad[$CellContext`c$$, $CellContext`fun$$[#]& , 
        
        NumberForm[$CellContext`m$$, 3], Blue, {0, -1}, 20], 
       If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
        $CellContext`LablePointGrad[
         Part[$CellContext`\[CapitalOmega]$$, 1], $CellContext`fun$$[#]& , 
         Round[
          Part[$CellContext`\[CapitalOmega]$$, 1]], Green, {0, 0}, 20]], 
       If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
        $CellContext`LablePointGrad[
         Part[$CellContext`\[CapitalOmega]$$, 2], $CellContext`fun$$[#]& , 
         Round[
          Part[$CellContext`\[CapitalOmega]$$, 2]], Green, {0, 0}, 20]], 
       $CellContext`LablePoint[
        Part[$CellContext`L$$, 1], $CellContext`fun$$[#]& , 
        Part[$CellContext`L$$, 1], Red, {0, -1}], 
       $CellContext`LablePoint[
        Part[$CellContext`L$$, 2], $CellContext`fun$$[#]& , 
        Part[$CellContext`L$$, 2], Red, {0, 
        1}]}]& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\
\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}}, \
{{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}}, {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}}]]}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Column[
          ReplaceRepeated[{
            If[
             $CellContext`show["\[Mu]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Mu]$$}, ($CellContext`\[Mu]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{#, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {$CellContext`\[Mu]Min, \
$CellContext`\[Mu]Max, 
               N[1/255]}], Null], 
            If[
             $CellContext`show["c"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`sMin$$, $CellContext`c$$, \
$CellContext`sMax$$}, ($CellContext`sMin$$ = #; $CellContext`sMax$$ = #3; \
{{$CellContext`\[Mu]Min, $CellContext`cMin}, {$CellContext`\[Sigma]Min, \
$CellContext`ssMin}, {$CellContext`\[Gamma]Max, $CellContext`gMax}} = N[
                  $CellContext`setDistroValues[{{
                    0, #}, {$CellContext`\[Sigma]Min, $CellContext`ssMin}, \
{$CellContext`\[Gamma]Max, 
                    1}}, {{#, #3}, {$CellContext`dMin$$, \
$CellContext`dMax$$}}, $CellContext`Unit -> False, $CellContext`G -> 
                   True]]; {{$CellContext`\[Mu]Max, $CellContext`cMax}, \
{$CellContext`\[Sigma]Max, $CellContext`ssMax}, {$CellContext`\[Gamma]Min, \
$CellContext`gMin}} = N[
                  $CellContext`setDistroValues[{{
                    1, #3}, {$CellContext`\[Sigma]Max, $CellContext`ssMax}, \
{$CellContext`\[Gamma]Max, $CellContext`gMax}}, {{#, #3}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, #2}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["dRange"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`dMin$$, $CellContext`dMax$$}, \
($CellContext`dMin$$ = #; $CellContext`dMax$$ = #2; {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {0, 255, 1}], Null], 
            If[
             $CellContext`show["\[Sigma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Sigma]$$}, ($CellContext`\[Sigma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {#, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Sigma]Min], 
               Dynamic[$CellContext`\[Sigma]Max]}], Null], 
            If[
             $CellContext`show["s"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`s$$}, ($CellContext`s$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, #}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   False]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`ssMin], 
               Dynamic[$CellContext`ssMax]}], Null], 
            If[
             $CellContext`show["\[Gamma]"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`\[Gamma]$$}, ($CellContext`\[Gamma]$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, {#, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   True, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`\[Gamma]Min], 
               Dynamic[$CellContext`\[Gamma]Max]}], Null], 
            If[
             $CellContext`show["g"], 
             $CellContext`ValueThumbSlider[
              
              Dynamic[{$CellContext`g$$}, ($CellContext`g$$ = #; \
{{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\[Sigma]$$, \
$CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = N[
                  $CellContext`setDistroValues[{{$CellContext`\[Mu]$$, \
$CellContext`c$$}, {$CellContext`\[Sigma]$$, $CellContext`s$$}, \
{$CellContext`\[Gamma]$$, #}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, $CellContext`Unit -> 
                   False, $CellContext`G -> 
                   True]]; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = \
$CellContext`setDistroParams[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}])& ], {
               Dynamic[$CellContext`gMin], 
               Dynamic[$CellContext`gMax]}], Null]}, {
             Pattern[$CellContext`x, 
              BlankNullSequence[]], Null, 
             Pattern[$CellContext`y, 
              BlankNullSequence[]]} :> {$CellContext`x, $CellContext`y}]], 
         StandardForm],
        ImageSizeCache->{658., {76., 81.}}]},
      {
       TemplateBox[{PanelBox[
          DynamicBox[
           ToBoxes[
            Grid[{{
               $CellContext`togButton[
               "dRange", "dst"], $CellContext`setUnitButton, 
               $CellContext`setRangeButton[$CellContext`sMin$$, \
$CellContext`sMax$$]}, {"Mean", 
               $CellContext`togButton["\[Mu]"], 
               $CellContext`togButton["c"]}, {"Std", 
               $CellContext`togButton["\[Sigma]"], 
               $CellContext`togButton["s"]}, {"G", 
               $CellContext`togButton["\[Gamma]"], 
               $CellContext`togButton["g"]}}, 
             Dividers -> {{2 -> Black}, {2 -> Black}}], StandardForm]], 
          ImageSize -> Scaled[0.23], Alignment -> Center],"\"  \"",PanelBox[
          DynamicBox[
           ToBoxes[
            (({{$CellContext`\[Mu]$$, $CellContext`c$$}, {$CellContext`\
\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, $CellContext`g$$}} = \
#; {{$CellContext`sMin$$, $CellContext`sMax$$}, {$CellContext`dMin$$, \
$CellContext`dMax$$}} = #2; {{$CellContext`sRange$$, $CellContext`dRange$$, \
$CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, $CellContext`m$$}, \
{$CellContext`\[Lambda]$$, $CellContext`L$$}, {$CellContext`\[Omega]$$, \
$CellContext`\[CapitalOmega]$$}} = #3; $CellContext`fun$$[
               Pattern[$CellContext`x$, 
                
                Blank[]]] := $CellContext`eErf[$CellContext`x$, \
$CellContext`g$$, $CellContext`c$$, $CellContext`sMin$$, $CellContext`sMax$$, \
$CellContext`dMin$$, $CellContext`dMax$$]; $CellContext`center$$ = \
{$CellContext`c$$, 
               $CellContext`fun$$[$CellContext`c$$]}; Column[{
               Panel[
                Dynamic[
                 Style[
                  StringJoin["The gradient at the mean is ", 
                   ToString[$CellContext`m$$]], Bold]], ImageSize -> 
                Scaled[1], Alignment -> Center, Background -> LightBlue], 
               Panel[
                Dynamic[
                 Style[
                  If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
                   StringJoin["The gradient is one at ", 
                    ToString[
                    Part[$CellContext`\[CapitalOmega]$$, 1]], " and ", 
                    ToString[
                    Part[$CellContext`\[CapitalOmega]$$, 2]]], 
                   "The gradient is never one"], Bold]], ImageSize -> 
                Scaled[1], Alignment -> Center, Background -> LightGreen], 
               Panel[
                Dynamic[
                 Style[
                  StringJoin[
                  "The distribution is effectivly flat between : 0 - ", 
                   ToString[
                    Part[$CellContext`L$$, 1]], " and ", 
                   ToString[
                    Part[$CellContext`L$$, 2]], " - ", 
                   ToString[$CellContext`sMax$$]], Bold]], ImageSize -> 
                Scaled[1], Alignment -> Center, Background -> 
                LightRed]}])& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}], StandardForm]], 
          ImageSize -> Scaled[0.74], Alignment -> Center]},
        "RowDefault"]},
      {
       PanelBox[
        DynamicBox[ToBoxes[
          (Plot[{
            $CellContext`fun$$[$CellContext`x], $CellContext`m$$ \
($CellContext`x - $CellContext`c$$) + 
            Part[$CellContext`center$$, 2]}, {$CellContext`x, 0, 255}, Frame -> 
           True, PlotRange -> {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, 
           AspectRatio -> ($CellContext`dMax$$ - \
$CellContext`dMin$$)/($CellContext`sMax$$ - $CellContext`sMin$$), Background -> 
           White, Epilog -> {
             $CellContext`LablePointGrad[$CellContext`c$$, \
$CellContext`fun$$[#]& , 
              NumberForm[$CellContext`m$$, 3], Blue, {0, -1}, 20], 
             If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
              $CellContext`LablePointGrad[
               
               Part[$CellContext`\[CapitalOmega]$$, 
                1], $CellContext`fun$$[#]& , 
               Round[
                Part[$CellContext`\[CapitalOmega]$$, 1]], Green, {0, 0}, 20]], 
             If[Length[$CellContext`\[CapitalOmega]$$] > 1, 
              $CellContext`LablePointGrad[
               
               Part[$CellContext`\[CapitalOmega]$$, 
                2], $CellContext`fun$$[#]& , 
               Round[
                Part[$CellContext`\[CapitalOmega]$$, 2]], Green, {0, 0}, 20]], 
             $CellContext`LablePoint[
              Part[$CellContext`L$$, 1], $CellContext`fun$$[#]& , 
              Part[$CellContext`L$$, 1], Red, {0, -1}], 
             $CellContext`LablePoint[
              Part[$CellContext`L$$, 2], $CellContext`fun$$[#]& , 
              Part[$CellContext`L$$, 2], Red, {0, 
              
              1}]}]& )[{{$CellContext`\[Mu]$$, $CellContext`c$$}, \
{$CellContext`\[Sigma]$$, $CellContext`s$$}, {$CellContext`\[Gamma]$$, \
$CellContext`g$$}}, {{$CellContext`sMin$$, $CellContext`sMax$$}, \
{$CellContext`dMin$$, $CellContext`dMax$$}}, {{$CellContext`sRange$$, \
$CellContext`dRange$$, $CellContext`\[Kappa]$$}, {$CellContext`\[Delta]$$, \
$CellContext`m$$}, {$CellContext`\[Lambda]$$, $CellContext`L$$}, \
{$CellContext`\[Omega]$$, $CellContext`\[CapitalOmega]$$}}], StandardForm],
         ImageSizeCache->{360., {175., 180.}}],
        Alignment->Center,
        ImageSize->{
          Scaled[1], 
          Scaled[1]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->Scaled[0.6]],
  DynamicModuleValues:>{{DownValues[$CellContext`fun$$] = {HoldPattern[
         $CellContext`fun$$[
          Pattern[$CellContext`x$, 
           
           Blank[]]]] :> $CellContext`eErf[$CellContext`x$, $CellContext`g$$, \
$CellContext`c$$, $CellContext`sMin$$, $CellContext`sMax$$, \
$CellContext`dMin$$, $CellContext`dMax$$]}}}]], "Output",
 CellChangeTimes->{
  3.6209885844087048`*^9, 3.6209945946637897`*^9, 3.620994766714432*^9, 
   3.62107437113008*^9, 3.62107669036309*^9, 3.6210771580931807`*^9, 
   3.6210772688110933`*^9, 3.628972041104116*^9, 3.62897208665558*^9, 
   3.628973112974931*^9, 3.6289733776341553`*^9, {3.628973411504212*^9, 
   3.628973426057796*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The compact distribution.", "Subsubsection",
 CellChangeTimes->{{3.619438340080888*^9, 3.61943837332066*^9}, {
  3.620969311400197*^9, 3.620969319948523*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"c", "-", "sMin"}], 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["c",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox["s", 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["s",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"sMax", "-", "sMin"}], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "s"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "s"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{
  3.620742102762967*^9, {3.620742326795683*^9, 3.620742356469542*^9}, 
   3.620742470278451*^9, 3.620743528990169*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        RowBox[{"c", "-", "sMin"}], 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ], 
      TagBox["c",
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "g", " ", 
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}]}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "g"}]],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"sMax", "-", "sMin"}], ")"}]}],
       NumberForm[#, 4]& ], 
      TagBox["g",
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{
  3.620742102762967*^9, {3.620742326795683*^9, 3.620742356469542*^9}, 
   3.620742470278451*^9, 3.620743528996019*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox["\[Mu]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{"sMin", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Mu]"}]}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox["\[Sigma]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Sigma]"}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Sigma]"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", 
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Sigma]"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{
  3.620742102762967*^9, {3.620742326795683*^9, 3.620742356469542*^9}, 
   3.620742470278451*^9, 3.6207435290008574`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"0-1\"\>",
       HoldForm], 
      TagBox["\<\"sMin - sMax\"\>",
       HoldForm]},
     {
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox["\[Mu]",
       NumberForm[#, 4]& ], 
      TagBox[
       RowBox[{"sMin", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sMax", "-", "sMin"}], ")"}], " ", "\[Mu]"}]}],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"Std\"\>",
       HoldForm], 
      TagBox[
       FractionBox[
        InterpretationBox["\<\"1\"\>",
         1,
         Editable->False], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Gamma]"}]],
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox[
        RowBox[{"sMax", "-", "sMin"}], 
        RowBox[{
         SqrtBox[
          InterpretationBox["\<\"2\"\>",
           2,
           Editable->False]], " ", "\[Gamma]"}]],
       NumberForm[#, 4]& ]},
     {
      TagBox["\<\"G\"\>",
       HoldForm], 
      TagBox["\[Gamma]",
       NumberForm[#, 4]& ], 
      TagBox[
       FractionBox["\[Gamma]", 
        RowBox[{"sMax", "-", "sMin"}]],
       NumberForm[#, 4]& ]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Mean", "Std", "G"}, {
      "0-1", "sMin - sMax"}}]]]], "Output",
 CellChangeTimes->{
  3.620742102762967*^9, {3.620742326795683*^9, 3.620742356469542*^9}, 
   3.620742470278451*^9, 3.62074352900452*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dis", "[", "\"\<regionNames\>\"", "]"}], "=", 
  RowBox[{"ReleaseHold", "@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "                ", 
       "\"\<Disgard\>\"", ",", "             ", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "     ", "\"\<Redistribute\>\"", 
       ",", "  ", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Extended Keep\>\"", ",", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dis", "[", "\"\<keepQ\>\"", "]"}], ",", 
       "                                   ", "\"\<Keep\>\"", ",", 
       "                    ", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Extended Keep\>\"", ",", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "     ", "\"\<Redistribute\>\"", 
       ",", "  ", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "                ", 
       "\"\<Disgard\>\"", ",", "              ", 
       RowBox[{"Hold", "[", 
        RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dis", "[", "\"\<ticks\>\"", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"L", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(1\)]\)\>\"", ",", "   ", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Omega]p\), \(1\)]\)\>\"", ",", "Bold", 
            ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1\)]\)\>\"", ",", "   ", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", "c", "]"}], ",", "              ", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[Mu]\>\"", ",", "     ", "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\"", ",", "   ", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Omega]p\), \(2\)]\)\>\"", ",", "Bold", 
            ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"L", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(2\)]\)\>\"", ",", "   ", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"L", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(L\), \(1\)]\)\>\"", ",", "   ", "Bold", 
            ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(1\)]\)\>\"", ",", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(1\)]\)\>\"", ",", 
            "   ", "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", "c", "]"}], ",", "              ", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<C\>\"", ",", "     ", "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(2\)]\)\>\"", ",", 
            "   ", "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(2\)]\)\>\"", ",", 
            "Bold", ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"L", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(L\), \(2\)]\)\>\"", ",", "   ", "Bold", 
            ",", 
            RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
   ";"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"setUpErf", ",", "unitGrad"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUpErf", "[", " ", 
   RowBox[{"\[Sigma]s\[Gamma]g_", ",", "\[Mu]c_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin_", ",", "sMax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dMin_", ",", "dMax_"}], "}"}]}], "}"}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "\[Mu]", ",", "c", ",", "\[Sigma]", ",", "s", ",", "\[Gamma]", 
      ",", "g", ",", "sRange", ",", "dRange", ",", "\[Kappa]", ",", 
      "\[Delta]", ",", "m", ",", "\[Lambda]", ",", "L", ",", "\[Omega]", ",", 
      "\[CapitalOmega]", ",", "\[Omega]p", ",", "\[CapitalOmega]p", ",", 
      "linear", ",", "shift", ",", "dis", ",", "sPts", ",", "pts", ",", 
      "tickstyle"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], "=", " ", 
      RowBox[{"setDistroValues", "[", " ", 
       RowBox[{"\[Sigma]s\[Gamma]g", ",", "\[Mu]c", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}], ",", "opts"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}], "=", 
      RowBox[{"setDistroParams", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<vars\>\"", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", "c"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "s"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]", ",", "g"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<ranges\>\"", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", "dMax"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<param\>\"", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "x", "}"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"dMin", "-", 
          RowBox[{"dRange", 
           FractionBox[
            RowBox[{
             RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"c", "-", "sMin"}], ")"}]}], "]"}], "+", 
             RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"x", "-", "c"}], ")"}]}], "]"}]}], 
            RowBox[{
             RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"c", "-", "sMax"}], ")"}]}], "]"}], "+", 
             RowBox[{"Erf", "[", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"sMin", "-", "c"}], ")"}]}], "]"}]}]]}]}], "]"}], ",",
         "Listable"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<keepQ\>\"", "]"}], "=", 
      RowBox[{
       RowBox[{"\[Delta]", "/", "\[Kappa]"}], " ", ">", " ", "1"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<linearExtensionFunc\>\"", "]"}], "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "x", "}"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{"x", " ", "+", 
           RowBox[{
            RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "]"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dis", "[", "\"\<keepQ\>\"", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalOmega]p", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalOmega]p", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dis", "[", "\"\<linearExtensionFunc\>\"", "]"}], 
                 "[", "x", "]"}], "==", 
                RowBox[{
                 RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}]}],
                "&&", 
               RowBox[{"x", "\[GreaterEqual]", " ", 
                RowBox[{"\[CapitalOmega]", " ", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "x", ",", "Reals", 
              ",", 
              RowBox[{"WorkingPrecision", "\[Rule]", "1"}]}], "]"}]}], "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalOmega]p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"\[CapitalOmega]", " ", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalOmega]p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"Round", "[", 
             RowBox[{"\[CapitalOmega]", " ", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[CapitalOmega]p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", " ", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], ",", 
           RowBox[{
            RowBox[{"\[CapitalOmega]p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", " ", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
           RowBox[{"L", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"\[CapitalOmega]p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
           RowBox[{"L", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Omega]p", "=", 
         RowBox[{"pointToUnit", "[", 
          RowBox[{"\[CapitalOmega]p", ",", 
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<param\>\"", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sRange", ",", "dRange", ",", "\[Kappa]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Delta]", ",", "m"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "L"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]", ",", "\[CapitalOmega]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]p", ",", "\[CapitalOmega]p"}], "}"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[CapitalOmega]p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", " ", 
            RowBox[{"\[CapitalOmega]", " ", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"\[CapitalOmega]p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", " ", 
            RowBox[{"\[CapitalOmega]", " ", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True"}], "}"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"False", ",", "False"}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", 
         RowBox[{"sMin", "+", "1"}]}], ",", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
         RowBox[{"sMax", "-", "1"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<selectRegions\>\"", "]"}], "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "list", "}"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"ReleaseHold", "@", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "            ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<keepQ\>\"", "]"}], ",", 
              "                              ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "5", "]"}], "]"}], ",", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "           ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
              RowBox[{"Hold", "[", 
               RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<regionNames\>\"", "]"}], "=", " ", 
      RowBox[{
       RowBox[{"dis", "[", "\"\<selectRegions\>\"", "]"}], "[", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Disgard\>\"", ",", "\"\<Redistribute\>\"", ",", 
         "\"\<Extended Keep\>\"", ",", "\"\<Keep\>\"", ",", 
         "\"\<Extended Keep\>\"", ",", "\"\<Redistribute\>\"", ",", 
         "\"\<Disgard\>\""}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<numRegions\>\"", "]"}], "=", 
      RowBox[{"Length", "[", 
       RowBox[{"dis", "[", "\"\<regionNames\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"bounds", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"dis", "[", "\"\<numRegions\>\"", "]"}], "+", "1"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"syms", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"column", "[", "\"\<\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"dis", "[", "\"\<numRegions\>\"", "]"}], "+", "1"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"syms", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{"column", "[", "\"\<tMin\>\"", "]"}]}], ";", " ", 
     RowBox[{
      RowBox[{"bounds", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", "sMin"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "            ", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", "\"\<\!\(\*SubscriptBox[\(L\), \(1\)]\)\>\"", "]"}]}],
         ";", "   ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", "   ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(L\), \(1\)]\)\>\""}], "]"}]}], " ", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(1\)]\)\>\"", 
          "]"}]}], ";", " ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"\[CapitalOmega]p", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(1\)]\)\>\""}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(1\)]\)\>\"", "]"}]}],
         ";", "    ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"\[CapitalOmega]", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", "  ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(1\)]\)\>\""}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dis", "[", "\"\<keepQ\>\"", "]"}], ",", 
       "                              ", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(2\)]\)\>\"", "]"}]}],
         ";", "    ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"\[CapitalOmega]", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", "  ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(2\)]\)\>\""}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<extendedKeepQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(2\)]\)\>\"", 
          "]"}]}], ";", "  ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"\[CapitalOmega]p", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(2\)]\)\>\""}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<redistributeQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{
         "column", "[", "\"\<\!\(\*SubscriptBox[\(L\), \(2\)]\)\>\"", "]"}]}],
         ";", "     ", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", "  ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(L\), \(2\)]\)\>\""}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dis", "[", "\"\<disgardQ\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "            ", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"column", "[", "\"\<tMax\>\"", "]"}]}], ";", 
        RowBox[{
         RowBox[{"bounds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", "sMax"}]}], ",", 
       "             ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"syms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<tMax\>\""}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<regionSymbols\>\"", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"syms", "//.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"column", "[", "list__", "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"Column", "[", 
             RowBox[{"{", "list", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(L\), \(1\)]\)\>\"", "\[Rule]", " ", 
            "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(1\)]\)\>\""}], ",", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(L\), \(2\)]\)\>\"", "\[Rule]", " ", 
            "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(2\)]\)\>\""}], ",", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(1\)]\)\>\"", 
            "\[Rule]", "\"\<\!\(\*SubscriptBox[\(\[Omega]p\), \(1\)]\)\>\""}],
            ",", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]p\), \(2\)]\)\>\"", 
            "\[Rule]", "\"\<\!\(\*SubscriptBox[\(\[Omega]p\), \(2\)]\)\>\""}],
            " ", ",", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(1\)]\)\>\"", 
            "\[Rule]", "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1\)]\)\>\""}], 
           " ", ",", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(2\)]\)\>\"", 
            "\[Rule]", "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\""}], 
           " ", ",", 
           RowBox[{"\"\<tMin\>\"", "\[Rule]", "0"}], ",", 
           RowBox[{"\"\<tMax\>\"", "\[Rule]", " ", "1"}]}], " ", "}"}]}], ",", 
        RowBox[{"syms", "/.", 
         RowBox[{
          RowBox[{"column", "[", "list__", "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "list", "}"}], "]"}]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<regionBounds\>\"", "]"}], "=", "bounds"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tickstyle", "[", 
       RowBox[{"pos_", ",", "txt_"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"pos", ",", "  ", 
        RowBox[{"Style", "[", 
         RowBox[{"txt", ",", "   ", "Bold", ",", 
          RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.03", ",", "0.01"}], "}"}]}], "}"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<ticks\>\"", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"tickstyle", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<regionBounds\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"dis", "[", "\"\<regionSymbols\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tickstyle", "[", 
           RowBox[{
            RowBox[{"N", "[", "c", "]"}], ",", "\"\<\[Mu]\>\""}], "]"}], ",", 
          
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"dis", "[", "\"\<numRegions\>\"", "]"}], "/", "2"}], 
            "]"}], "+", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"tickstyle", " ", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<regionBounds\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"dis", "[", "\"\<regionSymbols\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tickstyle", "[", 
           RowBox[{
            RowBox[{"N", "[", "c", "]"}], ",", "\"\<C\>\""}], "]"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"dis", "[", "\"\<numRegions\>\"", "]"}], "/", "2"}], 
            "]"}], "+", "1"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], "=", "0.6"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "/", "\[Kappa]"}], " ", "<", " ", "1"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"dis", "[", "\"\<piecewise\>\"", "]"}], "=", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "x", "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", "\[IndentingNewLine]", "    ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "dMin", ",", "                                            ", 
                  
                  RowBox[{"x", "<", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}],
                   ",", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"dMax", ",", "                       ", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x"}]}], 
                 " ", "}"}]}], "}"}], "]"}], "]"}], ",", "Listable"}], 
           "]"}]}], ";"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<color\>\"", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", "\[IndentingNewLine]", "    ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", 
                 RowBox[{
                  RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", "Red"}], 
                 "]"}], ",", "                                       ", 
                RowBox[{"x", "<", 
                 RowBox[{"L", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", 
                 RowBox[{
                  RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                  "Green"}], "]"}], ",", "  ", 
                RowBox[{
                 RowBox[{"L", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                 RowBox[{"L", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", 
                 RowBox[{
                  RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", "Red"}], 
                 "]"}], ",", "       ", 
                RowBox[{
                 RowBox[{"L", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x"}]}], 
               "}"}]}], "}"}], "]"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"linear", "=", " ", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"x", " ", "+", " ", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", " ", 
              RowBox[{"\[CapitalOmega]", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "-", " ", 
             RowBox[{"\[CapitalOmega]", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"shift", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "-", 
          RowBox[{"linear", "[", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<piecewise\>\"", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<selectRegions\>\"", "]"}], "[", 
              RowBox[{"{", "\[IndentingNewLine]", "    ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "dMin", ",", 
                  "                                                           \
", 
                  RowBox[{"x", "<", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}],
                   ",", "               ", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"linear", "[", "x", "]"}], ",", 
                  "                         ", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"linear", "[", "x", "]"}], ",", 
                  "                           ", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"linear", "[", "x", "]"}], ",", 
                  "                           ", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", "x", 
                    "]"}], "-", "shift"}], ",", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<=", "x", "<", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"dMax", " ", "-", "shift"}], ",", 
                  "                      ", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x"}]}], 
                 "}"}]}], "}"}], "]"}], "]"}], "]"}], ",", "Listable"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dis", "[", "\"\<color\>\"", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"dis", "[", "\"\<selectRegions\>\"", "]"}], "[", 
              RowBox[{"{", "\[IndentingNewLine]", "    ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    "Red"}], "]"}], ",", "                       ", 
                  RowBox[{"x", "<", 
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    "Green"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                   
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.25", ",", "0.75", ",", "1"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                   
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    "Blue"}], "]"}], ",", "  ", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                   
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.25", ",", "0.75", ",", "1"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                   
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    "Green"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"\[CapitalOmega]p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x", "<", 
                   
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", 
                   RowBox[{
                    RowBox[{"dis", "[", "\"\<opacity\>\"", "]"}], ",", 
                    "Red"}], "]"}], ",", "     ", 
                  RowBox[{
                   RowBox[{"L", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "x"}]}], 
                 "}"}]}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", "]"}]}],
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sPts", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"\[CapitalOmega]", ",", "L"}], "}"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dis", "[", "\"\<pts\>\"", "]"}], "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"sPts", ",", 
         RowBox[{
          RowBox[{"dis", "[", "\"\<func\>\"", "]"}], "[", "sPts", "]"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", "dis"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.620739055597185*^9, 3.62073913024752*^9}, 
   3.62073930041581*^9, {3.6207394030904913`*^9, 3.6207394035790567`*^9}, {
   3.620739650949884*^9, 3.620739703187134*^9}, {3.6207398162197447`*^9, 
   3.620739949285655*^9}, {3.620739984939137*^9, 3.6207400108557253`*^9}, {
   3.620746768945578*^9, 3.620746778830472*^9}, {3.620746812613344*^9, 
   3.620746824507297*^9}, {3.620746860646861*^9, 3.620746865911281*^9}, 
   3.620747360269017*^9, {3.620747497004861*^9, 3.620747509960374*^9}, {
   3.620747543473166*^9, 3.620747595151669*^9}, {3.62074809708648*^9, 
   3.620748097603085*^9}, {3.6207497450132427`*^9, 3.620749775515273*^9}, {
   3.620749834833571*^9, 3.620749853561882*^9}, {3.6207501596828003`*^9, 
   3.6207502092602673`*^9}, 3.620750328275001*^9, {3.620750412975491*^9, 
   3.6207504342264757`*^9}, 3.620751829393435*^9, {3.6207524094491034`*^9, 
   3.620752424322281*^9}, 3.62075414580249*^9, {3.620787278578968*^9, 
   3.620787301876203*^9}, {3.6207873776773*^9, 3.620787383197177*^9}, {
   3.620791681862027*^9, 3.6207917076925173`*^9}, 3.620791745532564*^9, {
   3.620791784426778*^9, 3.620791787370432*^9}, {3.6207918241589937`*^9, 
   3.620791836768736*^9}, {3.620792256754569*^9, 3.620792380238657*^9}, {
   3.620794456398909*^9, 3.62079445939624*^9}, {3.620798034043692*^9, 
   3.6207980906550217`*^9}, {3.620798547554966*^9, 3.620798549361438*^9}, {
   3.62079930866724*^9, 3.6207993128208313`*^9}, {3.6207993745249166`*^9, 
   3.620799385737849*^9}, {3.620799425956091*^9, 3.6207994825523853`*^9}, {
   3.6207995569345284`*^9, 3.620799580422537*^9}, {3.620799637879942*^9, 
   3.620799660510767*^9}, {3.620799804156006*^9, 3.620799977671809*^9}, {
   3.6208000085889482`*^9, 3.62080003649675*^9}, {3.620800131138317*^9, 
   3.620800280028173*^9}, {3.620800397183053*^9, 3.62080041588762*^9}, {
   3.6208004472708073`*^9, 3.620800509666965*^9}, {3.6208005486013947`*^9, 
   3.620800563300971*^9}, {3.620802317360867*^9, 3.620802368367056*^9}, {
   3.6208024219435463`*^9, 3.620802492377082*^9}, {3.6208025773976727`*^9, 
   3.620802621627778*^9}, {3.620802711377084*^9, 3.6208027291539507`*^9}, {
   3.620803000476459*^9, 3.620803014836454*^9}, {3.620960886745985*^9, 
   3.62096090430676*^9}, {3.620962688132773*^9, 3.620962707152404*^9}, {
   3.62096276595759*^9, 3.6209627699307547`*^9}, {3.620962815619425*^9, 
   3.620962861393196*^9}, {3.6209628942211103`*^9, 3.620962924735955*^9}, {
   3.620962979011525*^9, 3.620963022703467*^9}, {3.6209630587594757`*^9, 
   3.620963060373501*^9}, {3.620963242238707*^9, 3.6209632836226883`*^9}, {
   3.620963331811781*^9, 3.6209633328663063`*^9}, 3.620965574522481*^9, {
   3.620965640097817*^9, 3.620965659611555*^9}, {3.620965739997678*^9, 
   3.620965763847967*^9}, 3.6209678320018883`*^9, {3.62096789983084*^9, 
   3.620967941334408*^9}, {3.620968024901063*^9, 3.6209680299159737`*^9}, {
   3.620968064333057*^9, 3.62096814472398*^9}, {3.620968278987338*^9, 
   3.620968338998086*^9}, {3.6209684129588833`*^9, 3.620968470989641*^9}, {
   3.620968722581388*^9, 3.620968730380084*^9}, {3.620977649082551*^9, 
   3.6209776631316557`*^9}, 3.620977783952141*^9, {3.6209889760325108`*^9, 
   3.620989057244484*^9}, {3.6209891159698343`*^9, 3.6209891216864643`*^9}, {
   3.620989156829176*^9, 3.620989179161345*^9}, {3.6209892687289743`*^9, 
   3.620989290562697*^9}, 3.620989652913109*^9, 3.620989775543483*^9, 
   3.621058210984481*^9, {3.6210586115216417`*^9, 3.621058638235916*^9}, {
   3.621063016223337*^9, 3.621063018406292*^9}, {3.6210716884194517`*^9, 
   3.6210716902436743`*^9}, {3.621074829357287*^9, 3.6210748995623693`*^9}, {
   3.6210749580290127`*^9, 3.62107496483971*^9}, {3.6210750112799788`*^9, 
   3.6210753705471478`*^9}, {3.621075435602334*^9, 3.621075469068651*^9}, {
   3.630783366623392*^9, 3.6307834555409193`*^9}, {3.6307834928287582`*^9, 
   3.630783571945139*^9}, {3.630783615843075*^9, 3.630783633950514*^9}, {
   3.6307837379982452`*^9, 3.6307837593415833`*^9}, {3.630783887978758*^9, 
   3.6307839028082848`*^9}, 3.63078474318032*^9, {3.630784776001248*^9, 
   3.630784815003109*^9}, {3.6307848492850122`*^9, 3.630784877443859*^9}, {
   3.6307849384044523`*^9, 3.6307850037012997`*^9}, {3.630785035519697*^9, 
   3.630785057558609*^9}, {3.630794311658154*^9, 3.630794323249011*^9}, {
   3.630794359672699*^9, 3.630794401566886*^9}, 3.630794444416909*^9, {
   3.630829242398527*^9, 3.630829245731646*^9}, {3.6308351621318083`*^9, 
   3.630835172336059*^9}, {3.6308352115801363`*^9, 3.630835214600164*^9}, {
   3.630836707576847*^9, 3.6308367077579603`*^9}, {3.6308376066341543`*^9, 
   3.63083771065456*^9}, {3.630837794495427*^9, 3.630837805960836*^9}, {
   3.630860489509163*^9, 3.63086053260184*^9}, {3.630860598367958*^9, 
   3.630860600807982*^9}, {3.630860663642748*^9, 3.6308606953079357`*^9}, {
   3.630860737560507*^9, 3.6308607629959793`*^9}, {3.630862453851952*^9, 
   3.630862556944886*^9}, {3.630862588182819*^9, 3.630862589045959*^9}, {
   3.630864017743917*^9, 3.630864055371518*^9}, {3.6308642650899143`*^9, 
   3.630864301151329*^9}, {3.6308644669037943`*^9, 3.630864471046206*^9}, {
   3.630864563701399*^9, 3.630864650640616*^9}, {3.630865156257697*^9, 
   3.630865197185903*^9}, {3.630865249079459*^9, 3.6308652635904713`*^9}, {
   3.630865307978202*^9, 3.63086537625499*^9}, {3.6308654064843683`*^9, 
   3.630865414788484*^9}, {3.630865502268313*^9, 3.630865509701535*^9}, {
   3.630866328816621*^9, 3.6308663306746283`*^9}, {3.6308679718227253`*^9, 
   3.630868084156373*^9}, {3.63091334338614*^9, 3.6309133463006372`*^9}, {
   3.63091821049293*^9, 3.630918233007814*^9}, 3.630918302656171*^9, {
   3.630918356259219*^9, 3.630918406537984*^9}, {3.6309185095517063`*^9, 
   3.63091855543049*^9}, {3.630918617241344*^9, 3.630918669520789*^9}, {
   3.630919580088798*^9, 3.630919661979891*^9}, {3.630919694370468*^9, 
   3.630919784116427*^9}, {3.630919822099732*^9, 3.6309198346509533`*^9}, {
   3.630920020185336*^9, 3.630920070033328*^9}, {3.6309201269879093`*^9, 
   3.630920151102943*^9}, {3.630920274954811*^9, 3.6309203002102222`*^9}, {
   3.630922262374118*^9, 3.6309225208443317`*^9}, {3.630922573441283*^9, 
   3.630922610696528*^9}, {3.630922699143469*^9, 3.630922701525481*^9}, {
   3.630922820434877*^9, 3.6309228759092197`*^9}, 3.630923828014646*^9, {
   3.630923873728612*^9, 3.6309239220396757`*^9}, {3.63092401316778*^9, 
   3.6309241919665947`*^9}, {3.6309260590959387`*^9, 3.630926151681931*^9}, {
   3.6309261844288816`*^9, 3.630926222307831*^9}, {3.630926267514703*^9, 
   3.630926274439834*^9}, {3.630926347043232*^9, 3.630926367758973*^9}, {
   3.630926469566696*^9, 3.630926473717722*^9}, {3.630926512005321*^9, 
   3.630926565432558*^9}, {3.6309265956888247`*^9, 3.630926605968108*^9}, {
   3.630926657098811*^9, 3.630926692127666*^9}, {3.6309268012111588`*^9, 
   3.630926801804628*^9}, {3.630927826230776*^9, 3.630927861641692*^9}, {
   3.6309278949258633`*^9, 3.630927933719468*^9}, {3.63092797220361*^9, 
   3.630928011975572*^9}, {3.630928119556288*^9, 3.630928133067635*^9}, {
   3.630929442529769*^9, 3.630929470608273*^9}, {3.630929504481089*^9, 
   3.630929642234428*^9}, {3.630929807781639*^9, 3.630929998095476*^9}, {
   3.630930635155899*^9, 3.630930670086134*^9}, {3.6309310702497272`*^9, 
   3.630931102296194*^9}, {3.630931391252675*^9, 3.630931426746091*^9}, {
   3.6309353974196157`*^9, 3.630935436626464*^9}, {3.630935505355377*^9, 
   3.630935514910555*^9}, {3.630935603020145*^9, 3.630935606987915*^9}, {
   3.6309382268705397`*^9, 3.630938277693969*^9}, {3.630938316924794*^9, 
   3.63093831943817*^9}, {3.630938990701404*^9, 3.6309390191986303`*^9}, {
   3.630939075293667*^9, 3.630939086109147*^9}, {3.6309391202497883`*^9, 
   3.630939176882065*^9}, {3.630939519506465*^9, 3.630939535568522*^9}, {
   3.630939569870645*^9, 3.630939679030306*^9}, {3.630939736082437*^9, 
   3.630939784936934*^9}, {3.630939986238594*^9, 3.630940016720277*^9}, {
   3.630940053380411*^9, 3.630940113945084*^9}, {3.630940177942423*^9, 
   3.630940187988285*^9}, {3.630940224017486*^9, 3.630940236760779*^9}, {
   3.630940321883663*^9, 3.630940335846819*^9}, {3.6309405063136387`*^9, 
   3.630940523102105*^9}, {3.630940723358101*^9, 3.630940933517932*^9}, {
   3.630940971255124*^9, 3.630941021116234*^9}, {3.630941122511849*^9, 
   3.630941142802266*^9}, {3.630941173616186*^9, 3.6309411788004913`*^9}, {
   3.6309412319844093`*^9, 3.630941309489718*^9}, {3.630941429167157*^9, 
   3.630941429828842*^9}, {3.6309415759805937`*^9, 3.6309415818363113`*^9}, {
   3.630941663051634*^9, 3.630941982001457*^9}, {3.630942211229844*^9, 
   3.630942220976242*^9}, {3.63094241042372*^9, 3.630942511965353*^9}, {
   3.6309425651779957`*^9, 3.63094257065802*^9}, {3.630942609698531*^9, 
   3.630942868482811*^9}, 3.630943045047641*^9, {3.63094322945406*^9, 
   3.630943239340111*^9}, {3.6309465198702793`*^9, 3.630946670237383*^9}, {
   3.630946711588367*^9, 3.6309467148528976`*^9}, 3.630946816671756*^9, {
   3.6309468934817944`*^9, 3.6309469318016653`*^9}, {3.630947411446476*^9, 
   3.63094742451793*^9}, {3.6309513169761553`*^9, 3.630951327329996*^9}, {
   3.6309513916629066`*^9, 3.6309514453307133`*^9}, {3.6309515082386923`*^9, 
   3.6309515488261623`*^9}, {3.630951706867813*^9, 3.630951742509156*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "AlternateTicks", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AlternateTicks", "[", 
   RowBox[{"ticks_", ",", 
    RowBox[{"topQ_:", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "top", ",", "bottom"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", "ticks"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"topQ", ",", "  ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"top", "=", "\"\<\>\""}], ";", 
        RowBox[{"bottom", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.1"}], "}"}]}], "}"}], "]"}], "}"}], 
          "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"top", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.1"}], "}"}]}], "}"}], "]"}], "}"}], 
          "]"}]}], ";", " ", 
        RowBox[{"bottom", "=", "\"\<\>\""}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", "i", "]"}], ",", 
         RowBox[{
          RowBox[{"out", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"top", ",", 
              RowBox[{"ticks", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "Center",
             ",", "0"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"out", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ticks", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "bottom"}], " ", 
             "}"}], ",", "Center", ",", "0"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ticks", "]"}]}], "}"}]}], "]"}], ";", 
     "out"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6309455442051983`*^9, 3.630945840127556*^9}, {
  3.630945903215098*^9, 3.630945903998726*^9}, {3.6309459346318293`*^9, 
  3.630945934994836*^9}, {3.630946104978712*^9, 3.630946107325507*^9}, {
  3.630946222681178*^9, 3.63094626737438*^9}, {3.630946970901164*^9, 
  3.630947163812327*^9}, {3.630947207549559*^9, 3.6309472662278643`*^9}, {
  3.630947299040915*^9, 3.630947304654562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DistroPlot", "[", "dist_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testBg", ",", "circSize", ",", "plt", ",", "usePiecewise"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"usePiecewise", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"dist", "[", "\"\<piecewise\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<", 
       RowBox[{".98", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"testBg", "=", 
      RowBox[{"CheckerBoardFromList", "[", 
       RowBox[{
        RowBox[{"dist", "[", "\"\<regionBounds\>\"", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dist", "[", "\"\<selectRegions\>\"", "]"}], "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", "Red"}], 
             "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", "Green"}], 
             "]"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.25", ",", "0.75", ",", "1"}], "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", "Blue"}], 
             "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.25", ",", "0.75", ",", "1"}], "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", "Green"}], 
             "]"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<opacity\>\"", "]"}], ",", "Red"}], 
             "]"}], "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{"List", ",", 
          RowBox[{"dist", "[", "\"\<regionNames\>\"", "]"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "0.6"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "0.8"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circSize", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.02", ",", "0.02"}], "}"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", " ", 
         RowBox[{
          RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plt", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"If", "[", 
          RowBox[{"usePiecewise", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"dist", "[", "\"\<piecewise\>\"", "]"}], "[", "x", 
              "]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BinaryTicks", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}], 
             ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MixTicks", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "256"}]}], "}"}], 
                  "&"}], ",", 
                 RowBox[{"BinaryTicks", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "5"}], 
                  "]"}]}], "]"}], ",", " ", 
               RowBox[{"AlternateTicks", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dist", "[", "\"\<ticks\>\"", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "False"}], " ", "]"}], 
               ",", "10"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"MixTicks", "[", 
              RowBox[{
               RowBox[{"BinaryTicks", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "5"}], "]"}], 
               ",", " ", 
               RowBox[{"AlternateTicks", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dist", "[", "\"\<ticks\>\"", "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "True"}], " ", "]"}], 
               ",", "10"}], "]"}]}], " ", "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"LabelPointGrad", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<vars\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
              " ", "&"}], ",", 
             RowBox[{"Round", "[", " ", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<vars\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", "Blue", 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "11", ",", "circSize"}], 
            " ", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"LabelPointGrad", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
              " ", "&"}], ",", 
             RowBox[{"Round", "[", " ", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             "Green", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "11", ",", "circSize"}], 
            " ", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"LabelPointGrad", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
              " ", "&"}], ",", 
             RowBox[{"Round", "[", " ", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
             "Green", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "11", ",", "circSize"}], 
            " ", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"LabelPoint", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "2", ",", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
              " ", "&"}], ",", 
             RowBox[{"Round", "[", " ", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             "Red", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "circSize"}], " ", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"LabelPoint", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "2", ",", "2"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
              " ", "&"}], ",", 
             RowBox[{"Round", "[", " ", 
              RowBox[{
               RowBox[{"dist", "[", "\"\<param\>\"", "]"}], " ", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
             "Red", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "circSize"}], " ", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"valTable", "[", " ", 
                RowBox[{
                 RowBox[{"dist", "[", "\"\<vars\>\"", "]"}], ",", " ", 
                 RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}]}], "]"}], ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Opacity", "[", 
                 RowBox[{"0.5", ",", "White"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".05", ",", ".9"}], "}"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
              "usePiecewise", ",", "\"\<Compact Distribution\>\"", ",", 
               "\"\<\>\""}], "]"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"dist", "[", "\"\<piecewise\>\"", "]"}], "[", " ", 
                RowBox[{
                 RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<Full Range Distribution\>\"", ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"dist", "[", "\"\<func\>\"", "]"}], "[", " ", 
                RowBox[{
                 RowBox[{"dist", "[", "\"\<ranges\>\"", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"plt", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "0.15", "]"}], ",", "testBg"}], "}"}], 
        "]"}], ",", "plt"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.6307892406787643`*^9, 3.630790306782967*^9, {3.630790339518711*^9, 
   3.6307903739932337`*^9}, {3.63082450957926*^9, 3.630824519175282*^9}, {
   3.630825916933181*^9, 3.630826019125371*^9}, 3.6308260531030073`*^9, {
   3.6308289012398*^9, 3.630828902198619*^9}, {3.630829087567733*^9, 
   3.6308291435424213`*^9}, {3.6308292977385273`*^9, 3.63082947125169*^9}, 
   3.630829888576942*^9, {3.630829995298752*^9, 3.6308300615594254`*^9}, {
   3.630830125237811*^9, 3.630830185582995*^9}, 3.630830219085284*^9, {
   3.630830278498487*^9, 3.6308302888747377`*^9}, {3.630831311985263*^9, 
   3.630831317950323*^9}, 3.630831349947516*^9, {3.63083210380234*^9, 
   3.630832153895137*^9}, {3.630832197583729*^9, 3.630832226883438*^9}, {
   3.630832323572276*^9, 3.630832389437475*^9}, {3.63083242336231*^9, 
   3.630832437347541*^9}, {3.630832485010168*^9, 3.630832515539693*^9}, {
   3.630832681081568*^9, 3.630832689733865*^9}, {3.630833093289809*^9, 
   3.630833190170843*^9}, {3.630833260504718*^9, 3.630833295649551*^9}, {
   3.630833516798744*^9, 3.630833523415509*^9}, {3.630833571750003*^9, 
   3.630833601647922*^9}, {3.630835398868782*^9, 3.630835403424843*^9}, {
   3.6308354518669033`*^9, 3.630835454357047*^9}, {3.630835891991948*^9, 
   3.630835929928933*^9}, {3.6308359876692057`*^9, 3.630835989084174*^9}, {
   3.6308362974194317`*^9, 3.630836323186652*^9}, {3.6308369186512127`*^9, 
   3.6308369274493713`*^9}, {3.630837962648988*^9, 3.6308379772189837`*^9}, 
   3.630838146058558*^9, {3.63083823764742*^9, 3.630838238444343*^9}, {
   3.630838359358625*^9, 3.630838360540082*^9}, 3.630838437000331*^9, {
   3.6308385161382227`*^9, 3.630838519561248*^9}, {3.6308386311048517`*^9, 
   3.630838632203682*^9}, {3.6308386773229723`*^9, 3.6308386905372562`*^9}, {
   3.630838840871676*^9, 3.630838858834413*^9}, {3.630838909774351*^9, 
   3.630838988505718*^9}, {3.630839026477566*^9, 3.63083904279073*^9}, {
   3.6308399363674088`*^9, 3.630839974347754*^9}, {3.6308403272910347`*^9, 
   3.6308403789826*^9}, {3.630840414004071*^9, 3.630840428994136*^9}, {
   3.630840487351357*^9, 3.630840516610149*^9}, {3.6308406360046577`*^9, 
   3.630840654634564*^9}, {3.630840984931644*^9, 3.6308410159405203`*^9}, {
   3.630841074945174*^9, 3.630841126759179*^9}, {3.630841206827794*^9, 
   3.630841279775051*^9}, 3.630841423931861*^9, {3.630841512227722*^9, 
   3.630841534822668*^9}, {3.630841583711218*^9, 3.630841620931669*^9}, {
   3.630865673610229*^9, 3.630865702092165*^9}, {3.630866069174802*^9, 
   3.630866069817841*^9}, 3.630866437766531*^9, {3.630871813941842*^9, 
   3.630871816384429*^9}, {3.630913876000847*^9, 3.6309138936978807`*^9}, {
   3.6309139247650843`*^9, 3.630913925898584*^9}, {3.6309139676665497`*^9, 
   3.630914083400552*^9}, {3.630914154013113*^9, 3.630914189981319*^9}, {
   3.630914266983029*^9, 3.630914270902137*^9}, {3.630914489925762*^9, 
   3.630914516102385*^9}, {3.63093563195774*^9, 3.630935657121889*^9}, {
   3.630937469023842*^9, 3.630937654945808*^9}, {3.630937688853554*^9, 
   3.6309377657005*^9}, {3.630937824902313*^9, 3.630937828079338*^9}, {
   3.6309459967837667`*^9, 3.630946017327037*^9}, {3.6309473444989977`*^9, 
   3.630947382040104*^9}, {3.630952093923275*^9, 3.630952094721135*^9}, {
   3.630952128630662*^9, 3.630952139967331*^9}, 3.6309522213010807`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"setUpErf", "[", " ", 
    RowBox[{"25", ",", "128", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "False"}], ",", 
     RowBox[{"G", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DistroPlot", "[", "test", "]"}]}], "Input",
 CellChangeTimes->{{3.630841324495332*^9, 3.630841324877543*^9}, {
  3.630841426875204*^9, 3.6308414292915382`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84/5VB8UIB
UQT/cpNCvLY8gr9ErfpWgjGC755ncPF0NILf83fWvoVrEHwxmYKZvn7ecP6/
XNnwjAgE//n+UyLNSQj+jmTVCTvKEPzo1bfalOcj+AusXEt+vkfwtSKl/JdO
9IHz8+uXafbORvC3LDViKV2K4Nt98trpshPBD+quVn7yAMGv3Hvnu5KBL5y/
73HGJS4rBJ+J6+uaT84Ifk8Yb9KhcAR/wXvbM4n1CP4JxfkLFpxD8Hk9tKs7
biD4QXnbQwseIfh3dp3ncviG4H8IZii9L+sH55tW9fgfV0fwqxZIaK03RPBZ
3hrcr3NF8CXaEj3lchH82DVvldnKEfxFlyr/vW1A8HXkJ23eOwXBL3SV61s6
D8Hflr0qo3cFgv97oplz6SYE/4yU84ebuxB8ACYKwKs=
       "]], 
      LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAaMFPCD3NTkAEzehtDyPwP8oE29Is
0E5AJvdO6FAu8D8PK2etFNpOQFwVy0x8VPA/VFHzh/zjTkDjPg88+HrwP5l3
f2Lk7U5AHq2xR8Wh8D/enQs9zPdOQFonFQLkyPA/Z+oj8psLT0D8vKzQGBjx
PyqCflxbFk9AKRwAWpxD8T/uGdnGGiFPQFWJDtaCb/E/dEmOm5k2T0Dnaoeo
e8jxP4Co+ESXYU9AmtJlBTJ/8j+YZs2XkrdPQNQDetFfAPQ/W/4nAlLCT0A2
UBAjbzL0Px6WgmwRzU9AKqGu9O1k9D+kxTdBkOJPQHcV92M9y/Q/WBJR9cYG
UEC15pXIOp31P2Rxu57EMVBAtVoHQm5X9z9GvehTJDdQQMztD/HakPc/JwkW
CYQ8UECiRl/axMr3P+qgcHNDR1BAnXCu9BNA+D9w0CVIwlxQQAjAx7q4MPk/
fC+Q8b+HUEAt+Ngv7Cr7P5TtZES73VBAw0qBZLmJ/z9bvEXrvuJQQIuvlLma
z/8/IosmksLnUEDeZTQTAgsAQLEo6N/J8VBAFZXnWjlSAEDOY2t72AVRQNCl
0nPr4wBACNpxsvUtUUBU8CJXwBQCQHzGfiAwflFA5Y8zC1uvBEBDlV/HM4NR
QLl1Jjer2wRACmRAbjeIUUB6LYgYTggFQJkBArw+klFAdHjR8Y1iBUC2PIVX
TaZRQFtLrNUDGwZA8LKLjmrOUUAarti5OJwHQGOfmPykHlJAxUJ9cmPjCkDq
pmBrFCRSQBnCFEy3HwtAcK4o2oMpUkA7VvLrf1wLQHy9uLdiNFJAyosKTnLX
C0CV29hyIEpSQHE2X23v0gxAxxcZ6Zt1UkCHl7rL6+AOQCuQmdWSzFJA4j63
OQqvEUCyl2FEAtJSQBW3Te801RFAOJ8ps3HXUkCWxFHjpfsRQESuuZBQ4lJA
3J/tFlxJEkBdzNlLDvhSQAsyK68k6BJAjwgawokjU0BuMqKvfzMUQPOAmq6A
elNA0rflMjQEF0Co8tGr1n9TQMYR6OENMxdAXGQJqSyFU0CA1m/VN2IXQMRH
eKPYj1NAh/LxJX7BF0CWDlaYMKVTQE7QhrzfgxhASoCNlYaqU0CsfN3dRrUY
QP/xxJLcr1NA0fhGgQHnGEBo1TONiLpTQGnTOPFySxlAOpwRguDPU0DzA5H1
URgaQO4NSX821VNAowr2pWBMGkCjf4B8jNpTQJZQlSPGgBpADGPvdjjlU0C4
GOMvl+oaQMDUJnSO6lNAo7e8kwMgG0B0Rl5x5O9TQLueJW/IVRtAKLiVbjr1
U0CziSst5osbQN0pzWuQ+lNANC8LOV3CG0AKXk7By/pTQFrZdeS8xBtAhIXN
7Q==
       "]], LineBox[CompressedData["
1:eJwVjn841HcAx7lNkodGKxwjv/L7WXHarTreDEV7HOer7/fb5ced+3A1dfpl
IpawUfth3GRKXVt6pMb1Y08JuamnbkatMoREtNz8iCeKFWZ/vJ/XP+/n9X7b
SxUiwtHT0wteyP8MMdmQuMGAgjr3nmVznQX+zdqbULSEwvipkBE3M0tUj1fF
Dy2lsLquobEg0RJS6dMYv+UUUtp5xbo6S1i0WYmVXAqaifOJoWZWOHQ1PxrO
FCJcy0yM6q3Ac9OIStwpFH5i1i8340JX9lo48iGFvtj8K9pELkRZiWGl6xZ8
P6SK882s4RQc5D8uXOhzos4ZJtngzoN5V1X6gr/HOHiRuR1Mx1Lfzt+jUKr1
u6HPc0DlU8nwTBsF+c4S3/tiBwR2fNr18hEFvvnYBVWOA1I1DteeD1DoFJcf
93/ogCdFd/fee01h5Ys3aZl7HKH+aNXwSbtoVC6v9ZlROyEq+69HAkU0NFKf
c+NeLih9n3c1w3QLht66KJ+4eGJgR+NnuiQaKjrgxNkDPihP9/gmqopBfsmE
vTCHD6vrpLLGcCvSlF3fNk4LYJeXHlcTK8amvhLfuKoAKI1Scs6f3AZvXXYm
7R6E5gaf0z/OxOBEpFGtT18IFB6dHrmCOAx5iu4ulodCWOThViCIR5BdhLXz
wGZoV4k+/l0XD9fd/4idleGYttB98dURCSa5juu/OxoBI/ukmzf4Uqzwsmua
fR6JJ4oHbXcGpGhqnhpc6heFndbVNsKcBPTa/7LPNpNCT2+KRLhahvpK7znb
jmhw5n/uab0vw2Jd6aQ1l0bZIe0HG9tk4I/0p5ra0fDmjMZq2mWQv3Cf0XOi
ITFY23+pW4bbU/Wzz7xoaIy1z449kyGX079IHUAj03JkTDIjw5y1m1XQdhrT
a3j6r1YSTIbXCpKv0Si8zAQqHAmcRBxNbAMNF9/MnCFnAlH05sDIJhpb+LcN
ut0J1OLHIWtbaPzqxyzR8Ah2yfUj9Ppo7Nl8cNmRTQRD2aFSpSGDUdktZ9sU
gt4rj76s38Jg8HBPWOsegpZxo/vcbQx6VJOKg/sJ6j3XWR+QMGjucbrelU5Q
eqasxjeZwVkqL/xYHkGEUtxZnc0gPijk8/eOE9za+9jt9AUGtDT2RGM5waUa
k33zFxmEH0r9bZeKQDUsuBFzlYGg/qxxawVBVsJJEbeJAZdnqCpQE/Cj4jKK
Oxg8dNRqObcJqrz7W/I4LJoD+kYvahf2d5lZDBqyaIqbNpf8QZBfFSAJNGGh
Pu4a0/gngczhp6k5CxZfLyuYyOgmsDFPsE3zYpGz5vQKj16CJeHF8nZvFunC
2vVdfQTTBTcv8fgsth/V5fH/JmjXd9o4Ecgi5J0w7tQ4QeHEoGIHw0JgL/U/
83Lhr9fy69oYFjz/dFnUK4Lk7cHvuiSw8IwpKuDMEGyr2B+eJ2fhmFFVffEN
QVh/RenAThZJW1Xll2cJHpz6PvX5bhb/AbM56zA=
       "]], LineBox[CompressedData["
1:eJwdlHtQlGUYxUFLlstyaUGiRHfFJVyZVcEQarMDS7jt4AxGCt/bjisC7/eJ
KyyUgJnrBRUxQe5oEOK6AtLOQMQUInhpFJqR3KwoGBkyV+5XWRzUvPTVH888
85tzZs6Z549HsiPto+QFdnZ2Sn7+22cuaHdEL6CoGjq0ePMaBo49s75XF1JM
dEapVgUxsLM5KVMXUcz1bugpe5vBvLsf5+vI663lV56GMpiSv5vf7Uyh2y92
JgoG/Sm7/pR5UEQOLRh1UDK4dP/WruE3KUqHB/dIYhis+LEjj1tKscRxrZ9f
LIOCc411o2IKTU7GEvFWBju2l1jHpRSKMaPARcPAaYB8MrOa4sa+Zq2ZZUD6
RtVPlBTHqemqyMDgqcVB5qzj8+vtdxvrGCQ1Ptl4MpWiZbTN5t3A4HbBeLIw
nWImWJ+WZ2Zg3GQ555bJ9xmRku3fMlDfKvfxPMj7VTtPDLQxqOyUOvqWUpgN
fa3inxkoOpQj8naK7pmjjQNTDBaFrRwbvELxyyu3JQ4PGVhaXCeqrlME0rtf
rrLx/c19005dFPp1j7dx8wyOV6bND92hSNI/u9D8kkHP3spFZ4cpmiTp3QVu
BNWPDgq2jlHEJ8Zl7fUg4NKpk3CSIts1O3O7iOAZt9Z13yx/j0FLrp83wfL4
Lq+45xSPFx4tNiwlSA2xrXATsQgMeCLKDyQIbe717/RiEdNcX/G+nMBefiVg
/+ssQv/p6pxaTVAqzQsc92XRPc0qlMEEbZ7L1nUFsNDVGLxvhhE42NTKAxt4
/fQfwrVRBDWNxoTpnSwUSulgt4agfyJBk61jERDepBFsI/CRSeLs01g0BRVl
hmsJik1no0WfsWgRqWvMCQRHzlStX29gcS8vOZilBGxOufBAMYtrs+/k6dMI
TNe2CARlLFyGtAO5eoJ7zz0XFlWwQOtvbl+nE8Rnlzw2VrFYF1Phdf1TAvXu
QmtnLZ9fHCKcySKQx5245HqZRf/NHtPEAYKU0g9bKjp4biqLtx4kqLsjaBRf
Y1H4Vf7S3kME4uhcU9BNFnqdaOpyDsFr4UdObbWweDDzxiNdLsEjmSG52spi
RBqVmFVA0P4i3UPuwiFyzDgXUUng/pCLbXDl4Gl4S/6C50Srtszfg8NcpGr0
hyoCp582+SxbzEHV3T7lX833L1opcRdzCIiNMthqCMw54sSTyzlows+4nD9H
8HKP9wWBlENT6MSazUaCWvLqSnsZh49NOR9cPE8w5/f3mtlg3j+9xaqqJVAt
7s1IDeGg0FTTSZ4rBZaWsVAOX+zPKCmsI4iYbA+1vsdBdyTS9ms9Qflf332u
BYfSw89lGRcJRu80tN+N4HAjpdXLvYGg8PvT+H0jhyT/Y0LVNwQP6k8djlFz
iJ4MW3af58D/HwQHU11iZoKZ4F/Pq9gn
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQrWQdPm9aYIZDwDq9AIa3UQ736ks8jiLxW1OSzuwN
Q/B1PAMCtkUj+Cl5+/OrmhH8uZP1+u1WI/j/Mht8mhkz4fx4h0ucJ8IR/Bue
z3ad/4HgG2U/zAhYngXnB146+WRRUDacrz5NaXrxJwT/XmGS2975OXC+zyoh
nVbHXDi/QWPDfbkHCP6UfSYTDHvy4PyEjZrlh3Ty4fw3j+TNEtsQ/HIRsa//
7yP4APvef/c=
       "]]}, {}}, {{}, {}, {}, {}}}, 
   {Opacity[0.15], {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{0, 0}, {61.53160050950483, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {30.765800254752413`, 66.30000000000001}, {0, -0.6},
        Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{61.53160050950483, 0}, {80., 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", {70.7658002547524, 66.30000000000001}, \
{0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
      RectangleBox[{80., 0}, {86.11549319003993, 255}]}, 
     {RGBColor[0.04999999999999999, 0.1499999999999999, 0.19999999999999996`],
       Opacity[0.6], 
      InsetBox["\<\"Extended Keep\"\>", \
{83.05774659501996, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0, 0, 1], Opacity[0.6], 
      RectangleBox[{86.11549319003993, 0}, {169.88450680996007`, 255}]}, 
     {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
      InsetBox["\<\"Keep\"\>", {128., 66.30000000000001}, {0, -0.6}, 
       Automatic, {0, 1}]}}, {
     {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
      RectangleBox[{169.88450680996007`, 0}, {176., 255}]}, 
     {RGBColor[0.04999999999999999, 0.1499999999999999, 0.19999999999999996`],
       Opacity[0.6], 
      InsetBox["\<\"Extended Keep\"\>", \
{172.94225340498002`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{176., 0}, {194.46832227411616`, 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", \
{185.2341611370581, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{194.46832227411616`, 0}, {255, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {224.7341611370581, 66.30000000000001}, {0, -0.6},
        Automatic, {0, 1}]}}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84/5VB8UIB
UQT/cpNCvLY8gr9ErfpWgjGC755ncPF0NILf83fWvoVrEHwxmYKZvn7ecP6/
XNnwjAgE//n+UyLNSQj+jmTVCTvKEPzo1bfalOcj+AusXEt+vkfwtSKl/JdO
9IHz8+uXafbORvC3LDViKV2K4Nt98trpshPBD+quVn7yAMGv3Hvnu5KBL5y/
73HGJS4rBJ+J6+uaT84Ifk8Yb9KhcAR/wXvbM4n1CP4JxfkLFpxD8Hk9tKs7
biD4QXnbQwseIfh3dp3ncviG4H8IZii9L+sH55tW9fgfV0fwqxZIaK03RPBZ
3hrcr3NF8CXaEj3lchH82DVvldnKEfxFlyr/vW1A8HXkJ23eOwXBL3SV61s6
D8Hflr0qo3cFgv97oplz6SYE/4yU84ebuxB8ACYKwKs=
       "]], 
      LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAaMFPCD3NTkAEzehtDyPwP8oE29Is
0E5AJvdO6FAu8D8PK2etFNpOQFwVy0x8VPA/VFHzh/zjTkDjPg88+HrwP5l3
f2Lk7U5AHq2xR8Wh8D/enQs9zPdOQFonFQLkyPA/Z+oj8psLT0D8vKzQGBjx
PyqCflxbFk9AKRwAWpxD8T/uGdnGGiFPQFWJDtaCb/E/dEmOm5k2T0Dnaoeo
e8jxP4Co+ESXYU9AmtJlBTJ/8j+YZs2XkrdPQNQDetFfAPQ/W/4nAlLCT0A2
UBAjbzL0Px6WgmwRzU9AKqGu9O1k9D+kxTdBkOJPQHcV92M9y/Q/WBJR9cYG
UEC15pXIOp31P2Rxu57EMVBAtVoHQm5X9z9GvehTJDdQQMztD/HakPc/JwkW
CYQ8UECiRl/axMr3P+qgcHNDR1BAnXCu9BNA+D9w0CVIwlxQQAjAx7q4MPk/
fC+Q8b+HUEAt+Ngv7Cr7P5TtZES73VBAw0qBZLmJ/z9bvEXrvuJQQIuvlLma
z/8/IosmksLnUEDeZTQTAgsAQLEo6N/J8VBAFZXnWjlSAEDOY2t72AVRQNCl
0nPr4wBACNpxsvUtUUBU8CJXwBQCQHzGfiAwflFA5Y8zC1uvBEBDlV/HM4NR
QLl1Jjer2wRACmRAbjeIUUB6LYgYTggFQJkBArw+klFAdHjR8Y1iBUC2PIVX
TaZRQFtLrNUDGwZA8LKLjmrOUUAarti5OJwHQGOfmPykHlJAxUJ9cmPjCkDq
pmBrFCRSQBnCFEy3HwtAcK4o2oMpUkA7VvLrf1wLQHy9uLdiNFJAyosKTnLX
C0CV29hyIEpSQHE2X23v0gxAxxcZ6Zt1UkCHl7rL6+AOQCuQmdWSzFJA4j63
OQqvEUCyl2FEAtJSQBW3Te801RFAOJ8ps3HXUkCWxFHjpfsRQESuuZBQ4lJA
3J/tFlxJEkBdzNlLDvhSQAsyK68k6BJAjwgawokjU0BuMqKvfzMUQPOAmq6A
elNA0rflMjQEF0Co8tGr1n9TQMYR6OENMxdAXGQJqSyFU0CA1m/VN2IXQMRH
eKPYj1NAh/LxJX7BF0CWDlaYMKVTQE7QhrzfgxhASoCNlYaqU0CsfN3dRrUY
QP/xxJLcr1NA0fhGgQHnGEBo1TONiLpTQGnTOPFySxlAOpwRguDPU0DzA5H1
URgaQO4NSX821VNAowr2pWBMGkCjf4B8jNpTQJZQlSPGgBpADGPvdjjlU0C4
GOMvl+oaQMDUJnSO6lNAo7e8kwMgG0B0Rl5x5O9TQLueJW/IVRtAKLiVbjr1
U0CziSst5osbQN0pzWuQ+lNANC8LOV3CG0AKXk7By/pTQFrZdeS8xBtAhIXN
7Q==
       "]], LineBox[CompressedData["
1:eJwVjn841HcAx7lNkodGKxwjv/L7WXHarTreDEV7HOer7/fb5ced+3A1dfpl
IpawUfth3GRKXVt6pMb1Y08JuamnbkatMoREtNz8iCeKFWZ/vJ/XP+/n9X7b
SxUiwtHT0wteyP8MMdmQuMGAgjr3nmVznQX+zdqbULSEwvipkBE3M0tUj1fF
Dy2lsLquobEg0RJS6dMYv+UUUtp5xbo6S1i0WYmVXAqaifOJoWZWOHQ1PxrO
FCJcy0yM6q3Ac9OIStwpFH5i1i8340JX9lo48iGFvtj8K9pELkRZiWGl6xZ8
P6SK882s4RQc5D8uXOhzos4ZJtngzoN5V1X6gr/HOHiRuR1Mx1Lfzt+jUKr1
u6HPc0DlU8nwTBsF+c4S3/tiBwR2fNr18hEFvvnYBVWOA1I1DteeD1DoFJcf
93/ogCdFd/fee01h5Ys3aZl7HKH+aNXwSbtoVC6v9ZlROyEq+69HAkU0NFKf
c+NeLih9n3c1w3QLht66KJ+4eGJgR+NnuiQaKjrgxNkDPihP9/gmqopBfsmE
vTCHD6vrpLLGcCvSlF3fNk4LYJeXHlcTK8amvhLfuKoAKI1Scs6f3AZvXXYm
7R6E5gaf0z/OxOBEpFGtT18IFB6dHrmCOAx5iu4ulodCWOThViCIR5BdhLXz
wGZoV4k+/l0XD9fd/4idleGYttB98dURCSa5juu/OxoBI/ukmzf4Uqzwsmua
fR6JJ4oHbXcGpGhqnhpc6heFndbVNsKcBPTa/7LPNpNCT2+KRLhahvpK7znb
jmhw5n/uab0vw2Jd6aQ1l0bZIe0HG9tk4I/0p5ra0fDmjMZq2mWQv3Cf0XOi
ITFY23+pW4bbU/Wzz7xoaIy1z449kyGX079IHUAj03JkTDIjw5y1m1XQdhrT
a3j6r1YSTIbXCpKv0Si8zAQqHAmcRBxNbAMNF9/MnCFnAlH05sDIJhpb+LcN
ut0J1OLHIWtbaPzqxyzR8Ah2yfUj9Ppo7Nl8cNmRTQRD2aFSpSGDUdktZ9sU
gt4rj76s38Jg8HBPWOsegpZxo/vcbQx6VJOKg/sJ6j3XWR+QMGjucbrelU5Q
eqasxjeZwVkqL/xYHkGEUtxZnc0gPijk8/eOE9za+9jt9AUGtDT2RGM5waUa
k33zFxmEH0r9bZeKQDUsuBFzlYGg/qxxawVBVsJJEbeJAZdnqCpQE/Cj4jKK
Oxg8dNRqObcJqrz7W/I4LJoD+kYvahf2d5lZDBqyaIqbNpf8QZBfFSAJNGGh
Pu4a0/gngczhp6k5CxZfLyuYyOgmsDFPsE3zYpGz5vQKj16CJeHF8nZvFunC
2vVdfQTTBTcv8fgsth/V5fH/JmjXd9o4Ecgi5J0w7tQ4QeHEoGIHw0JgL/U/
83Lhr9fy69oYFjz/dFnUK4Lk7cHvuiSw8IwpKuDMEGyr2B+eJ2fhmFFVffEN
QVh/RenAThZJW1Xll2cJHpz6PvX5bhb/AbM56zA=
       "]], LineBox[CompressedData["
1:eJwdlHtQlGUYxUFLlstyaUGiRHfFJVyZVcEQarMDS7jt4AxGCt/bjisC7/eJ
KyyUgJnrBRUxQe5oEOK6AtLOQMQUInhpFJqR3KwoGBkyV+5XWRzUvPTVH888
85tzZs6Z549HsiPto+QFdnZ2Sn7+22cuaHdEL6CoGjq0ePMaBo49s75XF1JM
dEapVgUxsLM5KVMXUcz1bugpe5vBvLsf5+vI663lV56GMpiSv5vf7Uyh2y92
JgoG/Sm7/pR5UEQOLRh1UDK4dP/WruE3KUqHB/dIYhis+LEjj1tKscRxrZ9f
LIOCc411o2IKTU7GEvFWBju2l1jHpRSKMaPARcPAaYB8MrOa4sa+Zq2ZZUD6
RtVPlBTHqemqyMDgqcVB5qzj8+vtdxvrGCQ1Ptl4MpWiZbTN5t3A4HbBeLIw
nWImWJ+WZ2Zg3GQ555bJ9xmRku3fMlDfKvfxPMj7VTtPDLQxqOyUOvqWUpgN
fa3inxkoOpQj8naK7pmjjQNTDBaFrRwbvELxyyu3JQ4PGVhaXCeqrlME0rtf
rrLx/c19005dFPp1j7dx8wyOV6bND92hSNI/u9D8kkHP3spFZ4cpmiTp3QVu
BNWPDgq2jlHEJ8Zl7fUg4NKpk3CSIts1O3O7iOAZt9Z13yx/j0FLrp83wfL4
Lq+45xSPFx4tNiwlSA2xrXATsQgMeCLKDyQIbe717/RiEdNcX/G+nMBefiVg
/+ssQv/p6pxaTVAqzQsc92XRPc0qlMEEbZ7L1nUFsNDVGLxvhhE42NTKAxt4
/fQfwrVRBDWNxoTpnSwUSulgt4agfyJBk61jERDepBFsI/CRSeLs01g0BRVl
hmsJik1no0WfsWgRqWvMCQRHzlStX29gcS8vOZilBGxOufBAMYtrs+/k6dMI
TNe2CARlLFyGtAO5eoJ7zz0XFlWwQOtvbl+nE8Rnlzw2VrFYF1Phdf1TAvXu
QmtnLZ9fHCKcySKQx5245HqZRf/NHtPEAYKU0g9bKjp4biqLtx4kqLsjaBRf
Y1H4Vf7S3kME4uhcU9BNFnqdaOpyDsFr4UdObbWweDDzxiNdLsEjmSG52spi
RBqVmFVA0P4i3UPuwiFyzDgXUUng/pCLbXDl4Gl4S/6C50Srtszfg8NcpGr0
hyoCp582+SxbzEHV3T7lX833L1opcRdzCIiNMthqCMw54sSTyzlows+4nD9H
8HKP9wWBlENT6MSazUaCWvLqSnsZh49NOR9cPE8w5/f3mtlg3j+9xaqqJVAt
7s1IDeGg0FTTSZ4rBZaWsVAOX+zPKCmsI4iYbA+1vsdBdyTS9ms9Qflf332u
BYfSw89lGRcJRu80tN+N4HAjpdXLvYGg8PvT+H0jhyT/Y0LVNwQP6k8djlFz
iJ4MW3af58D/HwQHU11iZoKZ4F/Pq9gn
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQrWQdPm9aYIZDwDq9AIa3UQ736ks8jiLxW1OSzuwN
Q/B1PAMCtkUj+Cl5+/OrmhH8uZP1+u1WI/j/Mht8mhkz4fx4h0ucJ8IR/Bue
z3ad/4HgG2U/zAhYngXnB146+WRRUDacrz5NaXrxJwT/XmGS2975OXC+zyoh
nVbHXDi/QWPDfbkHCP6UfSYTDHvy4PyEjZrlh3Ty4fw3j+TNEtsQ/HIRsa//
7yP4APvef/c=
       "]]}, {}}, {{}, {}, {}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 0, 1], 
     Opacity[0.6], 
     DiskBox[{128, 128}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       139, 128 + 
        Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {139, 172.7613391463784}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{
       117, 128 + 
        Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {117, 83.23866085362161}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{
        117, 128 + 
         Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
           Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])}, {
        139, 128 + 
         Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
           Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])}}, {{117, 83.23866085362161}, {
        139, 172.7613391463784}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["128", TraditionalForm], {128, 128}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]], 
     InsetBox[
      FormBox["\"4.07\"", TraditionalForm], 
      NCache[{
       139, 128 + 
        Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {139, 172.7613391463784}], {0, 
      0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]], 
     InsetBox[
      FormBox["\"4.07\"", TraditionalForm], 
      NCache[{
       117, 128 + 
        Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {117, 83.23866085362161}], {0, 
      0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]]}, {
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{86, 12}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {97.11549319003993, 23.115493190039928`}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {75.11549319003993, 1.1154931900399259`}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{-11 + 
         255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        11 + 255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{75.11549319003993, 
       1.1154931900399259`}, {97.11549319003993, 23.115493190039928`}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["86", TraditionalForm], {86, 12}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {97.11549319003993, 23.115493190039928`}], {
      0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {75.11549319003993, 1.1154931900399259`}], {
      0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]]}, {
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{170, 243}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{-11 + 
         255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        11 + 255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{158.88450680996007`, 
       231.88450680996007`}, {180.88450680996007`, 253.88450680996007`}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["170", TraditionalForm], {170, 243}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]]}, {
     RGBColor[1, 0, 0], 
     Opacity[0.6], 
     DiskBox[{62, 1}, {5.1000000000000005`, 5.1000000000000005`}], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["62", TraditionalForm], {62, 1}, {0, 0}]}, {
     RGBColor[1, 0, 0], 
     Opacity[0.6], 
     DiskBox[{194, 254}, {5.1000000000000005`, 5.1000000000000005`}], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["194", TraditionalForm], {194, 254}, {0, 0}]}, 
    InsetBox[
     BoxData[
      FormBox[
       PanelBox[
        TagBox[
         TagBox[
          GridBox[{{
             StyleBox["\[Null]", ShowStringCharacters -> False], 
             TagBox["\"0-1\"", HoldForm], 
             TagBox["\"0 - 255\"", HoldForm]}, {
             TagBox["\"Mean\"", HoldForm], 
             TemplateBox[{"\"\[Mu] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"128\"", 128, Editable -> False], 
                 InterpretationBox["\"255\"", 255, Editable -> False]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"c = \"", 
               TagBox[
                InterpretationBox["\"128\"", 128, Editable -> False], 
                NumberForm[#, 4]& ]}, "RowDefault"]}, {
             TagBox["\"Std\"", HoldForm], 
             TemplateBox[{"\"\[Sigma] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"5\"", 5, Editable -> False], 
                 InterpretationBox["\"51\"", 51, Editable -> False]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"s = \"", 
               TagBox[
                InterpretationBox["\"25\"", 25, Editable -> False], 
                NumberForm[#, 4]& ]}, "RowDefault"]}, {
             TagBox["\"G\"", HoldForm], 
             TemplateBox[{"\"\[Gamma] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"51\"", 51, Editable -> False], 
                 RowBox[{
                   InterpretationBox["\"5\"", 5, Editable -> False], " ", 
                   SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"g = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"1\"", 1, Editable -> False], 
                 RowBox[{
                   InterpretationBox["\"25\"", 25, Editable -> False], " ", 
                   SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                NumberForm[#, 4]& ]}, "RowDefault"]}}, RowSpacings -> 1, 
           ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
           Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
           ColumnAlignments -> Left], {
          OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
         Function[BoxForm`e$, 
          TableForm[
          BoxForm`e$, 
           TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]], 
        Background -> Opacity[0.5, 
          GrayLevel[1]]], TraditionalForm]], 
     Scaled[{0.05, 0.9}], 
     Scaled[{0, 1}]], 
    InsetBox[
     FormBox["\"Compact Distribution\"", TraditionalForm], 
     NCache[{
      255, 255 - 255 (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])^(-1) (
        Erf[Rational[64, 25] 2^Rational[1, 2]] + 
        Erf[Rational[1, 25] 
          2^Rational[-1, 2] (-128 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))]) + 
       255 (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])^(-1) (
         Erf[Rational[64, 25] 2^Rational[1, 2]] + 
         Erf[Rational[1, 25] 
           2^Rational[-1, 2] (-128 + 
            255 (Rational[128, 255] + 
              Rational[
                5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                Rational[1, 2]))]) - 
       255 (Rational[128, 255] + 
        Rational[-5, 51] (2 
           Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
             Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
             Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]) + 
       255 (Rational[128, 255] + 
         Rational[
           5, 51] (2 
            Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
              Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
              Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])}, {
      255, 107.70314411696131`}], {1, 1}], 
    InsetBox[
     FormBox["\"Full Range Distribution\"", TraditionalForm], 
     NCache[{
      255, (-255) (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])^(-1) (
        Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
        Erf[Rational[64, 25] 2^Rational[1, 2]])}, {
      255, 254.99999999999997`}], {1, 1}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {64, 
       FormBox["64", TraditionalForm]}, {96, 
       FormBox["96", TraditionalForm]}, {128, 
       FormBox["128", TraditionalForm]}, {160, 
       FormBox["160", TraditionalForm]}, {192, 
       FormBox["192", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}}, None}, {{{16, 
       FormBox[
        FractionBox["1", "16"], TraditionalForm]}, {24, 
       FormBox[
        FractionBox["3", "32"], TraditionalForm]}, {32, 
       FormBox[
        FractionBox["1", "8"], TraditionalForm]}, {40, 
       FormBox[
        FractionBox["5", "32"], TraditionalForm]}, {48, 
       FormBox[
        FractionBox["3", "16"], TraditionalForm]}, {104, 
       FormBox[
        FractionBox["13", "32"], TraditionalForm]}, {112, 
       FormBox[
        FractionBox["7", "16"], TraditionalForm]}, {144, 
       FormBox[
        FractionBox["9", "16"], TraditionalForm]}, {152, 
       FormBox[
        FractionBox["19", "32"], TraditionalForm]}, {208, 
       FormBox[
        FractionBox["13", "16"], TraditionalForm]}, {216, 
       FormBox[
        FractionBox["27", "32"], TraditionalForm]}, {224, 
       FormBox[
        FractionBox["7", "8"], TraditionalForm]}, {232, 
       FormBox[
        FractionBox["29", "32"], TraditionalForm]}, {240, 
       FormBox[
        FractionBox["15", "16"], TraditionalForm]}, {0, 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"0"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {80., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
            "\"\[Mu]\"", Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {176., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {255, 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}}, {{16, 
       FormBox["16", TraditionalForm]}, {24, 
       FormBox["24", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {40, 
       FormBox["40", TraditionalForm]}, {48, 
       FormBox["48", TraditionalForm]}, {104, 
       FormBox["104", TraditionalForm]}, {112, 
       FormBox["112", TraditionalForm]}, {144, 
       FormBox["144", TraditionalForm]}, {152, 
       FormBox["152", TraditionalForm]}, {208, 
       FormBox["208", TraditionalForm]}, {216, 
       FormBox["216", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {232, 
       FormBox["232", TraditionalForm]}, {240, 
       FormBox["240", TraditionalForm]}, {0, 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMin\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {80., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
            "\"C\"", Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {176., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {255, 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMax\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{914.23046875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 255}, {0., 254.99999999994728`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.630913405320382*^9, 3.6309267059606657`*^9, 3.630926827490499*^9, 
   3.6309282779325542`*^9, 3.630935669160568*^9, 3.630937788349*^9, 
   3.6309378369452753`*^9, 3.630941326309311*^9, 3.630941438575007*^9, 
   3.6309420617380133`*^9, 3.630942228988236*^9, 3.630942884893798*^9, 
   3.630946028262442*^9, 3.630946127020918*^9, 3.6309462374673567`*^9, 
   3.630946282972883*^9, 3.630946742859908*^9, 3.630946826349646*^9, {
   3.6309473665028543`*^9, 3.6309473867156897`*^9}, 3.6309474448102922`*^9, 
   3.630952171932868*^9, 3.63095222719692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistroPlot", "[", "test", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84/5VB8UIB
UQT/cpNCvLY8gr9ErfpWgjGC755ncPF0NILf83fWvoVrEHwxmYKZvn7ecP6/
XNnwjAgE//n+UyLNSQj+jmTVCTvKEPzo1bfalOcj+AusXEt+vkfwtSKl/JdO
9IHz8+uXafbORvC3LDViKV2K4Nt98trpshPBD+quVn7yAMGv3Hvnu5KBL5y/
73HGJS4rBJ+J6+uaT84Ifk8Yb9KhcAR/wXvbM4n1CP4JxfkLFpxD8Hk9tKs7
biD4QXnbQwseIfh3dp3ncviG4H8IZii9L+sH55tW9fgfV0fwqxZIaK03RPBZ
3hrcr3NF8CXaEj3lchH82DVvldnKEfxFlyr/vW1A8HXkJ23eOwXBL3SV61s6
D8Hflr0qo3cFgv97oplz6SYE/4yU84ebuxB8ACYKwKs=
       "]], 
      LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAaMFPCD3NTkAEzehtDyPwP8oE29Is
0E5AJvdO6FAu8D8PK2etFNpOQFwVy0x8VPA/VFHzh/zjTkDjPg88+HrwP5l3
f2Lk7U5AHq2xR8Wh8D/enQs9zPdOQFonFQLkyPA/Z+oj8psLT0D8vKzQGBjx
PyqCflxbFk9AKRwAWpxD8T/uGdnGGiFPQFWJDtaCb/E/dEmOm5k2T0Dnaoeo
e8jxP4Co+ESXYU9AmtJlBTJ/8j+YZs2XkrdPQNQDetFfAPQ/W/4nAlLCT0A2
UBAjbzL0Px6WgmwRzU9AKqGu9O1k9D+kxTdBkOJPQHcV92M9y/Q/WBJR9cYG
UEC15pXIOp31P2Rxu57EMVBAtVoHQm5X9z9GvehTJDdQQMztD/HakPc/JwkW
CYQ8UECiRl/axMr3P+qgcHNDR1BAnXCu9BNA+D9w0CVIwlxQQAjAx7q4MPk/
fC+Q8b+HUEAt+Ngv7Cr7P5TtZES73VBAw0qBZLmJ/z9bvEXrvuJQQIuvlLma
z/8/IosmksLnUEDeZTQTAgsAQLEo6N/J8VBAFZXnWjlSAEDOY2t72AVRQNCl
0nPr4wBACNpxsvUtUUBU8CJXwBQCQHzGfiAwflFA5Y8zC1uvBEBDlV/HM4NR
QLl1Jjer2wRACmRAbjeIUUB6LYgYTggFQJkBArw+klFAdHjR8Y1iBUC2PIVX
TaZRQFtLrNUDGwZA8LKLjmrOUUAarti5OJwHQGOfmPykHlJAxUJ9cmPjCkDq
pmBrFCRSQBnCFEy3HwtAcK4o2oMpUkA7VvLrf1wLQHy9uLdiNFJAyosKTnLX
C0CV29hyIEpSQHE2X23v0gxAxxcZ6Zt1UkCHl7rL6+AOQCuQmdWSzFJA4j63
OQqvEUCyl2FEAtJSQBW3Te801RFAOJ8ps3HXUkCWxFHjpfsRQESuuZBQ4lJA
3J/tFlxJEkBdzNlLDvhSQAsyK68k6BJAjwgawokjU0BuMqKvfzMUQPOAmq6A
elNA0rflMjQEF0Co8tGr1n9TQMYR6OENMxdAXGQJqSyFU0CA1m/VN2IXQMRH
eKPYj1NAh/LxJX7BF0CWDlaYMKVTQE7QhrzfgxhASoCNlYaqU0CsfN3dRrUY
QP/xxJLcr1NA0fhGgQHnGEBo1TONiLpTQGnTOPFySxlAOpwRguDPU0DzA5H1
URgaQO4NSX821VNAowr2pWBMGkCjf4B8jNpTQJZQlSPGgBpADGPvdjjlU0C4
GOMvl+oaQMDUJnSO6lNAo7e8kwMgG0B0Rl5x5O9TQLueJW/IVRtAKLiVbjr1
U0CziSst5osbQN0pzWuQ+lNANC8LOV3CG0AKXk7By/pTQFrZdeS8xBtAhIXN
7Q==
       "]], LineBox[CompressedData["
1:eJwVjn841HcAx7lNkodGKxwjv/L7WXHarTreDEV7HOer7/fb5ced+3A1dfpl
IpawUfth3GRKXVt6pMb1Y08JuamnbkatMoREtNz8iCeKFWZ/vJ/XP+/n9X7b
SxUiwtHT0wteyP8MMdmQuMGAgjr3nmVznQX+zdqbULSEwvipkBE3M0tUj1fF
Dy2lsLquobEg0RJS6dMYv+UUUtp5xbo6S1i0WYmVXAqaifOJoWZWOHQ1PxrO
FCJcy0yM6q3Ac9OIStwpFH5i1i8340JX9lo48iGFvtj8K9pELkRZiWGl6xZ8
P6SK882s4RQc5D8uXOhzos4ZJtngzoN5V1X6gr/HOHiRuR1Mx1Lfzt+jUKr1
u6HPc0DlU8nwTBsF+c4S3/tiBwR2fNr18hEFvvnYBVWOA1I1DteeD1DoFJcf
93/ogCdFd/fee01h5Ys3aZl7HKH+aNXwSbtoVC6v9ZlROyEq+69HAkU0NFKf
c+NeLih9n3c1w3QLht66KJ+4eGJgR+NnuiQaKjrgxNkDPihP9/gmqopBfsmE
vTCHD6vrpLLGcCvSlF3fNk4LYJeXHlcTK8amvhLfuKoAKI1Scs6f3AZvXXYm
7R6E5gaf0z/OxOBEpFGtT18IFB6dHrmCOAx5iu4ulodCWOThViCIR5BdhLXz
wGZoV4k+/l0XD9fd/4idleGYttB98dURCSa5juu/OxoBI/ukmzf4Uqzwsmua
fR6JJ4oHbXcGpGhqnhpc6heFndbVNsKcBPTa/7LPNpNCT2+KRLhahvpK7znb
jmhw5n/uab0vw2Jd6aQ1l0bZIe0HG9tk4I/0p5ra0fDmjMZq2mWQv3Cf0XOi
ITFY23+pW4bbU/Wzz7xoaIy1z449kyGX079IHUAj03JkTDIjw5y1m1XQdhrT
a3j6r1YSTIbXCpKv0Si8zAQqHAmcRBxNbAMNF9/MnCFnAlH05sDIJhpb+LcN
ut0J1OLHIWtbaPzqxyzR8Ah2yfUj9Ppo7Nl8cNmRTQRD2aFSpSGDUdktZ9sU
gt4rj76s38Jg8HBPWOsegpZxo/vcbQx6VJOKg/sJ6j3XWR+QMGjucbrelU5Q
eqasxjeZwVkqL/xYHkGEUtxZnc0gPijk8/eOE9za+9jt9AUGtDT2RGM5waUa
k33zFxmEH0r9bZeKQDUsuBFzlYGg/qxxawVBVsJJEbeJAZdnqCpQE/Cj4jKK
Oxg8dNRqObcJqrz7W/I4LJoD+kYvahf2d5lZDBqyaIqbNpf8QZBfFSAJNGGh
Pu4a0/gngczhp6k5CxZfLyuYyOgmsDFPsE3zYpGz5vQKj16CJeHF8nZvFunC
2vVdfQTTBTcv8fgsth/V5fH/JmjXd9o4Ecgi5J0w7tQ4QeHEoGIHw0JgL/U/
83Lhr9fy69oYFjz/dFnUK4Lk7cHvuiSw8IwpKuDMEGyr2B+eJ2fhmFFVffEN
QVh/RenAThZJW1Xll2cJHpz6PvX5bhb/AbM56zA=
       "]], LineBox[CompressedData["
1:eJwdlHtQlGUYxUFLlstyaUGiRHfFJVyZVcEQarMDS7jt4AxGCt/bjisC7/eJ
KyyUgJnrBRUxQe5oEOK6AtLOQMQUInhpFJqR3KwoGBkyV+5XWRzUvPTVH888
85tzZs6Z549HsiPto+QFdnZ2Sn7+22cuaHdEL6CoGjq0ePMaBo49s75XF1JM
dEapVgUxsLM5KVMXUcz1bugpe5vBvLsf5+vI663lV56GMpiSv5vf7Uyh2y92
JgoG/Sm7/pR5UEQOLRh1UDK4dP/WruE3KUqHB/dIYhis+LEjj1tKscRxrZ9f
LIOCc411o2IKTU7GEvFWBju2l1jHpRSKMaPARcPAaYB8MrOa4sa+Zq2ZZUD6
RtVPlBTHqemqyMDgqcVB5qzj8+vtdxvrGCQ1Ptl4MpWiZbTN5t3A4HbBeLIw
nWImWJ+WZ2Zg3GQ555bJ9xmRku3fMlDfKvfxPMj7VTtPDLQxqOyUOvqWUpgN
fa3inxkoOpQj8naK7pmjjQNTDBaFrRwbvELxyyu3JQ4PGVhaXCeqrlME0rtf
rrLx/c19005dFPp1j7dx8wyOV6bND92hSNI/u9D8kkHP3spFZ4cpmiTp3QVu
BNWPDgq2jlHEJ8Zl7fUg4NKpk3CSIts1O3O7iOAZt9Z13yx/j0FLrp83wfL4
Lq+45xSPFx4tNiwlSA2xrXATsQgMeCLKDyQIbe717/RiEdNcX/G+nMBefiVg
/+ssQv/p6pxaTVAqzQsc92XRPc0qlMEEbZ7L1nUFsNDVGLxvhhE42NTKAxt4
/fQfwrVRBDWNxoTpnSwUSulgt4agfyJBk61jERDepBFsI/CRSeLs01g0BRVl
hmsJik1no0WfsWgRqWvMCQRHzlStX29gcS8vOZilBGxOufBAMYtrs+/k6dMI
TNe2CARlLFyGtAO5eoJ7zz0XFlWwQOtvbl+nE8Rnlzw2VrFYF1Phdf1TAvXu
QmtnLZ9fHCKcySKQx5245HqZRf/NHtPEAYKU0g9bKjp4biqLtx4kqLsjaBRf
Y1H4Vf7S3kME4uhcU9BNFnqdaOpyDsFr4UdObbWweDDzxiNdLsEjmSG52spi
RBqVmFVA0P4i3UPuwiFyzDgXUUng/pCLbXDl4Gl4S/6C50Srtszfg8NcpGr0
hyoCp582+SxbzEHV3T7lX833L1opcRdzCIiNMthqCMw54sSTyzlows+4nD9H
8HKP9wWBlENT6MSazUaCWvLqSnsZh49NOR9cPE8w5/f3mtlg3j+9xaqqJVAt
7s1IDeGg0FTTSZ4rBZaWsVAOX+zPKCmsI4iYbA+1vsdBdyTS9ms9Qflf332u
BYfSw89lGRcJRu80tN+N4HAjpdXLvYGg8PvT+H0jhyT/Y0LVNwQP6k8djlFz
iJ4MW3af58D/HwQHU11iZoKZ4F/Pq9gn
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQrWQdPm9aYIZDwDq9AIa3UQ736ks8jiLxW1OSzuwN
Q/B1PAMCtkUj+Cl5+/OrmhH8uZP1+u1WI/j/Mht8mhkz4fx4h0ucJ8IR/Bue
z3ad/4HgG2U/zAhYngXnB146+WRRUDacrz5NaXrxJwT/XmGS2975OXC+zyoh
nVbHXDi/QWPDfbkHCP6UfSYTDHvy4PyEjZrlh3Ty4fw3j+TNEtsQ/HIRsa//
7yP4APvef/c=
       "]]}, {}}, {{}, {}, {}, {}}}, 
   {Opacity[0.15], {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{0, 0}, {61.53160050950483, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {30.765800254752413`, 66.30000000000001}, {0, -0.6},
        Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{61.53160050950483, 0}, {80., 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", {70.7658002547524, 66.30000000000001}, \
{0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
      RectangleBox[{80., 0}, {86.11549319003993, 255}]}, 
     {RGBColor[0.04999999999999999, 0.1499999999999999, 0.19999999999999996`],
       Opacity[0.6], 
      InsetBox["\<\"Extended Keep\"\>", \
{83.05774659501996, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0, 0, 1], Opacity[0.6], 
      RectangleBox[{86.11549319003993, 0}, {169.88450680996007`, 255}]}, 
     {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
      InsetBox["\<\"Keep\"\>", {128., 66.30000000000001}, {0, -0.6}, 
       Automatic, {0, 1}]}}, {
     {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
      RectangleBox[{169.88450680996007`, 0}, {176., 255}]}, 
     {RGBColor[0.04999999999999999, 0.1499999999999999, 0.19999999999999996`],
       Opacity[0.6], 
      InsetBox["\<\"Extended Keep\"\>", \
{172.94225340498002`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[0, 1, 0], Opacity[0.6], 
      RectangleBox[{176., 0}, {194.46832227411616`, 255}]}, 
     {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
      InsetBox["\<\"Redistribute\"\>", \
{185.2341611370581, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
     {RGBColor[1, 0, 0], Opacity[0.6], 
      RectangleBox[{194.46832227411616`, 0}, {255, 255}]}, 
     {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
      InsetBox["\<\"Disgard\"\>", {224.7341611370581, 66.30000000000001}, {0, -0.6},
        Automatic, {0, 1}]}}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84/5VB8UIB
UQT/cpNCvLY8gr9ErfpWgjGC755ncPF0NILf83fWvoVrEHwxmYKZvn7ecP6/
XNnwjAgE//n+UyLNSQj+jmTVCTvKEPzo1bfalOcj+AusXEt+vkfwtSKl/JdO
9IHz8+uXafbORvC3LDViKV2K4Nt98trpshPBD+quVn7yAMGv3Hvnu5KBL5y/
73HGJS4rBJ+J6+uaT84Ifk8Yb9KhcAR/wXvbM4n1CP4JxfkLFpxD8Hk9tKs7
biD4QXnbQwseIfh3dp3ncviG4H8IZii9L+sH55tW9fgfV0fwqxZIaK03RPBZ
3hrcr3NF8CXaEj3lchH82DVvldnKEfxFlyr/vW1A8HXkJ23eOwXBL3SV61s6
D8Hflr0qo3cFgv97oplz6SYE/4yU84ebuxB8ACYKwKs=
       "]], 
      LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAaMFPCD3NTkAEzehtDyPwP8oE29Is
0E5AJvdO6FAu8D8PK2etFNpOQFwVy0x8VPA/VFHzh/zjTkDjPg88+HrwP5l3
f2Lk7U5AHq2xR8Wh8D/enQs9zPdOQFonFQLkyPA/Z+oj8psLT0D8vKzQGBjx
PyqCflxbFk9AKRwAWpxD8T/uGdnGGiFPQFWJDtaCb/E/dEmOm5k2T0Dnaoeo
e8jxP4Co+ESXYU9AmtJlBTJ/8j+YZs2XkrdPQNQDetFfAPQ/W/4nAlLCT0A2
UBAjbzL0Px6WgmwRzU9AKqGu9O1k9D+kxTdBkOJPQHcV92M9y/Q/WBJR9cYG
UEC15pXIOp31P2Rxu57EMVBAtVoHQm5X9z9GvehTJDdQQMztD/HakPc/JwkW
CYQ8UECiRl/axMr3P+qgcHNDR1BAnXCu9BNA+D9w0CVIwlxQQAjAx7q4MPk/
fC+Q8b+HUEAt+Ngv7Cr7P5TtZES73VBAw0qBZLmJ/z9bvEXrvuJQQIuvlLma
z/8/IosmksLnUEDeZTQTAgsAQLEo6N/J8VBAFZXnWjlSAEDOY2t72AVRQNCl
0nPr4wBACNpxsvUtUUBU8CJXwBQCQHzGfiAwflFA5Y8zC1uvBEBDlV/HM4NR
QLl1Jjer2wRACmRAbjeIUUB6LYgYTggFQJkBArw+klFAdHjR8Y1iBUC2PIVX
TaZRQFtLrNUDGwZA8LKLjmrOUUAarti5OJwHQGOfmPykHlJAxUJ9cmPjCkDq
pmBrFCRSQBnCFEy3HwtAcK4o2oMpUkA7VvLrf1wLQHy9uLdiNFJAyosKTnLX
C0CV29hyIEpSQHE2X23v0gxAxxcZ6Zt1UkCHl7rL6+AOQCuQmdWSzFJA4j63
OQqvEUCyl2FEAtJSQBW3Te801RFAOJ8ps3HXUkCWxFHjpfsRQESuuZBQ4lJA
3J/tFlxJEkBdzNlLDvhSQAsyK68k6BJAjwgawokjU0BuMqKvfzMUQPOAmq6A
elNA0rflMjQEF0Co8tGr1n9TQMYR6OENMxdAXGQJqSyFU0CA1m/VN2IXQMRH
eKPYj1NAh/LxJX7BF0CWDlaYMKVTQE7QhrzfgxhASoCNlYaqU0CsfN3dRrUY
QP/xxJLcr1NA0fhGgQHnGEBo1TONiLpTQGnTOPFySxlAOpwRguDPU0DzA5H1
URgaQO4NSX821VNAowr2pWBMGkCjf4B8jNpTQJZQlSPGgBpADGPvdjjlU0C4
GOMvl+oaQMDUJnSO6lNAo7e8kwMgG0B0Rl5x5O9TQLueJW/IVRtAKLiVbjr1
U0CziSst5osbQN0pzWuQ+lNANC8LOV3CG0AKXk7By/pTQFrZdeS8xBtAhIXN
7Q==
       "]], LineBox[CompressedData["
1:eJwVjn841HcAx7lNkodGKxwjv/L7WXHarTreDEV7HOer7/fb5ced+3A1dfpl
IpawUfth3GRKXVt6pMb1Y08JuamnbkatMoREtNz8iCeKFWZ/vJ/XP+/n9X7b
SxUiwtHT0wteyP8MMdmQuMGAgjr3nmVznQX+zdqbULSEwvipkBE3M0tUj1fF
Dy2lsLquobEg0RJS6dMYv+UUUtp5xbo6S1i0WYmVXAqaifOJoWZWOHQ1PxrO
FCJcy0yM6q3Ac9OIStwpFH5i1i8340JX9lo48iGFvtj8K9pELkRZiWGl6xZ8
P6SK882s4RQc5D8uXOhzos4ZJtngzoN5V1X6gr/HOHiRuR1Mx1Lfzt+jUKr1
u6HPc0DlU8nwTBsF+c4S3/tiBwR2fNr18hEFvvnYBVWOA1I1DteeD1DoFJcf
93/ogCdFd/fee01h5Ys3aZl7HKH+aNXwSbtoVC6v9ZlROyEq+69HAkU0NFKf
c+NeLih9n3c1w3QLht66KJ+4eGJgR+NnuiQaKjrgxNkDPihP9/gmqopBfsmE
vTCHD6vrpLLGcCvSlF3fNk4LYJeXHlcTK8amvhLfuKoAKI1Scs6f3AZvXXYm
7R6E5gaf0z/OxOBEpFGtT18IFB6dHrmCOAx5iu4ulodCWOThViCIR5BdhLXz
wGZoV4k+/l0XD9fd/4idleGYttB98dURCSa5juu/OxoBI/ukmzf4Uqzwsmua
fR6JJ4oHbXcGpGhqnhpc6heFndbVNsKcBPTa/7LPNpNCT2+KRLhahvpK7znb
jmhw5n/uab0vw2Jd6aQ1l0bZIe0HG9tk4I/0p5ra0fDmjMZq2mWQv3Cf0XOi
ITFY23+pW4bbU/Wzz7xoaIy1z449kyGX079IHUAj03JkTDIjw5y1m1XQdhrT
a3j6r1YSTIbXCpKv0Si8zAQqHAmcRBxNbAMNF9/MnCFnAlH05sDIJhpb+LcN
ut0J1OLHIWtbaPzqxyzR8Ah2yfUj9Ppo7Nl8cNmRTQRD2aFSpSGDUdktZ9sU
gt4rj76s38Jg8HBPWOsegpZxo/vcbQx6VJOKg/sJ6j3XWR+QMGjucbrelU5Q
eqasxjeZwVkqL/xYHkGEUtxZnc0gPijk8/eOE9za+9jt9AUGtDT2RGM5waUa
k33zFxmEH0r9bZeKQDUsuBFzlYGg/qxxawVBVsJJEbeJAZdnqCpQE/Cj4jKK
Oxg8dNRqObcJqrz7W/I4LJoD+kYvahf2d5lZDBqyaIqbNpf8QZBfFSAJNGGh
Pu4a0/gngczhp6k5CxZfLyuYyOgmsDFPsE3zYpGz5vQKj16CJeHF8nZvFunC
2vVdfQTTBTcv8fgsth/V5fH/JmjXd9o4Ecgi5J0w7tQ4QeHEoGIHw0JgL/U/
83Lhr9fy69oYFjz/dFnUK4Lk7cHvuiSw8IwpKuDMEGyr2B+eJ2fhmFFVffEN
QVh/RenAThZJW1Xll2cJHpz6PvX5bhb/AbM56zA=
       "]], LineBox[CompressedData["
1:eJwdlHtQlGUYxUFLlstyaUGiRHfFJVyZVcEQarMDS7jt4AxGCt/bjisC7/eJ
KyyUgJnrBRUxQe5oEOK6AtLOQMQUInhpFJqR3KwoGBkyV+5XWRzUvPTVH888
85tzZs6Z549HsiPto+QFdnZ2Sn7+22cuaHdEL6CoGjq0ePMaBo49s75XF1JM
dEapVgUxsLM5KVMXUcz1bugpe5vBvLsf5+vI663lV56GMpiSv5vf7Uyh2y92
JgoG/Sm7/pR5UEQOLRh1UDK4dP/WruE3KUqHB/dIYhis+LEjj1tKscRxrZ9f
LIOCc411o2IKTU7GEvFWBju2l1jHpRSKMaPARcPAaYB8MrOa4sa+Zq2ZZUD6
RtVPlBTHqemqyMDgqcVB5qzj8+vtdxvrGCQ1Ptl4MpWiZbTN5t3A4HbBeLIw
nWImWJ+WZ2Zg3GQ555bJ9xmRku3fMlDfKvfxPMj7VTtPDLQxqOyUOvqWUpgN
fa3inxkoOpQj8naK7pmjjQNTDBaFrRwbvELxyyu3JQ4PGVhaXCeqrlME0rtf
rrLx/c19005dFPp1j7dx8wyOV6bND92hSNI/u9D8kkHP3spFZ4cpmiTp3QVu
BNWPDgq2jlHEJ8Zl7fUg4NKpk3CSIts1O3O7iOAZt9Z13yx/j0FLrp83wfL4
Lq+45xSPFx4tNiwlSA2xrXATsQgMeCLKDyQIbe717/RiEdNcX/G+nMBefiVg
/+ssQv/p6pxaTVAqzQsc92XRPc0qlMEEbZ7L1nUFsNDVGLxvhhE42NTKAxt4
/fQfwrVRBDWNxoTpnSwUSulgt4agfyJBk61jERDepBFsI/CRSeLs01g0BRVl
hmsJik1no0WfsWgRqWvMCQRHzlStX29gcS8vOZilBGxOufBAMYtrs+/k6dMI
TNe2CARlLFyGtAO5eoJ7zz0XFlWwQOtvbl+nE8Rnlzw2VrFYF1Phdf1TAvXu
QmtnLZ9fHCKcySKQx5245HqZRf/NHtPEAYKU0g9bKjp4biqLtx4kqLsjaBRf
Y1H4Vf7S3kME4uhcU9BNFnqdaOpyDsFr4UdObbWweDDzxiNdLsEjmSG52spi
RBqVmFVA0P4i3UPuwiFyzDgXUUng/pCLbXDl4Gl4S/6C50Srtszfg8NcpGr0
hyoCp582+SxbzEHV3T7lX833L1opcRdzCIiNMthqCMw54sSTyzlows+4nD9H
8HKP9wWBlENT6MSazUaCWvLqSnsZh49NOR9cPE8w5/f3mtlg3j+9xaqqJVAt
7s1IDeGg0FTTSZ4rBZaWsVAOX+zPKCmsI4iYbA+1vsdBdyTS9ms9Qflf332u
BYfSw89lGRcJRu80tN+N4HAjpdXLvYGg8PvT+H0jhyT/Y0LVNwQP6k8djlFz
iJ4MW3af58D/HwQHU11iZoKZ4F/Pq9gn
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQrWQdPm9aYIZDwDq9AIa3UQ736ks8jiLxW1OSzuwN
Q/B1PAMCtkUj+Cl5+/OrmhH8uZP1+u1WI/j/Mht8mhkz4fx4h0ucJ8IR/Bue
z3ad/4HgG2U/zAhYngXnB146+WRRUDacrz5NaXrxJwT/XmGS2975OXC+zyoh
nVbHXDi/QWPDfbkHCP6UfSYTDHvy4PyEjZrlh3Ty4fw3j+TNEtsQ/HIRsa//
7yP4APvef/c=
       "]]}, {}}, {{}, {}, {}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 0, 1], 
     Opacity[0.6], 
     DiskBox[{128, 128}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       139, 128 + 
        Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {139, 172.7613391463784}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{
       117, 128 + 
        Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {117, 83.23866085362161}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{
        117, 128 + 
         Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
           Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])}, {
        139, 128 + 
         Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
           Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])}}, {{117, 83.23866085362161}, {
        139, 172.7613391463784}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["128", TraditionalForm], {128, 128}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]], 
     InsetBox[
      FormBox["\"4.07\"", TraditionalForm], 
      NCache[{
       139, 128 + 
        Rational[-561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {139, 172.7613391463784}], {0, 
      0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]], 
     InsetBox[
      FormBox["\"4.07\"", TraditionalForm], 
      NCache[{
       117, 128 + 
        Rational[561, 5] (2/Pi)^Rational[1, 2]/(-
          Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])}, {117, 83.23866085362161}], {0, 
      0}, Automatic, 
      NCache[{
       22, Rational[-1122, 5] (2/Pi)^Rational[1, 2]/(-
         Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
        Rational[64, 25] 2^Rational[1, 2]])}, {22, 89.5226782927568}]]}, {
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{86, 12}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {97.11549319003993, 23.115493190039928`}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {75.11549319003993, 1.1154931900399259`}], {
      2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{-11 + 
         255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        11 + 255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{75.11549319003993, 
       1.1154931900399259`}, {97.11549319003993, 23.115493190039928`}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["86", TraditionalForm], {86, 12}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {97.11549319003993, 23.115493190039928`}], {
      0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {75.11549319003993, 1.1154931900399259`}], {
      0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-97 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-75 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]]}, {
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{170, 243}, {5.1000000000000005`, 5.1000000000000005`}], 
     DiskBox[
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     DiskBox[
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {2.5500000000000003`, 2.5500000000000003`}], 
     Thickness[Large], 
     LineBox[
      NCache[{{-11 + 
         255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        11 + 255 (Rational[128, 255] + 
           Rational[
             5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
         243 + Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[
                  5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
           255 (Rational[128, 255] + 
             Rational[
               5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{158.88450680996007`, 
       231.88450680996007`}, {180.88450680996007`, 253.88450680996007`}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["170", TraditionalForm], {170, 243}, {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       11 + 255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {180.88450680996007`, 
       253.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-11 + 
        255 (Rational[128, 255] + 
          Rational[
            5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 243 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {158.88450680996007`, 
       231.88450680996007`}], {0, 0}, Automatic, 
      NCache[{
       22, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-181 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[
                 5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-159 + 
          255 (Rational[128, 255] + 
            Rational[
              5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {22, 22.000000000000004`}]]}, {
     RGBColor[1, 0, 0], 
     Opacity[0.6], 
     DiskBox[{62, 1}, {5.1000000000000005`, 5.1000000000000005`}], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["62", TraditionalForm], {62, 1}, {0, 0}]}, {
     RGBColor[1, 0, 0], 
     Opacity[0.6], 
     DiskBox[{194, 254}, {5.1000000000000005`, 5.1000000000000005`}], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["194", TraditionalForm], {194, 254}, {0, 0}]}, 
    InsetBox[
     BoxData[
      FormBox[
       PanelBox[
        TagBox[
         TagBox[
          GridBox[{{
             StyleBox["\[Null]", ShowStringCharacters -> False], 
             TagBox["\"0-1\"", HoldForm], 
             TagBox["\"0 - 255\"", HoldForm]}, {
             TagBox["\"Mean\"", HoldForm], 
             TemplateBox[{"\"\[Mu] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"128\"", 128, Editable -> False], 
                 InterpretationBox["\"255\"", 255, Editable -> False]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"c = \"", 
               TagBox[
                InterpretationBox["\"128\"", 128, Editable -> False], 
                NumberForm[#, 4]& ]}, "RowDefault"]}, {
             TagBox["\"Std\"", HoldForm], 
             TemplateBox[{"\"\[Sigma] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"5\"", 5, Editable -> False], 
                 InterpretationBox["\"51\"", 51, Editable -> False]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"s = \"", 
               TagBox[
                InterpretationBox["\"25\"", 25, Editable -> False], 
                NumberForm[#, 4]& ]}, "RowDefault"]}, {
             TagBox["\"G\"", HoldForm], 
             TemplateBox[{"\"\[Gamma] = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"51\"", 51, Editable -> False], 
                 RowBox[{
                   InterpretationBox["\"5\"", 5, Editable -> False], " ", 
                   SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                NumberForm[#, 4]& ]}, "RowDefault"], 
             TemplateBox[{"\"g = \"", 
               TagBox[
                FractionBox[
                 InterpretationBox["\"1\"", 1, Editable -> False], 
                 RowBox[{
                   InterpretationBox["\"25\"", 25, Editable -> False], " ", 
                   SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                NumberForm[#, 4]& ]}, "RowDefault"]}}, RowSpacings -> 1, 
           ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
           Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
           ColumnAlignments -> Left], {
          OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
         Function[BoxForm`e$, 
          TableForm[
          BoxForm`e$, 
           TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]], 
        Background -> Opacity[0.5, 
          GrayLevel[1]]], TraditionalForm]], 
     Scaled[{0.05, 0.9}], 
     Scaled[{0, 1}]], 
    InsetBox[
     FormBox["\"Compact Distribution\"", TraditionalForm], 
     NCache[{
      255, 255 - 255 (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])^(-1) (
        Erf[Rational[64, 25] 2^Rational[1, 2]] + 
        Erf[Rational[1, 25] 
          2^Rational[-1, 2] (-128 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))]) + 
       255 (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
          Rational[64, 25] 2^Rational[1, 2]])^(-1) (
         Erf[Rational[64, 25] 2^Rational[1, 2]] + 
         Erf[Rational[1, 25] 
           2^Rational[-1, 2] (-128 + 
            255 (Rational[128, 255] + 
              Rational[
                5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                Rational[1, 2]))]) - 
       255 (Rational[128, 255] + 
        Rational[-5, 51] (2 
           Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
             Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
             Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]) + 
       255 (Rational[128, 255] + 
         Rational[
           5, 51] (2 
            Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
              Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
              Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])}, {
      255, 107.70314411696131`}], {1, 1}], 
    InsetBox[
     FormBox["\"Full Range Distribution\"", TraditionalForm], 
     NCache[{
      255, (-255) (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
         Rational[64, 25] 2^Rational[1, 2]])^(-1) (
        Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
        Erf[Rational[64, 25] 2^Rational[1, 2]])}, {
      255, 254.99999999999997`}], {1, 1}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {64, 
       FormBox["64", TraditionalForm]}, {96, 
       FormBox["96", TraditionalForm]}, {128, 
       FormBox["128", TraditionalForm]}, {160, 
       FormBox["160", TraditionalForm]}, {192, 
       FormBox["192", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}}, None}, {{{16, 
       FormBox[
        FractionBox["1", "16"], TraditionalForm]}, {24, 
       FormBox[
        FractionBox["3", "32"], TraditionalForm]}, {32, 
       FormBox[
        FractionBox["1", "8"], TraditionalForm]}, {40, 
       FormBox[
        FractionBox["5", "32"], TraditionalForm]}, {48, 
       FormBox[
        FractionBox["3", "16"], TraditionalForm]}, {104, 
       FormBox[
        FractionBox["13", "32"], TraditionalForm]}, {112, 
       FormBox[
        FractionBox["7", "16"], TraditionalForm]}, {144, 
       FormBox[
        FractionBox["9", "16"], TraditionalForm]}, {152, 
       FormBox[
        FractionBox["19", "32"], TraditionalForm]}, {208, 
       FormBox[
        FractionBox["13", "16"], TraditionalForm]}, {216, 
       FormBox[
        FractionBox["27", "32"], TraditionalForm]}, {224, 
       FormBox[
        FractionBox["7", "8"], TraditionalForm]}, {232, 
       FormBox[
        FractionBox["29", "32"], TraditionalForm]}, {240, 
       FormBox[
        FractionBox["15", "16"], TraditionalForm]}, {0, 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"0"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {80., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
            "\"\[Mu]\"", Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {176., 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
           "\"\""}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {255, 
       FormBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}}, {{16, 
       FormBox["16", TraditionalForm]}, {24, 
       FormBox["24", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {40, 
       FormBox["40", TraditionalForm]}, {48, 
       FormBox["48", TraditionalForm]}, {104, 
       FormBox["104", TraditionalForm]}, {112, 
       FormBox["112", TraditionalForm]}, {144, 
       FormBox["144", TraditionalForm]}, {152, 
       FormBox["152", TraditionalForm]}, {208, 
       FormBox["208", TraditionalForm]}, {216, 
       FormBox["216", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {232, 
       FormBox["232", TraditionalForm]}, {240, 
       FormBox["240", TraditionalForm]}, {0, 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMin\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {80., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
            "\"C\"", Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {176., 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}, {
            GraphicsBox[{
              LineBox[{{0, 0}, {0, 0.1}}]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}, {255, 
       FormBox[
        TagBox[
         GridBox[{{"\"\""}, {
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMax\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Column"], TraditionalForm], {0.03, 0.01}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{746.5859375, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 255}, {0., 254.99999999994728`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.630841326735799*^9, 3.630841436896147*^9, 
  3.6308417542981157`*^9, 3.630864821367241*^9, 3.63086534529909*^9, 
  3.630865579095612*^9, 3.630865836925476*^9, 3.630866139052722*^9, 
  3.6308665072243347`*^9, 3.6308718378549547`*^9, 3.6309482264050713`*^9, 
  3.630952185774291*^9, 3.630952233496546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"0.25", ",", "0.75", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.630866192455179*^9, 3.630866308484221*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    RowBox[{
     GraphicsBox[{
       {GrayLevel[0], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], RectangleBox[{1, -1}]}, 
       {RGBColor[0.25, 0.75, 1], RectangleBox[{0, -1}, {2, 1}]}},
      AspectRatio->1,
      Frame->True,
      FrameStyle->RGBColor[0.16666666666666669`, 0.5, 0.6666666666666666],
      FrameTicks->None,
      ImageSize->
       Dynamic[{
        Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification]}],
      PlotRangePadding->None], "\[InvisibleSpace]"}],
    "RGBColor[0.25, 0.75, 1]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.25, 0.75, 1]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.25, 0.75, 1],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6308661961257343`*^9, {3.630866249248506*^9, 3.63086631237961*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"test", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"test", "[", "\"\<piecewise\>\"", "]"}], "[", "x", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"test", "[", "\"\<color\>\"", "]"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BinaryTicks", "[", 
         RowBox[{"0", ",", "255", ",", "3"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MixTicks", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "256"}]}], "}"}], "&"}],
             ",", 
            RowBox[{"BinaryTicks", "[", 
             RowBox[{"0", ",", "255", ",", "5"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"test", "[", "\"\<ticks\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "10"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MixTicks", "[", 
         RowBox[{
          RowBox[{"BinaryTicks", "[", 
           RowBox[{"0", ",", "255", ",", "5"}], "]"}], ",", 
          RowBox[{
           RowBox[{"test", "[", "\"\<ticks\>\"", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "10"}], "]"}]}], " ", "}"}]}],
      "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.630836422771735*^9, 3.630836457037972*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nfUD3QUgPFXFNl77y17JERCoaHsXXaKImUUQmXv1URC2XvvTVmVCJWR
lSizQtH43D+efvd53pzz/r73nkO+9t0bdkuUkJCw556EhPis6nOFoTgW83W8
DOby5/gYcxL05//x8niBn+BNcIxv5g9iER/G55rz4AOeHcaEav6z0lwCS/h6
Xhbz+PN8rPlevBW/FCr46MxPmpvie76FV8RiPpzPM+fFhzwHEmuP8FXmkljK
N/BymM/b8HHm+zCAJ8KD2ov8lLkZfuAjMF/Lh4+0nEiiVeerzaWwjLfFeC0p
Bsb3REXtJf6TuTl+5COxQMuPj7VcuFd7lK8xl8Zy3g4TtGQYFN8HD2ld+Glz
Cxzno7BQK4ApWm7cp9Xga81lsIK3x0Ttfrwd3wGVtK78jLklTvDRWKQVxFQt
D5JqNfk6c1ms5B0wSUuOd+I7oLL2Mj9rboWTcTNYrBXCNC0vkmm1+HpzOazi
HTFZS4F34zugivYKP2dujVNxG1iiFcYnWj7crz3GN5jLYzXvhPe0lBgc3wEP
a934+bhn/BQ3gOR4XN8Yt4Y1cdd4X0uFIfE7o6rWnf8cd4rTsXOkQG19U9wQ
1sa94gMtNYbG74hq2qv8QtwfzsSOkRJ19M1xM1gXd4gPtTQYpiXHI1oP/ou5
Lc7GTnHUsafyWdfPtsSdYH3cHj7S0mK4lgLVtdf4RXM7nIs9IjWe0LfGXWBD
3FrcJV7XL2ntcT72hDR4Ut8We8fGuKW4O/TUf9U64OfYA9LiKX177BWb4lZw
xO9e02cvP/tN74gL8fZIh6f1HbE7bI57iNtBb/2y1gm/xFsjPerpO2NX2BL7
jttAH/2K9gIuxtsiA57Rd8VusDX2G7eAN/SrWmdcindERjyr745dYFvsM3aP
TKjvZ1/EG2N77Cr2iszIgqzIhuzIgZzIhQb+3Jf+zKPYEfuJXSI3GvrZHr0G
dsYuYk94U7+mvYhf+cfIg0b6Xq0mdsUuYk/oq1/XXsJvfAryorG+T6uF3bGH
2BP66Te0LrjMpyIfmuj7tcfwRewhdoT++u9aV1zh05AfTfUD2uP4MvYQO8Jb
+h/ay7jKP8Ept1DAZzM/+0qvjT2xi9gTBuh/aq/gGp+Ogmiuf63Vwd54m3gP
LR1GaCnxrDaQ3zTHX3rX+acohBb6N1pd7Iu3ivfR0mOklgr1tUH8lrk7bvAZ
KIyW+kHtCeyPt4v30jJglJYax323Bvrb2m3+Kn7nM1EErfRvtSdxIN4z3lDL
iNFaGjTU3uF/mXvgDz4LRdFaP6Q9ha/ifeNNtUwYo6VFI+1d/rf5NfzJP0Mx
PKcf1p7G1/HW8b5aZozV0qGxNpjfMb+Om/xzLNWKYLqWHw9oz/PvzPXwTbx9
vLeWBeO09GiiDeF3zT1xi8/GMq0oPtUKoLjWhh8xP4ODsYt4fy0rxmsZ0FQb
yv8x98JtPgfLtWKYoRVECa0tPxp3gW9jL7ELLRsmaBnRTBvG/zX3xl98LlZo
D2CmVggltXb8WNwJDsWeYjdadkzUMqG5Npz/Z+6Dv/k8rNSKY5ZWGKW09vx7
cwMcjr3FrrQcmKRlRgttBI9/VL3B7xjnYxUvgc+0IiitdeA/xA3hO76Rl8cC
Pjj2aM6JyTwLWmojeSK8ye/yreaHsIQv4KvNJfE5L4oyWkf+Y9wajsR+Y6da
LrynZUUrbRS/B335P3ybuRKW8oV8jbkUZvNiKKt14sfjDnGUb+IVsJAPjV2b
c+N9ng2ttdE8Mfrxf/l2c2Us44v4WnNpzIm7xQ5zFSw37/T5cPz9gHL+3/8B
PBxTvQ==
       "],
       VertexColors->Automatic]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{710, 927, 878, 836, 802, 776, 760, 711, 712, 713, 714, 
       715, 716, 717, 718, 719, 720, 928, 879, 837, 803, 777, 761, 941, 892, 
       850, 816, 790, 721, 929, 880, 838, 804, 778, 952, 903, 861, 827, 762, 
       942, 893, 851, 817, 963, 914, 872, 791, 959, 910, 868, 971, 922, 980, 
       834},
       VertexColors->Automatic], 
      LineBox[{967, 918, 978, 876, 974, 926, 722, 930, 881, 839, 805, 779, 
       953, 904, 862, 828, 763, 943, 894, 852, 818, 792, 723, 931, 882, 840, 
       806, 780, 764, 944, 895, 853, 819, 793, 724, 932, 883, 841, 807, 781, 
       765, 945, 896, 854, 820, 794, 725, 933, 884, 842, 808, 961, 912, 870, 
       782, 954, 905, 863, 969, 920, 979, 829, 965},
       VertexColors->Automatic], 
      LineBox[{916, 976, 874, 973, 924, 766, 946, 897, 855, 821, 795, 726, 
       934, 885, 843, 809, 783, 767, 727, 728, 729, 730, 731, 732, 733, 734, 
       735, 736, 737, 738, 739, 740, 741, 742, 935, 886, 844, 810, 784, 768, 
       947, 898, 856, 822, 796, 743, 936, 887, 845, 811, 785, 955, 906, 864, 
       830, 769, 948, 899, 857, 823, 964, 915, 873, 797, 960, 911, 975, 869, 
       972},
       VertexColors->Automatic], 
      LineBox[{923, 981, 835, 968, 919, 877, 744, 937, 888, 846, 812, 786, 
       770, 949, 900, 858, 824, 798, 745, 938, 889, 847, 813, 787, 956, 907, 
       865, 831, 771, 950, 901, 859, 825, 799, 746, 939, 890, 848, 814, 788, 
       957, 908, 866, 832, 772, 951, 902, 860, 826, 800, 747, 940, 891, 849, 
       815, 962, 913, 871, 789, 958, 909, 867, 970, 921, 833, 966, 917},
       VertexColors->Automatic], 
      LineBox[{977, 875, 925, 773, 801, 748, 774, 749, 750, 751, 752, 753, 
       754, 755, 756, 757, 758, 775, 759},
       VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
   VertexColors->{
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 0, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[1, 0, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0.25, 0.75, 1]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]], 
     Opacity[0.6, 
      RGBColor[0, 1, 0]]}],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {64, 
       FormBox["64", TraditionalForm]}, {96, 
       FormBox["96", TraditionalForm]}, {128, 
       FormBox["128", TraditionalForm]}, {160, 
       FormBox["160", TraditionalForm]}, {192, 
       FormBox["192", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}}, None}, {{{16, 
       FormBox[
        FractionBox["1", "16"], TraditionalForm]}, {24, 
       FormBox[
        FractionBox["3", "32"], TraditionalForm]}, {32, 
       FormBox[
        FractionBox["1", "8"], TraditionalForm]}, {40, 
       FormBox[
        FractionBox["5", "32"], TraditionalForm]}, {48, 
       FormBox[
        FractionBox["3", "16"], TraditionalForm]}, {104, 
       FormBox[
        FractionBox["13", "32"], TraditionalForm]}, {112, 
       FormBox[
        FractionBox["7", "16"], TraditionalForm]}, {144, 
       FormBox[
        FractionBox["9", "16"], TraditionalForm]}, {152, 
       FormBox[
        FractionBox["19", "32"], TraditionalForm]}, {208, 
       FormBox[
        FractionBox["13", "16"], TraditionalForm]}, {216, 
       FormBox[
        FractionBox["27", "32"], TraditionalForm]}, {224, 
       FormBox[
        FractionBox["7", "8"], TraditionalForm]}, {232, 
       FormBox[
        FractionBox["29", "32"], TraditionalForm]}, {240, 
       FormBox[
        FractionBox["15", "16"], TraditionalForm]}, {0, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"0"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {80., 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}},
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {128., 
       FormBox[
        StyleBox[
        "\"\[Mu]\"", Bold, Background -> None, StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}},
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {176., 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {255, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}}, {{16, 
       FormBox["16", TraditionalForm]}, {24, 
       FormBox["24", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {40, 
       FormBox["40", TraditionalForm]}, {48, 
       FormBox["48", TraditionalForm]}, {104, 
       FormBox["104", TraditionalForm]}, {112, 
       FormBox["112", TraditionalForm]}, {144, 
       FormBox["144", TraditionalForm]}, {152, 
       FormBox["152", TraditionalForm]}, {208, 
       FormBox["208", TraditionalForm]}, {216, 
       FormBox["216", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {232, 
       FormBox["232", TraditionalForm]}, {240, 
       FormBox["240", TraditionalForm]}, {0, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"tMin\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
            DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {61.53160050950483, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {80., 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \\(1\\)]\\)\""}},
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {128., 
       FormBox[
        StyleBox["\"C\"", Bold, Background -> None, StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {176., 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{
            "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \\(2\\)]\\)\""}},
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}, {255, 
       FormBox[
        StyleBox[
         TagBox[
          
          GridBox[{{"\"tMax\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
            DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Bold, Background -> None, StripOnInput -> False], TraditionalForm], {
       0.03, 0.01}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{852.96484375, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 255}, {0., 254.99999999994728`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.630836434298553*^9, 3.630836458722938*^9}, 
   3.630836728757332*^9, 3.630952252029257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"setUpErf", "[", " ", 
    RowBox[{"25", ",", "128", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}]}], "}"}], ",", 
     RowBox[{"Unit", "\[Rule]", "False"}], ",", 
     RowBox[{"G", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"test", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"test", "[", "\"\<piecewise\>\"", "]"}], "[", "x", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"test", "[", "\"\<color\>\"", "]"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"BinaryTicks", "[", 
            RowBox[{"0", ",", "255", ",", "3"}], "]"}]}], ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"test", "[", "\"\<ticks\>\"", "]"}]}]}], "}"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LabelPointGrad", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"test", "[", "\"\<param\>\"", "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"test", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], " ", 
         "&"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"test", "[", "\"\<param\>\"", "]"}], " ", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        "Green", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "20", ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.02", ",", "0.02"}], "}"}], "]"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Panel", "[", 
         RowBox[{"valTable", "[", 
          RowBox[{
           RowBox[{"test", "[", "\"\<vars\>\"", "]"}], ",", 
           RowBox[{"test", "[", "\"\<ranges\>\"", "]"}]}], "]"}], "]"}], ",", 
        
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{".05", ",", ".95"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"test", "[", "\"\<func\>\"", "]"}], "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{"test", "[", "\"\<piecewise\>\"", "]"}], "[", "x", "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"test", "[", "\"\<color\>\"", "]"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sequence", "@@", 
               RowBox[{"BinaryTicks", "[", 
                RowBox[{"0", ",", "255", ",", "3"}], "]"}]}], ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"test", "[", "\"\<ticks\>\"", "]"}]}]}], "}"}]}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LabelPointGrad", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"test", "[", "\"\<param\>\"", "]"}], " ", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"test", "[", "\"\<func\>\"", "]"}], "[", "#1", "]"}], 
             " ", "&"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"test", "[", "\"\<param\>\"", "]"}], " ", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            "Green", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "20", ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Panel", "[", 
             RowBox[{"valTable", "[", 
              RowBox[{
               RowBox[{"test", "[", "\"\<vars\>\"", "]"}], ",", 
               RowBox[{"test", "[", "\"\<ranges\>\"", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{".05", ",", ".95"}], "}"}], "]"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"test", "[", "\"\<piecewise\>\"", "]"}], "[", "x", "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "255", ",", "1"}], "}"}], ",", 
       RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"test", "[", "\"\<color\>\"", "]"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.620802009657934*^9, 3.620802010583561*^9}, {
   3.6208020718876266`*^9, 3.6208021073224707`*^9}, {3.620968752930455*^9, 
   3.620968757195468*^9}, {3.620968975461784*^9, 3.6209689764373503`*^9}, {
   3.620969128175061*^9, 3.620969189176803*^9}, 3.620977669933926*^9, {
   3.630781070148098*^9, 3.630781134408476*^9}, {3.630781224413025*^9, 
   3.63078122869901*^9}, {3.6307812790510273`*^9, 3.630781329176593*^9}, {
   3.6307813944971247`*^9, 3.6307814529758472`*^9}, {3.6307814901101837`*^9, 
   3.63078155246383*^9}, {3.630782236549857*^9, 3.6307822715996513`*^9}, {
   3.630782330770772*^9, 3.6307823551957684`*^9}, {3.6307825388761673`*^9, 
   3.630782554679453*^9}, {3.630783661780545*^9, 3.630783666641247*^9}, {
   3.63078460359589*^9, 3.630784626212199*^9}, {3.6307851091467447`*^9, 
   3.630785109504225*^9}, {3.630786612328171*^9, 3.630786613806196*^9}, {
   3.630786827476486*^9, 3.630786830502944*^9}, {3.6307868739873238`*^9, 
   3.630786909274673*^9}, {3.630787133500943*^9, 3.630787133792274*^9}, {
   3.6307877311080627`*^9, 3.630787803042375*^9}, {3.63078807879873*^9, 
   3.630788082557502*^9}, {3.630788113417342*^9, 3.6307881259714937`*^9}, {
   3.63078819821115*^9, 3.6307882786427383`*^9}, {3.630788501665558*^9, 
   3.630788558962056*^9}, {3.630788592829245*^9, 3.6307886035248137`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
FiXvKXnkDZuJwZ8BEujvZ3Ch1MvQNF4Z2fPY/2Ol9ZjiN3entwlNekvIfNTM
6NKJKU2Z/SrqPo07oCr+Sg9L9m6UK1M+y5kkDtv03OGtrRoyXuRZdH4vDz+I
H3Zxx1uhmYGE/Lyx/ZB3niVeOtsX9R2Mss+SPwTtzjzdkkURiH+s19JECoDc
+vjvzskUxMMv2hDxRRsuuWXUr/y6hWLKFO7sjtEDJuM4ZR36cnR37PM7xG4I
4im9xIdv6tExC8OIqnJjqJXwbOUz7UHVI/gO1oNmIN+u0TS6eRw5r4lvtK61
ABVLDmGy4iLKXYpmtp/yhThc2mX1YDLk19gxM6f7weBVvrevb5DBcHtvMEkF
yx/dqgnLVWSI2VLLzf0RD1zq/NPbsTwymvqJJ+m0PwiVWR8/iuWRsrXdk5Li
AZDjWpWqj+WRDLFmq47OANjs41LSi9UHe19J2+2nAoFHqt6QBdvP2MRiyXAB
ArjlXEm+TOl34ONW3kQA/rCNaxQepCOqYf12IBF2umTspuQRV/fL3R+2kCDb
Ik2Zkke42i9u6S0nQVZZbyOlPpSG57S4upDhctn2UMr9SqwJP2lTwA72k7Zj
LXwsKG1AjavbSggMOQdb441kkH23wzbx6zLA5ydScdNHD6l/yX65z0wJrG1M
vZI5XZC71EMv+8wDoM7H/vGNbjCS+un5Xb9MA3JLvZg7v51BzIt8mTzxWmCk
mRW3VSkbXXiKCidVdGHAK3j0GdND5Jm8EwIiA+Cgg09QC+ZfMdzL5HCpQJAa
ws0mY/7VarB7sNYSCLpMIztwFH+GWdAJnMD2AwlzVFKu77CGdfYuIoSqPuqk
8AozmpkfF54T4coI0ytKHsHf75L97EUCvTbhbZQ8EmrIHCPARIawEZF2in81
H6Qm/H1ChvOmbF8o+zGauzwidnYcqTSnnz6h3qcp80Hs9AcuXtDXuXR65hov
kq9tvdViJAZwL7r3yw4VlN16OtpqlQhqpVYalDxi+X1g94oeGeZ2NdtQvi+9
Mn1m5Q4L/NbbaeVzmR6l7VPcf3FZAHJ2Wp3q5pFA+XxvenHmJGC6gztFySN7
CyW92X+Q4Fgt0xXK+voFuj6lX8eerz8qzZTvy1OzPOTTQoZXVsILFN2xLst9
BasDJZO6vyh6ynPPuiLmI7tre9comsoTb/j3PypPTNVUnpiqqTwxVVN5Yqqm
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

   "], {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1ne4D3QUgPGroey9995bKbIi2aJsld00ojKilD1StjJCZW/X5poNlAal
RRkJDVvZfc4fb7/zvjfPc3/fc3pUoHOvFj2TJSQk7LkjISE+H/K5xlAKy/lG
Xh4L+ZP8bfNdGMRv80rozg/zlviBJ/H7sIyP5AvN+TCN54Qxobp/JJpLYwXf
xCtgEX+KjzffjcHxS6Gyj2f4EXMr/Mi38fuxnI/ii8z5MZ3nwp1aDb7WXAYr
+WZeEYv50/wdc3K8zpPhPu1Z/qu5NX7io7FYK4D3tNy4S6vJ15nLYhXviHe1
e/BGfE/crz3HfzO3wc98DJZoBfG+lgd3a7X4enM5rOadMEG7F0Pi+6CK9jw/
am6LX/hYLNUKYYaWF8m12nyDuTzW8M6YqKXAm/Ed8ID2Aj9mbofDfByWaYUx
U8uHe7SH+UZzBSTyLpikpcRb8R3woPYiP25ujyNxM1iuFcEsLT/u1erwTeaK
WMu7YrKWCkPjO6Cq1oOfMHfAr3EbWKEVxWytAFJodflmcyWs490wRUuNYfEd
UE3ryX+Pe8ZvcQNIiUf0LXFrWB93jalaGgyP3xkPab34ybhTHI2dIxXq6Vvj
hrAh7hXTtLQYEb8jqmu9+R9xfzgWO0ZqPKonxc1gY9whpmvpMFJLiRraS/yU
uSOOx06R6NjT+KzvZ9viTrApbg/vaekxSkuFmlofftrcCSdij0iLBvr2uAts
jluLu0Rf/YzWGb/HnpAODfUdsXdsiVuKu8PL+p9aF5yMPSA9Guk7Y6/YGrcS
d4VX9L+0rvgj3h0Z0FjfFXtDUtxC3A1e1f/WusXt+O6n4q2REU38bHfsCtti
33Eb6Kf/o3XH6XhbZEJT/ZPYDbbHfuMW0F8/qz2DM/GOyIxm+qexC+yIfcbu
kQWP+dln8cbYGbuKvSIrsiE7ciAnciE38qC5P/e5P1MLu2I/sUvkRQs/26PX
xu7YRewJA/Rz2rP4k7+PfHhc36s9jE9iF7EnDNTPa8/hLz4D+fGEvk+rg09j
F7EnvKZf0J7H33wmCqCl/oVWF5/FLmJPGKRf1F7APzzJXmb5LIhWfval/gg+
j13EnjBYv6S9iLN8Ngqhtb5fq4c9sYvYE17XL2s9cI5/gMJoo3+lPYq98Tbx
HloGjNZSo5n2Br9ijr/0zvM5KIK2+tdafeyLt4r30TJijJYGj2lD+L/mXrjA
56Io2unfaA3wRbxdvJeWCWO1tPHfk/dorr+p/cd74yKfh2Jor3+rNcSX8Z6Y
pWXGOC0dWmhv8avml3CJf4ji6KAf0Bphf7xtvKeWBW9r6fG4NpRfM/fBZf4R
SuBJ/aDWGF/FW8f7alkxXsuAJ7Rh/Lq5L67wj7FSK4YPtIIoqT3FvzM3wdfx
9vHeWja8o2VES204v2F+Gf/y+VilFcccrRBKaU/z781N8U3sIt5fy453tUxo
pY3gN82v4D++AKu1EpirFUZprSM/FHeBb2MvsQstByZomdFaG8lvmV/FVb4Q
a7SSmKcVQRmtE/8h7gQHYk+xGy0nJmpZ0EYbxW+b++EaX4RErRQ+1IqirNaZ
/2hujoOxt9iVlguTtKxoq43m8T9V/fl142Ks5aXxkVYM5bQu/Ke4IXzHt/BK
WMKHxR7NuTGZZ0M7bQxPhgH8Bt9uroIVfAlfZy6Dj3lxlNe68p/j1vB97Dd2
quXBFC072mtj+R0YyG/yHeYHsJIv5evNZTGfl0AFrRv/Je4Qh/hWXhlL+YjY
tTkvpvIc6KCN43fiNX6L7zQ/iFV8Gd9gLocFcbfYZa6K1ebdPqvF3w+o6N/9
H0TLUzc=
       "],
       VertexColors->Automatic]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{710, 907, 868, 833, 802, 776, 760, 711, 712, 713, 714, 
       715, 716, 717, 718, 719, 720, 908, 869, 834, 803, 777, 761, 921, 882, 
       847, 816, 790, 721, 909, 870, 835, 804, 778, 932, 893, 858, 827, 762, 
       922, 883, 848, 817, 939, 900, 865, 791, 937, 898, 863, 943, 904, 947, 
       832},
       VertexColors->Automatic], 
      LineBox[{941, 902, 946, 867, 944, 906, 722, 910, 871, 836, 805, 779, 
       933, 894, 859, 828, 763, 923, 884, 849, 818, 792, 723, 911, 872, 837, 
       806, 780, 764, 924, 885, 850, 819, 793, 724, 912, 873, 838, 807, 781, 
       765, 925, 886, 851, 820, 794, 725, 913, 874, 839, 808, 782, 766, 926, 
       887, 852, 821, 795, 726, 914, 875, 840, 809, 783, 767, 950},
       VertexColors->Automatic], 
      LineBox[{727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 
       739, 740, 741, 742, 915, 876, 841, 810, 784, 768, 927, 888, 853, 822, 
       959},
       VertexColors->Automatic], 
      LineBox[{796, 743, 916, 877, 842, 811, 785, 769, 928, 889, 854, 823, 
       797, 744, 917, 878, 843, 812, 786, 770, 929, 890, 855, 824, 798, 745, 
       918, 879, 844, 813, 787, 934, 895, 860, 829, 771, 930, 891, 856, 825, 
       799, 746, 919, 880, 845, 814, 788, 935, 896, 861, 830, 772, 931, 892, 
       857, 826, 800, 747, 920, 881, 846, 815, 938, 899, 864, 789, 936, 897, 
       862, 942, 903, 831, 940, 901},
       VertexColors->Automatic], 
      LineBox[{945, 866, 905, 773, 801, 748, 774, 749, 750, 751, 752, 753, 
       754, 755, 756, 757, 758, 775, 759},
       VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
   VertexColors->CompressedData["
1:eJztlsENAiEUBYlWYiX2YAkmnq3SfixBD56MRE0WmP//bPY0EIdHeKyH8/V0
2bXWbvvWnu/ruR/bx0euX57fJ8/Fq/uj9ZKSTx6TV/dn6SUlt5zNs3mo/aDk
lsfk1f1ZeknJLWfzbB5qbyj55DH5aA8tr1wu/51X92e5Fym55Wxe3e//dnkE
PtpDyyuXy+W0e5Luz/J9oOSWs3l1/6zeUPLJY/LRHlpeuVwuj3J/0v1ZvhuU
3HI2r+6f1RtKPnlMPtpDyyuXy+XR71W6vzrP7qvKqf4q54rqp/d99HpWcc/b
HE7dt9747H1Y5fWcb8up+9Ybr3LO/52/ah+3/j1aPnv0H4/eo9Hrsadr10Pd
t944pS+rvKt6umr+LD/tnnkf33rfevz7vAcUCnje
    "]],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[0, 1, 0], 
     Opacity[0.6], 
     DiskBox[{86, 12}, 
      Scaled[{0.02, 0.02}]], 
     DiskBox[
      NCache[{
       20 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {106.11549319003993`, 32.11549319003993}], 
      Scaled[{0.02, 0.02}]], 
     DiskBox[
      NCache[{-20 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {66.11549319003993, -7.884506809960076}], 
      Scaled[0.5] Scaled[{0.02, 0.02}]], 
     Thickness[Large], 
     LineBox[
      NCache[{{-20 + 
         255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}, {
        20 + 255 (Rational[128, 255] + 
           Rational[-5, 51] (2 
              Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
         Rational[-51, 5] 
          E^(Rational[-1, 1250] (-128 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))^2) (2/Pi)^
           Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
            Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
           255 (Rational[128, 255] + 
             Rational[-5, 51] (2 
                Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                  Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                  Erf[Rational[64, 25] 2^Rational[1, 2]])])^
               Rational[1, 2]))}}, {{66.11549319003993, -7.884506809960076}, {
       106.11549319003993`, 32.11549319003993}}]], 
     GrayLevel[0], 
     Opacity[1], 
     InsetBox[
      FormBox["86", TraditionalForm], {86, 12}, {0, 0}, Automatic, 
      NCache[{
       40, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {40, 40.}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{
       20 + 255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {106.11549319003993`, 32.11549319003993}], {
      0, 0}, Automatic, 
      NCache[{
       40, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {40, 40.}]], 
     InsetBox[
      FormBox["\"1.\"", TraditionalForm], 
      NCache[{-20 + 
        255 (Rational[128, 255] + 
          Rational[-5, 51] (2 
             Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
               Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
               Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 12 + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {66.11549319003993, -7.884506809960076}], {0,
       0}, Automatic, 
      NCache[{
       40, Rational[51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2])) + 
        Rational[-51, 5] 
         E^(Rational[-1, 1250] (-128 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                 Rational[1, 2]))^2) (2/Pi)^
          Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
           Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
          255 (Rational[128, 255] + 
            Rational[-5, 51] (2 
               Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                 Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                 Erf[Rational[64, 25] 2^Rational[1, 2]])])^
              Rational[1, 2]))}, {40, 40.}]]}, 
    InsetBox[
     BoxData[
      FormBox[
       PanelBox[
        TagBox[
         TagBox[
          GridBox[{{
             StyleBox["\[Null]", ShowStringCharacters -> False], 
             TagBox["\"0-1\"", HoldForm], 
             TagBox["\"0 - 255\"", HoldForm]}, {
             TagBox["\"Mean\"", HoldForm], 
             TagBox[
              FractionBox[
               InterpretationBox["\"128\"", 128, Editable -> False], 
               InterpretationBox["\"255\"", 255, Editable -> False]], 
              NumberForm[#, 4]& ], 
             TagBox[
              InterpretationBox["\"128\"", 128, Editable -> False], 
              NumberForm[#, 4]& ]}, {
             TagBox["\"Std\"", HoldForm], 
             TagBox[
              FractionBox[
               InterpretationBox["\"5\"", 5, Editable -> False], 
               InterpretationBox["\"51\"", 51, Editable -> False]], 
              NumberForm[#, 4]& ], 
             TagBox[
              InterpretationBox["\"25\"", 25, Editable -> False], 
              NumberForm[#, 4]& ]}, {
             TagBox["\"G\"", HoldForm], 
             TagBox[
              FractionBox[
               InterpretationBox["\"51\"", 51, Editable -> False], 
               RowBox[{
                 InterpretationBox["\"5\"", 5, Editable -> False], " ", 
                 SqrtBox[
                  InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
              NumberForm[#, 4]& ], 
             TagBox[
              FractionBox[
               InterpretationBox["\"1\"", 1, Editable -> False], 
               RowBox[{
                 InterpretationBox["\"25\"", 25, Editable -> False], " ", 
                 SqrtBox[
                  InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
              NumberForm[#, 4]& ]}}, RowSpacings -> 1, ColumnSpacings -> 3, 
           RowAlignments -> Baseline, ColumnAlignments -> Left, 
           ColumnLines -> {1, False}, RowLines -> {1, False}, 
           ColumnAlignments -> Left], {
          OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
         Function[BoxForm`e$, 
          TableForm[
          BoxForm`e$, 
           TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]]], 
       TraditionalForm]], 
     Scaled[{0.05, 0.95}], 
     Scaled[{0, 1}]]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{All, None}, {All, {{0, 
       FormBox["0", TraditionalForm]}, {32, 
       FormBox["32", TraditionalForm]}, {64, 
       FormBox["64", TraditionalForm]}, {96, 
       FormBox["96", TraditionalForm]}, {128, 
       FormBox["128", TraditionalForm]}, {160, 
       FormBox["160", TraditionalForm]}, {192, 
       FormBox["192", TraditionalForm]}, {224, 
       FormBox["224", TraditionalForm]}, {256, 
       FormBox["256", TraditionalForm]}, {61.53160050950483, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)  \"", 
         Bold, Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {128., 
       FormBox[
        StyleBox[
        "\"  C  \"", Bold, Background -> GrayLevel[1], StripOnInput -> False],
         TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)  \"", 
         Bold, Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
       FormBox[
        StyleBox[
        "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)  \"", Bold, 
         Background -> GrayLevel[1], StripOnInput -> False], 
        TraditionalForm], {0.03, 0.01}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{657.9375, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 255}, {0., 254.99999999994728`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.630788533132111*^9, 3.630788560849573*^9}, 
   3.630788606399794*^9, 3.630788646731052*^9, {3.6307887937228327`*^9, 
   3.630788822879663*^9}, 3.630788965360976*^9, 3.6307890042781057`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
FiXvKXnkDZuJwZ8BEujvZ3Ch1MvQNF4Z2fPY/2Ol9ZjiN3entwlNekvIfNTM
6NKJKU2Z/SrqPo07oCr+Sg9L9m6UK1M+y5kkDtv03OGtrRoyXuRZdH4vDz+I
H3Zxx1uhmYGE/Lyx/ZB3niVeOtsX9R2Mss+SPwTtzjzdkkURiH+s19JECoDc
+vjvzskUxMMv2hDxRRsuuWXUr/y6hWLKFO7sjtEDJuM4ZR36cnR37PM7xG4I
4im9xIdv6tExC8OIqnJjqJXwbOUz7UHVI/gO1oNmIN+u0TS6eRw5r4lvtK61
ABVLDmGy4iLKXYpmtp/yhThc2mX1YDLk19gxM6f7weBVvrevb5DBcHtvMEkF
yx/dqgnLVWSI2VLLzf0RD1zq/NPbsTwymvqJJ+m0PwiVWR8/iuWRsrXdk5Li
AZDjWpWqj+WRDLFmq47OANjs41LSi9UHe19J2+2nAoFHqt6QBdvP2MRiyXAB
ArjlXEm+TOl34ONW3kQA/rCNaxQepCOqYf12IBF2umTspuQRV/fL3R+2kCDb
Ik2Zkke42i9u6S0nQVZZbyOlPpSG57S4upDhctn2UMr9SqwJP2lTwA72k7Zj
LXwsKG1AjavbSggMOQdb441kkH23wzbx6zLA5ydScdNHD6l/yX65z0wJrG1M
vZI5XZC71EMv+8wDoM7H/vGNbjCS+un5Xb9MA3JLvZg7v51BzIt8mTzxWmCk
mRW3VSkbXXiKCidVdGHAK3j0GdND5Jm8EwIiA+Cgg09QC+ZfMdzL5HCpQJAa
ws0mY/7VarB7sNYSCLpMIztwFH+GWdAJnMD2AwlzVFKu77CGdfYuIoSqPuqk
8AozmpkfF54T4coI0ytKHsHf75L97EUCvTbhbZQ8EmrIHCPARIawEZF2in81
H6Qm/H1ChvOmbF8o+zGauzwidnYcqTSnnz6h3qcp80Hs9AcuXtDXuXR65hov
kq9tvdViJAZwL7r3yw4VlN16OtpqlQhqpVYalDxi+X1g94oeGeZ2NdtQvi+9
Mn1m5Q4L/NbbaeVzmR6l7VPcf3FZAHJ2Wp3q5pFA+XxvenHmJGC6gztFySN7
CyW92X+Q4Fgt0xXK+voFuj6lX8eerz8qzZTvy1OzPOTTQoZXVsILFN2xLst9
BasDJZO6vyh6ynPPuiLmI7tre9comsoTb/j3PypPTNVUnpiqqTwxVVN5Yqqm
8sRUTeWJqZrKE1M1lSemaipPTNVUnpiqqTwxVf//4okn/oinDYr/wxPnOWjl
3DmpROOJz2XMC1rEHqDxxKFpfUkvVzVoPLHhl4z9boVaNJ5YcTLmlIOULo0n
zrFiqVD6ok/jiSdkrNuY8UY0nlh3r+Uu0RETGk8sETTlLJpmTuOJF3cKH0pO
sKTxxNv37a39+9WKxhPXNi2NbtW0ofHEA4IPju05ZUvjiasKFNf29NjReGLm
yazFXTsdaDyx+wfL95pWjjSeOO3r2HFBSycaT9wyd6Z44JsTjSdW1xEda3HB
0Xhi3ambi9pXcTSe2PKhrOWGWRyNJ6ZqKk9M1VSemKqpPDFVU3liqqbyxFRN
5YmpmsoTUzWVJ6ZqKk9M1VSemKqpPDHVb1R+l6qp/C5V/7f5XSo/u2heoUF4
5kDjZ1N6eI31PzvS+FlCAR3x5l0nGj8rI/GT+6IMjsbP9r/pyp+JwtH4Wer1
UflZqqbyqlRN5VWp10flQ6mayodS9X+bD6XymWu7JHfo+jvQ+EyJ0/SledmO
ND7znG/+S+5IJxqfWSIY1JK0FUfjM2sWDp4/QsbR+EyX73YjhndwQOUJqeun
8oRU/Z/yhFTeb7Qg+5Iuk+M/vF9rnuGNHU403q8o8uMzgVYnGu/XktW9RUEf
R+P9JkT1vU4k4Wi8H/X+UPk56nqpvBpVU3k1qv5v82pUXixu49CmEi0HGi/W
u2vT0bYQRxovVhde6lbk50TjxbyP/Llduu5E48W+nPdR8vPF0XgxCRv9yB95
OKDyTbR+8W++iar/U76Jyh+R8HSWG7440PijOXMTLpU/jjT+qMzQ/8LAcyca
f0TIi+R9o4aj8UejczuXCPGYn/7Nw1DX97/xMKv0Z1Ij9+BoPIxEqsqWuRM4
Gg/jLXZ2i+F9HMhJja/drPjneql8BVVTeQaqpvIMVP3f5hmoPEH9UtXfsX0O
NJ6Aoc5YGXk70ngC9ambzJtdnGg8wRHlVVf8ihONJyjjNs4r8sDReALDlqpv
Yrk4oM6/qeunzr+p+j+df1Pn0yXOn/VVWhxo8+mia0fyvs840ubTaROiOPdH
TrT5dMt3P3UdJRxtPn2EwP2tMhYH1Hkp7X78L/NS9bH2eGFeHG1eqmyZue3V
URxtXkqI0/3RUYDV572pj1+k/XO/7+AYJemk8GCbH6t37xYOGGblByP1/vl8
IOqY4Rurf+qBrdWP+D8j5jCiuVV9NWwOUedh1N+nzp+omjp/our/9vyJOv/B
f5f6uUHEgTb/6W3cptuKc6TNf1xig3cL2DvR5j8yvp8SpH840eY/JYqXQrTc
cLT5z6Ku4eTTHBxQ5xW0evfveQVV/6fzCto8wc5E26rWgTZPWNX9QRQfc6TN
E+aUjpDPFznR5gkHfr+t/yaHo80TUrIv7umNwQH1fJu6vv/tfDuUPTTEnRtH
O9+GZx+2XgvC0c63I04FX065i4ObHSfXZqP/8cP6cd7bzKJ4KDkwI291Ewdh
eXxSxQr/fC5z5babpyke8u96hXgU4aCJ4VOHzDtzEFsxn7CUnUOT7wurPmnj
oS7g2TaOQhyUBxbiLxb88/dnvD1bXtj/47eBa2waLSvmgBPftnG0YQ5Rzztp
z+u/zxepmnq+SNX/7fNF6vnegZmhEPa9DrTzvaJr13JZ7B1p53u7WRSEhW2c
aOd77xjaBJnmnWjnexJaJS7Mrjja+R5PpLjsGpZnqedR1PVTz6Oo+j89j6Ke
F4lYb6xxfeFAOy/iYH76V23IkXZeVDb5/AdvoRPtvMiytCATyeJo50X9JemO
I9E4oJ5fUNf3v51fOHo5nDjJiaOdX2wedxuIP4KjnV+ou+T6zmJ56XDRrPCm
E//4oShWwCtRCMtTWlc237qBg/1hiRZvxf/5fLQg+bSlMR5MZ9X2DmP9jLG0
6OfRNnPYWeZzuFx8DmUMPg5zAzyknf4rFXwPB0F6e5Ju5/7z91dORHmOzprD
ngePDN7cmENChxxyM/6verdV2u8BT585uGxrNo2wnUO/L6noHC/95+93kowi
2OrMwYnEX9nAModCziVqeMfbwffTt9QDv4tD9HjfmtxpO3gdVtCR+0YcCFKa
EVmJdnDufmjVGz6J/+fz/7n+/9mfxQPWIv+Y4+HZ+GXC75dk+J/r/Z/P35tK
tSEzdcyfqrn8S+4kaJr68uqxmg9k1XC9/DrpANTvW5EyGilpwUFNYuqGCU0f
KK03zTFddPh/fp96fZKXUwwUseujfv/t18X7dn53AOp+8Pxr/V/Q/wHT1QjX

       "], {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwV1ne4D3QUgPGroey9995bKbIi2aJsld00ojKilD1StjJCZW/X5poNlAal
RRkJDVvZfc4fb7/zvjfPc3/fc3pUoHOvFj2TJSQk7LkjISE+H/K5xlAKy/lG
Xh4L+ZP8bfNdGMRv80rozg/zlviBJ/H7sIyP5AvN+TCN54Qxobp/JJpLYwXf
xCtgEX+KjzffjcHxS6Gyj2f4EXMr/Mi38fuxnI/ii8z5MZ3nwp1aDb7WXAYr
+WZeEYv50/wdc3K8zpPhPu1Z/qu5NX7io7FYK4D3tNy4S6vJ15nLYhXviHe1
e/BGfE/crz3HfzO3wc98DJZoBfG+lgd3a7X4enM5rOadMEG7F0Pi+6CK9jw/
am6LX/hYLNUKYYaWF8m12nyDuTzW8M6YqKXAm/Ed8ID2Aj9mbofDfByWaYUx
U8uHe7SH+UZzBSTyLpikpcRb8R3woPYiP25ujyNxM1iuFcEsLT/u1erwTeaK
WMu7YrKWCkPjO6Cq1oOfMHfAr3EbWKEVxWytAFJodflmcyWs490wRUuNYfEd
UE3ryX+Pe8ZvcQNIiUf0LXFrWB93jalaGgyP3xkPab34ybhTHI2dIxXq6Vvj
hrAh7hXTtLQYEb8jqmu9+R9xfzgWO0ZqPKonxc1gY9whpmvpMFJLiRraS/yU
uSOOx06R6NjT+KzvZ9viTrApbg/vaekxSkuFmlofftrcCSdij0iLBvr2uAts
jluLu0Rf/YzWGb/HnpAODfUdsXdsiVuKu8PL+p9aF5yMPSA9Guk7Y6/YGrcS
d4VX9L+0rvgj3h0Z0FjfFXtDUtxC3A1e1f/WusXt+O6n4q2REU38bHfsCtti
33Eb6Kf/o3XH6XhbZEJT/ZPYDbbHfuMW0F8/qz2DM/GOyIxm+qexC+yIfcbu
kQWP+dln8cbYGbuKvSIrsiE7ciAnciE38qC5P/e5P1MLu2I/sUvkRQs/26PX
xu7YRewJA/Rz2rP4k7+PfHhc36s9jE9iF7EnDNTPa8/hLz4D+fGEvk+rg09j
F7EnvKZf0J7H33wmCqCl/oVWF5/FLmJPGKRf1F7APzzJXmb5LIhWfval/gg+
j13EnjBYv6S9iLN8Ngqhtb5fq4c9sYvYE17XL2s9cI5/gMJoo3+lPYq98Tbx
HloGjNZSo5n2Br9ijr/0zvM5KIK2+tdafeyLt4r30TJijJYGj2lD+L/mXrjA
56Io2unfaA3wRbxdvJeWCWO1tPHfk/dorr+p/cd74yKfh2Jor3+rNcSX8Z6Y
pWXGOC0dWmhv8avml3CJf4ji6KAf0Bphf7xtvKeWBW9r6fG4NpRfM/fBZf4R
SuBJ/aDWGF/FW8f7alkxXsuAJ7Rh/Lq5L67wj7FSK4YPtIIoqT3FvzM3wdfx
9vHeWja8o2VES204v2F+Gf/y+VilFcccrRBKaU/z781N8U3sIt5fy453tUxo
pY3gN82v4D++AKu1EpirFUZprSM/FHeBb2MvsQstByZomdFaG8lvmV/FVb4Q
a7SSmKcVQRmtE/8h7gQHYk+xGy0nJmpZ0EYbxW+b++EaX4RErRQ+1IqirNaZ
/2hujoOxt9iVlguTtKxoq43m8T9V/fl142Ks5aXxkVYM5bQu/Ke4IXzHt/BK
WMKHxR7NuTGZZ0M7bQxPhgH8Bt9uroIVfAlfZy6Dj3lxlNe68p/j1vB97Dd2
quXBFC072mtj+R0YyG/yHeYHsJIv5evNZTGfl0AFrRv/Je4Qh/hWXhlL+YjY
tTkvpvIc6KCN43fiNX6L7zQ/iFV8Gd9gLocFcbfYZa6K1ebdPqvF3w+o6N/9
H0TLUzc=
           "],
           VertexColors->Automatic]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[{710, 907, 868, 833, 802, 776, 760, 711, 712, 713, 714, 715,
            716, 717, 718, 719, 720, 908, 869, 834, 803, 777, 761, 921, 882, 
           847, 816, 790, 721, 909, 870, 835, 804, 778, 932, 893, 858, 827, 
           762, 922, 883, 848, 817, 939, 900, 865, 791, 937, 898, 863, 943, 
           904, 947, 832},
           VertexColors->Automatic], 
          LineBox[{941, 902, 946, 867, 944, 906, 722, 910, 871, 836, 805, 779,
            933, 894, 859, 828, 763, 923, 884, 849, 818, 792, 723, 911, 872, 
           837, 806, 780, 764, 924, 885, 850, 819, 793, 724, 912, 873, 838, 
           807, 781, 765, 925, 886, 851, 820, 794, 725, 913, 874, 839, 808, 
           782, 766, 926, 887, 852, 821, 795, 726, 914, 875, 840, 809, 783, 
           767, 950},
           VertexColors->Automatic], 
          LineBox[{727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
            739, 740, 741, 742, 915, 876, 841, 810, 784, 768, 927, 888, 853, 
           822, 959},
           VertexColors->Automatic], 
          LineBox[{796, 743, 916, 877, 842, 811, 785, 769, 928, 889, 854, 823,
            797, 744, 917, 878, 843, 812, 786, 770, 929, 890, 855, 824, 798, 
           745, 918, 879, 844, 813, 787, 934, 895, 860, 829, 771, 930, 891, 
           856, 825, 799, 746, 919, 880, 845, 814, 788, 935, 896, 861, 830, 
           772, 931, 892, 857, 826, 800, 747, 920, 881, 846, 815, 938, 899, 
           864, 789, 936, 897, 862, 942, 903, 831, 940, 901},
           VertexColors->Automatic], 
          LineBox[{945, 866, 905, 773, 801, 748, 774, 749, 750, 751, 752, 753,
            754, 755, 756, 757, 758, 775, 759},
           VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
       VertexColors->CompressedData["
1:eJztlsENAiEUBYlWYiX2YAkmnq3SfixBD56MRE0WmP//bPY0EIdHeKyH8/V0
2bXWbvvWnu/ruR/bx0euX57fJ8/Fq/uj9ZKSTx6TV/dn6SUlt5zNs3mo/aDk
lsfk1f1ZeknJLWfzbB5qbyj55DH5aA8tr1wu/51X92e5Fym55Wxe3e//dnkE
PtpDyyuXy+W0e5Luz/J9oOSWs3l1/6zeUPLJY/LRHlpeuVwuj3J/0v1ZvhuU
3HI2r+6f1RtKPnlMPtpDyyuXy+XR71W6vzrP7qvKqf4q54rqp/d99HpWcc/b
HE7dt9747H1Y5fWcb8up+9Ybr3LO/52/ah+3/j1aPnv0H4/eo9Hrsadr10Pd
t944pS+rvKt6umr+LD/tnnkf33rfevz7vAcUCnje
        "]],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{86, 12}, 
          Scaled[{0.01, 0.01}]], 
         DiskBox[
          
          NCache[{20 + 
            255 (Rational[128, 255] + 
              Rational[-5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
            12 + Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {106.11549319003993`, 
           32.11549319003993}], 
          Scaled[{0.01, 0.01}]], 
         DiskBox[
          
          NCache[{-20 + 
            255 (Rational[128, 255] + 
              Rational[-5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
            12 + Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {66.11549319003993, -7.884506809960076}],
           Scaled[0.5] Scaled[{0.01, 0.01}]], 
         Thickness[Large], 
         LineBox[
          
          NCache[{{-20 + 
             255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]),
              12 + Rational[-51, 5] 
              E^(Rational[-1, 1250] (-128 + 
                  255 (Rational[128, 255] + 
                    Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
               Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - 
                Erf[Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
               255 (Rational[128, 255] + 
                 Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                   Rational[1, 2]))}, {
            20 + 255 (Rational[128, 255] + 
               Rational[-5, 51] (2 
                  Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]),
              12 + Rational[-51, 5] 
              E^(Rational[-1, 1250] (-128 + 
                  255 (Rational[128, 255] + 
                    Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
               Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - 
                Erf[Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
               255 (Rational[128, 255] + 
                 Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                   Rational[1, 2]))}}, {{
           66.11549319003993, -7.884506809960076}, {106.11549319003993`, 
           32.11549319003993}}]], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["86", TraditionalForm], {86, 12}, {0, 0}, Automatic, 
          
          NCache[{40, 
            Rational[51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2])) + 
            Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {40, 40.}]], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], 
          
          NCache[{20 + 
            255 (Rational[128, 255] + 
              Rational[-5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
            12 + Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {106.11549319003993`, 
           32.11549319003993}], {0, 0}, Automatic, 
          
          NCache[{40, 
            Rational[51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2])) + 
            Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {40, 40.}]], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], 
          
          NCache[{-20 + 
            255 (Rational[128, 255] + 
              Rational[-5, 51] (2 
                 Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                   Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                   Erf[Rational[64, 25] 2^Rational[1, 2]])])^Rational[1, 2]), 
            12 + Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {
           66.11549319003993, -7.884506809960076}], {0, 0}, Automatic, 
          
          NCache[{40, 
            Rational[51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-106 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2])) + 
            Rational[-51, 5] 
             E^(Rational[-1, 1250] (-128 + 
                 255 (Rational[128, 255] + 
                   Rational[-5, 51] (2 
                    Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                    Rational[1, 2]))^2) (2/Pi)^
              Rational[1, 2] (-Erf[Rational[127, 25] 2^Rational[-1, 2]] - Erf[
               Rational[64, 25] 2^Rational[1, 2]])^(-1) (-66 + 
              255 (Rational[128, 255] + 
                Rational[-5, 51] (2 
                   Log[Rational[51, 5] (2/Pi)^Rational[1, 2]/(
                    Erf[Rational[127, 25] 2^Rational[-1, 2]] + 
                    Erf[Rational[64, 25] 2^Rational[1, 2]])])^
                  Rational[1, 2]))}, {40, 40.}]]}, 
        InsetBox[
         BoxData[
          FormBox[
           PanelBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox["\[Null]", ShowStringCharacters -> False], 
                 TagBox["\"0-1\"", HoldForm], 
                 TagBox["\"0 - 255\"", HoldForm]}, {
                 TagBox["\"Mean\"", HoldForm], 
                 TagBox[
                  FractionBox[
                   InterpretationBox["\"128\"", 128, Editable -> False], 
                   InterpretationBox["\"255\"", 255, Editable -> False]], 
                  NumberForm[#, 4]& ], 
                 TagBox[
                  InterpretationBox["\"128\"", 128, Editable -> False], 
                  NumberForm[#, 4]& ]}, {
                 TagBox["\"Std\"", HoldForm], 
                 TagBox[
                  FractionBox[
                   InterpretationBox["\"5\"", 5, Editable -> False], 
                   InterpretationBox["\"51\"", 51, Editable -> False]], 
                  NumberForm[#, 4]& ], 
                 TagBox[
                  InterpretationBox["\"25\"", 25, Editable -> False], 
                  NumberForm[#, 4]& ]}, {
                 TagBox["\"G\"", HoldForm], 
                 TagBox[
                  FractionBox[
                   InterpretationBox["\"51\"", 51, Editable -> False], 
                   RowBox[{
                    InterpretationBox["\"5\"", 5, Editable -> False], " ", 
                    SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                  NumberForm[#, 4]& ], 
                 TagBox[
                  FractionBox[
                   InterpretationBox["\"1\"", 1, Editable -> False], 
                   RowBox[{
                    InterpretationBox["\"25\"", 25, Editable -> False], " ", 
                    SqrtBox[
                    InterpretationBox["\"2\"", 2, Editable -> False]]}]], 
                  NumberForm[#, 4]& ]}}, RowSpacings -> 1, ColumnSpacings -> 
               3, RowAlignments -> Baseline, ColumnAlignments -> Left, 
               ColumnLines -> {1, False}, RowLines -> {1, False}, 
               ColumnAlignments -> Left], {
              OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, 
               TableHeadings -> {{"Mean", "Std", "G"}, {
                 "0-1", "0 - 255"}}]]]], TraditionalForm]], 
         Scaled[{0.05, 0.95}], 
         Scaled[{0, 1}]]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{All, None}, {All, {{0, 
           FormBox["0", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {192, 
           FormBox["192", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {256, 
           FormBox["256", TraditionalForm]}, {61.53160050950483, 
           FormBox[
            StyleBox[
            "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)  \"", Bold, 
             Background -> GrayLevel[1], StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {86.11549319003993, 
           FormBox[
            StyleBox[
            "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)  \
\"", Bold, Background -> GrayLevel[1], StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {128., 
           FormBox[
            StyleBox[
            "\"  C  \"", Bold, Background -> GrayLevel[1], StripOnInput -> 
             False], TraditionalForm], {0.03, 0.01}}, {169.88450680996007`, 
           FormBox[
            StyleBox[
            "\"  \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)  \
\"", Bold, Background -> GrayLevel[1], StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {194.46832227411616`, 
           FormBox[
            StyleBox[
            "\"  \\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)  \"", Bold, 
             Background -> GrayLevel[1], StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 255}, {0., 254.99999999994728`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.005833333333333334], AbsoluteThickness[1.6], {
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{1.5, 0}, {2.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{2.5, 0}, {3.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{3.5, 0}, {4.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{4.5, 0}, {5.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{5.5, 0}, {6.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{6.5, 0}, {7.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{7.5, 0}, {8.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{8.5, 0}, {9.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{9.5, 0}, {10.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{10.5, 0}, {11.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{11.5, 0}, {12.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{12.5, 0}, {13.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{13.5, 0}, {14.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{14.5, 0}, {15.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{15.5, 0}, {16.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{16.5, 0}, {17.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{17.5, 0}, {18.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{18.5, 0}, {19.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{19.5, 0}, {20.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{20.5, 0}, {21.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{21.5, 0}, {22.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{22.5, 0}, {23.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{23.5, 0}, {24.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{24.5, 0}, {25.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{25.5, 0}, {26.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{26.5, 0}, {27.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{27.5, 0}, {28.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{28.5, 0}, {29.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{29.5, 0}, {30.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{30.5, 0}, {31.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{31.5, 0}, {32.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{32.5, 0}, {33.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{33.5, 0}, {34.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{34.5, 0}, {35.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{35.5, 0}, {36.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{36.5, 0}, {37.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{37.5, 0}, {38.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{38.5, 0}, {39.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{39.5, 0}, {40.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{40.5, 0}, {41.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{41.5, 0}, {42.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{42.5, 0}, {43.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{43.5, 0}, {44.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{44.5, 0}, {45.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{45.5, 0}, {46.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{46.5, 0}, {47.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{47.5, 0}, {48.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{48.5, 0}, {49.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{49.5, 0}, {50.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{50.5, 0}, {51.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{51.5, 0}, {52.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{52.5, 0}, {53.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{53.5, 0}, {54.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{54.5, 0}, {55.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{55.5, 0}, {56.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{56.5, 0}, {57.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{57.5, 0}, {58.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{58.5, 0}, {59.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{59.5, 0}, {60.5, 0.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{60.5, 0}, {61.5, 0.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{61.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{62.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{63.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{64.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{65.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], RectangleBox[{66.5, 0}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{67.5, 0}, {68.5, 2.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{68.5, 0}, {69.5, 2.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{69.5, 0}, {70.5, 2.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{70.5, 0}, {71.5, 2.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{71.5, 0}, {72.5, 3.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{72.5, 0}, {73.5, 3.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{73.5, 0}, {74.5, 3.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{74.5, 0}, {75.5, 4.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{75.5, 0}, {76.5, 4.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{76.5, 0}, {77.5, 5.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{77.5, 0}, {78.5, 5.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{78.5, 0}, {79.5, 6.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{79.5, 0}, {80.5, 6.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{80.5, 0}, {81.5, 7.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{81.5, 0}, {82.5, 8.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{82.5, 0}, {83.5, 9.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{83.5, 0}, {84.5, 9.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{84.5, 0}, {85.5, 10.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{85.5, 0}, {86.5, 11.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{86.5, 0}, {87.5, 12.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{87.5, 0}, {88.5, 13.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{88.5, 0}, {89.5, 14.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{89.5, 0}, {90.5, 15.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{90.5, 0}, {91.5, 16.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{91.5, 0}, {92.5, 17.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{92.5, 0}, {93.5, 18.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{93.5, 0}, {94.5, 19.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{94.5, 0}, {95.5, 20.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{95.5, 0}, {96.5, 21.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{96.5, 0}, {97.5, 22.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{97.5, 0}, {98.5, 23.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{98.5, 0}, {99.5, 24.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{99.5, 0}, {100.5, 25.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{100.5, 0}, {101.5, 26.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{101.5, 0}, {102.5, 27.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{102.5, 0}, {103.5, 28.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{103.5, 0}, {104.5, 29.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{104.5, 0}, {105.5, 30.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{105.5, 0}, {106.5, 31.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{106.5, 0}, {107.5, 32.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{107.5, 0}, {108.5, 33.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{108.5, 0}, {109.5, 34.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{109.5, 0}, {110.5, 35.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{110.5, 0}, {111.5, 36.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{111.5, 0}, {112.5, 37.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{112.5, 0}, {113.5, 38.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{113.5, 0}, {114.5, 39.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{114.5, 0}, {115.5, 40.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{115.5, 0}, {116.5, 41.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{116.5, 0}, {117.5, 42.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{117.5, 0}, {118.5, 43.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{118.5, 0}, {119.5, 44.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{119.5, 0}, {120.5, 45.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{120.5, 0}, {121.5, 46.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{121.5, 0}, {122.5, 47.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{122.5, 0}, {123.5, 48.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{123.5, 0}, {124.5, 49.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{124.5, 0}, {125.5, 50.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{125.5, 0}, {126.5, 51.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{126.5, 0}, {127.5, 52.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{127.5, 0}, {128.5, 53.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{128.5, 0}, {129.5, 54.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{129.5, 0}, {130.5, 55.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{130.5, 0}, {131.5, 56.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{131.5, 0}, {132.5, 57.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{132.5, 0}, {133.5, 58.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{133.5, 0}, {134.5, 59.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{134.5, 0}, {135.5, 60.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{135.5, 0}, {136.5, 61.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{136.5, 0}, {137.5, 62.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{137.5, 0}, {138.5, 63.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{138.5, 0}, {139.5, 64.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{139.5, 0}, {140.5, 65.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{140.5, 0}, {141.5, 66.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{141.5, 0}, {142.5, 67.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{142.5, 0}, {143.5, 68.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{143.5, 0}, {144.5, 69.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{144.5, 0}, {145.5, 70.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{145.5, 0}, {146.5, 71.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{146.5, 0}, {147.5, 72.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{147.5, 0}, {148.5, 73.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{148.5, 0}, {149.5, 74.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{149.5, 0}, {150.5, 75.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{150.5, 0}, {151.5, 76.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{151.5, 0}, {152.5, 77.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{152.5, 0}, {153.5, 78.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{153.5, 0}, {154.5, 79.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{154.5, 0}, {155.5, 80.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{155.5, 0}, {156.5, 81.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{156.5, 0}, {157.5, 82.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{157.5, 0}, {158.5, 83.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{158.5, 0}, {159.5, 84.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{159.5, 0}, {160.5, 85.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{160.5, 0}, {161.5, 86.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{161.5, 0}, {162.5, 87.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{162.5, 0}, {163.5, 88.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{163.5, 0}, {164.5, 89.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{164.5, 0}, {165.5, 90.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{165.5, 0}, {166.5, 91.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{166.5, 0}, {167.5, 92.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{167.5, 0}, {168.5, 93.}]}, 
         {RGBColor[0, 0, 1], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{168.5, 0}, {169.5, 94.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{169.5, 0}, {170.5, 95.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{170.5, 0}, {171.5, 96.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{171.5, 0}, {172.5, 97.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{172.5, 0}, {173.5, 98.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{173.5, 0}, {174.5, 99.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{174.5, 0}, {175.5, 100.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{175.5, 0}, {176.5, 100.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{176.5, 0}, {177.5, 101.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{177.5, 0}, {178.5, 101.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{178.5, 0}, {179.5, 102.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{179.5, 0}, {180.5, 102.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{180.5, 0}, {181.5, 103.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{181.5, 0}, {182.5, 103.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{182.5, 0}, {183.5, 104.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{183.5, 0}, {184.5, 104.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{184.5, 0}, {185.5, 104.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{185.5, 0}, {186.5, 105.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{186.5, 0}, {187.5, 105.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{187.5, 0}, {188.5, 105.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{188.5, 0}, {189.5, 105.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{189.5, 0}, {190.5, 106.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{190.5, 0}, {191.5, 106.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{191.5, 0}, {192.5, 106.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{192.5, 0}, {193.5, 106.}]}, 
         {RGBColor[0, 1, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{193.5, 0}, {194.5, 106.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{194.5, 0}, {195.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{195.5, 0}, {196.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{196.5, 0}, {197.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{197.5, 0}, {198.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{198.5, 0}, {199.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{199.5, 0}, {200.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{200.5, 0}, {201.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{201.5, 0}, {202.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{202.5, 0}, {203.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{203.5, 0}, {204.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{204.5, 0}, {205.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{205.5, 0}, {206.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{206.5, 0}, {207.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{207.5, 0}, {208.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{208.5, 0}, {209.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{209.5, 0}, {210.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{210.5, 0}, {211.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{211.5, 0}, {212.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{212.5, 0}, {213.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{213.5, 0}, {214.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{214.5, 0}, {215.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{215.5, 0}, {216.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{216.5, 0}, {217.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{217.5, 0}, {218.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{218.5, 0}, {219.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{219.5, 0}, {220.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{220.5, 0}, {221.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{221.5, 0}, {222.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{222.5, 0}, {223.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{223.5, 0}, {224.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{224.5, 0}, {225.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{225.5, 0}, {226.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{226.5, 0}, {227.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{227.5, 0}, {228.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{228.5, 0}, {229.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{229.5, 0}, {230.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{230.5, 0}, {231.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{231.5, 0}, {232.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{232.5, 0}, {233.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{233.5, 0}, {234.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{234.5, 0}, {235.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{235.5, 0}, {236.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{236.5, 0}, {237.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{237.5, 0}, {238.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{238.5, 0}, {239.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{239.5, 0}, {240.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{240.5, 0}, {241.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{241.5, 0}, {242.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{242.5, 0}, {243.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{243.5, 0}, {244.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{244.5, 0}, {245.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{245.5, 0}, {246.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{246.5, 0}, {247.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{247.5, 0}, {248.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{248.5, 0}, {249.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{249.5, 0}, {250.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{250.5, 0}, {251.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{251.5, 0}, {252.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{252.5, 0}, {253.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{253.5, 0}, {254.5, 107.}]}, 
         {RGBColor[1, 0, 0], PointSize[0.005833333333333334], 
          AbsoluteThickness[1.6], Opacity[0.2], 
          RectangleBox[{254.5, 0}, {255.5, 107.}]}}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.005833333333333334], AbsoluteThickness[1.6], {}, 
        LineBox[CompressedData["
1:eJyF1keO0DAYxXFTFixYWAghhBDK0Dumd8YMvZuh9zAwdJgcwUfIEXKE3AAf
IUfIEbxkCdI8hJDy/D4pin6rp6zyn1lYml9cZf7cCmNWmuVn+caf5r8bZ8v+
Jbzal71WeJ3wBuFNwluEZ4S3Ce8Q3iW8R3if8AHhQ2VHJ3xY+IjwUeFjwseF
TwifFD4lfFr4jPBZ4XPC54UvCM+W7X3ZSdhfLDsJ+7myk7C/VHYS9pfLTsL+
StlJ2F8tOwn7a2UnYX+97CTsb5SdhP3NspOwv1V2Eva3y07C/k7ZSdjfLTsx
5+X/sL9XdhKuQtm1cCc8Mpvld3W/7Fq4Ex6Z12BvvuxauGO22BOuHhCvx55w
x7wRe8LVQ+LN2GOusMe8FXvC1SPi7dhj3ok95t3YY96LvcfE+7HHfBB7zOio
kRkdVT0hRkfVzOiojhkdNTKjo6qnxOiomhkd1TGjo0ZmdFT1jBgdVTOjozpm
dNTIjI6qnhOjo2pmdFTHjE4aiSNcvZi2QSfVxBHuiM0c9ogjXL2ctkEn1cQR
7ogNOmkkjnD1atoGnVQTR7gjNuikkTjC1etpG3RSTRzhjtigk0biCFdvpm3Q
STVxhDtig04aiSNs62kbdJIjjnAgNuikhjjCLbFBJ/XEER6IDTopE0fYvp22
QSc54ggHYoPOaYg93BJHuCdO8EBs0DmZ2MN2YdoRdsQJDsQGndMQe7gljnBP
nOCB2KBzMrGH7btpR9gRJzgQG3ROQ+zhljjCPXGCB2KDzsnEHrbvpx1hR5zg
QGzQOQ2xh1viCPfECR6IDTonE3vYLk47wo44wYHYoHMaYg+3xBHuiRM8EBt0
Tha2H6btYScciCPcCLfECe6FB2KDzsrC9mPZjtjDQbgRboV74ggPwlnYfirb
CQfi9Pd7hVvhXngQzsL2c9lOOAg3wq1wLzwIZ2H7pWwnHIQb4Va4Fx6Es7D9
WrYTDsKNcCvcCw/CWdh+K9sJB+FGuBXuhQfhLGy/l+2Eg3Aj3Ar3woNwFrY/
ynbCQbgRboV74UE4C9ulsp1wEG6EW+FeeBDO//wbMB+SDw==
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->NCache[{{
          Rational[-1, 2], 
          Rational[511, 2]}, {0, 107.}}, {{-0.5, 255.5}, {0, 107.}}],
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.630788533132111*^9, 3.630788560849573*^9}, 
   3.630788606399794*^9, 3.630788646731052*^9, {3.6307887937228327`*^9, 
   3.630788822879663*^9}, 3.630788965360976*^9, 3.630789006316266*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BinaryTicks", "[", 
   RowBox[{"min_", ",", "max_", ",", 
    RowBox[{"m_:", "3"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "nn", ",", "mm"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mm", "=", 
      RowBox[{
       RowBox[{"Ceiling", "[", 
        RowBox[{"Log2", "[", 
         RowBox[{"max", "-", "min"}], "]"}], "]"}], "-", "m"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", " ", 
          RowBox[{"2", "^", 
           RowBox[{"(", "mm", ")"}]}]}], ",", 
         RowBox[{"i", " ", 
          RowBox[{"2", "^", 
           RowBox[{"(", "mm", ")"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", "/", 
           RowBox[{"2", "^", 
            RowBox[{"(", "mm", ")"}]}]}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", "/", 
           RowBox[{"2", "^", 
            RowBox[{"(", "mm", ")"}]}]}], "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.630784021134521*^9, 3.630784487050886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinaryTicks", "[", 
  RowBox[{"64", ",", "255", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.630784510569338*^9, 3.630784523028019*^9}, {
  3.630784573563368*^9, 3.630784573720957*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"64", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "96"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "128"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"144", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", "160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "176"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "192"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"208", ",", "208"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"224", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"240", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "256"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6307845190464067`*^9, 3.630784523888832*^9}, 
   3.630784574721998*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Values from MatLAB ", "Subsection",
 CellChangeTimes->{{3.595064910944015*^9, 3.595064935698306*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]MatLAB", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]Min", ",", "18.0312", ",", "2.8680"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]MatLAB", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"128.0000", ",", "125.4850", ",", "107.3765"}], "}"}], "/", 
    "255"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5950649668008423`*^9, 3.595065034461269*^9}, 
   3.620990378672654*^9, 3.6209907061821747`*^9, {3.6209909222030087`*^9, 
   3.6209909260377493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matLab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"setUpErf", "[", " ", 
      RowBox[{
       RowBox[{"\[Gamma]MatLAB", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\[Mu]MatLAB", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "255"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "255"}], "}"}]}], "}"}], ",", 
       RowBox[{"Unit", "\[Rule]", "True"}], ",", 
       RowBox[{"G", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.620977675116816*^9, {3.620990304906156*^9, 3.620990313042343*^9}, 
   3.620990714113168*^9, {3.620990934845422*^9, 3.620990961752369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "dis$7399320", "]"}]], "Input",
 CellChangeTimes->{{3.6309287639306192`*^9, 3.6309287677758417`*^9}, {
  3.630928798569153*^9, 3.630928807540441*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "dis$7399320", "]"}], "=", 
      RowBox[{"{", "Temporary", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"color\"\>", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x$", ",", "y$"}], "}"}], ",", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Opacity", "[", 
                   RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "RGBColor[1, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 0, 0],
                    Editable->False,
                    Selectable->False]}], "]"}], 
                  RowBox[{"x$", "<", "1.03785561997087`"}]},
                 {
                  RowBox[{"Opacity", "[", 
                   RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0.25, 0.75, 1], RectangleBox[{0, -1}, {2, 1}]}},
                    
                    AspectRatio->1,
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.16666666666666669`, 0.5, 0.6666666666666666],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "RGBColor[0.25, 0.75, 1]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.25, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.25, 0.75, 1],
                    Editable->False,
                    Selectable->False]}], "]"}], 
                  RowBox[{
                  "1.03785561997087`", "\[LessEqual]", "x$", "<", 
                   "54.65837234110818`"}]},
                 {
                  RowBox[{"Opacity", "[", 
                   RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "RGBColor[0, 0, 1]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0, 0, 1],
                    Editable->False,
                    Selectable->False]}], "]"}], 
                  RowBox[{
                  "54.65837234110818`", "\[LessEqual]", "x$", "<", 
                   "201.3416276588918`"}]},
                 {
                  RowBox[{"Opacity", "[", 
                   RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0.25, 0.75, 1], RectangleBox[{0, -1}, {2, 1}]}},
                    
                    AspectRatio->1,
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.16666666666666669`, 0.5, 0.6666666666666666],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "RGBColor[0.25, 0.75, 1]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.25, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.25, 0.75, 1],
                    Editable->False,
                    Selectable->False]}], "]"}], 
                  RowBox[{
                  "201.3416276588918`", "\[LessEqual]", "x$", "<", 
                   "253.96304435401206`"}]},
                 {
                  RowBox[{"Opacity", "[", 
                   RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "RGBColor[1, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 0, 0],
                    Editable->False,
                    Selectable->False]}], "]"}], 
                  RowBox[{"253.96304435401206`", "\[LessEqual]", "x$"}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"disgardQ\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True"}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"extendedKeepQ\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True"}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"func\"\>", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x$", "}"}], ",", 
           RowBox[{"488.28666415129936`", " ", 
            RowBox[{"(", 
             RowBox[{"0.26210372725379333`", "\[VeryThinSpace]", "+", 
              RowBox[{"Erf", "[", 
               RowBox[{"0.001848645179572673`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "128.`"}], "+", "x$"}], ")"}]}], "]"}]}], 
             ")"}]}], ",", "Listable"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"keepQ\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"linearExtensionFunc\"\>", "]"}], 
         "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x$", "}"}], ",", 
           RowBox[{
            RowBox[{"-", "0.11279232701551223`"}], "+", "x$"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"opacity\"\>", "]"}], "=", "1"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"param\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"255", ",", "255", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.0185526550908643`", ",", "1.0185526550908643`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.004070022039101451`", ",", "0.9959335072706356`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.03785561997087`", ",", "253.96304435401206`"}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.21434655820042425`", ",", "0.7895750104270267`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"54.65837234110818`", ",", "201.3416276588918`"}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"pointToUnit", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.03785561997087`", ",", "253.96304435401206`"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "255"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.03785561997087`", ",", "253.96304435401206`"}], 
              "}"}]}], "}"}]}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"piecewise\"\>", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x$", "}"}], ",", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"0", 
                  RowBox[{"x$", "<", "1.03785561997087`"}]},
                 {
                  RowBox[{"488.28666415129936`", " ", 
                   RowBox[{"(", 
                    RowBox[{"0.26210372725379333`", "\[VeryThinSpace]", "+", 
                    RowBox[{"Erf", "[", 
                    RowBox[{"0.001848645179572673`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "128.`"}], "+", "x$"}], ")"}]}], "]"}]}], 
                    ")"}]}], 
                  RowBox[{
                  "1.03785561997087`", "\[LessEqual]", "x$", "<", 
                   "54.65837234110818`"}]},
                 {
                  RowBox[{
                   RowBox[{"-", "0.9236983882309886`"}], "+", "x$"}], 
                  RowBox[{
                  "54.65837234110818`", "\[LessEqual]", "x$", "<", 
                   "201.3416276588918`"}]},
                 {
                  RowBox[{
                   RowBox[{"-", "1.8109060612154906`"}], "+", 
                   RowBox[{"488.28666415129936`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.26210372725379333`", "\[VeryThinSpace]", "+", 
                    RowBox[{"Erf", "[", 
                    RowBox[{"0.001848645179572673`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "128.`"}], "+", "x$"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], 
                  RowBox[{
                  "201.3416276588918`", "\[LessEqual]", "x$", "<", 
                   "253.96304435401206`"}]},
                 {"253.1890939387845`", 
                  RowBox[{"253.96304435401206`", "\[LessEqual]", "x$"}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False], ",", "Listable"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"pts\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.03785561997087`", ",", "1.0000000000000282`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"54.65837234110818`", ",", "53.734673952877195`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"201.3416276588918`", ",", "202.2288353318763`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"253.96304435401206`", ",", "254.00000000000003`"}], 
            "}"}]}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"ranges\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "255"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "255"}], "}"}]}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"redistributeQ\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"False", ",", "False"}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"regionNames\"\>", "]"}], "=", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Disgard\"\>", ",", "\<\"Extended Keep\"\>", 
           ",", "\<\"Keep\"\>", ",", "\<\"Extended Keep\"\>", 
           ",", "\<\"Disgard\"\>"}], "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"selectRegions\"\>", "]"}], "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "list$", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "list$", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "list$", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "list$", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "list$", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "list$", "\[LeftDoubleBracket]", "7", 
              "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"ticks\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.03785561997087`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(1\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"54.65837234110818`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(1\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"128.`", ",", 
               StyleBox["\<\"\[Mu]\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"201.3416276588918`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(2\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"253.96304435401206`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(2\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.03785561997087`", ",", 
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"54.65837234110818`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"128.`", ",", 
               StyleBox["\<\"C\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"201.3416276588918`", ",", 
               
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"253.96304435401206`", ",", 
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\"\>",
                StripOnInput->False,
                FontWeight->Bold,
                Background->None], ",", 
               RowBox[{"{", 
                RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}]}], "}"}]}], 
          "}"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"dis$7399320", "[", "\<\"vars\"\>", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5019607843137255`", ",", "128.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5`", ",", "382.5`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4714045207910316`", ",", "0.001848645179572673`"}], 
            "}"}]}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`dis$7399320],
  Editable->False]], "Output",
 CellChangeTimes->{{3.630928768272896*^9, 3.630928808604*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<disgardQ\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<extendedKeepQ\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<regionNames\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ReleaseHold", "[", 
  RowBox[{
   RowBox[{"matLab", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<regionBounds\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<regionSymbols\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<selectRegions\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matLab", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<ticks\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6309284278815403`*^9, 3.6309285869067583`*^9}, {
  3.630928729879232*^9, 3.63092873332866*^9}, {3.63093797563694*^9, 
  3.630937980834305*^9}, {3.630941481020711*^9, 3.630941487318488*^9}, {
  3.630941530269992*^9, 3.6309415353316927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.630943254824028*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.6309432548392153`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Extended Keep\"\>", ",", "\<\"Keep\"\>", 
   ",", "\<\"Extended Keep\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.63094325484956*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "54.65837234110818`", ",", "201.3416276588918`", ",", 
   "253.96304435401206`"}], "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.6309432548596783`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"0"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\"\>"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\"\>"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\"\>"},
        {"1"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\<\"tMin\"\>"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\"\>"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \\(1\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\"\>"},
        {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\"\>"},
        {"\<\"tMax\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.6309432548724823`*^9}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "list$", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"list$", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"list$", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{
     "list$", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.630943254888055*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"0"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\"\>"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54.65837234110818`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"201.3416276588918`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"253.96304435401206`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\"\>"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\"\>"},
           {"1"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"tMin\"\>"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\"\>"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54.65837234110818`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(1\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"201.3416276588918`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(2\\)]\\)\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"253.96304435401206`", ",", 
       StyleBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\"\>"},
           {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\"\>"},
           {"\<\"tMax\"\>"}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        StripOnInput->False,
        FontWeight->Bold,
        Background->None], ",", 
       RowBox[{"{", 
        RowBox[{"0.03`", ",", "0.01`"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.630928429499045*^9, 3.63092846794786*^9}, {
   3.630928498854377*^9, 3.630928587803154*^9}, 3.6309287343145933`*^9, 
   3.630937865095559*^9, 3.630937951267765*^9, 3.630937981567637*^9, 
   3.630941488419662*^9, 3.630941535788649*^9, 3.630942915016892*^9, 
   3.630943119385305*^9, 3.630943254902205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DistroPlot", "[", 
      RowBox[{"matLab", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630841971640416*^9, 3.630842001480274*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwdz3k0FHgAB3DsTtG1K7OGdT0tytHQkCjMN2c8GUmGkmPMuMb0YytKZXMV
YUVDFDk6CBu6lEIq61itFyZeiByVlORos6zZ2f3j+z7vff/4vvfV5BA3noyU
lNROSf5z7LiifE+XyErIVmFlU0RWpp6zcU2U28xteRob63fcYsqZ2vflUp4y
c4pd2A07njBntMjyBEo3c+s4v0rKsYsZnBevdpQyynzhNVtb7DjCXNebVnqQ
Msvs4zZ2zTnNMMVzayfDKd/i3Kfw0cKd32AyQXSWUKjQ7fN6PemmgINOpVVL
/VpQGmPsbaRrYSx/QrxBTIfDCTHVeBUdomvSNLMoE8w+rqp+MWSMekv7rMsv
zTEbo9izQs8c/rWrm6WGrZC0etm9FDUrLFtYNpWpZ43j/DKF+YbtmDK0uB3W
Y4trMZv7xgJtUdPDcGN6OGAry+iA5rA9ZAabRuZWOCE5Mk7ts9ARel4/sq5m
OEP32YbYiyrOCHr/0/TFlSzo2nZQaeddIPzItX0w4ArZveSD0lVXBBTkLF5R
d0NgE+252btdmDl54cbJ6N0IKOI90HfYjTWTkYviDnec5z0q8Sh0Rw7VpObY
Gg9EL/1Jaxzeg5HQBv54EBvaxtJpU2AjP1o/bXeZJ9pGU50ZSZ5QruWVVi7f
i8N26Y8MJrygkRjtW+mzD79HHUoWO+yDUC48vvySN77a3awuSvNGW51xUe78
fvAiMstfTu4H0e/VT7D0xdPyVIV6M1+wMvV1ky39UM0fG6FZ+aFFx828ddwP
3JjRkFMf/fCVNv7L6TP+uG9hIMvI8IecZtCTejMOVK87bIq15mCQdHY3j3Bg
FzKUHjnFgUDlhiorPgDS7F7F7MwA9L8K92cZceEtviU0t+ZCRny5/9lzLpTd
+j0Wx7j4yH2qrR7OA815nrBO8XB/+A/+W5VA/BWaMyBjEgiLOpt39IeB0P3i
J90uCkRhZbH/p5AgKPlHqfYmBOHhUoQ8fVUwNCovVc6sD0b+OXq6VXkwWrLu
RsQ1B8MXnXIt7BBoW7ourj8Ugl7HN7UdX0MQXoJ9/dRQMPivg11LQrGks2Ad
/zgUuzpbR4vd+HAxsO+ODONjffa68wen+TBa0EuNWRGGVxEc+7qCMGyOFhTY
3AmDc9lag8TtAszuVy5Vdxfg5IaqQfUhAa5UiAYcPwkgrDc5uyn1APx+9r70
d7bEat2oxwYEuvIWsR0Mgg8cTUG6IUHLNs5g4maCo1TlAG9Jv+dYvpGFGUFm
lCzryxYCZqlTRaklwRPLtzp6NgQmrTaysTsIdNquvMjwIphW6HQ19JHsDWuY
+p8iMJwP+yEumeCIkGZAl1g2Ld9pmkpAsf9u3UIKwXzN6diJXwnUry+tzsog
KNIeuOcuJGCRgbGWPIIk+dkknQKCmwsXsoxuEaDuS0XzbQKr3zJT/rlDMFRx
PetYDUGbz5nYtnsEw4dXRhjWEow0HhVw6wm+V+0SZzcQUJM87XJaCaKPbDnB
ayMoNHfdxmsnuPFZe0HpGcHGCYdNjA6Cu+yb/HaJ9i5b1Nq7CVIi87SMRQSd
YrpCbg9B09xc2BuJPtU6coEvCeonR0tyJb7nqIsZA5JfdkEiZ4lRVMU58SCB
Q3/0//4LMU06wQ==
          "]]}}, 
       {Opacity[0.15], {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{0, 0}, {54.65837234110818, 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{27.32918617055409, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 0, 1], Opacity[0.6], 
          RectangleBox[{54.65837234110818, 0}, {201.3416276588918, 255}]}, 
         {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
          InsetBox["\<\"Keep\"\>", {128., 66.30000000000001}, {0, -0.6}, 
           Automatic, {0, 1}]}}, {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{201.3416276588918, 0}, {253.96304435401206`, 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{227.65233600645195`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 
           1}]}}}, {{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwdz3k0FHgAB3DsTtG1K7OGdT0tytHQkCjMN2c8GUmGkmPMuMb0YytKZXMV
YUVDFDk6CBu6lEIq61itFyZeiByVlORos6zZ2f3j+z7vff/4vvfV5BA3noyU
lNROSf5z7LiifE+XyErIVmFlU0RWpp6zcU2U28xteRob63fcYsqZ2vflUp4y
c4pd2A07njBntMjyBEo3c+s4v0rKsYsZnBevdpQyynzhNVtb7DjCXNebVnqQ
Msvs4zZ2zTnNMMVzayfDKd/i3Kfw0cKd32AyQXSWUKjQ7fN6PemmgINOpVVL
/VpQGmPsbaRrYSx/QrxBTIfDCTHVeBUdomvSNLMoE8w+rqp+MWSMekv7rMsv
zTEbo9izQs8c/rWrm6WGrZC0etm9FDUrLFtYNpWpZ43j/DKF+YbtmDK0uB3W
Y4trMZv7xgJtUdPDcGN6OGAry+iA5rA9ZAabRuZWOCE5Mk7ts9ARel4/sq5m
OEP32YbYiyrOCHr/0/TFlSzo2nZQaeddIPzItX0w4ArZveSD0lVXBBTkLF5R
d0NgE+252btdmDl54cbJ6N0IKOI90HfYjTWTkYviDnec5z0q8Sh0Rw7VpObY
Gg9EL/1Jaxzeg5HQBv54EBvaxtJpU2AjP1o/bXeZJ9pGU50ZSZ5QruWVVi7f
i8N26Y8MJrygkRjtW+mzD79HHUoWO+yDUC48vvySN77a3awuSvNGW51xUe78
fvAiMstfTu4H0e/VT7D0xdPyVIV6M1+wMvV1ky39UM0fG6FZ+aFFx828ddwP
3JjRkFMf/fCVNv7L6TP+uG9hIMvI8IecZtCTejMOVK87bIq15mCQdHY3j3Bg
FzKUHjnFgUDlhiorPgDS7F7F7MwA9L8K92cZceEtviU0t+ZCRny5/9lzLpTd
+j0Wx7j4yH2qrR7OA815nrBO8XB/+A/+W5VA/BWaMyBjEgiLOpt39IeB0P3i
J90uCkRhZbH/p5AgKPlHqfYmBOHhUoQ8fVUwNCovVc6sD0b+OXq6VXkwWrLu
RsQ1B8MXnXIt7BBoW7ourj8Ugl7HN7UdX0MQXoJ9/dRQMPivg11LQrGks2Ad
/zgUuzpbR4vd+HAxsO+ODONjffa68wen+TBa0EuNWRGGVxEc+7qCMGyOFhTY
3AmDc9lag8TtAszuVy5Vdxfg5IaqQfUhAa5UiAYcPwkgrDc5uyn1APx+9r70
d7bEat2oxwYEuvIWsR0Mgg8cTUG6IUHLNs5g4maCo1TlAG9Jv+dYvpGFGUFm
lCzryxYCZqlTRaklwRPLtzp6NgQmrTaysTsIdNquvMjwIphW6HQ19JHsDWuY
+p8iMJwP+yEumeCIkGZAl1g2Ld9pmkpAsf9u3UIKwXzN6diJXwnUry+tzsog
KNIeuOcuJGCRgbGWPIIk+dkknQKCmwsXsoxuEaDuS0XzbQKr3zJT/rlDMFRx
PetYDUGbz5nYtnsEw4dXRhjWEow0HhVw6wm+V+0SZzcQUJM87XJaCaKPbDnB
ayMoNHfdxmsnuPFZe0HpGcHGCYdNjA6Cu+yb/HaJ9i5b1Nq7CVIi87SMRQSd
YrpCbg9B09xc2BuJPtU6coEvCeonR0tyJb7nqIsZA5JfdkEiZ4lRVMU58SCB
Q3/0//4LMU06wQ==
          "]]}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{
         RGBColor[0, 0, 1], 
         Opacity[0.6], 
         DiskBox[{128, 128}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{139., 139.2040792059995}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         DiskBox[{117., 116.7959207940005}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{117., 116.7959207940005}, {139., 139.2040792059995}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["128", TraditionalForm], {128, 128}, {0, 0}, Automatic, {
          22., 22.40815841199901}], 
         InsetBox[
          FormBox["\"1.02\"", TraditionalForm], {139., 139.2040792059995}, {0,
           0}, Automatic, {22., 22.40815841199901}], 
         InsetBox[
          FormBox["\"1.02\"", TraditionalForm], {117., 116.7959207940005}, {0,
           0}, Automatic, {22., 22.40815841199901}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{55, 54}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{65.65837234110819, 64.65837234110819}, {2.5500000000000003`,
           2.5500000000000003`}], 
         DiskBox[{43.65837234110818, 42.65837234110818}, {2.5500000000000003`,
           2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{43.65837234110818, 42.65837234110818}, {65.65837234110819, 
          64.65837234110819}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["55", TraditionalForm], {55, 54}, {0, 0}, Automatic, {
          22.000000000000007`, 22.000000000000007`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {65.65837234110819, 
          64.65837234110819}, {0, 0}, Automatic, {22.000000000000007`, 
          22.000000000000007`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {43.65837234110818, 
          42.65837234110818}, {0, 0}, Automatic, {22.000000000000007`, 
          22.000000000000007`}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{201, 202}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{212.3416276588918, 213.3416276588918}, {2.5500000000000003`,
           2.5500000000000003`}], 
         DiskBox[{190.3416276588918, 191.3416276588918}, {2.5500000000000003`,
           2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{190.3416276588918, 191.3416276588918}, {212.3416276588918, 
          213.3416276588918}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["201", TraditionalForm], {201, 202}, {0, 0}, Automatic, {
          22., 22.}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {212.3416276588918, 
          213.3416276588918}, {0, 0}, Automatic, {22., 22.}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {190.3416276588918, 
          191.3416276588918}, {0, 0}, Automatic, {22., 22.}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{1, 1}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["1", TraditionalForm], {1, 1}, {0, 0}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{254, 254}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["254", TraditionalForm], {254, 254}, {0, 0}]}, 
        InsetBox[
         BoxData[
          FormBox[
           PanelBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox["\[Null]", ShowStringCharacters -> False], 
                 TagBox["\"0-1\"", HoldForm], 
                 TagBox["\"0 - 255\"", HoldForm]}, {
                 TagBox["\"Mean\"", HoldForm], 
                 TemplateBox[{"\"\[Mu] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.502\"", 0.5019607843137255, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"c = \"", 
                   TagBox[
                    InterpretationBox["\"128.\"", 128., AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"Std\"", HoldForm], 
                 TemplateBox[{"\"\[Sigma] = \"", 
                   TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"s = \"", 
                   TagBox[
                    InterpretationBox["\"382.5\"", 382.5, AutoDelete -> True],
                     NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"G\"", HoldForm], 
                 TemplateBox[{"\"\[Gamma] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.4714\"", 0.4714045207910316, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"g = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.001849\"", 0.001848645179572673, AutoDelete -> True],
                     NumberForm[#, 4]& ]}, "RowDefault"]}}, RowSpacings -> 1, 
               ColumnSpacings -> 3, RowAlignments -> Baseline, 
               ColumnAlignments -> Left, ColumnLines -> {1, False}, 
               RowLines -> {1, False}, ColumnAlignments -> Left], {
              OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, 
               TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]],
             Background -> Opacity[0.5, 
              GrayLevel[1]]], TraditionalForm]], 
         Scaled[{0.05, 0.9}], 
         Scaled[{0, 1}]], 
        InsetBox[
         FormBox["\"\"", TraditionalForm], {255, 253.1890939387845}, {1, 1}], 
        
        InsetBox[
         FormBox["\"Full Range Distribution\"", TraditionalForm], {
         255, 255.}, {1, 1}]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{{{0, 
           FormBox["0", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {192, 
           FormBox["192", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {256, 
           FormBox["256", TraditionalForm]}}, None}, {{{16, 
           FormBox[
            FractionBox["1", "16"], TraditionalForm]}, {24, 
           FormBox[
            FractionBox["3", "32"], TraditionalForm]}, {32, 
           FormBox[
            FractionBox["1", "8"], TraditionalForm]}, {40, 
           FormBox[
            FractionBox["5", "32"], TraditionalForm]}, {72, 
           FormBox[
            FractionBox["9", "32"], TraditionalForm]}, {80, 
           FormBox[
            FractionBox["5", "16"], TraditionalForm]}, {88, 
           FormBox[
            FractionBox["11", "32"], TraditionalForm]}, {96, 
           FormBox[
            FractionBox["3", "8"], TraditionalForm]}, {104, 
           FormBox[
            FractionBox["13", "32"], TraditionalForm]}, {112, 
           FormBox[
            FractionBox["7", "16"], TraditionalForm]}, {120, 
           FormBox[
            FractionBox["15", "32"], TraditionalForm]}, {128, 
           FormBox[
            FractionBox["1", "2"], TraditionalForm]}, {136, 
           FormBox[
            FractionBox["17", "32"], TraditionalForm]}, {144, 
           FormBox[
            FractionBox["9", "16"], TraditionalForm]}, {152, 
           FormBox[
            FractionBox["19", "32"], TraditionalForm]}, {160, 
           FormBox[
            FractionBox["5", "8"], TraditionalForm]}, {168, 
           FormBox[
            FractionBox["21", "32"], TraditionalForm]}, {176, 
           FormBox[
            FractionBox["11", "16"], TraditionalForm]}, {184, 
           FormBox[
            FractionBox["23", "32"], TraditionalForm]}, {216, 
           FormBox[
            FractionBox["27", "32"], TraditionalForm]}, {224, 
           FormBox[
            FractionBox["7", "8"], TraditionalForm]}, {232, 
           FormBox[
            FractionBox["29", "32"], TraditionalForm]}, {240, 
           FormBox[
            FractionBox["15", "16"], TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"0"}, {
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}, {
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {54.65837234110818, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {201.3416276588918, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {253.96304435401206`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}, {
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}, {
                "1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}, {{16, 
           FormBox["16", TraditionalForm]}, {24, 
           FormBox["24", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {72, 
           FormBox["72", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}, {88, 
           FormBox["88", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {104, 
           FormBox["104", TraditionalForm]}, {112, 
           FormBox["112", TraditionalForm]}, {120, 
           FormBox["120", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {136, 
           FormBox["136", TraditionalForm]}, {144, 
           FormBox["144", TraditionalForm]}, {152, 
           FormBox["152", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {168, 
           FormBox["168", TraditionalForm]}, {176, 
           FormBox["176", TraditionalForm]}, {184, 
           FormBox["184", TraditionalForm]}, {216, 
           FormBox["216", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {232, 
           FormBox["232", TraditionalForm]}, {240, 
           FormBox["240", TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMin\""}, {
                "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}, {
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {54.65837234110818, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {201.3416276588918, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {253.96304435401206`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\""}, {"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}, {
                "\"tMax\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{1004.346487700546, Automatic},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 255}, {0., 254.9999949836367}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{{{}, {}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJxF2nc8Vv8XAHDKSiISWlYIlSgZ1b33JFlZ2Xs8i6wHKTJKNCRJGkbZJSFK
dokkoZQIGSElIpJkJX73Po/fN/94vV/nfM7nfM7nPsPrRYJEN6EuY2FhyV/O
wkL8HggW4m9vaUVZln5UrCbDXrAXYv/3ChWtrgT2mv/8S4rOeYb9/X92vRW+
6QT7l/8s+eFS1lH2yf+8+FtgzJudDf7vsTOtMXR2wf98VC/rwUK31H8eSBpZ
lF1U+M+tmazCav7K//kponU9o1P9PzuXr3rJ0o/+Z44/HOOx8hr/eXzHvkKP
ds3/fJm7cMHl05L7+BCFga265JF/bqzMuOrw+589Ejf0WC/+c7bRyqPGaw7+
529sfzi1t/wzjd6ppGz0z/0dZbYS/v98ulApc+Ppfxa/fG9c+OL/LYZUHpHY
u+b6PztoJpzlTfnnW7MR69kf/XNXXkD+n9p/DrwwPjvV9M/rKa6aE51LHtqC
lKF90aNf/tlqnVXH0Ng/vw9XXd4mpLW0fgdy1CHf4J34Pwuob4l/Lf/PD9ek
9L9UXvL3XYjxmND25+g//6iL9n+q88/RGRzVZSZLHlJFFE6e5Cmy++dGqymL
B7R/9tjllZbjveQvexEe3q8jmYH/nDNkr5J+5v/9YIje89bQpOh//pZk8Co+
fslj+5GIgBdrr6X/8xZTxOly7v/7O4DUbi/Kjixe8vBBhMq1/ffZqn9m+3wb
O93w//60kYyKjZHB75f8VRfRiL/23r/n//0dQj758ogdHVpyvwESanDmiNfE
//szQp4u81ugcGgv9XMYsf84ouO0esmjJsh8Cfmq7folfzdFbsZ2fbSQWvKI
GbLH01TWRGHJ3yyQDu1XvgZqSx6yRAIkD1ToaCz5qzUi8recU1N/yQM2SEn7
ThPMYsmf7ZD3m09sE3Be8icHZIJeyTHgznQo3Qnhe8L+qeT4//t1RrZx6T+O
PP3/fkmIrlnsdfuopXx3CkJL/UBXjFuKD1ORVDWqVFvukgddkYozOQtZJf/v
xw3pbPr5Iah6aT3ZA5nZqPbIsHHJzl7I2iMnL0l8+H8/3sjOohqXyf4le/kg
xqwrNV6OMg33fRFPg8MbE2f+P7+jSGRC3JTHch1mvtsx5O7AxyaMl2m4dxyp
UZLKEVi3FHcJQBbqHziWKugs3WcQskFoWv2i+lJ+egiiRkIEHTSXnHoKscgL
H1M0Wsr/EYocnauvW27DdN+qMCRGa3VGG4XpVP1wJC/WIuQefWl9zhnkVc8t
y+DApfwV55Ah+c9KRmeZdoo4j7D7y/FIxjBdJXMBkXxO/zqZuLTfQCRiZzuf
mPhgqV5aNHLirsYxz8dMxzjGIDd+RRhB7dL5vK4ghdhbuTXvmDZOikXeXVzL
9rWL6dXdV5Gxdtue0q9MP9hzHeGRSi+9+PP/87qBaD1R8FTi1GVYvDYBIXMd
02YTYNrpzE0k1OyxRPtGpmNMkpCkVNb5e1uWbJyClH/XbgveyTTkpyLtatEP
jJClem/SkMkz7yMldZgen09HdmxyxursmTZOvIPoH7m77qYr031cdxG3otFf
nkeZtrqchZxnVX4DJ5l+sDsbuW0QmLXmAtMzIznIs4SqsK9XmRZpuI/0DHDY
lyUv7V+Vj4icvMrvWMj0lxUFyO6GjhGlSqYL1R4hJkLitWwNTHsHFSLeJFpq
+/ules1FyKW83MDsXqazoATJnpswCxleqv+yFKnTUt9h/JvpUGo5sqz3xeff
3HoMf/9dgQwrHk1bvZZpkbpKpCVM3HGrGNOCXVXIbZmgTqddTM9MViOXAmTj
gxCmm9fVIMcbWs1vaDOdaPwC0fZSfPfKlunx6ZeIYtXH6K9Upk+61iMiAhf1
Wb2ZnhprQIaLBl6qnGE6+cAbpJnz6tnD0UwPcDchj63hgEc80z8Wm5Cov4lP
03KZbhVuQfyMdIKfFDP9YO97xD7tt3p7FdOB3q2IwkHjIp5Wptv4PyDCcX99
t/Qy7XKqA2H5lq2o8Y3p/mVdyLso9lz/v0zHGvUg5T0FR2I5DzH8macPSVd0
2nKf/9BSP32I3/vy9H5pprtXf0bsZFyd/u5gOHSv4hfkYMBaUZE9THM7DSBC
G70TDAyZ+RO/B5EFz02WrlZMX7D/hgxWNgiGk5he2TmMlJKlY0qPM/167RiS
VtRs0BLKrBfR/gOJ5AxdORbJcJV5xzhim9N5bnMK04Y9E4jm3/Oa6D2mlad/
IduMdi+zfsSs90rsN7IwcTkk+iXDsPzONPJVE9l77x2zPnn5LPL2xvDM8y5m
vvexOSR1z0G/2R/MeF3CXyQiakJJcI653sRwEfHpSfmhwKZPOPXZJRZUI2zO
jSLCcFV22DJ06/u7sqckGWaxiV2OCsqYf03YxoyfeMiGDtTnO78FhsWzxDnR
NxvsxYb1mPFCXy602JP7I5s5w0557SvQCH6q1Z4jzP0oPTyoN1lAyPwos75j
GC9qXVTZQg9heLxPdDUqb73e6M4Vhlf3LPKj9FOZcpduMtcbLAqghXd2sh27
wzCk8Aii6IRemWYZw31FpkJouEj71W3PGVaUuyyM1qFkL8FGhr1vdomgJheD
Nn/pY+6nk7MBjXvIufBqmFnPV3ET2t1+9cOjSeZ+xxtEUZpU7qVwLgPCQwPi
EmiOnpqruwDDskWrJdFx7xoN040MR1iu2oyeqOiellRkeLxhhzT69LNrM/ce
hkMFLGXQZdy/cycOMAzro7egURarSNWWDIvHKcij74IT9mU7MxzQnLAVFcqQ
Fo51Z9pEZDua+gN57XyK4X2RcorowNqGTN0LzH6ecimh8vssTitdZdYv/6WE
FkZ4qbDeZfbn92MXOps3t/rbA4ZdT7PuRtHWcyNN5Qx/+CGhgtZJpKSmvmGY
MhGjhq7S2RoU8YF5/o2f1FETrxJz736Gm95p7EW7y99ywxTDgpdRFJX4ZDuw
hcWQ8JnTnRhK4xyq5ONmeM+PF4COm7Ic693EcOnNBA10d2CU0cstDMfUXj+A
BqaKyOcrMWw8n6yJso0q9p48yPCH3V1aqO6aijKaEcMq6Xw6aLS67jVDa4Zv
j5nqoiLnnHVFPRn2pvDpo/a5o5s5/BkW0owwQNObTyyMhjJs5y1ohG4Ti31U
cY1hd8Pdh1Gfg6LRd5IZDrLcYIIWu2e7XspiuHbdKlMUSqs32T9hOFdWyBw9
22M4o1nLMGehggXawNbVvK2JYZEgc0vU7PCv8/OfGQ6PbbJGE/xPkb6MMmxN
lbFFe5JWIq+nGf4YcMkOdRnePHFzpRHhkKZYR1Q+7KSdrRDh0C23cpzQsXUd
teslGM6WS3RG/XSjbyaoMPJN55LJqOqnIXbr/QxHZRVT0LmAA94i+ox8jnMf
qWho1oxmnDMjHshv54oeANN8Cw9GXCWw6AjK8eH+OiF/Rlw9UsIdjeIkj12L
YlgwfrcXapRSYWUWx8hvLOilowKqIs/XpBOu4rBq8kbjaY1xsSWEoV+w2Be1
XdiyzKSaEW++9eQoKnojzIO/kVFvXO6dH3r7her+mH5GvrrOFn/UxT42x2iU
4WY3twBU/vf3tXwzjPUPip+eQK0EDv+u5TAmLElKDkb3OJzMluEhDK/vbT2J
bsjOcTzHT5hFerTxFNqzn6Ph4EbC4hqfsk+jVZd2nbojQTj0T3NyGJrW4aTM
voWwk9W1lHCU4vM4uUaJcN+abQ1nUa2KIVMpVcb6I26/z6FbVgitOLOPkc+r
qxiBDqd6Hz2gzahH3/QhEn39PUk2Q58RP/ZSKwq9r/bq4zIThtGgukuod5O0
TrUdo16Hz5kY1GSj6V8JEuEY6feUK+gu19CC0y6M861+bRyLTi12btzvy1jv
0mZwDf1wiKs51Z+wsYCs03W0LG73eZYQRjwwOvQGGrwj5mfleUZ9V++xeNQh
qCJT7BKjXqAnkohiL4dtT8USTt0cnnQTXeZ4sBZNYsS3UK8lo1+yfYOS0wmv
1jktlIq+mEpRXLjLqFe4fTQVjYieS6woIKym++BxOurWucV4UylhkdPJhRno
IRlz9pAKxvx2byi/jfI+zafvqyMcobpvNBMdX/FR6lYjo16g0sYs9J05d+ef
ZsI63y1t7qHXRimajz8y8sV2c+aitk8OjjztJxyfesjhPip5USa2epBwluTh
F3noQ9mh3vqfjPVPOD8/QAOm6841ThGua7z74CEKtfe2v/vDmC/vy/MF6Buy
e9AH9sPEfXXvMStEr+/Ul+zmJjyp7K9XhNqxbq/v5SM8VLBMvxgdSR4TGlxH
+EkW39FStMDzbcWwKGFNakZCGRq47wFlbDNhEbOcxnKUq9On4Pd2wh/kTzlV
oG+zTKxndxKGw5ernqI3/Hex/FUlrHbYUKQKlV7724BNg3Dm5+q0Z+j3z62T
nNqEDfeOH61GCwuKb67UJ5xrftPoOaphHPBNwILwWKWw9At0hZh1jJAtYfHe
BrFatGlUXXW9E2GNZ5XSL1HHi3/OSLgRrqG4mtejMjbdW6XphFkwmdAGdEy2
olnWj3Cg/57SV2hw7UlxxZOEvallJm/QA9cdX+4KJxxgZl/8FuWmgJdqBGE5
/YFrTWgC67InaCzhkmIHiWbUqamfpBFH+Ni9jslmVDbl+QqtW4Sjvtx714IW
7ztraZBJuChzIKsVDVlJWzDOIZwQJne7DdXs1Lpj9oCw9J2j2e1oiz/XL9ty
wpYlfzs60PGCi9FubwiftFBv6UFLTnvs9mrBHZqr5r2+Dz1pbNDt84GI+zwZ
a+5DV43xyp/oJ+JnzNTs+tH3T340BQ8SHk15uP0zeutik3/odyJfImYn1xdU
Xi72xfkpwi+C3nYMoD+nfT0u/iHy09CSd1/R0lrTNZdZTPC4aRj6fhDVoqx1
vsGNO1RH6efcN5ScEj9/W5Rwle/h7jF0ONPJXVCKyN8RICo/jnrnyXaGy+GG
AcnSsXE0uKK0hKRM+NUI6eoEuuxFqEyzOuFznpp+v9CI1zrX92O4q1xm3Rwn
0etdH3zF9Yj6NyRtLKbQjZ9TP102IvITY0XI02j6sKvxohkRfyXMFTyD5s3O
bO9xJPYvqEh9P4cqsz67ZUAl4tQQ97XzaDnXhZUVbkR9Ho4cyl/0pfC6bzeP
EfWGZCJEWDBDsU+WK4NwO531eNHOgr2XuVcbGErkt8rEprBifbvVb1tfJOIb
miz0lmM0hHVNfQwRH2ARVmDDvmvWn1a7QTg5YHoDOzZrau0onEbkb/X8IMyJ
hdpKvDmXSfRzdvq5DBfGQf62byoHd18vmrl/BSbge2J9azFucYtjtkkrsa0x
Ca2xr3GPf73CdXI1VhDnrLmsGXeMeSUPwo+ppcg98mknzDdIYhPANPPKYoz7
ifNTvDzur8Eaik4vVg4S/Rh7dV8WxIwrdL12jBK+OyYcvBazf91xiHeG2O+i
8vWjwtiXlrTykL9EvV7NR6dEMLeuI3Kjy0yBxXis3DxuHXZ8eJbj9SrcTr13
+Uc2YJe51ldf2EzEo7noCeKY0Op+xVlZ3KFPUp+YSWC3hLNTXBVwc1WunRWW
xLJk9oRoq+P+wFUfWbIZU1BY9r0YJfxSNvqaFFa4u8FGRhN3FseX7kBp7Jmm
jRq7EVHvUlwPZQumoy95188Md3zGV9sjstgb0+G1X6xxi/OHlwXIYZ2kwF/V
FGI/09nWsq3Yr9DEvNBA3PBlnnJEEcuaeJfTdgo3JcPffL0SZkdZcW/bWdz6
G3Xcm5WwGu2AjA+XcX+XctxsvQsLKMtPVbhO7OdBsZFVxrZvHUw6k0jEH7n1
LSpjN3gt4hXv4Hb9kyhRr4LphV66fi4bd8BnnYjHqtjiz5rY7nwiP3DX9RI1
zLV116WIciK/oW7Dmz3Ynlv8YX1vcc+XFk+ewrCxVbqnVFpx7xveoEMFLONU
aHBUJ26ZB7/5+fdjPOQfx9UGiPnzjq0J0cCq3sv4RQ/jDntz+Q1yAPPTcvD5
8oM4v/1xbg5N7KNco3vMHO6aw6zSeQex2JtsR74u4maxpSVEa2Faq/bR9rGb
AUuE7+Nyf20sbzzbaYgP97lweQOqLhZaEmEO0rhN8ttMSgwwZbkqkxvyZsT7
4ZqnXw2xb4nTRt934M6dte9abYyZnKTpxe/BXaEbuWh/GOMYT9Iew3BLz2UJ
85pgj51bNTUP4t7MLtdeY4JJHdTExo1wvzA01NA2wz4UB+3TMifqxUt5rTHH
Lsk+Ur9lg9v1RO/+QXNsaqWksg4V90T+ndlMS+xl86JsaiDRT0Ned7QtFqyp
KjN1Cndq8GO3VDtMsdhrs/5Z3FIpxgJP7LH4hI+bZi7jXu40FbXCCdNfuXaD
4XXci8uyb951wlhD9EVuJ+L2lE3wO+SMuTk9FjC+g1v13YjpHRIm2jzBl5lt
BqHFBZ9e2JKxlgPyq+bzcVdTD3eIULB9WxI4s8rx/B+7Dd/epWK8Y8fnF9/i
Vno70yh2BMvqdx6ZfY97/9Y/waxumEa7fuevDtwJYdsfDrthx6skSwc/4/VU
pG/ceu+BrS5adffTEG4t//l3rZ5Y9r2Z612juO9or7zQ64X1xr45+nYaX59n
F1d7zhsLPF9Gqp83A4ia6tm1zgcTDL59+DmrObCEvAmjP/DBdKiBO0pWmuP9
LjQPj/piD1RlRpLF8Ljo/EuHe8cwvW38nfFSuGtkf96mHce+iM/Xxcrh5nHU
WyHvj63jbs48twtfz/f8y8jzAKxw4cn1UDU83uGn2Jh4AjP8dfdMIGIO8Ptd
c2xAIBbWHULy0jaHqq26Nam6wdjGd66HXfXxuL54miUSghW/MAXSYTz+zHR5
k9pJbDhPTtTCFq8fwvJ+dnMoZnq6tQOh4/4szjtJC8PGjlXVqfrh+83mL8Ly
cCzCLadE6QRe72id1dHb4dgT09PXpcPxeuMyrBunzmAWOh5nxPBHOHQrd35P
5llsfJ/l0XWX8PjKNdFi9ucwKZnth1fF4euF20WrOs9jT9eLAOctc3BafJbn
lx6BWfEt38GahsdXpKsf9r6AXZr5wPM72xz6Tkekq4ldxKYaztR1P8Xrr43+
zvo2GouppJe0PcfrO++O2tF4GZMvtMlsqjMHxcLXhy4cicEckhTP1DSbg/dN
nwseQVewmSsbjj5tN4dUKc918dyxWOw5DlJptzk0BXUICyTHYi/p3VjuVzwe
tJXq2XwVI1FeKmSOmMNqCY6C6KPXsHmrgk2p43h9XRffk+uuY4oaEX+uzuH9
lUnSTPxuYPGCyiVBvBawerp+7MmRBOznfg6vT2ss4AGX2KpyrURMj/5BSnud
BYg/02itkr+J/a0PjhWQwi2es/0ZVxJmMW2oGyBnAX0Fw6pyy5OxB1ISLD0K
FuA0s+6nP3sKRjr1wvOeugWwoGbetldSsce5cVJ8mAUEHFn8uFosDRPsPNLl
p4nvb2h9WPlhGlarzKsLRhaQVezxW+dzOrZ12EKqnYLnj/XePxp2BzsjLNe1
z80Chl5Gr3VQzcR6NP9cSafj/bqPirT+zMRiUlIWPQPx/R+t0uQOyMK+vfYp
bjllATHWsxkbNO9hGnMHPNXP4vkGFhuchLKxSbOhTrYYC3CN9Dyt/CYHMwgr
v+J23QIUe3NNxAtzscz8KJ2mRAsYz0/imU69j1lzKxXfvIPvr76nQS4mH3ta
eeLKzscWEHHC6KrUwENMePSQTnyVBfAMBvpdO16Aea8XXfz7Ao8rSRYb8jzC
JI9Ve9Q3WUDdgsnRdQcLsfPyK3WcvlrApILXlM+PYqzP8uPCixELCC5V2ZeY
WYLtOZtftPWnBXg/4DLgJZdi33tNN0//sQD9b+zmR76XYcbXby1c4reEqHbd
bxwHK7B71V5Fv4QsgU1xoS9D/im2bBw8rDdawoxsnWi1UCVWpDfQIbUFd+m4
ctzpKmw9i0LR432WMFWuHf4hvho7up3FQ0LDEuoO2qCiss+x1zbNkue1LeGN
yOGb9o+fYyeLjseYmFiClnTeox1jNdhnt0r3by6WYLg+Q4s34iUmueGg4C8P
S1B7hx7hUqjDnF41PJn3wR0uP6HyoQ7r2dq2anWwJZR/bCy4qt6AdX7/nq8S
YwlunXdyRXY1YuuSfK3guiWQdlgGn/rbiFkZzLDoJVpCwCeVuO+v32Bt95eb
2N+2BP2pS3szkSas2Wv9ZHipJeRte3q9gKcZ4xdLvXWpwhL8Zj4FJJ9vxozf
Sh+Mq7aEv+k7Ys6zt2BvdijdyH5tCUOK+kNXud9j9ePaau/6LGHAMMciYG8b
xpXW2Nc5YAkdX3T7FZraMK3Dphe+DFvCvtDjH+mu7VjNQ4fO6UlLuLe8aehj
xgesyvdYsOgKK1Ba8Xnwhk4Xtij5R0qW1wrWzrWpvPrThaEtoY1Ka6zgrHtk
xLZH3diTXVGiBzdZQbJco9EbhR6sZDK9yl3JCkoC+2Q58vqwqduyR46pWIHF
o52cses+Ycrmefyn9lpBrWll0JXzn7CCojJS7EErMPtW5LPJvR/LO97EVmZt
BZ6K8/Kth79gozIW96sdrACFmjGX5i/YtvYu89dkK9jg02/wwXwAy1YdzOz1
tILb8TXTkdSvWObMXx2OMCuorM6E9/eGsKTArZdMs61gR66K882WUSyRHP+3
Lt8KhC4fNImKH8Pi9dm90CIr2JjxU5OL9APbttsXvMus4Nox/oebWMexa6K9
hnJVVhC8zqby5OlxLKo6dvViqxU8LI0peYxNYJE5i6F+XVaQ4y4umFs0gUVc
8/j5rc8KjDc6jmso/MLO0LSa34/g87tqLxO/ZRIL5p67ms1qDeaksI2W+6aw
wF80NnFOa8jMvF0xXjeFBXS3+F3nsQauEfeWJKtpzC/vvnmosDWIUsYiPE7P
YB4mzsIW262hKNf0+Mm5Ocw2sS6R1doafDe1nRXRZwGr8N0r/R2sobfUejw5
jwUsPNKDvpOtIZy/YfuONaxgggbbtXtZwwEe9tqYflbQ698hev+MNQxtzHhn
eXM56Ly6FS0ZaQ07eSxCtvKxgVbhisW4y9ZgrLpiuelZNtA497k3LNEa0puE
02sC2GGPfFya1QNrUChZr6Ebwglqa9gE3hRZQ7s5/5pmNi5QmfcOO/DYGlT5
5CMWo7lg5xs9skKtNQTFH37um7MC5H0XpNi6rWHfpQT+b+w8cEzyTFj4vDUY
rtRYXf2TD9aVU7PyOW1gyiDxD/3OatBapXF35SobWHXoNFljcTX4OolmugjY
gMtZGlpgww8NHO0ZYptsYP+2FuppIQEINNVJubzTBvzGg2+cTl+Dz1kqeUTV
BrJClZ0/rxCE5lmWJG3EBv7Gxo/yHxUE+dSyxEVtG1j2MurJqN5a6Pwuf4Nu
j+cLtAQZ8AsDB3Bef0WygatBPKbV54Vh59XPV7e42sBOs5ONu1lEIFL91pVe
XxugVNgb7pwWgb3nVl0yirABg/q5NyoL6+GW2Hj4jkc28HqXINvO42JQ5/s6
7GKpDdTOR5u94xSHyRdZpwcrbKDRbnCuwlwc9D2cT6XU2cChkxt+7f8tDn9L
mwP5emzgy+n2XrMDkuBgUuTzg8sWpqzTO/NEpSHyzhXvQ7y28PqK65BeqDQU
z3jS766xBZ2eVXUmn6WBN0XG01HUFuSzOKce3ZeBpyNxrm932YLaPoHKTWay
IHY20DHfwRZE2lpq44e3gqItt3E+2RbQupQGC7ttoKGUCPmutmCXVuN4+u02
oH0sk8j3tYUd1L5dW8q3Q97u2c9552yh41r9dda0HbDvq79rXp4tUFS3bMvo
UgLDJ5zWeY9soS2wJO28+E5wio3TzSu1hXP10oGqtJ1wBi2Rz6u2hehPg3oL
v3bCqxtT3++32cJXy/BovXXKYKN9zOf+gi1Ift5k8eWiCnhsYifdX24HtJrK
y6t6VODkr2sm97nsYP2DgGuCSqqQllK4676AHZS3xAtXdajC0PSv37kydhAp
+PFJ1m518M/yDcw1tAPHwSGRyyL74NoK7/CcZDvwWIg24dbZD1SRwb3Ct+3A
+lZ6XNiZ/aCyxWEy7B7uM1Aa+Ww/fNDUp9oU2sETyxbrQ4gGbAiV1V7RYAcf
U1tyY/cegPSpPm6X33aQd7DX18D0IOR/PhwrqW8Pr96775gb04XQiTq96MP2
kPBcz52O6IExKyyfs7CHg3dH33lH6cGEqILfO2d7uBy9YqvQtkOgYsNtEepv
D6m6V3m6ffThSVP1up50ezixfrq0TsgIGip2pSXM2kNJQ+m8ppMJhBo5HLq3
YA/UHBl19ygTUP0U8bt0uQOo1om8rC41gdtsPbofVjnAm7+F7csFTOHkoYgJ
IUk8/s3HsrLWFHZ1dB+4pucAh829AtLw7723Js9+jb7pAEH14smd6lZA3/ph
6xnEEXZWH6SIXnQAsy2+lEANR1A7e0L6QoUDqG3mSfLWdoSgNn6HmR8OsGwD
8NofdgS+xh8bPpk5wjXurPHdVEfwb5XnIvM5Qfk3/6LBKEfozbf4K9zhBBxZ
wtihbkfwWq6az3eEBCMZD/33f8LzN6lgjadJ0JRy6IHqV0eI0r3bEppIgoS4
UxJS447Q6tV3ve4VCW48/3V6gdUJToyNejVtJ4PcI1tK+1onmE26k+/7gwxG
sVvlLiBO0NbbrJhLo0LqNg+5PeAEH5JdJL1PUWGiNlduRMMJuFRql22Mp8KN
P9vlDXScYHvRiIx8PRV6KIpb+U2d4MunSbKQPA28VHdvT3B1gjfzklJfv9Ig
qhtVunfVCUjiGSeoeq7Qc/yUks0NJ/h2NcnhiqMrKPJXKa1McAIjboWgW36u
8P7g/p2eyU4g+qgiwyjZFTbkH9ildM8JrG++YZUed4Xs0zq7y546QRfHAOp+
6QjUyZio139zAi+WZp/c+25wKcxjp/53Jwg0MNAkV7iBSc+5rW/H8PqR6pNz
r92g6/rjTa2/nGBjk+7w6xE3GGOTXvbprxOYNeyx/LPFHQQ/TzfM8DuD5jG+
2HOJ7tCBCtQECTrDD7390/pZ7pCcuK1iQcgZmgsWkyeL3GGLiXM+20Zn+NtR
PzbY5A57njVcXS3jDFtTH+g5sXuAU0qSneweZ2hwynDLcvUA6T8l5jn7nKGv
XkL7op8HDFs0GypgzhC6/tRt41APOMrLuV9Z0xmu6PIdCo/zgHMh3tJg6Awc
Te/0L9Z4QK7tgTFLkjNoSRw0h3We4FNiP9hJcYZnHVKfrDZ7gsqagD57F2cg
XS3vMN/uCZUNuc1kD2ew3qSS8hc8oVldqIR+3BmOIT8DuFw8YUb426nzkc4g
VdRfsS3PEzaunraDS85gdtE99XCJJwAX+57Zy84wP549Y1XlCRdmxCfdrjvD
p0XTXr5mT1jfYeVqmOoMspzgJTXpCfsS64zXFuP78xtMiuzywt/f2ra/KcXn
Z/rx08k9XnAm8gv3+cfOsNltXWXDfi9oDGR5MVPlDN9und+x1tgLHGzV1Ltf
4fNcEw9B7l4QujFLIuMT3t+4kXJlkhfcFixesP3iDHF1KykpGV5Qx1PTJTjo
DL1/+OWO3PMC/r+91899d4bFnT125YVekP5RmNtt2hkkryW+tm7wgtpW6UHJ
OWeIql3NdemtFww37qrpmneGE+CUnfPeC3Y9NTppsIwErdMy3Lk9XlCTfH5C
cRUJYk5UBVX+9IKhG9fffuMjwWFxM2WzKS/guZyRmy5Agqe/rm5sm/MC81OV
NEEREmgpNtmlL6fDV8fpzmlJPL/CuJAkSIcVEi7Pn6qR4MXMrayCnXTQfJM7
6LaXBGfrv4xuVqFDaNDESmGUBKevuZqfU6fDVGuIGf0ACfYWvDYUAzp8ibw2
IGZIgvGQxZ139ekgpta54rUxCfSO7H2faUQHmwExhQBTEgwhD4USTOjwDss5
3mRFgjLuYDULKzokxSoE1znhDpHo9XWiw9PJZ5ynySR4cpf+XZVMh7k0zm3b
aSTgKC+78Y5Kh91GBsYdriRISwo55OhKh9x7H+KVvEiQrYyGWXrSIcHhh1x/
AAnWvT7WVHmcDn51G/UPRJOgQ0NS4Np5Ojw4RvL+EUMClHPPn9MX6DAimXXt
5lUSmJ5EA2kX6UAK2fXxVzwJXItPvF1zmQ5GO/W8bmeQgKo41Lb8Bh0iey/H
GmeSILFP3zc7jg61Ua3F81kk4DW1qdFJoMO+QadFszwSGKW6r/W8RQf5W/4x
7GUk2FCTLmiVTgeqbkXhw8ckuJ+3n78qgw6pU8s67J+SYPZ+wGvxO3QQPhwt
UfycBI947f+8vksHNo47BbQ3JCj9ejG6JZcOvfTm9y8/k2A1y7PvBUV0iO75
+fPgVxJc2VAbklGM72/Az1czRIKuhlzdyyV0iJc31q0aJQHiZ/XFqowOxgON
FaXTJBC3+2Fe/IQOC6ajnSpzJBjjzR4Pq8DnWc0zUzhPgiSfQfKhp3TYf0F1
k8kyMuyeVtmxUEmHapv6zHsrydAm8q0tu5oO3vVDz7fwkuHenTEFq+d0EFXj
+nRnNRmOKHZ+Z62hQ9Ba7Q3pa8lQ5ebfrfeCDspNNZcTxcjwl7xTv/AlHTIP
VgVc3EWGFx+VyiZe0cGssPf6ChUyGLZsLfR8TYdlmxcLzquRgabMvfwrbkcW
dDQcIcPyPbSmN410EHn82DlYmwwSeycuhL3F70Ou6+ScLhnU33ae/YbbL37u
ZoA+Ga48dVQzbMKfv2PqbX6HyTD0c2xs9Tv8PhVL9DxtyfCyNq09uJkOailt
LiP2+OcQr0ZlM+6vq6bOHHEiw0CYVKFMCx0OjChXUqlkEH16b7QO9/ydgl0O
dDJseCebN/2eDtmCzcbdPmTIljzLh7XS8e//Pz1t/MiwU/N1/RnchU6KWRYn
yBAvMei+so0OnhvyNhqFk+EQt9dhjnY6BMo827T8HBlaylVNtXBHKL0XLYkg
g8XUyYdncN/WnhMXiyZDZH/nvXncnUe1pH/EkyGK5+7Fzg90GDppLZNxkwwC
BxP8eDvw1+sFjy2Wyfj8rMdY9+PmT42Vq8wgw+ZkO/l03Dqve7ZfziNDB2Z+
ybyTDhbtPxUOPCSDwVDysVO4Kf1sitOPyFBw1BjLwn1qRn6nYxkZbP6ejJ3C
XSzlr7KjhgxxMpw/z3XRoWZHpOrnWjKws91KzsLdvCdJLa6eDElrhJzrcY8a
P9+z+Aa/D+XhvVzddJAK4cPedpCBbdTlSxDunRGSEN5Nhu4Ql9YbuOHq7v2q
vWSoMz3F8RC37T3bAylf8PNq2O77jDu29a42Hf/e4JBzLAD7iL+e+sp1Nk+Q
gSem8LsZ7ryRRt32STL4Nax9cQR3PevkIWyODNRe+4IruFkUwJiPnQJksYLh
Tty86qaHn3NS8Pt3+j6Ce6MmzcSfmwKf1gt5z+NWtYky6+WjgJfJGPfGHvz9
kppiflWAAruSzstuxW3iXWChvZYCLutEWtVxe537YJW/ngIHPFUGzXEHXxmx
Jm+iwKWjaSZk3JG3FmyExSmQ+vaplTfuOwVS9qekKTBbwg4XcHf3eDsbKVJg
b8bz58W47XLsbVt3UsBqXj+pCvdHfz1z290UwAxWKzbg7lktpeuyhwIO6tci
unF/0mhXPKVJAfC0V1nATeKrkWfXpoCjUQs3Ry8d+rseSF3UpQBLMG/mKtxf
/CJF4gwpELymW2Uj7q+ZCEu+FQU4X3IMq+CmHZWfU7algErZpk0I7kFMeLLc
HreGuOQB3EMfxgdrSRR4N9mZaYjb9c7HT/pUCpTzzsqa4f7m09DV7EIB7ek3
p61xD3PfftvjQQGp6Q1PyLjd2mPqKXQKKG14muKKeyQj5PmwDwWcArwcPHF/
32dZMnUc9wCbz3HcP7y4U3hPU6C6YpT9PG7vvdPx18Ip0PFZ6GMk7nHOL7Hr
z1Gg6dizG9G4J1IrzslcxM8X/aXwOm5fz+zQ3EsU+EOaXJ+A+5d6XODOGAqs
P1VIu4V7stnbC71OgVUaewvScful2LvWxFFgg7f3ozu4f7vrkfQSKeC7Y1dS
Fu4pNikLixQKRD3g3p6He0alHfG6h8ev5RiV4g5YXqM6mYPPHxO5W4579u0D
pcA8Chxx/j3yBPeca6T0uUcUqPsrDc9wB+32F+MppsD38jDj57jnWSnrYksp
0JJOMn6B+28isiq5ggKynXHi9bhPushzSlVRYORF588G3Au7hFmzqylgigUX
vsbN0jg+WfSSAlqbr/I14V62mNHd+I4CIeAn24Y7MbRuk/Z7CuRWbrvQjnvn
slGHqjYKUA909nzA7cyu8qmgiwIaLY5uXcT5ztlIbuuhgMiP9tRu3DFcp8h3
+ijAq3+28SPuqpV1A3EDFDCQyuLuw2116bsM/xAFvuXmbvhE3B8vv2vkMAUW
c9ik+nGLCtgMB/+gwJ2Skg1fcIeIfB9znqVAVSVL3iBuwcTVil1/KCDkdTZ0
CHfuht0+ZgsUcJ8C/W+4u0VP/tJaToXkPwpNw8R9paYrV7FT4d1obcQI7pWS
L4+pc1GhqdRp73fce6RXz2xdRYW6zeaXR3E3Zyqr3+GjwjkebqUx4nmUtQ4U
FaDCgM+xRsIJW9PnVwtToXOf0PQP4vxKyqxT4ni+xCv+CeL8j6w06JupcEwl
4hLhLbtDwoekqVD5Q579F24LtVr2LnkqLMTcHiI8VjasZbadCpS8crNJ3Of2
8kU07qBCwpByBeEi1Iq7SpkKP1Y0hP/GrV8VfEhdlQrnJzb2E/6yPy2qQJ0K
mzk1kSliPgeHee+gVLhSdGyYsO+h4DWROlToS1u1eQY3d2Oq2fJDVMBk89wI
pxu+uB5sQIXQxx/zCb87zCtCN6HC07N7ds0Sr9+WndZDZlTY5RvtQ5jF3DLR
2ZIKgb1P7xNWtErdaGZHhXsH58XmcNd11Ng3OlDBlrrVgrCj7bdkLWd8PrZB
kYSjHXZKqON/1913fzJKeJRSIy3qTYX4Zw6pf4jzhHXrNfpSwdru1mvC3amT
9OBjVHhlu22acEO3VHlnIH4fe09rz+N+Nrev90IIFZ7cJnsSLhUxZ1MPpYLe
xZYrhDPNzhrGncWfB58rbYSTfJOOakVQIWnd7BThazFF8b8jqRAUJyH0F3f4
64F+0xgqeKZ9NibspKnlv/omFajRtmWELUkOtyqTqFByZb6JsGHo8WdeqVRo
u/ZwkDDyJHNl4x0q2EcFCizgVu58qhicRYW5XSkyhLfNtJlvzaGCsPasOuH1
ypypFx5QwX3I3YEwv4nYC7VH+H18jaUT5vJWHR4sooK/Mk8o4akcF2Wtx1SI
6uRLIdyyua5uWS0VuOTY2wg37O8bfVhHhZCDbv2Eqx1nBJxfUcFyi/EY4Qc3
Ze0rm6jgkP6QbRH33TII82rB7yNEhY9wcrvV3U1tVHhxx3Ad4ag1F34GdVGh
O1p3G+FwpTShrT1UKNJS3k040Khsb2cffj97qxHCRy5+O6v2lQp3VdsMCGst
11v/e5wKK5P3uhFGJEjY7V9UmDyS7E1YGQukmE5RwWWg4jjhzUHZeQ//UIEn
CAkjvD6husVpgQqXk9LPExYo6ZzhY6UBf9ibKMIsv7gPeHHQ4Nmt8BuEp1dv
dt20ggZPJPhvEh5T2Hvp9Uoa/OL0SiHc7ebeLs9Pg8TCpLuEy/pfuQ9uoMGb
uxzFhKWqKy64itJgS+zKMsLRafl3v4nTwGn252PCJKern0ekaWDyweUZ4dfY
WVZPWRrsDZt9TlhFzF9sTJ4G0rw+tYS5e2xsx3fQIKF67SvCfhX6J3x20mD/
W81Gwj230LgJZRrUn7N/S7jAVrJlUp0GF/EPaMI2Hd/0Zg/Q4FqPXifhmtIu
10AtGrTc+dhFWCG+8dwfHRpclnb6SHiZ5cPqvwY0GG5W6SPsoZLRd9KYBo92
RX0i3Lb2+sKiCQ0eP2rpJ5z9PmDPMisaHNqzd4CwYKGbVbgNDVR17L4SPnnV
7jibPQ0unPEZJGxiAgUcJBrMOwd+Izz3llN+pQcNFu/zjxKm5M9qR3nRYMKw
j+E30SPUVT402E3JHCOcbvA2je84DYy01o8T5tn+rDImAJ93aR3Dx3kefeQP
ws87RP9JWO/VjXWCoTRQv39vgnBhdoTq9TAaWL3Z94uwaGSgudBZGnDX1TM8
oeNwRSQSn+f+5knCN2ulV2y6RoOyBxlThDkyhbck36DB5pU804S9z644KJZA
g7Q/dIY1NUdDJZJpIG+xdYZw3ube5PRUGjgLhzMssvzdk80ZNBDb1M7w92eF
M9JZNJCI9ZslbJGWKXQ3mwanDz1luCo0Xln2Pv58fmSbI3wNC/aWL6CBNf8F
hhdEvaJzCmlw52ctw64LjrnbSvDnUXbZH8L7Kg4MKTyhwXYeH4Y51OWGB57S
oGTHPYbfFvJ+v/WMBh0FPQyTcjt+cL+kwS1jjXnC22Qrfz6rp4HZbW+Gf2fc
/hXwmgaD9bcYjrhJn/76jgb+P8YYNhE2n016T4MNYmv/Et5wdc8fs3YasIaq
M5wXyb5Y3U2DB3IhDGuENS1T6qdBxMVyhltP3ORIGaRBnsoEw64+NO5VozSI
yZdaIDzvqsQbNEGDOS8Thi87zfN/m6aB8OcghiWtXq61/Is/H95pDOto22/a
xeUCrPv6GfZS+SXFt8YF7hkLLzLmKX1h28gmF3hQqcFwuaCY8ktZFziG0Rju
W160N2OXC4TsCWeY85fegVOoC+ztTmTY7N1xE1UzF4ipqWA4NT/d+ccRF/Bp
fs+wgmVkGe9jF9h+c5rhJws+/Ao8rvDEf4HhbbrGxsW2rmBXvshw0lWFy2iO
K9hPMr1wJFQ/nPUI+Cww7QjNK+osj8CbRaY3HrTrP5R1BOaW/EH3a/nbmSOw
uOSznZ/5Vxu7Ef8/yMLSh38fc//kanz3n6uTWzNn5//5cHP9l3QT9/+85YZk
3NGJf+7xIWlVpHj8Z/1sgW1n93v+51DZB72iff987alyjFKU1392eijnX72N
/p+/94upOJ/7Z39Bod+M9+Ul/w/LlicM
           "]]}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84XytSyn/p
RB84P/2V8qfZ3P5w/pS3KS677wbA+cnzZ/xZIhcE539umLWuoSoYzud7V/bn
//kQOH+GiMn2ar4wOP9x1v7sl+nhcL6StKvI5xwEP+H0qT1/ChH8e9rXeAVq
EPxbb96sN5uA4F/Kk/rSvAPBP1BUWiPHGQHn/1f6raLBh+DbXW44ayiM4O8x
7pFzlUXwt39ZdCDbEMFfV3aBZWckgv9WLWztoTgEX+f67dAzyQj+KvPny+7n
IvjLfvz1YGtC8J+uaP7I347gq0RyzpLsQfAX7RR5rTMNwX+YOWuy2WwEX0FK
wcZhAYI/t0q7N3gVgj8recbfE+sR/Bk+rHl2W5HMu5KXaLQDwQcAhg+0oA==

           "]], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAGbplqK8HWkCAolEgC6IQQEYNQqcL
DVpAUNUWDsv3EEByYB6mZxJaQBAI3PuKTRFAygbXox8dWkCQbWbXCvkRQHpT
SJ+PMlpAkDh7jgpQE0Da7CqWb11aQJDOpPwJ/hVAnB/wgy+zWkCw+vfYCFob
QB+Fel+vXltAcCnPSAMJI0CUCXCDq55cQBhNe2jkCC1Ayr0zoZn5XUBkd0yr
KvAzQG8r2CuEPV9A+C3e1dT/OEBPkispiT1gQLQS2m8N9j1AyCZSOcnpYEA+
W4f4BqxBQPgX6X+HimFA/h/jEgAvREAcEPdcQI1hQI4AG4fjOURAQAgFOvmP
YUAe4VL7xkREQIn4IPRqlWFAQqLC441aREAa2VhoTqBhQIYkorQbhkRAPJrI
UBW2YUAOKWFWN91EQIAcqCGj4WFAHjLfmW6LRUCkFLb+W+RhQK4SFw5SlkVA
yAzE2xTnYUA+806CNaFFQBH935WG7GFAYrS+avy2RUCi3RcKavdhQKY2njuK
4kVAxJ6H8jANYkAuO13dpTlGQAkhZ8O+OGJAQkTbIN3nRkBEzqznajtiQC75
8bGN8kZAgHvyCxc+YkAerghDPv1GQPbVfVRvQ2JA9hc2ZZ8SR0DkipTlH05i
QK7rkKlhPUdAd+KsjClgYkD6SfJFiIVHQC+V1uo=
           "]], 
          LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAvvTBB4FjYkCIrv7NzJJHQPqhBywt
ZmJAsPcmdzOdR0A1T01Q2WhiQByGNkpqp0dArKnYmDFuYkBA4jglS7tHQJle
7ynieGJA/D8XXuzgR0B0yBxMQ45iQPwayWQ9JEhAsHVicO+QYkCQLCgJ9StI
QOsiqJSbk2JA5Ag6BYczSEBifTPd85hiQDjpJlo8QkhATzJKbqSjYkAs0eB3
/F1IQIrfj5JQpmJAAJJz5ZZkSEDGjNW2/KhiQNBbqS0Qa0hAPOdg/1SuYkDU
kO5xoXdIQCqcd5AFuWJABCDLbk2PSEBlSb20sbtiQEzKRmHtlEhAoPYC2V2+
YkB8xyJOcJpIQBdRjiG2w2JAZEq0CSGlSEAEBqWyZs5iQHiqb1Y7uUhA32/S
1MfjYkDYD0TPuNxIQI7e8fFF5mJA3H1YE3vgSEA8TREPxOhiQAQ780Iq5EhA
mCpQScDtYkCM4KGtUOtIQEaZb2Y+8GJArNiBisjuSED0B4+DvPJiQBidg5Yu
8khAUOXNvbj3YkAYgP1zxvhIQP5T7do2+mJAUEvo3vj7SECswgz4tPxiQAzW
3asa/0hAWjEsFTP/YkAczwklLAJJQEa43v23/2JABEzlt80CSUDWtdsQ
           "]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbRM1weYNS7LDDH4Hmbetng5ptV05a9kQfJE3Kzu1
ORH8Q1Enl63kRvBNLhzpnyWP4C9zPVDRbYzgdxls98qNRvBzpdfJ+Dcj+Cq1
/PbnbyL4d+4VJPobpMD5TP8X3zl7EcF/m3JEVa4gFc7f+eh09nPpNDjfZq/z
C709CP6C9YsS32emw/l7/hUK6vFkwPlzJ+v1261G8OMdLnGeCM+E8294Ptt1
/geCb5T9MCNgeRacH3jp5JNFQdlwvvo0penFnxD8e4VJbnvn58D5PquEdFod
c+H8Bo0N9+UeIPhT9plMMOzJg/MTNmqWH9LJh/PfPJI3S2xD8MtFxL7+v4/g
AwBWhMIX
           "]], LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAljVy3rO6WEAbUzsbExjwP5Qe304p
wFhAfBlav36B8D+SB0y/nsVYQK9eeOhS7fA/kPC4LxTLWED7EE2em1vxP4zC
khD/1VhAsbiQt7s/8j+Kq/+AdNtYQKtrIBSstfI/iJRs8engWEBQHF/wQi7z
P4RmRtLU61hAFZNdJpgn9D98CvqTqgFZQFVighxXPPY/evNmBCAHWUCmpqS9
8Mj2P3jc03SVDFlACOtr051Y9z90rq1VgBdZQB5k7ohsgfg/bFJhF1YtWUC1
rFN2fvr6P1uayJoBWVlAch3WhRhMAEBYgzULd15ZQN+4WfCergBAVmyie+xj
WUCDEcotLxMBQFI+fFzXbllAQwwFxpDiAUBK4i8erYRZQOgco9FXmwNASMuc
jiKKWUAyDFZ9Kw8EQEa0Cf+Xj1lAUDcJA1OFBEBChuPfgppZQKLQF6LEeAVA
OiqXoViwWUAutxpCSX0HQDgTBBLOtVlA11URE9IECEA2/HCCQ7tZQDcPKoj/
jghAMs5KYy7GWUB7mFHDcqsJQCpy/iQE3FlAPI2ZEekFDEB/gNJDT/dZQGWN
5099OQ9Af5a9Xw==
           "]]}, {}}, {{}, {}, {}, {}}}, 
       {Opacity[0.15], {
         {RGBColor[1, 0, 0], Opacity[0.6], 
          RectangleBox[{0, 0}, {98.89747630265327, 255}]}, 
         {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
          InsetBox["\<\"Disgard\"\>", {49.44873815132664, 66.30000000000001}, \
{0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 1, 0], Opacity[0.6], 
          RectangleBox[{98.89747630265327, 0}, {101., 255}]}, 
         {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
          InsetBox["\<\"Redistribute\"\>", \
{99.94873815132664, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{101., 0}, {103.94552672294397`, 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{102.47276336147198`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 0, 1], Opacity[0.6], 
          RectangleBox[{103.94552672294397`, 0}, {147.02447327705605`, 255}]}, 
         {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
          InsetBox["\<\"Keep\"\>", {125.48500000000001`, 66.30000000000001}, {0, -0.6},
            Automatic, {0, 1}]}}, {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{147.02447327705605`, 0}, {150., 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{148.512236638528, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 1, 0], Opacity[0.6], 
          RectangleBox[{150., 0}, {152.07252369734672`, 255}]}, 
         {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
          InsetBox["\<\"Redistribute\"\>", \
{151.03626184867335`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[1, 0, 0], Opacity[0.6], 
          RectangleBox[{152.07252369734672`, 0}, {255, 255}]}, 
         {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
          InsetBox["\<\"Disgard\"\>", \
{203.53626184867335`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 
           1}]}}}, {{{}, {}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
/p+/94upOJ/7Z39Bod+M9+Ul/w/LlicM
           "]]}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idwvtKN3hXFrF/g/P9fhd4VsLI4wPjvWq5OyGcV
gfOLvVZs+HdHBc5/Ovf1f43/enD+1WWM4hblJnD+Plu3qYtvWcL5ibt4jzM8
soPz2X6zfZik5QTnf9C32ZJz3QXO337dKMg+zB3OZ7p/9PFXLi84XytSyn/p
RB84P/2V8qfZ3P5w/pS3KS677wbA+cnzZ/xZIhcE539umLWuoSoYzud7V/bn
//kQOH+GiMn2ar4wOP9x1v7sl+nhcL6StKvI5xwEP+H0qT1/ChH8e9rXeAVq
EPxbb96sN5uA4F/Kk/rSvAPBP1BUWiPHGQHn/1f6raLBh+DbXW44ayiM4O8x
7pFzlUXwt39ZdCDbEMFfV3aBZWckgv9WLWztoTgEX+f67dAzyQj+KvPny+7n
IvjLfvz1YGtC8J+uaP7I347gq0RyzpLsQfAX7RR5rTMNwX+YOWuy2WwEX0FK
wcZhAYI/t0q7N3gVgj8recbfE+sR/Bk+rHl2W5HMu5KXaLQDwQcAhg+0oA==

           "]], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAGbplqK8HWkCAolEgC6IQQEYNQqcL
DVpAUNUWDsv3EEByYB6mZxJaQBAI3PuKTRFAygbXox8dWkCQbWbXCvkRQHpT
SJ+PMlpAkDh7jgpQE0Da7CqWb11aQJDOpPwJ/hVAnB/wgy+zWkCw+vfYCFob
QB+Fel+vXltAcCnPSAMJI0CUCXCDq55cQBhNe2jkCC1Ayr0zoZn5XUBkd0yr
KvAzQG8r2CuEPV9A+C3e1dT/OEBPkispiT1gQLQS2m8N9j1AyCZSOcnpYEA+
W4f4BqxBQPgX6X+HimFA/h/jEgAvREAcEPdcQI1hQI4AG4fjOURAQAgFOvmP
YUAe4VL7xkREQIn4IPRqlWFAQqLC441aREAa2VhoTqBhQIYkorQbhkRAPJrI
UBW2YUAOKWFWN91EQIAcqCGj4WFAHjLfmW6LRUCkFLb+W+RhQK4SFw5SlkVA
yAzE2xTnYUA+806CNaFFQBH935WG7GFAYrS+avy2RUCi3RcKavdhQKY2njuK
4kVAxJ6H8jANYkAuO13dpTlGQAkhZ8O+OGJAQkTbIN3nRkBEzqznajtiQC75
8bGN8kZAgHvyCxc+YkAerghDPv1GQPbVfVRvQ2JA9hc2ZZ8SR0DkipTlH05i
QK7rkKlhPUdAd+KsjClgYkD6SfJFiIVHQC+V1uo=
           "]], 
          LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAvvTBB4FjYkCIrv7NzJJHQPqhBywt
ZmJAsPcmdzOdR0A1T01Q2WhiQByGNkpqp0dArKnYmDFuYkBA4jglS7tHQJle
7ynieGJA/D8XXuzgR0B0yBxMQ45iQPwayWQ9JEhAsHVicO+QYkCQLCgJ9StI
QOsiqJSbk2JA5Ag6BYczSEBifTPd85hiQDjpJlo8QkhATzJKbqSjYkAs0eB3
/F1IQIrfj5JQpmJAAJJz5ZZkSEDGjNW2/KhiQNBbqS0Qa0hAPOdg/1SuYkDU
kO5xoXdIQCqcd5AFuWJABCDLbk2PSEBlSb20sbtiQEzKRmHtlEhAoPYC2V2+
YkB8xyJOcJpIQBdRjiG2w2JAZEq0CSGlSEAEBqWyZs5iQHiqb1Y7uUhA32/S
1MfjYkDYD0TPuNxIQI7e8fFF5mJA3H1YE3vgSEA8TREPxOhiQAQ780Iq5EhA
mCpQScDtYkCM4KGtUOtIQEaZb2Y+8GJArNiBisjuSED0B4+DvPJiQBidg5Yu
8khAUOXNvbj3YkAYgP1zxvhIQP5T7do2+mJAUEvo3vj7SECswgz4tPxiQAzW
3asa/0hAWjEsFTP/YkAczwklLAJJQEa43v23/2JABEzlt80CSUDWtdsQ
           "]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbRM1weYNS7LDDH4Hmbetng5ptV05a9kQfJE3Kzu1
ORH8Q1Enl63kRvBNLhzpnyWP4C9zPVDRbYzgdxls98qNRvBzpdfJ+Dcj+Cq1
/PbnbyL4d+4VJPobpMD5TP8X3zl7EcF/m3JEVa4gFc7f+eh09nPpNDjfZq/z
C709CP6C9YsS32emw/l7/hUK6vFkwPlzJ+v1261G8OMdLnGeCM+E8294Ptt1
/geCb5T9MCNgeRacH3jp5JNFQdlwvvo0penFnxD8e4VJbnvn58D5PquEdFod
c+H8Bo0N9+UeIPhT9plMMOzJg/MTNmqWH9LJh/PfPJI3S2xD8MtFxL7+v4/g
AwBWhMIX
           "]], LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAljVy3rO6WEAbUzsbExjwP5Qe304p
wFhAfBlav36B8D+SB0y/nsVYQK9eeOhS7fA/kPC4LxTLWED7EE2em1vxP4zC
khD/1VhAsbiQt7s/8j+Kq/+AdNtYQKtrIBSstfI/iJRs8engWEBQHF/wQi7z
P4RmRtLU61hAFZNdJpgn9D98CvqTqgFZQFVighxXPPY/evNmBCAHWUCmpqS9
8Mj2P3jc03SVDFlACOtr051Y9z90rq1VgBdZQB5k7ohsgfg/bFJhF1YtWUC1
rFN2fvr6P1uayJoBWVlAch3WhRhMAEBYgzULd15ZQN+4WfCergBAVmyie+xj
WUCDEcotLxMBQFI+fFzXbllAQwwFxpDiAUBK4i8erYRZQOgco9FXmwNASMuc
jiKKWUAyDFZ9Kw8EQEa0Cf+Xj1lAUDcJA1OFBEBChuPfgppZQKLQF6LEeAVA
OiqXoViwWUAutxpCSX0HQDgTBBLOtVlA11URE9IECEA2/HCCQ7tZQDcPKoj/
jghAMs5KYy7GWUB7mFHDcqsJQCpy/iQE3FlAPI2ZEekFDEB/gNJDT/dZQGWN
5099OQ9Af5a9Xw==
           "]]}, {}}, {{}, {}, {}, {}}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{
         RGBColor[0, 0, 1], 
         Opacity[0.6], 
         DiskBox[{125, 128}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{136.485, 244.8370797886796}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         DiskBox[{114.485, 21.03074497362084}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{114.485, 21.03074497362084}, {136.485, 
          244.8370797886796}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["125", TraditionalForm], {125, 128}, {0, 0}, Automatic, {
          22.000000000000014`, 223.80633481505876`}], 
         InsetBox[
          FormBox["\"10.2\"", TraditionalForm], {136.485, 
          244.8370797886796}, {0, 0}, Automatic, {22.000000000000014`, 
          223.80633481505876`}], 
         InsetBox[
          FormBox["\"10.2\"", TraditionalForm], {114.485, 
          21.03074497362084}, {0, 0}, Automatic, {22.000000000000014`, 
          223.80633481505876`}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{104, 4}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{114.94552672294397`, 14.945526722943974`}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         DiskBox[{92.94552672294397, -7.05447327705604}, {2.5500000000000003`,
           2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{92.94552672294397, -7.05447327705604}, {
          114.94552672294397`, 14.945526722943974`}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["104", TraditionalForm], {104, 4}, {0, 0}, Automatic, {22., 
          22.000000000000014`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {114.94552672294397`, 
          14.945526722943974`}, {0, 0}, Automatic, {22., 
          22.000000000000014`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {
          92.94552672294397, -7.05447327705604}, {0, 0}, Automatic, {22., 
          22.000000000000014`}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{147, 251}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{158.02447327705605`, 262.024473277056}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         DiskBox[{136.02447327705605`, 240.02447327705607`}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{136.02447327705605`, 240.02447327705607`}, {
          158.02447327705605`, 262.024473277056}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["147", TraditionalForm], {147, 251}, {0, 0}, Automatic, {
          22., 21.999999999999943`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {158.02447327705605`, 
          262.024473277056}, {0, 0}, Automatic, {22., 21.999999999999943`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {136.02447327705605`, 
          240.02447327705607`}, {0, 0}, Automatic, {22., 
          21.999999999999943`}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{99, 1}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["99", TraditionalForm], {99, 1}, {0, 0}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{152, 254}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["152", TraditionalForm], {152, 254}, {0, 0}]}, 
        InsetBox[
         BoxData[
          FormBox[
           PanelBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox["\[Null]", ShowStringCharacters -> False], 
                 TagBox["\"0-1\"", HoldForm], 
                 TagBox["\"0 - 255\"", HoldForm]}, {
                 TagBox["\"Mean\"", HoldForm], 
                 TemplateBox[{"\"\[Mu] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.4921\"", 0.4920980392156863, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"c = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"125.5\"", 125.485, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"Std\"", HoldForm], 
                 TemplateBox[{"\"\[Sigma] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.03922\"", 0.03921573612330558, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"s = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"10.\"", 10.000012711442924`, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"G\"", HoldForm], 
                 TemplateBox[{"\"\[Gamma] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"18.03\"", 18.0312, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"g = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.07071\"", 0.07071058823529411, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}}, RowSpacings -> 1, 
               ColumnSpacings -> 3, RowAlignments -> Baseline, 
               ColumnAlignments -> Left, ColumnLines -> {1, False}, 
               RowLines -> {1, False}, ColumnAlignments -> Left], {
              OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, 
               TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]],
             Background -> Opacity[0.5, 
              GrayLevel[1]]], TraditionalForm]], 
         Scaled[{0.05, 0.9}], 
         Scaled[{0, 1}]], 
        InsetBox[
         FormBox["\"Compact Distribution\"", TraditionalForm], {
         255, 51.04629853370642}, {1, 1}], 
        InsetBox[
         FormBox["\"Full Range Distribution\"", TraditionalForm], {
         255, 255.}, {1, 1}]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{{{0, 
           FormBox["0", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {192, 
           FormBox["192", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {256, 
           FormBox["256", TraditionalForm]}}, None}, {{{16, 
           FormBox[
            FractionBox["1", "16"], TraditionalForm]}, {24, 
           FormBox[
            FractionBox["3", "32"], TraditionalForm]}, {32, 
           FormBox[
            FractionBox["1", "8"], TraditionalForm]}, {40, 
           FormBox[
            FractionBox["5", "32"], TraditionalForm]}, {48, 
           FormBox[
            FractionBox["3", "16"], TraditionalForm]}, {56, 
           FormBox[
            FractionBox["7", "32"], TraditionalForm]}, {64, 
           FormBox[
            FractionBox["1", "4"], TraditionalForm]}, {72, 
           FormBox[
            FractionBox["9", "32"], TraditionalForm]}, {80, 
           FormBox[
            FractionBox["5", "16"], TraditionalForm]}, {88, 
           FormBox[
            FractionBox["11", "32"], TraditionalForm]}, {120, 
           FormBox[
            FractionBox["15", "32"], TraditionalForm]}, {128, 
           FormBox[
            FractionBox["1", "2"], TraditionalForm]}, {136, 
           FormBox[
            FractionBox["17", "32"], TraditionalForm]}, {168, 
           FormBox[
            FractionBox["21", "32"], TraditionalForm]}, {176, 
           FormBox[
            FractionBox["11", "16"], TraditionalForm]}, {184, 
           FormBox[
            FractionBox["23", "32"], TraditionalForm]}, {192, 
           FormBox[
            FractionBox["3", "4"], TraditionalForm]}, {200, 
           FormBox[
            FractionBox["25", "32"], TraditionalForm]}, {208, 
           FormBox[
            FractionBox["13", "16"], TraditionalForm]}, {216, 
           FormBox[
            FractionBox["27", "32"], TraditionalForm]}, {224, 
           FormBox[
            FractionBox["7", "8"], TraditionalForm]}, {232, 
           FormBox[
            FractionBox["29", "32"], TraditionalForm]}, {240, 
           FormBox[
            FractionBox["15", "16"], TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"0"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {98.89747630265327, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {101., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {103.94552672294397`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {147.02447327705605`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {150., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {152.07252369734672`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {255, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}, {{16, 
           FormBox["16", TraditionalForm]}, {24, 
           FormBox["24", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {40, 
           FormBox["40", TraditionalForm]}, {48, 
           FormBox["48", TraditionalForm]}, {56, 
           FormBox["56", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {72, 
           FormBox["72", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}, {88, 
           FormBox["88", TraditionalForm]}, {120, 
           FormBox["120", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {136, 
           FormBox["136", TraditionalForm]}, {168, 
           FormBox["168", TraditionalForm]}, {176, 
           FormBox["176", TraditionalForm]}, {184, 
           FormBox["184", TraditionalForm]}, {192, 
           FormBox["192", TraditionalForm]}, {200, 
           FormBox["200", TraditionalForm]}, {208, 
           FormBox["208", TraditionalForm]}, {216, 
           FormBox["216", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {232, 
           FormBox["232", TraditionalForm]}, {240, 
           FormBox["240", TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMin\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {98.89747630265327, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {101., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {103.94552672294397`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {147.02447327705605`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {150., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {152.07252369734672`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {255, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMax\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{973.296875, Automatic},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 255}, {0., 255.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{{{}, {}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0HlUzHsYBvAmlUY3V3tJOW2kUgktVPMQRWQykZCWqanJLN8WjORS4pK1
lVatCIdILqLtVqiotChpU0JcqShSmvvzx3ue8/nnOe95dNiExZGUkJDYRd3v
HDioqtDW3Grf/0H14Y0dFfaWHt+OVEsXMVa61I+v7clk0C0dX6dIVzH260dM
X39fwPiqT2YelW5hWHNoXu9+lDG46dFa4dJvGaEBhuPN8o0M3fYz+WHS3xhE
4zStxbyXYRCuo5S9fwbOjg47dtGGGeIxxaFgaSnMEsivzxINM4aOtsYSaWWE
Hvoe4SpLQ5hz/q3pTn0send5npGKEgYyPokNxaYwlTJxfuiijdbLNDVr0TLw
lsSIlbYaoNTOMSm3wwb9fhfT5NpN4Fss/0Sizx4d6ibzdN0sIDMpMxxvtBqV
hqJRa5oVhs1si/hta6BeojDfVcEWJ1pr1ez016Jpl+y+kgJb3GuzYDHcnRCe
sNydpAGSPdX9Y7OcMbHPmC2X7QCj7XOZl+I2Qik0vWLhNUcEftQbTZNjQn0z
+9mv1vVI/Oy/5mGXK0JjPu91P+gCv8zkqTxtFqoqfatSY1zxNTL1ZuQBNzSZ
qRvLJLAwe2jflLhhC+oadmT0XdmCZOVl9yJmu8M+xH6qNt8d/bvLeIOB21CY
PDRXv98DGQeMz7hd84CUZ5wzi7YTGsWc/IKZOyD/pismxm0X5h874F3gtRN9
NV6RsRneSKQHR1+/6Akuf8Ba0OOD2pKl2SkTuyB58hDdRooNYtxufNTOG5u4
ebF6Cn5gxhsvirHzwaMLftkTiv54uoBlUzPog05mVES0Lgc/1AYPHz/pi5DN
tpfqVQNA1wmsLLVmgy0TpWirHIge0tTypJ+Nr5y08u0SXAg0b85jRvvBLIKf
49vIRWd3sC/T3B9zy7/zxnKDICnO7Xz+wh9Se75Nvdq5G5/9qwy0gzm4f1e3
SW8GDzNnHnGhn+NgjnxmupkODw/66njvNQOwLs5hjvI1HmxLHD6YPgpAbfp1
BSdrPrIKcny/BAXCL6Xc7WclH4+mQxRM/+BiME5ScZONABkJpufsr3Nh/qth
X1yWAN5ooj/dFoR1Pi+hJSVE+/p3xQ0/gvA4VPGzvLsQFrw3XNcru9HhUJ/z
JFeIzU01b3NYPKjQWemNA0IsPK97IWyUhwltO5GSJkF3CNuxJJOP45cjf+Zs
JNh4TdHk2CoBMDpaJrOHINLwVo92rwBh21wef0okaF8RatTQJ4BHkJwsSSIw
d1m29/CAAJoDbZ9GKL8JuT+r96MAWX281PHzBKsfli/PHhOgT8U4ZTKZQHrT
i1N6ckK8eGri/C2d4GTYqJWhpRCHM+17s/MIEkuXxS45LcTXvVHtPwoJvOMb
m++cFeLqX196vO4QGAXw1SzjhDi9OCSrinKFfN7FFeeFoDM3uJwrIhjyVLrh
kCXExObUHTr/EDhNjtRsLRJiC0vEsX5A8NOqYMaBTiGWpJusW1pGUF+hvXry
jRBOZ2VKv1P2ub1I9K8JQWPbHJF/LcF/bB3BOTOCylvpHZWUw5U1/DwtCKZ+
Bo/o1hHEi2SZ41YEwj0PbHopV9q9X2DkQNAUtnTFtucEC2rzXsZtJ9BraTaw
aqT6+uZb+v5NwO+umyxrJdifqGZiGkMwUjh7oepLah/HP3UnTxEYGF+R41PW
vjotnxRHULwqiabWRsAkXQNPqd2G5x6/FNROUDiZmmRO7ZA2cmyc9prA/kb8
qV93CVyHZZ67Ua71OhlVe5+gVaXa+xLl/opwgX8p1dddUOzUSaB8wmNtcg1B
vpbthpgugiwb15WcZwSqqbmyrygv/uS0xKKB4OLSomjDbgLHTVZaz1oINEyP
3XlMuUlsqpRC/aWTkMlV6SHwur2AHtBBQLTUOv0of2Rriy2oHtU09dmFlEXK
qmNiKj2rG6d/5/91W6mn
           "]]}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idw/pN53x6rtT2D8+MXZq66wvYSzg9b5m9uwPEO
zle60buimPULnJ8Qebz7lOtXOH/eLYZ8xbZvcL7k3WLT82w/EebFrZVQc/8F
50+5/+x3TftvOF/gUeQhLY5/cL5f8uSljR7/4Xy3ojSXHBcGBxj/qRHztulP
EPyWz/PVD7cwwvnKW2xmvlNhgvMPldzkkjqK4BdbvbWRvITgAwCdAFHy
           "]], 
          LineBox[{{2.5152147511753173`, 1.0345456247948088`}, {
           5.005308402092153, 2.1290597615150597`}, {10.431630631011307`, 
           4.770668456732474}, {15.498359677802862`, 7.575909766136688}, {
           20.465699613478893`, 10.666168199059674`}, {25.85405858006356, 
           14.421963561138858`}, {30.88282436452062, 18.32473922802533}, {
           36.33260917988632, 23.004775194255455`}, {41.683004884136494`, 
           28.06762880499909}, {42.20180063302108, 28.58351434537029}}], 
          LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAt9cyUj9WR0DhJDaIGYdAQALfxeP1
CkpALCzJGdA7Q0AqWRpPpZFMQFSmHYV/wkVAZ+oj8psLT0CRNycodjxIQJTt
ZES73VBAUijNvlDsSkBjn5j8pB5SQPCLNC8kbk1A84CaroB6U0CIJ5zJ7RJQ
QA7udvz/z1RAo5R4F21oUUCYFDS3ew5WQC27NdLoplJA42q/a+lnV0B4EcGG
VgBUQJ16K41TqlhAMiEtqMBCVUAZumWorwdaQK5gZ8McoFZAH4V6X69eW0C0
K3x6HPdXQJQJcIOrnlxAKbBxnhg3WUDKvTOhmfldQF9kNbwGklpAbyvYK4Q9
X0AE0tlG8dVbQE+SKymJPWBAM8tYbX8TXUDIJlI5yelgQCX0pY3/a15A+Bfp
f4eKYUCF1tMafK1fQAkhZ8O+OGJAVPTnUPWEYEDfb9LUx+NiQCpDU2L+L2FA
bRuuHE+DY0C47i6qhc9hQNzecGFPMGRAJrLx7oV8YkAC/6PczdFkQEzSJGoE
HmNA7WTEJR5wZUA4OEWzVLxjQAw2KS5vjGVAVgmqu6XYY0Amzrix
           "]], 
          LineBox[CompressedData["
1:eJxtzn0s1HEABnDV9OKSYq22Fr0ZnZdoxXUlD7aQyEvWmHBe7r7X3e/r5UKr
k/JShrxEnF6Q3pZqZ+tmXo7C2qQJl9at8pouTuR1mVr16//+ePbs88+zZ3tU
XGDscgMDAxs2/7ph5LXk6xYhlPKSOcPoGBxq9hizVwvhmP1rnjcTgyplteC7
WITOzA3O3+SxUP9O2GC/lsA/NWjBdTYWt4vtCw4/Jigb2xaaESJEBDRrOk6K
ofSx2mXSLITWW9fYvSiGXXh0z591IuyVDBP/h6fhtsfickOYCAGaV6PVgRLI
56vT2ipEsCrdUSablSDSKD/UsE+EgYSoI82VUkwV9faXGBIcqzG1zXJj8LDf
4+6iLcFF69pB8yEGH9wrHvX7Emj5idzuEQbPT4RNRPoROPjuS0r7wiC9x7r7
M+vhhHqjIT2DVW/UqWPHCdybXuy/s8DAe5lcPhlAYOjXm7uTQ8FTpdrpggly
ZLPO1k4UupyC9uJTBCNZqnQtj4JjfLOGE07AVyR3ZR+k2Jq3kZ/BekK9FDUO
ig7GIighgv27ckV+jQ/Fj9qlRG8BgUm52aitgEKoOHB9PIagpGVfoWMeRahA
06SXEERc63n7LJ9ivRjt/lICrlC6yamIYm5zW0Yd61bjexX8Uop4/i2HSwzB
VJjZU48qikiXCRezOALPnzOvglUUTS4dXtxEAtPuq8baOopOA8VcLuuB6t0B
oQ0U9p2jIZOszxwVaMNbKLxX5YcoZQRV5T06UQdFo9xrt0MSgYSRcvWd7L45
V1XA2sltNZV2Uby7X/9zinXXmOtCvIYiI1LW+iSZQKH+yJvro8ic1rtyUghi
ClPkSe8phi0enBezXnJWrjj3iUJxJdXG8izBS46P568BimnVaGU668JBXc6F
YYobEkvN4H/8FzvKRRM=
           "]], 
          LineBox[{{247.12509847190347`, 196.7795273380718}, {
           247.20349985086906`, 196.7795273380718}, {247.36030260880028`, 
           196.7795273380718}, {247.51710536673147`, 196.7795273380718}, {
           247.83071088259385`, 196.7795273380718}, {248.14431639845625`, 
           196.7795273380718}, {248.77152743018104`, 196.7795273380718}, {
           249.39873846190585`, 196.7795273380718}, {252.19936662891212`, 
           196.7795273380718}, {254.99999479591835`, 
           196.7795273380718}}]}, {}}, {{}, {}, {}, {}}}, 
       {Opacity[0.15], {
         {RGBColor[1, 0, 0], Opacity[0.6], 
          RectangleBox[{0, 0}, {2.433900975665113, 255}]}, 
         {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
          InsetBox["\<\"Disgard\"\>", \
{1.2169504878325565`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 1, 0], Opacity[0.6], 
          RectangleBox[{2.433900975665113, 0}, {30., 255}]}, 
         {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
          
          InsetBox["\<\"Redistribute\"\>", \
{16.216950487832555`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{30., 0}, {42.28311440853128, 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{36.14155720426564, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 0, 1], Opacity[0.6], 
          RectangleBox[{42.28311440853128, 0}, {172.46988559146868`, 255}]}, 
         {RGBColor[0., 0., 0.19999999999999996`], Opacity[0.6], 
          InsetBox["\<\"Keep\"\>", {107.37649999999998`, 66.30000000000001}, {0, -0.6},
            Automatic, {0, 1}]}}, {
         {RGBColor[0.25, 0.75, 1], Opacity[0.6], 
          RectangleBox[{172.46988559146868`, 0}, {184., 255}]}, 
         {RGBColor[
          0.04999999999999999, 0.1499999999999999, 0.19999999999999996`], 
          Opacity[0.6], 
          InsetBox["\<\"Extended Keep\"\>", \
{178.23494279573436`, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[0, 1, 0], Opacity[0.6], 
          RectangleBox[{184., 0}, {247.0619211769794, 255}]}, 
         {RGBColor[0., 0.19999999999999996`, 0.], Opacity[0.6], 
          InsetBox["\<\"Redistribute\"\>", \
{215.5309605884897, 66.30000000000001}, {0, -0.6}, Automatic, {0, 1}]}}, {
         {RGBColor[1, 0, 0], Opacity[0.6], 
          RectangleBox[{247.0619211769794, 0}, {255, 255}]}, 
         {RGBColor[0.19999999999999996`, 0., 0.], Opacity[0.6], 
          InsetBox["\<\"Disgard\"\>", {251.0309605884897, 66.30000000000001}, \
{0, -0.6}, Automatic, {0, 1}]}}}, {{{}, {}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0HlUzHsYBvAmlUY3V3tJOW2kUgktVPMQRWQykZCWqanJLN8WjORS4pK1
lVatCIdILqLtVqiotChpU0JcqShSmvvzx3ue8/nnOe95dNiExZGUkJDYRd3v
HDioqtDW3Grf/0H14Y0dFfaWHt+OVEsXMVa61I+v7clk0C0dX6dIVzH260dM
X39fwPiqT2YelW5hWHNoXu9+lDG46dFa4dJvGaEBhuPN8o0M3fYz+WHS3xhE
4zStxbyXYRCuo5S9fwbOjg47dtGGGeIxxaFgaSnMEsivzxINM4aOtsYSaWWE
Hvoe4SpLQ5hz/q3pTn0send5npGKEgYyPokNxaYwlTJxfuiijdbLNDVr0TLw
lsSIlbYaoNTOMSm3wwb9fhfT5NpN4Fss/0Sizx4d6ibzdN0sIDMpMxxvtBqV
hqJRa5oVhs1si/hta6BeojDfVcEWJ1pr1ez016Jpl+y+kgJb3GuzYDHcnRCe
sNydpAGSPdX9Y7OcMbHPmC2X7QCj7XOZl+I2Qik0vWLhNUcEftQbTZNjQn0z
+9mv1vVI/Oy/5mGXK0JjPu91P+gCv8zkqTxtFqoqfatSY1zxNTL1ZuQBNzSZ
qRvLJLAwe2jflLhhC+oadmT0XdmCZOVl9yJmu8M+xH6qNt8d/bvLeIOB21CY
PDRXv98DGQeMz7hd84CUZ5wzi7YTGsWc/IKZOyD/pismxm0X5h874F3gtRN9
NV6RsRneSKQHR1+/6Akuf8Ba0OOD2pKl2SkTuyB58hDdRooNYtxufNTOG5u4
ebF6Cn5gxhsvirHzwaMLftkTiv54uoBlUzPog05mVES0Lgc/1AYPHz/pi5DN
tpfqVQNA1wmsLLVmgy0TpWirHIge0tTypJ+Nr5y08u0SXAg0b85jRvvBLIKf
49vIRWd3sC/T3B9zy7/zxnKDICnO7Xz+wh9Se75Nvdq5G5/9qwy0gzm4f1e3
SW8GDzNnHnGhn+NgjnxmupkODw/66njvNQOwLs5hjvI1HmxLHD6YPgpAbfp1
BSdrPrIKcny/BAXCL6Xc7WclH4+mQxRM/+BiME5ScZONABkJpufsr3Nh/qth
X1yWAN5ooj/dFoR1Pi+hJSVE+/p3xQ0/gvA4VPGzvLsQFrw3XNcru9HhUJ/z
JFeIzU01b3NYPKjQWemNA0IsPK97IWyUhwltO5GSJkF3CNuxJJOP45cjf+Zs
JNh4TdHk2CoBMDpaJrOHINLwVo92rwBh21wef0okaF8RatTQJ4BHkJwsSSIw
d1m29/CAAJoDbZ9GKL8JuT+r96MAWX281PHzBKsfli/PHhOgT8U4ZTKZQHrT
i1N6ckK8eGri/C2d4GTYqJWhpRCHM+17s/MIEkuXxS45LcTXvVHtPwoJvOMb
m++cFeLqX196vO4QGAXw1SzjhDi9OCSrinKFfN7FFeeFoDM3uJwrIhjyVLrh
kCXExObUHTr/EDhNjtRsLRJiC0vEsX5A8NOqYMaBTiGWpJusW1pGUF+hvXry
jRBOZ2VKv1P2ub1I9K8JQWPbHJF/LcF/bB3BOTOCylvpHZWUw5U1/DwtCKZ+
Bo/o1hHEi2SZ41YEwj0PbHopV9q9X2DkQNAUtnTFtucEC2rzXsZtJ9BraTaw
aqT6+uZb+v5NwO+umyxrJdifqGZiGkMwUjh7oepLah/HP3UnTxEYGF+R41PW
vjotnxRHULwqiabWRsAkXQNPqd2G5x6/FNROUDiZmmRO7ZA2cmyc9prA/kb8
qV93CVyHZZ67Ua71OhlVe5+gVaXa+xLl/opwgX8p1dddUOzUSaB8wmNtcg1B
vpbthpgugiwb15WcZwSqqbmyrygv/uS0xKKB4OLSomjDbgLHTVZaz1oINEyP
3XlMuUlsqpRC/aWTkMlV6SHwur2AHtBBQLTUOv0of2Rriy2oHtU09dmFlEXK
qmNiKj2rG6d/5/91W6mn
           "]]}, 
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/bRGTPD65at2DFBgFvGl6SjrFnsYn9PM7fZM1iNw
/meVfPYW1itwfsacZtlK1idw/pN53x6rtT2D8+MXZq66wvYSzg9b5m9uwPEO
zle60buimPULnJ8Qebz7lOtXOH/eLYZ8xbZvcL7k3WLT82w/EebFrZVQc/8F
50+5/+x3TftvOF/gUeQhLY5/cL5f8uSljR7/4Xy3ojSXHBcGBxj/qRHztulP
EPyWz/PVD7cwwvnKW2xmvlNhgvMPldzkkjqK4BdbvbWRvITgAwCdAFHy
           "]], 
          LineBox[{{2.5152147511753173`, 1.0345456247948088`}, {
           5.005308402092153, 2.1290597615150597`}, {10.431630631011307`, 
           4.770668456732474}, {15.498359677802862`, 7.575909766136688}, {
           20.465699613478893`, 10.666168199059674`}, {25.85405858006356, 
           14.421963561138858`}, {30.88282436452062, 18.32473922802533}, {
           36.33260917988632, 23.004775194255455`}, {41.683004884136494`, 
           28.06762880499909}, {42.20180063302108, 28.58351434537029}}], 
          LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAt9cyUj9WR0DhJDaIGYdAQALfxeP1
CkpALCzJGdA7Q0AqWRpPpZFMQFSmHYV/wkVAZ+oj8psLT0CRNycodjxIQJTt
ZES73VBAUijNvlDsSkBjn5j8pB5SQPCLNC8kbk1A84CaroB6U0CIJ5zJ7RJQ
QA7udvz/z1RAo5R4F21oUUCYFDS3ew5WQC27NdLoplJA42q/a+lnV0B4EcGG
VgBUQJ16K41TqlhAMiEtqMBCVUAZumWorwdaQK5gZ8McoFZAH4V6X69eW0C0
K3x6HPdXQJQJcIOrnlxAKbBxnhg3WUDKvTOhmfldQF9kNbwGklpAbyvYK4Q9
X0AE0tlG8dVbQE+SKymJPWBAM8tYbX8TXUDIJlI5yelgQCX0pY3/a15A+Bfp
f4eKYUCF1tMafK1fQAkhZ8O+OGJAVPTnUPWEYEDfb9LUx+NiQCpDU2L+L2FA
bRuuHE+DY0C47i6qhc9hQNzecGFPMGRAJrLx7oV8YkAC/6PczdFkQEzSJGoE
HmNA7WTEJR5wZUA4OEWzVLxjQAw2KS5vjGVAVgmqu6XYY0Amzrix
           "]], 
          LineBox[CompressedData["
1:eJxtzn0s1HEABnDV9OKSYq22Fr0ZnZdoxXUlD7aQyEvWmHBe7r7X3e/r5UKr
k/JShrxEnF6Q3pZqZ+tmXo7C2qQJl9at8pouTuR1mVr16//+ePbs88+zZ3tU
XGDscgMDAxs2/7ph5LXk6xYhlPKSOcPoGBxq9hizVwvhmP1rnjcTgyplteC7
WITOzA3O3+SxUP9O2GC/lsA/NWjBdTYWt4vtCw4/Jigb2xaaESJEBDRrOk6K
ofSx2mXSLITWW9fYvSiGXXh0z591IuyVDBP/h6fhtsfickOYCAGaV6PVgRLI
56vT2ipEsCrdUSablSDSKD/UsE+EgYSoI82VUkwV9faXGBIcqzG1zXJj8LDf
4+6iLcFF69pB8yEGH9wrHvX7Emj5idzuEQbPT4RNRPoROPjuS0r7wiC9x7r7
M+vhhHqjIT2DVW/UqWPHCdybXuy/s8DAe5lcPhlAYOjXm7uTQ8FTpdrpggly
ZLPO1k4UupyC9uJTBCNZqnQtj4JjfLOGE07AVyR3ZR+k2Jq3kZ/BekK9FDUO
ig7GIighgv27ckV+jQ/Fj9qlRG8BgUm52aitgEKoOHB9PIagpGVfoWMeRahA
06SXEERc63n7LJ9ivRjt/lICrlC6yamIYm5zW0Yd61bjexX8Uop4/i2HSwzB
VJjZU48qikiXCRezOALPnzOvglUUTS4dXtxEAtPuq8baOopOA8VcLuuB6t0B
oQ0U9p2jIZOszxwVaMNbKLxX5YcoZQRV5T06UQdFo9xrt0MSgYSRcvWd7L45
V1XA2sltNZV2Uby7X/9zinXXmOtCvIYiI1LW+iSZQKH+yJvro8ic1rtyUghi
ClPkSe8phi0enBezXnJWrjj3iUJxJdXG8izBS46P568BimnVaGU668JBXc6F
YYobEkvN4H/8FzvKRRM=
           "]], 
          LineBox[{{247.12509847190347`, 196.7795273380718}, {
           247.20349985086906`, 196.7795273380718}, {247.36030260880028`, 
           196.7795273380718}, {247.51710536673147`, 196.7795273380718}, {
           247.83071088259385`, 196.7795273380718}, {248.14431639845625`, 
           196.7795273380718}, {248.77152743018104`, 196.7795273380718}, {
           249.39873846190585`, 196.7795273380718}, {252.19936662891212`, 
           196.7795273380718}, {254.99999479591835`, 
           196.7795273380718}}]}, {}}, {{}, {}, {}, {}}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{
         RGBColor[0, 0, 1], 
         Opacity[0.6], 
         DiskBox[{107, 123}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{118.3765, 142.4439042041949}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         DiskBox[{96.3765, 104.84306980940845`}, {2.5500000000000003`, 
          2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{96.3765, 104.84306980940845`}, {118.3765, 
          142.4439042041949}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["107", TraditionalForm], {107, 123}, {0, 0}, Automatic, {
          22., 37.600834394786446`}], 
         InsetBox[
          FormBox["\"1.71\"", TraditionalForm], {118.3765, 
          142.4439042041949}, {0, 0}, Automatic, {22., 37.600834394786446`}], 
         
         InsetBox[
          FormBox["\"1.71\"", TraditionalForm], {96.3765, 
          104.84306980940845`}, {0, 0}, Automatic, {22., 
          37.600834394786446`}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{42, 29}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{53.28311440853128, 40.283114408531276`}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         DiskBox[{31.283114408531283`, 18.28311440853129}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{31.283114408531283`, 18.28311440853129}, {
          53.28311440853128, 40.283114408531276`}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["42", TraditionalForm], {42, 29}, {0, 0}, Automatic, {22., 
          21.999999999999986`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {53.28311440853128, 
          40.283114408531276`}, {0, 0}, Automatic, {22., 
          21.999999999999986`}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {31.283114408531283`, 
          18.28311440853129}, {0, 0}, Automatic, {22., 
          21.999999999999986`}]}, {
         RGBColor[0, 1, 0], 
         Opacity[0.6], 
         DiskBox[{172, 217}, {5.1000000000000005`, 5.1000000000000005`}], 
         DiskBox[{183.46988559146868`, 228.46988559146868`}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         DiskBox[{161.46988559146868`, 206.46988559146868`}, {
          2.5500000000000003`, 2.5500000000000003`}], 
         Thickness[Large], 
         LineBox[{{161.46988559146868`, 206.46988559146868`}, {
          183.46988559146868`, 228.46988559146868`}}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["172", TraditionalForm], {172, 217}, {0, 0}, Automatic, {
          22., 22.}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {183.46988559146868`, 
          228.46988559146868`}, {0, 0}, Automatic, {22., 22.}], 
         InsetBox[
          FormBox["\"1.\"", TraditionalForm], {161.46988559146868`, 
          206.46988559146868`}, {0, 0}, Automatic, {22., 22.}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{2, 1}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["2", TraditionalForm], {2, 1}, {0, 0}]}, {
         RGBColor[1, 0, 0], 
         Opacity[0.6], 
         DiskBox[{247, 254}, {5.1000000000000005`, 5.1000000000000005`}], 
         GrayLevel[0], 
         Opacity[1], 
         InsetBox[
          FormBox["247", TraditionalForm], {247, 254}, {0, 0}]}, 
        InsetBox[
         BoxData[
          FormBox[
           PanelBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox["\[Null]", ShowStringCharacters -> False], 
                 TagBox["\"0-1\"", HoldForm], 
                 TagBox["\"0 - 255\"", HoldForm]}, {
                 TagBox["\"Mean\"", HoldForm], 
                 TemplateBox[{"\"\[Mu] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.4211\"", 0.42108431372549016`, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"c = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"107.4\"", 107.3765, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"Std\"", HoldForm], 
                 TemplateBox[{"\"\[Sigma] = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.2466\"", 0.2465504815852676, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"s = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"62.87\"", 62.87037280424324, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}, "RowDefault"]}, {
                 TagBox["\"G\"", HoldForm], 
                 TemplateBox[{"\"\[Gamma] = \"", 
                   TagBox[
                    InterpretationBox["\"2.868\"", 2.868, AutoDelete -> True],
                     NumberForm[#, 4]& ]}, "RowDefault"], 
                 TemplateBox[{"\"g = \"", 
                   TagBox[
                    InterpretationBox[
                    "\"0.01125\"", 0.011247058823529412`, AutoDelete -> True],
                     NumberForm[#, 4]& ]}, "RowDefault"]}}, RowSpacings -> 1, 
               ColumnSpacings -> 3, RowAlignments -> Baseline, 
               ColumnAlignments -> Left, ColumnLines -> {1, False}, 
               RowLines -> {1, False}, ColumnAlignments -> Left], {
              OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, 
               TableHeadings -> {{"Mean", "Std", "G"}, {"0-1", "0 - 255"}}]]],
             Background -> Opacity[0.5, 
              GrayLevel[1]]], TraditionalForm]], 
         Scaled[{0.05, 0.9}], 
         Scaled[{0, 1}]], 
        InsetBox[
         FormBox["\"Compact Distribution\"", TraditionalForm], {
         255, 196.7795273380718}, {1, 1}], 
        InsetBox[
         FormBox["\"Full Range Distribution\"", TraditionalForm], {
         255, 255.}, {1, 1}]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{{{0, 
           FormBox["0", TraditionalForm]}, {32, 
           FormBox["32", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {192, 
           FormBox["192", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {256, 
           FormBox["256", TraditionalForm]}}, None}, {{{16, 
           FormBox[
            FractionBox["1", "16"], TraditionalForm]}, {56, 
           FormBox[
            FractionBox["7", "32"], TraditionalForm]}, {64, 
           FormBox[
            FractionBox["1", "4"], TraditionalForm]}, {72, 
           FormBox[
            FractionBox["9", "32"], TraditionalForm]}, {80, 
           FormBox[
            FractionBox["5", "16"], TraditionalForm]}, {88, 
           FormBox[
            FractionBox["11", "32"], TraditionalForm]}, {96, 
           FormBox[
            FractionBox["3", "8"], TraditionalForm]}, {104, 
           FormBox[
            FractionBox["13", "32"], TraditionalForm]}, {112, 
           FormBox[
            FractionBox["7", "16"], TraditionalForm]}, {120, 
           FormBox[
            FractionBox["15", "32"], TraditionalForm]}, {128, 
           FormBox[
            FractionBox["1", "2"], TraditionalForm]}, {136, 
           FormBox[
            FractionBox["17", "32"], TraditionalForm]}, {144, 
           FormBox[
            FractionBox["9", "16"], TraditionalForm]}, {152, 
           FormBox[
            FractionBox["19", "32"], TraditionalForm]}, {160, 
           FormBox[
            FractionBox["5", "8"], TraditionalForm]}, {200, 
           FormBox[
            FractionBox["25", "32"], TraditionalForm]}, {208, 
           FormBox[
            FractionBox["13", "16"], TraditionalForm]}, {216, 
           FormBox[
            FractionBox["27", "32"], TraditionalForm]}, {224, 
           FormBox[
            FractionBox["7", "8"], TraditionalForm]}, {232, 
           FormBox[
            FractionBox["29", "32"], TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"0"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {2.433900975665113, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {30., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {42.28311440853128, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {172.46988559146868`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {184., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Omega]p\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {247.0619211769794, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {255, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"1"}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}, {{16, 
           FormBox["16", TraditionalForm]}, {56, 
           FormBox["56", TraditionalForm]}, {64, 
           FormBox["64", TraditionalForm]}, {72, 
           FormBox["72", TraditionalForm]}, {80, 
           FormBox["80", TraditionalForm]}, {88, 
           FormBox["88", TraditionalForm]}, {96, 
           FormBox["96", TraditionalForm]}, {104, 
           FormBox["104", TraditionalForm]}, {112, 
           FormBox["112", TraditionalForm]}, {120, 
           FormBox["120", TraditionalForm]}, {128, 
           FormBox["128", TraditionalForm]}, {136, 
           FormBox["136", TraditionalForm]}, {144, 
           FormBox["144", TraditionalForm]}, {152, 
           FormBox["152", TraditionalForm]}, {160, 
           FormBox["160", TraditionalForm]}, {200, 
           FormBox["200", TraditionalForm]}, {208, 
           FormBox["208", TraditionalForm]}, {216, 
           FormBox["216", TraditionalForm]}, {224, 
           FormBox["224", TraditionalForm]}, {232, 
           FormBox["232", TraditionalForm]}, {0, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMin\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {2.433900975665113, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {30., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {42.28311440853128, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(1\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {172.46988559146868`, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {184., 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]p\\), \
\\(2\\)]\\)\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {247.0619211769794, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}, {255, 
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"tMax\""}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], Bold, Background -> None, StripOnInput -> False], 
            TraditionalForm], {0.03, 0.01}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{824.08984375, Automatic},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 255}, {0., 254.99999943519185`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.630842003153048*^9, 3.630868887664226*^9, 
  3.630913437344021*^9, 3.6309142850369587`*^9, 3.630914526890696*^9, 
  3.630928306515812*^9, 3.630930029907507*^9, 3.630935692845887*^9, 
  3.630937873788053*^9, 3.630942946606226*^9, 3.630943065418427*^9, 
  3.630943261723576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Grid", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"matLab", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<func\>\"", "]"}], "[",
             "x", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"matLab", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<piecewise\>\"", "]"}],
             "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{
           RowBox[{"matLab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<color\>\"", "]"}]}], 
         ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"matLab", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<piecewise\>\"", "]"}],
             "[", "x", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255", ",", "1"}], "}"}], ",", 
         RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{
           RowBox[{"matLab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<color\>\"", "]"}]}], 
         ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6209769220440598`*^9, 3.620977067580606*^9}, {
   3.620977279428355*^9, 3.620977286035507*^9}, {3.620977405498827*^9, 
   3.6209774336274014`*^9}, {3.620977489953998*^9, 3.620977493660685*^9}, {
   3.620989953741151*^9, 3.620989991124475*^9}, {3.620990041256529*^9, 
   3.620990043766062*^9}, 3.620990981096134*^9, {3.620991019069866*^9, 
   3.620991037597271*^9}, {3.620994069483473*^9, 3.620994069912262*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+PGvelFE9UtJfr1fn9/X/RTkm/45/5b4D/HiBE8=
       "], {{{}, {}, 
         {Hue[0.67, 0.6, 0.6], 
          LineBox[{1, 71, 65, 60, 56, 176, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10,
            11, 166, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 
           26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 167, 40, 
           41, 42, 43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67,
            62, 58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50},
           VertexColors->Automatic]}, 
         {Hue[0.9060679774997897, 0.6, 0.6], 
          LineBox[{78, 151, 143, 137, 156, 148, 133, 155, 147, 160, 141, 158},
           
           VertexColors->Automatic], 
          LineBox[{150, 162, 130, 128, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,
            168},
           VertexColors->Automatic], 
          LineBox[{89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
           103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
           116, 169},
           VertexColors->Automatic], 
          LineBox[{117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 152, 144,
            138, 134, 131, 129, 153, 145, 139, 135, 132, 154, 146, 159, 140, 
           163},
           VertexColors->Automatic], LineBox[{157, 149, 161, 136, 142, 127},
           VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
       VertexColors->CompressedData["
1:eJxTTMoPSmViYGDYAsTMDDDwwZ4BL8AlP1zFB9r+UfFRcXzig8UdtBYfbPmT
Wu6hdXk02MrB4eqewZY+B1p8oO0fFR8Vxyc+WNxBa/HBlj+HSr1JLXuHunuG
ivup5S9ap09y5QdbOxFdntrpBJc8+eEMAJkV128=
        "]],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImageSize->300,
      Method->{},
      PlotRange->{{0, 255}, {0., 254.9999949836367}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{1.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{2.5, 0}, {3.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{3.5, 0}, {4.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 8.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 10.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 12.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 14.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 15.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 17.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 18.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 19.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 21.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 22.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 23.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 24.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 25.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 26.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 27.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 28.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 29.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 30.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 31.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 32.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 33.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 34.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 35.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 36.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 37.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 38.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 39.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 40.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 41.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 42.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 43.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 44.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 45.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 46.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 47.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 48.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 49.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 50.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 51.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 52.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 53.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 54.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 55.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 56.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 57.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 58.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 59.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 60.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 61.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 62.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 63.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 64.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 65.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 66.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 67.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 68.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 69.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 70.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 71.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 72.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 73.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 74.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 75.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 76.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 77.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 78.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 79.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 80.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 81.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 82.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 83.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 84.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 85.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 86.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 87.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 88.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 89.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 90.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 91.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 92.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 93.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 94.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 95.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 96.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 97.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{98.5, 0}, {99.5, 98.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{99.5, 0}, {100.5, 99.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{100.5, 0}, {101.5, 100.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 101.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 102.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 103.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 104.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 105.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 106.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 107.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 108.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 109.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 110.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 111.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 112.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 113.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 114.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 115.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 116.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 117.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 118.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 119.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 120.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 121.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 122.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 123.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 124.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 125.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 126.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 127.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 128.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 129.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 130.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 131.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 132.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 133.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 134.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 135.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 136.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 137.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 138.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 139.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 140.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 141.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 142.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 143.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 144.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 145.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 146.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 147.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 148.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 149.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 150.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 151.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 152.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 153.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 154.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 155.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 156.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 157.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 158.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 159.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 160.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 161.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 162.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 163.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 164.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 165.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 166.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 167.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 168.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 169.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 170.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 171.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 172.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 173.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 174.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 175.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 176.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 177.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 178.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 179.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 180.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 181.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 182.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 183.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 184.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 185.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 186.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 187.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 188.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 189.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 190.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 191.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 192.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 193.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 194.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 195.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 196.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 197.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 198.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 199.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 200.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 201.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 202.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 203.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 204.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 205.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 206.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 207.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 208.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 209.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 210.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 211.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 212.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 213.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 214.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 215.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 216.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 217.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 217.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 218.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 219.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 220.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 221.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 222.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 223.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 224.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 225.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 226.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 227.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 228.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 229.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 230.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 231.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 232.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 233.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 234.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 235.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 236.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 237.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 238.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 239.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 240.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 241.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 242.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 243.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 244.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 245.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 246.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 247.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 248.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 249.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 250.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 251.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 253.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 253.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyFz8cNJkUQhuHCHDhwGCGEEEKo8R4G79nCexgW7xuzeNgJoUKYEDqEyYAO
4Q+hQ5gjR5D2RQipPvaTSq+eY934zfmz5y6zv3eJ2aV24S5s/GH/2Tjz//5T
+KCXe26jVwpfQa8Snug1wlfT64SvpTcIX09vFC70ZuGb6K3Ct9DbhW+jdwrf
Qe8WvoveK3wPvV/4vguNWZjGA8I0HhSm8ZAwjYeFaTwiTONRYRqPCdN4XJjG
E8I0nhSm8ZQwjaeFaTwjTONZYRpnhKm7MO3CQf253Ea7cFB/PrfRLhzUX8ht
tAsH9RdzG+3CQf2l3Ea7cFB/ObfRLhzUX8lttAsH9VdzG+3CQf213Ea7cFB/
PbfRLhzU38httAsH9TdzG+3CQf2t3Ea7cFB/O7fRLhzU38lttAsHLUtuo1XY
aRMOOoQ7Le/mNlqFnTbhoEO403I2t9Eq7LQJBx3CnZb3chutwk6bcNAh3Gl5
P7fRKuy0CQcdwp2WD3IbrcJOm3DQIdxp+TC30SrstAkHHcKdlo9yG63CTptw
0CHcafk4t9Eq7LQJBx3CnZZPchutwk6bcNAh3Gn5NLfRKuy0CQcdwp2Wz3Ib
rcJOm3DQIdxp+Ty30SrstAkHHcKdli9yG63CTptw0CHcafkyt9Eq7LQJBx3C
nZavchutwk6bcNAh3OlUcxudhQtdhJ2uwpVuwkF34UZPwp0ewoNOX+c2OgsX
ugg7XYUr3YSD7sKNnoQ7PYQHnb7JbXQWLnQRdroKV7oJB92FGz0Jd3oIDzp9
m9voLFzoIux0Fa50Ew66Czd6Eu70EB50+i630Vm40EXY6Spc6SYcdBdu9CTc
6SE86HQut9FZuNBF2OkqXOkmHHQXbvQk3OkhPOj0fW6js3Chi7DTVbjSTTjo
LtzoSbjTQ3jQ6YfcRmfhQhdhp6twpZtw0F240ZNwp4fwoNOPuY3OwoUuwk5X
4Uo34aC7cKMn4U4P4UGnn3IbnYULXYSdrsKVbsJBd+FGT8KdHsKDTj/nNjoL
F7oIO12FK92Eg+7CjZ6EOz2EB51+yW10Fi50uYhXYaebcKW7cNCTcKOHcKfT
r7nHP/8KG12EC12FnW7Cle7CQU/CjR7CnU6/5R54Fja6CBe6CjvdhCvdhYOe
hBs9hDudfs898CxsdBEudBV2uglXugsHPQk3egh3Op3PPfAsbHQRLnQVdroJ
V7oLN3q6iI9//ReGNwGC
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImageSize->300,
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->NCache[{{
          Rational[-1, 2], 
          Rational[511, 2]}, {0, 253.}}, {{-0.5, 255.5}, {0, 253.}}],
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}]},
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
sDSLv2Ydz4kWLhG9kpXK1M8hq+WmqHzvm4jUDEI/pKlQ0TR0lZfy+6Bewt86
824pfELr+zdNFKP4eYpqd8clrMFuOClsNEok+AFi+1KuOmKedwRDy1vMoShV
vuEibzy2cas95awwFX5avtogR9znjmUpLC6mQtPaWJNK4n7PvsG5z4wGH9tO
exP9t51SU5fjFA2U7mecYOrnrV1hRhodfCXCmP332GqpgJGuGX/y9EZO7H98
fm8sS1+feRsRarlUkJswK37eEZRGX9108DQ7z/Qng+IPDHTqaeSz/lXM+fu6
7Iv30DPtVrl7aET8dD3oKfIXtX1Z3Xrhwly/nfjqzSNjZGZ+0ZCOrBI2MMp9
ybJvCucE4n7+aAPdmCk/1UwBfTRVzPh9mj8zXjvKOiaiTw7/WSEdx7KvinUn
kSZkgc/kJtb3t2/uRvryjNd+KWK+r8uxeVvQ8AAsKms1cz470Zwair7NrFNb
yyDed53oxpBa9PDbG6F71GfiaZ8lQpG/ST/SP/N+T0uQ/T0xG819WPp1COVH
h8IK/Lu/Md/PwmWdDVpabL/5Uj3z+WKqK3LQ3lO/U67dpsPKn9XM+WJhx2S6
/a+5/vogr9iPu37s/V0npH/g1Y+nqnP+v7SsftvSl6zzmaTEI3Wf+3YtTZzL
dzwj5ReDmmf+f88u5OOy3A9wlPW+RVvykPfF4ZVG9TP6dPJEArye6WaEz+3D
BLpsX5K3fuZ+wOQyYr2/I+Vb99z8+5qAo0vQ4Zl97kURyDn/298s1sy871cz
ZNcj0ZstzTP233QHuVnYsPyO7dx8MUBj4/Rm45l5yPcQRCjmvnzSOHu+7IOA
chXjdD77vNqIvcZ1MR1Ddj1pjfx/zV/FP/+Tv0p8/id/lfj8D/4q8zPHX2V9
5virrM8sf3XmM8tfnfmw+atszOavsjGbv8rGbP5q3JVwZHHGHH+14vbDDs5F
MrP81cgXOtyfeRRm+atFoc6TskMqs/zVkENecq+n1Wf5q8uUm2qWjCKz/NX/
NNvWLczfMctfXbXnuxbHJp1Z/mpPZpXp+96ds/zVDU/Gukra9Wf5qxcEYMW3
47tm+atszOavsjGbv8rGbP4qG7P5q2zM5q+yMZu/Ovv8Gf4qG7P5q2zM5q+y
MZu/ysZs/iobs/mrbMzmr7Ixm7/Kxmz+Khuz+atszOavsjGbv8rG//JX2fxQ
Nv6/+KFxC0InF1kvn+Vvzp94V+t5SneWv5mg9PokskZ/lr/J/j02f5ON2XzI
2fP8w4dk8w3Z+P/iGwqah63kmxKZ5QPyX+mOUHuvM8sHLLlzYLouXm+WD8j+
PTYfjv38f/lwbL7aqNEL/myNnbN8tcbbS6L2nNaf5auxn/cvn4zN12Lj/4uv
ZfI3rIDPZOksn0p0/Ev38gidWT7VVNvtNidEb5ZP9fbXy/DqcX1g84lm/fkf
PhGb7zN1pdk9qkt3lu+Tebz0/F87ffiXz8Lmo7QzJiMHOvVm+Sjs87H5GOzf
+5ePweZXFFXmemy/p/+/+A5sPgEb/198giHj8F98E0Kz+/5JGQNLY611Zvf9
D1Ronr8srDe77//28buHJl/1gb3vPhsf/9l3Z++jHzVqSf5brDu7j+6YcjxI
U0sf/t23Zu9Ljzw32rf7vh6w94PZz/93P5i971ty7qP06ix9+He/dWdJx+Td
aTJwGX6+Wz9/F/y7r8nez3wr6no63V8fbnX2/5E/N/d7/+7LsffR2Ji9j8bG
7H20ikPhEtF7hGb3xTrGPOSe6ujM7osV3uQ4iE7unN0Xy+/5bC7brQ/sfSn2
8/7dl2LvM5VfId3akq47u8/Esat/wwkVffh3f4e9fxOe/OuQ61U9YO+bsJ//
774Je39E09bCxSsJ97d/9ifY+xE6tovK/pvWh3/3Adj3/+LqxoaCbvowePFt
nkT03O+17r0Fy56T4NtHhYlLNj8w3QeRcWXDZIh+sSBHcRjXX+uZQwUL5uw/
YP2kIaTNff/f+w/2/QIbs+8X2Jh9v1AUGy5XNyY4O/8/mqF495OGzuz8v/Za
16eY4Z2z8//OT3nrAjv1gT3/Zj/v3/k3ez5tbySBmZ7TnZ1PB/AdV/glpw//
zmPZ89QA3odXVVL0gD1PZD//33kiez44UMUR9C1BH/6dj7HnXxzxzt/H/+jD
v/Me9nyHY/1NrvNUfYj2M54veGLu9/qvaTWmPiGB5zXSdrNvQ1jqRWcfdAjX
b4b9pZpBfdC0jtMc4JrThyiXb+bW5LnvL3Z0+n6rlAQG3In2y8SHsAiGorQK
7m8lU12q8ri/SU3dPCe3aO77/z7vX/88KB0eGvbXCvisudc+/iEAKfGKQTWO
ZLhT29dxwJEB/l350Rtx/HvXsG7kcT0IDmnSNh6zAlpMr/ERDQGo1Cpyc3Yi
A4ls7Hk0Sm/2+1veSFlzRuqBW9WWR3fnWUOanmlBtJbg//o+e9+9pkDY1U5n
F8hvOQBe90gw9tT9+sp5Q9jHZk8n5ZK587Pf15R/p/nuDwLgn3hQshCXR7p5
CzVL7H//f/bzdpsRf+/E/h/YjFs6
       "], {{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
           "],
           VertexColors->Automatic]}, 
         {Hue[0.9060679774997897, 0.6, 0.6], 
          LineBox[{941, 1075, 1050, 1029, 1012, 1000, 991, 942, 943, 944, 945,
            946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 
           959, 1076, 1051, 1030, 1013, 1001, 992, 1082, 1057, 1036, 1019, 
           1007, 1088, 1063, 1042, 1026, 1095, 1070, 1049, 1099, 1074, 960, 
           1077, 1052, 1115},
           VertexColors->Automatic], 
          LineBox[{961, 1078, 1053, 1032, 1015, 1003, 994, 962, 963, 964, 965,
            966, 967, 968, 1079, 1054, 1033, 1016, 1004, 995, 1084, 1059, 
           1038, 1021, 1009, 969, 1080, 1055, 1034, 1017, 1107},
           VertexColors->Automatic], 
          LineBox[{1005, 1087, 1062, 1041, 1024, 996, 1085, 1060, 1039, 1022, 
           1094, 1069, 1048, 1010, 1090, 1065, 1044, 1028, 970, 1081, 1056, 
           1035, 1097, 1072, 1018, 1092, 1067, 1101, 1046},
           VertexColors->Automatic], 
          LineBox[{1098, 1073, 1102, 1006, 1025, 997, 1011, 971, 998, 972, 
           973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 
           986, 987, 988, 989, 999, 990},
           VertexColors->Automatic], 
          LineBox[{1100, 1031, 1096, 1071, 1014, 1091, 1066, 1045, 1002, 1086,
            1061, 1040, 1023, 993, 1083, 1058, 1037, 1020, 1093, 1068, 1047, 
           1008, 1089, 1064, 1043, 1027, 1108},
           VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
       VertexColors->CompressedData["
1:eJzt1sENwkAMRNEV0AiV0AMNICFxpnVK4MQNEfB4yTj+ueUN2jjZCcrxej/f
dmOMy2GM/Xgdj9N4e+DbcJc5ZvnSOY53cjV3d953fE1Xc3fn/artau7i9HCb
ruZVnT7XcDV3cfpW29Wc/vR2NacnvV3Nqzp9ruFq7uL0rbarOf3p7WpOT7bl
av5yt/vCP3s0573Gcby7u8zBd35vV3MXp281XM3pSW9Xc3pS09Wc/a3p0Zz9
xXEcx3Ecx3H8W3eZY5YvneMeruYuTt9quJrTkx6u5vShpqs5+1vTozn7i+M4
juM4juM4jkfcZY5ZvnSO93Y1d+2bmmffVzSf9TzVPPu5RfPs+aJz/Gv96Lpb
2Zes9bO82vcJ+57ja/0/0KuY0yvv9X+9TtZcs77Hor/Pv+4T0Gwuzg==
        "]],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImageSize->300,
      Method->{},
      PlotRange->{{0, 255}, {0., 255.}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{1.5, 0}, {2.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{2.5, 0}, {3.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{3.5, 0}, {4.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{98.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{99.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{100.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 3.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 4.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 5.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 6.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 7.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 8.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 9.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 10.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 11.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 12.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 13.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 14.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 15.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 16.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 17.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 18.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 19.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 20.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 21.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 22.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 23.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 24.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 25.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 26.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 27.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 28.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 29.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 30.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 31.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 32.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 33.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 34.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 35.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 36.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 37.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 38.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 39.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 40.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 41.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 42.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 43.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 44.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 45.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 46.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 47.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 47.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 48.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 49.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 49.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 50.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 51.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyF10eqFkEUhuE2DBw4KERERKTNWcucvWXOWuas7dVr1ltL6CXUEnoJvQN7
Cb2EXkINHSr8B0S457wFxeEZfeN38/zig4UV1d+3rKqWV7M/e9Ov6r83zdn+
DV4ZbK8GrwGvA28AbwJvBm8FbwfvBO8G7wXvBx+03XrwIfBh8BHwUfAx8HHw
CfBJ8CnwafAZ8FnwOfB58JztEGwP4HDB9gAOF20P4HDJ9gAOl20P4HDF9gAO
V20P4HDN9gAO120P4HDD9gAON20P4HDL9gAOt20P4HDH9gAOd20P4HDP9gCu
o+0G3IEncH3fdgPuwBO4fmC7AXfgCVw/tN2AO/AErh/ZbsAdeALXj2034A48
gesnthtwB57A9VPbDbgDT+D6me0G3Gkus06YwPVz243manY7zatmd9LsZrd+
oXjt7Daa18ue5o2yp7mWvZeKt8ie5m2yp3mH7GneJXuvFO+RPc37ZE/zAdnT
LJ1Rv1YsndFols7oNEtnTJqlM+o3iqUzGs3SGZ1m6YxJs3RG/VaxdEajWTqj
0yydMWmWznCNYukMr1k6I2qWzkiapSOy4lbcK66kI0bFrbgori7Ornu3tFux
V1xJR0TFrTgprqQjsuJW3CuupCNGxa24KK6kI9z80m7FXnElHREVt+IEzoor
6YxecSsewUVxJR3i3i/tVuzBEZzAGdyDR3ABuw+2PTiCEziDe/AILmC3YNuD
IziBM7gHj+ACdh9te3AEJ3AG9+ARXMDuk20PjuAEzuAePIIL2H227cERnMAZ
3INHcAG7L7Y9OIITOIN78AguYPfVtgdHcAJncA8ewQXsvtn24AhO4AzuwSO4
gN132x4cwQmcwT14BBew+2HbgyM4gTO4B4/gAnY/bXtwBCdwBvfgEVzAbtG2
B0dwAmdwDx7B5Z//AOtpOzM=
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImageSize->300,
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->NCache[{{
          Rational[-1, 2], 
          Rational[511, 2]}, {0, 51.}}, {{-0.5, 255.5}, {0, 51.}}],
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}]},
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
eB/jP4yy4vA=
       "], {{{}, {}, 
         {Hue[0.67, 0.6, 0.6], 
          LineBox[{1, 81, 73, 66, 60, 55, 212, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
           202, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
           25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 203, 35, 36, 37, 38, 39, 
           40, 41, 42, 43, 44, 45, 46, 47, 82, 74, 67, 61, 56, 52, 48, 83, 75,
            68, 62, 57, 53, 198, 49, 84, 76, 69, 63, 58, 54, 85, 77, 70, 64, 
           59, 86, 78, 71, 65, 87, 79, 72, 88, 80, 89, 50},
           VertexColors->Automatic]}, 
         {Hue[0.9060679774997897, 0.6, 0.6], 
          LineBox[{90, 182, 168, 157, 149, 189, 175, 164, 144, 187, 173, 162, 
           192, 179, 154, 190, 176, 196, 166, 193, 180, 197},
           VertexColors->Automatic], 
          LineBox[{140, 91, 92, 93, 94, 95, 96, 97, 98, 204},
           VertexColors->Automatic], 
          LineBox[{99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
           111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
           205},
           VertexColors->Automatic], 
          LineBox[{124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
            136, 183, 169, 158, 150, 145, 141, 185, 171, 160, 152, 147, 137, 
           184, 170, 159, 151, 146, 188, 174, 163, 155, 191, 177, 167, 194, 
           181, 142, 186, 172, 199},
           VertexColors->Automatic], 
          LineBox[{195, 161, 178, 153, 165, 148, 156, 138, 143, 139},
           VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
       VertexColors->CompressedData["
1:eJxTTMoPSmViYGC4AcTMDDDwwZ4BL8AlP1TEB9r+UfHhKT5Y3DHUxQcqP9Pa
3oEqvwZbeTpUyv3Bkh/I1TfY3D/c6+OBtn9UfHiKDxZ3DHXx4dquGK72jjT3
U8t8attPqb2j4Uldewdb/hqodhW58UWqeQPVHkeXp3b6xCVPfjgDAJbuAj4=

        "]],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImageSize->300,
      Method->{},
      PlotRange->{{0, 255}, {0., 254.99999943519185`}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{1.5, 0}, {2.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{2.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{3.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 8.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 10.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 12.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 14.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 15.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 17.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 18.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 19.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 21.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 22.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 23.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 24.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 25.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 26.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 27.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 28.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 29.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 30.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 31.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 32.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 33.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 34.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 35.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 36.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 37.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 38.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 39.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 40.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 41.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 42.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 43.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 44.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 45.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 46.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 47.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 48.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 49.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 50.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 51.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 52.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 53.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 54.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 55.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 56.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 57.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 58.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 59.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 60.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 61.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 62.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 63.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 64.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 65.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 66.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 67.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 68.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 69.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 70.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 71.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 72.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 73.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 74.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 75.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 76.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 77.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 78.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 79.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 80.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 81.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 82.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 83.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 84.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{98.5, 0}, {99.5, 85.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{99.5, 0}, {100.5, 86.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{100.5, 0}, {101.5, 87.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 88.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 89.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 90.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 91.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 92.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 93.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 94.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 95.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 96.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 97.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 98.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 99.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 100.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 101.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 102.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 103.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 104.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 105.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 106.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 107.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 108.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 109.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 110.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 111.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 112.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 113.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 114.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 115.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 116.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 117.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 118.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 119.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 120.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 121.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 122.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 123.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 124.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 125.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 126.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 127.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 128.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 129.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 130.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 131.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 132.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 133.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 134.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 135.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 136.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 137.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 138.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 139.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 140.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 141.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 142.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 143.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 144.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 145.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 146.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 147.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 148.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 149.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 150.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 151.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 152.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 153.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 154.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 155.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 156.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 157.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 158.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 159.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 160.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 161.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 162.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 163.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 164.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 165.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 165.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 166.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 167.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 168.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 169.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 170.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 170.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 171.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 172.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 173.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 173.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 174.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 175.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 175.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 176.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 177.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 177.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 178.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 179.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 179.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 180.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 180.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 181.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 182.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 182.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 183.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 183.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 184.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 184.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 186.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 186.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 187.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 187.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 195.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 196.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyF00kKJUUUheFrM3DgIBEREZEo+960762w7Pussu/D0rLXyiXEEnIJsYTc
gbGEXEIsIYcOFepPRIjzbsDj8kFOzjm8MxcvX7h0jf37rjK72q78rrz2l/3v
tbOn/bfja2PfO99d7/gGYePe5PgW4eu4tzk+Izxw73B8l/CN3Hsc3yd8M/cB
xw8J38p95LTzKBzwo8K348ccPy58J35C+G78pOOnhO/FTwvfj59x/Kzwg/g5
4Yfx88L0nF9w/KIwO+SXhNkhnxVmhxiF2aE6ji8Ls1NVZqd4TpidqjI7xVeE
2akqs1N8VZidqjI7xdeE2akqs1N8XZidqjI7xDf6zrgKGzvEN/vOuArbOb5/
q++Mq7CxQ3y774yrsLFDfKfvjKuwsUN8t++Mq7CxQ3yv74yrsLFDfL/vjKuw
sUP8oO+Mq7CxQ5j6zjgJGzsU4YybsLFDON93xknY2KEIZ9yEjR3Chb4zTsLG
DkU44yZs7BA+7DvjJGz0WIQjbsIZh4/6rjgJGz0W4YibcMbh474rTsJGj0U4
4iaccfik74qTsNFjEY64CWccPu274iRs9FiEI27CGYfP+q44CRs9FuGIm3DG
4fO+K07CRo9FOOImnHH4ou+Kk7DRYxGOuAlnHL7su+IkbPRYhCNuwhmHr/qu
OAkbPRbhiJtwxuHrvitOwkaPRTjiJpxx+KbvipOw0WMRjrgJZxy+7bviJGz0
WIQjbsIZD6nvikdho8dJOOJZOONFuOJV2OhxE454F854+K7vikdho8dJOOJZ
OONFuOJV2MixCQe8C0c8XOw74VE440m44Fm44kW44VXYyLEJB7wLRzx833fC
o3DGk3DBs3DFi3DDq7CRYxMOeBeOePih74RH4Ywn4YJn4YoX4YZXYSPHJhzw
LhzxcKnvhEfhjCfhgmfhihfhhldhI8cmHPAuHPHwY98Jj8IZT8IFz44X4YpX
4XbkFTZy7sIBDz/1HfHoeBJOeBbOeBEueHW8Cdcjr3A78v582qOw0eMkHPDs
eBGOeBVOeHO8C2c8/HLao3A58grXI6/jRbgdeR1vwsbOu+Ph174DHh1Pjmfh
iBfHq3DCm+NdOB95fzvt0fEkXI68jhfHq3A98jreHQ+/992OvI4nx7PjRdj4
n66ON8e74+GPvgMeHU+OZ8eLcDzyOt4c746HP097dDwJpyOv48Xx6nhzvAvn
I+/l0x4dT45nx4vj1fHmeP/P/wBydOu5
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImageSize->300,
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->NCache[{{
          Rational[-1, 2], 
          Rational[511, 2]}, {0, 196.}}, {{-0.5, 255.5}, {0, 196.}}],
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.62098993218779*^9, {3.620990031933394*^9, 3.620990044865746*^9}, 
   3.6209903176286697`*^9, 3.620990385550259*^9, {3.6209909476109467`*^9, 
   3.6209909858300047`*^9}, 3.6209910393097353`*^9, 3.620991187472125*^9, 
   3.620994071493022*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setUprErf", "[", " ", 
    RowBox[{
     RowBox[{"gMatLAB", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"cMatLAB", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "255", ",", "0", ",", 
     "255"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nErf", "[", "x", "]"}], ",", 
           RowBox[{"pErf", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"pErfColor", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Floor", "[", 
           RowBox[{"pErf", "[", "x", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255", ",", "1"}], "}"}], ",", 
         RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "pErfColor"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]}], "}"}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.594065178274871*^9, 3.594065210220256*^9}, {
   3.594070127796234*^9, 3.594070128130217*^9}, {3.594071121915715*^9, 
   3.594071162299368*^9}, 3.594105289643358*^9, 3.595064901610771*^9, {
   3.5950650457833567`*^9, 3.59506508003069*^9}, {3.595065122982175*^9, 
   3.5950651398736963`*^9}, {3.595065183892395*^9, 3.595065209334687*^9}, {
   3.5950652549138193`*^9, 3.595065257558571*^9}, 3.596583693105167*^9, {
   3.59658487682204*^9, 3.5965848842781963`*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
7mvwy3n+8/mbqf8Rf0n6CzqcESI=
        "], {{{}, {}, 
          {Hue[0.67, 0.6, 0.6], 
           LineBox[{1, 71, 65, 60, 56, 177, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
            10, 11, 167, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 168, 
            40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 
            73, 67, 62, 58, 163, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 
            50},
            VertexColors->Automatic]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], 
           LineBox[{78, 151, 142, 137, 156, 147, 133, 154, 145, 159, 140},
            VertexColors->Automatic], 
           LineBox[{158, 149, 162, 130, 128, 79, 80, 81, 82, 83, 84, 85, 86, 
            87, 88, 169},
            VertexColors->Automatic], 
           LineBox[{89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
             103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
            116, 170},
            VertexColors->Automatic], 
           LineBox[{117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 152, 
            143, 138, 134, 131, 129, 153, 144, 139, 157, 148, 161, 135, 155, 
            164},
            VertexColors->Automatic], 
           LineBox[{146, 160, 141, 150, 132, 136, 127},
            VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDYCsTMDDDwwZ4BL8AlP1zFB9r+UfFRcXzig8UdtBYfqPxJ
6/JisJk/2OwdKu4ZrT8Gl/2j4qPi+MQHiztoLT5ab9LH/JFmL7XMp5Z6Us0Z
av4i1bzBEn7ULn9wyZMfzgAPL9if
         "]], InsetBox[
        StyleBox[Cell["\<\
\[Sigma]  =180
\[Mu] = 128\
\>",
          GeneratedCell->False,
          CellAutoOverwrite->False,
          CellBaseline->Baseline,
          TextAlignment->Left],
         Background->GrayLevel[1.]], {25.49710647656383, 187.8325984269917}, {
        Left, Baseline}, {82.92526994589505, 64.7020940985714}, {{1., 0.}, {
        0., 1.}},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImagePadding->{{14.738125, 2.168125}, {11.98405, 1.086688}},
      Method->{},
      PlotRange->{{-5.3125, 260.3125}, {-5.312499908296697, 
       260.31249550653814`}},
      PlotRangeClipping->True,
      PlotRangePadding->Automatic,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
K38XgQ==\
\>"]], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{1.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{2.5, 0}, {3.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{3.5, 0}, {4.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 8.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 10.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 12.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 14.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 15.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 17.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 18.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 19.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 21.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 22.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 22.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 23.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 24.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 25.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 26.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 27.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 28.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 29.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 30.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 31.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 32.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 33.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 34.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 35.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 36.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 37.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 38.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 39.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 40.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 41.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 42.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 42.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 43.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 44.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 45.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 46.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 47.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 48.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 49.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 50.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 51.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 52.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 53.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 54.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 55.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 56.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 57.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 58.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 59.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 60.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 61.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 62.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 63.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 64.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 65.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 66.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 67.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 68.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 69.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 70.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 71.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 72.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 73.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 74.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 75.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 76.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 77.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 78.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 79.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 80.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 81.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 82.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 83.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 84.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 85.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 86.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 87.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 88.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 89.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 90.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 91.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 92.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 93.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{98.5, 0}, {99.5, 94.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{99.5, 0}, {100.5, 95.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{100.5, 0}, {101.5, 96.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 97.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 98.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 99.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 100.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 101.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 102.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 103.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 104.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 105.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 106.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 107.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 108.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 109.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 110.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 111.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 112.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 113.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 114.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 115.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 116.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 117.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 118.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 119.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 120.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 121.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 122.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 123.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 124.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 125.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 126.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 127.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 128.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 129.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 130.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 131.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 132.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 133.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 134.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 135.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 136.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 137.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 138.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 139.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 140.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 141.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 142.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 143.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 144.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 145.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 146.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 147.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 148.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 149.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 150.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 151.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 152.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 153.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 154.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 155.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 156.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 157.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 158.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 159.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 160.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 161.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 162.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 163.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 164.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 165.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 166.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 167.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 168.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 169.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 170.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 171.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 172.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 173.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 174.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 175.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 176.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 177.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 178.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 179.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 180.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 181.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 182.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 183.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 184.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 185.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 186.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 187.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 188.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 189.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 190.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 191.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 192.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 193.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 194.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 196.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 197.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 198.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 199.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 200.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 201.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 202.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 203.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 204.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 205.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 206.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 207.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 208.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 209.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 210.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 211.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 212.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 213.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 214.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 215.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 216.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 217.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 218.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 219.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 220.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 221.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 222.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 222.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 223.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 224.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 225.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 226.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 227.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 228.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 229.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 230.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 231.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 232.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 233.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 233.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 234.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 235.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 236.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 237.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 238.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 239.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 240.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 240.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 241.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 242.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 243.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 244.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 246.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 246.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 0.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyFz1nKHkUUh/Gj8cILL5oQRESkYhzi3M4ah5w4z7Zxnisx0Timl3CW0Euo
JfQOrCX0EmoJfemlQp4PEer/vQXNww8O59CnL1+/ePWE/ftuMrvZbnw3XvvL
/vfa+eP9t/BOb/G+jd4mfCs9KTzQ24VP0TsP+G7hO+hp4bvoGeFE7xO+hz4g
fC99UPh++rDwWfqo8EP08eMdo/Aj+Anhx/CTwuyJp4TZE08LsyeeEWZPPCvM
nnhOmD3xvDB74oUDPifMnXhRmDvxkjB34mVh7sQrwtyJ88LccRfmTlXmjl8Q
5k5VZo+/2nfgKmzs8df6DlyFjT3+et+Bq7Cxx9/oO3AVNvb4m30HrsLGHn/r
eFfhOJp/u2/jThUO7O/0bdypwoH93b6NO1U4sL/Xt3GnCgf29/s27lThwP5B
38adKhzYP+zbuFOFA/tHfRt3qnDgNPVt3MnCgYuwcacJB04f923MZWHHRThw
E644XezbmMvCjotw4CZccfqkb2MuCzsuwoGbcMXp076NuSzsuAgHbsIVp8/6
NuaysOMiHLgJV5w+79uYy8KOi3DgJlxx+qJvYy4LOy7CgZtwxenLvo25LOy4
CAduwhWnr/o25rKw4yIcuAlXnL7u25jLwo6LcOAmXHH6pm9jLgs7LsKBm3DF
6du+jbks7LgIB27CFafv+jbmsrDjIhy4CVecvu/bmMvCjotw4CZccfqhb2Mu
CzsuwoGbcMVD7tuYG4UdT8KBZ+GKF2Gjq3Cim7DTXTjT4VLfgUfhgifhimfh
hhdho6twopuw01040+Fy34FH4YIn4Ypn4YYXYaOrcKKbsNNdONPhx74Dj8IF
T8IVz8INL8JGV+FEN2Gnu3Cmw5W+A4/CBU/CFc/CDS/CRlfhRDdhp7twpsPV
vgOPwgVPwhXPwg0vwkZX4UQ3Yae7cKbDT30HHoULnoQrnoUbXoSNrsKJbsJO
d+FMh5/7DjwKFzwJVzwLN7wIG12FE92Ene7CmQ7X+g48Chc8CVc8Cze8CBtd
hRPdhJ3uwpkOv/QdeBQueBKueBZueBE2ugonugk73YUzHX7tO/AoXPAkXPEs
3PAibHQVTnQTdroLZzr81nfgUbjgSbjiWbjhRdjoKpzoJux0F850+L3vwKNw
wZNwxfMBL8Lt6H+FjW7Cie7CToc/+s54FA48CRc8C1e8CDe8ChvdhBPdD3j4
s2/Ho3DGk3DgWbjgRbjiVbgd/a+w0f2Ah+t9JzwKO56EM56FAy/CFa8HvAkf
vf0//wPgVPoL
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}, InsetBox[
        StyleBox[Cell["\<\
\[Sigma]  =180
\[Mu] = 128\
\>",
          GeneratedCell->False,
          CellAutoOverwrite->False,
          CellBaseline->Baseline,
          TextAlignment->Left],
         Background->GrayLevel[1.]], {23.779590606153874`, 178.72565089371}, {
        Left, Baseline}, {82.92526994589505, 64.7020940985714}, {{1., 0.}, {
        0., 1.}},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImagePadding->{{14.73187, 1.86161}, {11.980184, 4.556626}},
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->{{-5.833333333333334, 260.8333333333333}, {-5.125, 251.125}},
      
      PlotRangePadding->Automatic]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.596587685244622*^9, 3.596587713024383*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.596584458935951*^9, 3.59658453205647*^9}, {
   3.59658460417172*^9, 3.596584830149694*^9}, 3.596584866461947*^9, {
   3.59658491486104*^9, 3.5965849337795*^9}, {3.596584977904553*^9, 
   3.596585042819833*^9}, {3.596587721579805*^9, 3.5965877247105207`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setUprErf", "[", " ", 
    RowBox[{
     RowBox[{"gMatLAB", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"cMatLAB", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "0", ",", "255", ",", "0", ",", 
     "255"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nErf", "[", "x", "]"}], ",", 
           RowBox[{"pErf", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"pErfColor", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Floor", "[", 
           RowBox[{"pErf", "[", "x", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255", ",", "1"}], "}"}], ",", 
         RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "pErfColor"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]}], "}"}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.594065178274871*^9, 3.594065210220256*^9}, {
   3.594070127796234*^9, 3.594070128130217*^9}, {3.594071121915715*^9, 
   3.594071162299368*^9}, 3.594105289643358*^9, 3.595064901610771*^9, {
   3.5950650457833567`*^9, 3.59506508003069*^9}, {3.595065122982175*^9, 
   3.5950651398736963`*^9}, {3.595065183892395*^9, 3.595065209334687*^9}, 
   3.5965837270491085`*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
DzMMeWmwFltX34/joPwDi15k06B1IkiciDf1e0dfTWyng3bbhk5mPbyqd2nw
EB0OMCyZ8eZAFtK1v4NjL6aIT83I3flH2fGm9yoyVaYVSpVix5uImehnmcjq
B8mseGOxfge68Vv2K/Q80158PZLTUQsNsw0HPhLyDzfe6PQR3aNMjTXUIeRN
ehN3RwFLNhpSGTuO20s4T2LCbBK2z07+ZGUDLn+LuWt9gk9gtMXlfYorcXnn
3MxNOVSOZT65eOe9N+7fXjRWxtG6sW/yP/zVqnB7uSmY4n91NmjnlIS5yjhC
tdp1+9sFK8BfI62D4uUGBhupLyYA90cHFPYukCLDyOMI30xevD5scFcrriBD
tVvujBeXcX1efrCWRqOAoLDF9+rXDNDdYUx+L0IFc2PdOUtwf9Tne2dd9E0q
bH+yFh7h8vJWyV3BsKSB1N9N68aJ8wfdkgfX/9Dg51kkgplPbfZMXJZOBxs7
lTECF4rvAU3z6frF06vh/LIWdjwJ90X0VIVbN0Sx9Vu/Dkl7GX8xUpCl371y
y9DBsgneU3GseJK23gdVj82S75Fm6rep+N4SdMOShI0drszz0uRLjb9RMafi
1Jh7hLzlYmTqNmJnXn1C7swh9Duv4Ou3PdguNWs7MMf1u2jGLZNPmZgJqkl2
zsLlrfb6/GWkHjuw3vZT4xdc3vcqb51dOYyFtJbkTxk6QHnmhtXfTRZCa/ym
yHo7MiQfLjWwsWOA6klz7PoMClwPubOs/iEDFOP4tR5eosDar4YqmW/xfNNl
z4ozZlSom8ertQSXB69y0VjIdzxf1X2wuAvHZMG8HzsTaVCp22VB1PMm5Q4f
h3XoMHe3+WtCfk27C4Qr2ungqXyQWc/3yxklnk/g6CsggjJHe0I02PpalIG8
bTyVmPCU7d+zR5FLuV9+hhqw9FW7bStasFRGafMeVjxu2Z6MftyiOuV4jynP
IJ7Wt2jqSoEFtfOY9d+JBV8WY/lh0npGNMK/u/L/zbHFrvleW/wrj8iP4rU3
yR7D1smKrRv9Q9SDo5m7v97FEvPs9iYZ4PITj/8hs/sjxvi5+0dEqj2Q7OvV
qwL5wbYuK3b7TDLYPdkrl9/hA4OVKnOtC8nw8lDNEu9zDOAR9P/kv4MCpnN6
B0Vf4fa7KtMe+02BuTPLb5zA833hjVuoNheosLpKenUhLo9jJwKWZqM0OHlx
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
xXH5FvaoN/32Af2XLZ+dy8igdJL/tVw2A3rebUzaRaLATouO2yvw/NftiCxp
vxAVLpR4+P7F8w0NSisWVEiF/f0zvpYS9zGVjlkh22kQaPr+GnG+37gzau/O
ERpMCpQFEPKcuzDSSvYsHSYmGKMEtpih1Rf8mBMvvJC717NdZviy9XmgBhEa
cv96c5glX98aGXRVs84aif2seBG3bDd6Sri98b0IU5+l+E2L0fC0EacpK+b5
yTWhkDG0ZRVktF8j5FtbeuaONpYjOYtUMYPId8UxvyI/zIlxpd9fH9fn8jPD
669fxKJHl4mZpOLytfik/b22Dkvt2zezv9MOILfPS1/tJyb9bqzQEHEAX0+j
HfP3LoBdsfkbA3eSIVbIQ/GsJe6vt83jv/2XDKo7h9y3leH56uM2Tdt0CjTq
d8/cjOe73yxOaRwzpsKbR1o58/D9x1ZQAmL7qTAjQUjxI3E+IRtw+VcsDciY
vAShnx4n9+YMadJh80nnl4S83Es7hKyb6VAXrsPMdwXKTf7kBHH0UxcZuPFN
o3kJWz8tziMWDqsX2t9k31/J/kLEnz9Br61l6edkuj5as6r0wSF31nlsnUUS
alhNuW5VxJSnakBeM9qV47Ph20xCfoN0uzPS2J7tlwzPORD6KThfv8caKytu
QGZcJPLdwss7fY9iK0i0Jyo/cHl27T4gSinBailb5cM24fqJKvcnHfmAJV6O
FU05bg88I/mHrA7zQa7C4fq2v27Qcdnp0dVGHwh9dK7iby4Z5Gp4a43OMuBG
+dorgaYUqLzE2GhWz4AR10Db5mEKJF05+GQXrn92qnRfk1QqvNTecj4Xl4e4
inLaDR0aZCzcihD5bum1WyatnTRI8HyMEPKKduumShymg9PzZz8J3FviunOo
dTq/lXEQT7jC4Nz/RyF80X06BWLs+MfzAUnoOH1q7UmWfy39uRa9FpvvGS3G
lF/54IswlPFFdssiElN+uo+XP0U1Lt4wHrnK9K/duZtnY1n3f+zV5Sfk17r0
wX5DTKPnqxl5By4/yBhs0A7FHrnPsqtPxeU3NvJgPKMAy11962xXP66P1qYN
fh7NmJyY8tYzzyhgPavE7VkbAzLLDr7q96OCiXuMizeRz41WxciI02Ddz8AX
AziOc1843nObBh/i54YT8SXgd/5hPmc8/h/z62H6u6frLzku4uSzVkjpnGfN
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
fkuQXd3xq6z3svmNEEYHIwv2d31jvZ/HCkf0XrGL+rkXzOdLaS7JRXuO/T5/
9RYdlvysYp4vFnZMXHT5NV1f7xOS/HEngPN7ZKSFr0Rt6yq2vDsfIf1fX/94
qjntD+aXvtg4/xXnPDoJqf3cazz/1HT8ExwuOxvSyPm+CfJhwZX3EMqJB3nI
u+KoCrMXHH59kEDfZwaZUdP9McEem+blreTcF1xAHHZ1nP/WNX0eflWE5BES
xOm3i0ZO77/1zUaR8/7WiPEjiRvNjey/b7yN3CisW3zbafq8MVBn1ZS6Oed8
JBwRi7+vmjrG+Xt/BDQqGcfzOd/XR1x0rknqm3I+d0T+/55n5eH5v+ZZ8fW/
86zE+t95VmL9zzwrc/3PPCtzTc+zstb0PCtrcedZ2Ys7z8pe/zXPmrg59Gjk
1PQ8a3lkadRDLQXuPGtM+uarGVqrufOs6v20+phZmtx5Vp4PPpMakjrcedbE
s/Vpu+eh3HnWFoaDaPGdzdx51s5wH9VrG/W586y5LVt0435u5c6zChb6LWkY
NuLOswaO3bUWSDfmzrNyMGeelYM586wczJln5WDuPCsbc+ZZOZgzz8p9Pnue
lYM586wczJln5WDOPCsHc+ZZOZgzz8rBnHlWDubMs3IwZ56VgznzrBzMmWfl
YM48Kwf/O8/KnR9lL+78KHv91/xoYlaw8aE7i7nzneWq9reWnjHgzncGLjKv
sNE14s53cn6fM9/JwZx5Se7+/pmX5M4ncuyNM5/IXv81nyj6M2RXhKMEd36w
voni292rz50frN+qaHYq3ZA7P8j5fe48HXtx5uk4+N95Os68W0mE2ZiVwVbu
vFvR+SMV9MtG3Hk3zvP/nUfjzn+xF3f+i73+a/7LIvXgeETBfO58VovKrrqa
E/rc+axyEc0nosaG3Pmsko5tZe9FjYE7r8RenHklrn/4Z16JM09U3rzTRmfA
gDtPFOOj+WphgBFw52fY69/5Gc78S+/BBc3Sw4bc+ReOPJR3VtkLROC/r7hB
p+nK9PwH6aRN5umjc7nzHIn5Cpet8Lj273wFd56BvbjzDOz1X/MMg98Obo60
EefOG9g17Z7Qpetz5w3Uh++Hm8kYcucNSq7uHN/Fi8ctTv89e3H779nr3/57
Tn88RNgcvvrYgNsfD9FTt60djIDbD85e//aDc/q5SeRzSbbPDIHTv8z5Pqd/
OTyN17Ojbja3HzklzNFp4wMj+Lf/9k+9nWzqzGn5c/pLOc/7t7+U009aMvWp
+t5xI6Bdufk0KZIMUlHSd34uNoKbnf1/VE/jz+8Kvxgh/wX7t9+P21/HXtz+
Ovb6r/66cslQGu9VMW7/W4bKtwUBFvrc/jff7jCXb4KG3P63mJeux7f8NQJu
PxjHfjj9YOz1bz8Yp18rvLn5XFe+Abdfq3ctlZyxzQi4/Urs9W+/EqffKMWK
5Dty0xA4/TWc7//bX8Ppl5EyqL949AbuH/7pF+H0gygZRP5aJ2kMnH4IzvP+
7Yfg9D+MyT07vCoS33+2YtjGUNz/HLMYD5ptBANnW/Kk4/C/P+9SQXrfhxk8
iEksHSKDR0n4B0MhY6DPvSX4c//08w+0njhQIDCtH035eqJfYnB9XTlP0V/V
6P+5D5q+f2HLl3P/wl7/df9SpBq6f4u1GPd+BJoKMpIM9Ln3IzHv3V7oTm7l
3o+U1CqSkseMgHtfwF7c+wL2+ve+gHOeLxeRojQj04B7nm83PEkX1jcC7nk2
e/17ns09j96u997giiFwzmM53//3PJZzvlpfEHRboMAI/j1f5JwfdgZ9UBJf
YAzc8zP2+vf8jHNe1iKiihaFGMEmxXcOCcFkqI7S8KiZNIS4APOZokfwv9eT
vTSo14eln3Xfiw6SQe5Yy5sPAsbA16dM6tvzP++r8ucLGo3rS5T0L0NFI4BM
KZEmj+nP+ddc7qRN4L/HK2YkImUM1WuQ639Dpj9nLQoUxBipmD5kwL/+5N+/
Z349nAwr0ny77UPY/y9COW4/Ar5UutBs+Nc+XuGPiwjD3992Ey1N2AhGLl5H
NZ/g8TZkfuaZa//v94mfO4g/X7D6TpeiuBH3984dH1ckiXLqEArIh36uE3I0
BqXB3aWVof/sB3+fduFJsUNSs6EJf/ymQ/jnw4r9Akm92L/f58wr/py1HP+8
Bfs/fwGzkQ==
        "], {{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl12W4FWUbhuFNS5eAdKOEdCoIIijdnUp3SEi3SDdId4MtSoeB2NJgYAdK
mCAg8J3P8f24j/e67mfNbPbMO7M2+bsMbDYgUUJCwstJEhJi3ZA4IWELuIbn
SmspJ+oEH0lIKskkuaSQeySlbPSBrY5b7kPXeQs+z9pB18b6Ob+A15iXtA7k
7+lL8fJ4k3WqvrzuMH8Hr9JltnawdtFts+40z2nNxzdYB5vPsC7kO61Dzf/A
1/Rr+ePW4dZxuq/NquNa8TtanzdbZF3FX7CmMt8UP0e/gv/LG1tb6ubH74vT
4PXWjj4zxTqL77C2Nf8ifoa+lPTWDeLbrcfMSlsr8M3W58znWpfyCmZHrO/q
VuvutXa0do1/k1kunB9vtD5tNtO6iA8z+9N6XbdO94T1Get43TdmNXDtuCfx
c8wWW1fz1Gab49+lW6m7wZtYW+kWxP3EaXEn82fxbNxO/2WcV1da+sR15+/r
y+CKeJp+Hl6GK+rfsh7VZZFO+m78RX1uXAAP0c/Ci/Fw/V/Wf3V1ZIR+Av9W
/2jcQ7xMvwSvwWn0W+K6627ipvrWfGHsRZwOdzabiufg9vqv4ny6MtI3riX/
QF8WV8LT9fPxclxJ/3bsT11W6azvzl/S58EF8VD9bLwEP6P/23pDV1dG6ify
7/Q1497g5frn8VqcVr819qvuFm6mb8MX4VQ4PX7S7Dk8F3fQX4jz6cpKP/0Q
/mE8m7gynqFfgFfgyvp3rMd02eRJfQ/+sj4vLhT7Rz8nngE8Qv+P9aaunozS
T+Lf6x/DdfAK/VK8DqfTb4v9qfsPN4/9zxfj1DgDfspsGp6HO+q/jvPpykn/
eE75R/ryuAqeqV+IV+Iq+ndjf+nuk6f0Pfkr+ny4cOyZuM78Gr6F68tos8n8
B30tXBev1Kfn22P/4dvxbjJrx5fgNDgj7mI2Hc+Pva//Js4T7yMZoB/GP9ZX
wA/hWfqH+NHYRzi7dDHrxV/V58dFYm/E9eTX8X+4gYwxm8J/1NfG9fAqfQa+
I/YZvoNbmrXnz+O0OBPuGvuRfxvH4wrxLjUbzj/RV8QP49n6h/l7sU9wDulq
1pu/pi+A7497H9eN/4tv44Yy1uxZ/pP+cVwfr9Zn5DtjH+G7uJVZB74Up4t3
Ne4W+41/F8fjijLI7Bn+qb4Srorn6KvyY7EPcE7pZtaHv64viB/AI+N68Rv4
Dm4k4+K7gv+sfwI3wGv0mfgLsU/ii0xax3s63h00fbxbcffYT/z7OB5XksFm
I/hn+sq4Gp6rr8bfj/uOc8kuXsi8qG5UXCd+E9/FjeUXXse8oW4tz8xfjP2A
E8V3I89gnkXXI/YL/wH/givLcV7F/BHdPP4I/yDuK84tb/DC5sV0o+M68FuJ
///l3IRfhPfKS3GPeeL4HuMZHZNV1zP2AP8RX8RV5ER8J8qHcX94HnmTF3FM
cd0YPp7/hxNJL38ANNX9qssSfzfE/eJJ4vuEZ3Jctvhc3E/+E/41nhU5Gd9L
8lFca55XdvMJcluXWJrpfuNZ5RW+iyeVVby7/Kz7Lfa2nIrvB/lYd5znkz18
omSTV/Vv6JLJat4j3sfyif6ELr/s5ZPkPnlN/6YuuazhPeP9J9nldbPd+hSy
lveKd4x8qj+pKyD7+GTJIbv0e3T3yDreO551+Ux/SldQ9vMpklPe0O/VpZT1
vI/8orsUz4mcjmdRjutO80JygD8rd3RJpLnuEs8lb/J9PJVs4H3lou5y7Gs5
E8+OnNCd4YXlIL/f/SuhG8un8rs4qbTgl3lu2c3389SykWd2zH263rwf/xVf
if0rZ+M62jN1rCf1Z3VF5BB/wHEP6sbx53j8gZmMt+RXaB7Zww/wNLIp9rfP
ZI/3jHP20fXX/cav4upyjteVU7pz/H45zIs6rqRuPJ8WrweenLfiV+MY3oiv
i33J9+KDOK1sjr1unkPXlw/gl/DvuIac5w+ZV9fN5/X4aXwePyBHeDHzUroJ
fHo8sjwFbx3PV/xNGOfT18ON8frYz3wfPoTTyZZ4Lsxz6vrxgfwy/gM/Kk+b
jeSf6x/GNfACfX1+JnpcVLqb9eVv6Yvj0niifkbcAn4Pb8Mn4Glxfn193ARv
iOeG78eHcXppY9aJb43nDufC/fWD+BX8J64pQ8xG8S/0VfGjeKG+AT8bPS4m
Pcz68bf1JXAZPEk/kyflKXlbPhFPj/PrG+CmeGM8i/wAPoIzSFuzznxbPOc4
N47/9AzmV/Ff+DEZajaaf6mvhmviRfqG/Fz0uLj0NOvP39E/iMviyfpZPBlP
xdvxSXhGnF/fEDfDm+LZ5wfj+uOM0s7sSb493jU4Dx4Y95P/jv/GtWSY2Rj+
lf4R/BherG/Ez0ePS0gvswH8XX1JXA5P0c/myXlq3p5PxjPj/PpGuDnerF+G
1+NC+kNxH3SZpL3+Kb4j3nE4Lx6kX2AdovsH15ax/AJfghvHNbIejXeVdU58
TgpLk/iekabx3pFm8U6Q5vG8Sot4bqRl7NPYC3Gu+J2klJSWMtJKysr/ANJb
wgo=
            "],
            VertexColors->Automatic]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], 
           LineBox[{942, 1092, 1062, 1036, 1016, 1002, 992, 943, 944, 945, 
            946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 
            959, 1093, 1063, 1037, 1017, 1003, 993, 1100, 1070, 1044, 1024, 
            1010, 960, 1094, 1064, 1038, 1018, 1004, 1105, 1075, 1049, 1029, 
            994, 1101, 1071, 1045, 1025, 1113, 1083, 1057, 1011, 1108, 1078, 
            1121, 1052, 1119, 1089, 1123, 1136},
            VertexColors->Automatic], 
           LineBox[{1033, 1117, 1087, 1061, 961, 1095, 1065, 1039, 1019, 1111,
             1081, 1055, 1005, 1106, 1076, 1050, 1030, 995, 1102, 1072, 1046, 
            1026, 1114, 1084, 1058, 1012, 1109, 1079, 1129},
            VertexColors->Automatic], 
           LineBox[{1053, 1034, 962, 1096, 1066, 1040, 1020, 1006, 996, 963, 
            964, 965, 966, 967, 968, 969, 1097, 1067, 1041, 1021, 1007, 997, 
            1103, 1073, 1047, 1027, 1013, 970, 1098, 1068, 1042, 1022, 1008, 
            1107, 1077, 1051, 1031, 1116, 1086, 1130},
            VertexColors->Automatic], 
           LineBox[{1060, 1120, 1091, 998, 1104, 1074, 1048, 1028, 1115, 1085,
             1059, 1014, 1110, 1080, 1054, 1035, 971, 1099, 1069, 1043, 1118, 
            1088, 1023, 1112, 1082, 1122},
            VertexColors->Automatic], 
           LineBox[{1056, 1090, 1009, 1032, 999, 1015, 972, 1000, 973, 974, 
            975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 
            988, 989, 990, 1001, 991},
            VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
        VertexColors->CompressedData["
1:eJzt1rERwjAQRFEN0AiV0AMlMENMQuGUQEQGlnUry7foK/NbRjK+88H59rje
D6WU56mUY/ms16V8XbiXq7mr165xfCZX8+zO+47v6Wru5nufj7e5mmdx5vx/
upq7Ov3s4Wqexek3b1dz/gfO4WrOnMGXVpb5M8rpZw9X8yxOv3m7mvM/bW4f
dR5zxsPVnDng6dGc9xrH8VlczV2dOe/hap7F6TcPV/Penu354Muu5swTT1dz
6uvp0Zz64jiO4ziO4zj+a0VzV69d4zlczbM4/ebhat7bsz0fvE/O3PB0Nae+
nh7NqS+O4ziO4ziO4zgecTV39do1ji+tXu9L9j5U85rvfZ+jn7+aj+qraL72
3Nbcpe5qTn21+1E/tzbvXb+oqzn91rbPVnWP7t96zlZ1pJ/7ntua089991Xv
I7p/7/tqPWf071rrfuu/5xvKOke+
         "]], InsetBox[
        StyleBox[Cell["\<\
\[Sigma]  = 10
\[Mu] = 125.48\
\>",
          GeneratedCell->False,
          CellAutoOverwrite->False,
          CellBaseline->Baseline,
          TextAlignment->Left],
         Background->GrayLevel[
          1.]], {21.866093241042336`, 187.93816852750194`}, {Left, Baseline},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImagePadding->{{14.738125, 2.168125}, {11.98405, 1.086686}},
      Method->{},
      PlotRange->{{-5.3125, 260.3125}, {-5.3125, 260.3125}},
      PlotRangeClipping->True,
      PlotRangePadding->Automatic], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{1.5, 0}, {2.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{2.5, 0}, {3.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{3.5, 0}, {4.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{98.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{99.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{100.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 2.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 3.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 4.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 5.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 6.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 7.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 8.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 9.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 10.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 11.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 12.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 13.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 14.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 15.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 16.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 17.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 18.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 19.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 20.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 21.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 22.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 23.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 24.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 25.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 26.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 27.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 28.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 29.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 30.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 31.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 32.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 33.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 34.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 35.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 36.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 37.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 38.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 39.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 40.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 41.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 42.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 43.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 44.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 45.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 46.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 47.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 48.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 48.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 49.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 49.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 51.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 0.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyF10eO0EAQRmETFixYtBBCCCHkIWeanJlmyLkZcjYDQ4bpI/gIPoKP4Bvg
I/gIPkIvWYLkQghpql5LrdK3+tdvZmFpfnFV8eetKIqVxfSnN/4s/nvjrO1f
4NXB9lrwOvAG8CbwFvAMeBt4B3gXeA94H/gA+JDt2oMPg4+Aj4KPgY+DT4BP
gk+BT4PPgM+Cz4HPgy+AZ22HYLsHh4u2e3CYs92DwyXbPThctt2DwxXbPThc
td2DwzXbPThct92Dww3bPTjctN2Dwy3bPTjctt2Dwx3bPTjctd2Dwz3bPbiM
titwCx7B5X3bFbgFj+By3nYFbsEjuHxguwK34BFcPrRdgVvwCC4f2a7ALXgE
l49tV+AWPILLJ7YrcAseweVT2xW41ZynThjB5TPbleZiuq3mNdMdNbvpls8V
r59upXmj7GneLHuaS9l7oXir7GneLnuad8qe5t2y91LxXtnTvF/2NB+UPc3S
GeUrxdIZlWbpjFazdMaoWTqjfK1YOqPSLJ3RapbOGDVLZ5RvFEtnVJqlM1rN
0hmjZukMVymWzvCapTOiZumMpFk6olFcizvFhXTEoLgWZ8XF3HTd2+Vdi73i
QjoiKq7FSXEhHdEorsWd4kI6YlBci7PiQjrCLSzvWuwVF9IRUXEtTooL6YgG
3CmuxQM4a5YOce9se3AEJ3AD7sADOIPde9seHMEJ3IA78ADOYLdo24MjOIEb
cAcewBnsPtj24AhO4AbcgQdwBruPtj04ghO4AXfgAZzB7pNtD47gBG7AHXgA
Z7D7bNuDIziBG3AHHsAZ7L7Y9uAITuAG3IEHcAa7r7Y9OIITuAF34AGcwe6b
bQ+O4ARuwB14AGew+27bgyM4gRtwBx7AGex+2PbgCE7gBtyBB3AGuyXbHhzB
CdyAO/Cg+O/L//wbcQk5Iw==
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}, InsetBox[
        StyleBox[Cell["\<\
\[Sigma]  = 10
\[Mu] = 125.48\
\>",
          GeneratedCell->False,
          CellAutoOverwrite->False,
          CellBaseline->Baseline,
          TextAlignment->Left],
         Background->GrayLevel[
          1.]], {25.459988574032025`, 37.20221357072177}, {Left, Baseline},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImagePadding->{{9.625416, 1.645376}, {11.914392, 0.951467}},
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->{{-5.833333333333334, 260.8333333333333}, {-1.0625, 52.0625}},
      PlotRangePadding->Automatic]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.596587737339155*^9, 3.596587750512179*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.596585092109119*^9, 3.596585172960908*^9}, {
  3.596587760772209*^9, 3.596587762903813*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setUprErf", "[", " ", 
    RowBox[{
     RowBox[{"gMatLAB", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"cMatLAB", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "0", ",", "255", ",", "0", ",", 
     "255"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nErf", "[", "x", "]"}], ",", 
           RowBox[{"pErf", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"pErfColor", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Floor", "[", 
           RowBox[{"pErf", "[", "x", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "255", ",", "1"}], "}"}], ",", 
         RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "pErfColor"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]}], "}"}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.594065178274871*^9, 3.594065210220256*^9}, {
   3.594070127796234*^9, 3.594070128130217*^9}, {3.594071121915715*^9, 
   3.594071162299368*^9}, 3.594105289643358*^9, 3.595064901610771*^9, {
   3.5950650457833567`*^9, 3.59506508003069*^9}, {3.595065122982175*^9, 
   3.5950651398736963`*^9}, {3.595065183892395*^9, 3.595065209334687*^9}, {
   3.5950652790141783`*^9, 3.5950652812337303`*^9}, 3.596583735872613*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
        "], {{{}, {}, 
          {Hue[0.67, 0.6, 0.6], 
           LineBox[{1, 81, 73, 66, 60, 55, 213, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
            203, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 204, 35, 36, 37, 38, 39, 
            40, 41, 42, 43, 44, 45, 46, 47, 82, 74, 67, 61, 56, 52, 48, 83, 
            75, 68, 62, 57, 53, 199, 49, 84, 76, 69, 63, 58, 54, 85, 77, 70, 
            64, 59, 86, 78, 71, 65, 87, 79, 72, 88, 80, 89, 50},
            VertexColors->Automatic]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], 
           LineBox[{90, 182, 168, 157, 149, 189, 175, 164, 144, 187, 173, 162,
             192, 179, 197, 154, 190},
            VertexColors->Automatic], 
           LineBox[{176, 196, 166, 193, 180, 140, 91, 92, 93, 94, 95, 96, 97, 
            98, 205},
            VertexColors->Automatic], 
           LineBox[{99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
             111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
            206},
            VertexColors->Automatic], 
           LineBox[{124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 
            135, 136, 183, 169, 158, 150, 145, 141, 185, 171, 160, 152, 147, 
            137, 184, 170, 159, 151, 146, 188, 174, 163, 155, 191, 177, 167, 
            194, 181, 198, 142, 186, 200},
            VertexColors->Automatic], 
           LineBox[{172, 195, 161, 178, 153, 165, 148, 156, 138, 143, 139},
            VertexColors->Automatic]}, {}}, {{}, {}, {}, {}}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGC4CcTMDDDwwZ4BL8AlP1TEB9r+UfHhKT5Y3DHUxQcqP9Pa
3oEqvwZbeTpUyv3Bkh/I1TfY3D/c6+OBtn9UfHiKDxZ3DHXx4dquGK72jrqf
PPPJtZ/e4TBQ7iHVfHLtp5W9QyVehop6cs0bLOma2ukWlzz54QwAxtUDbg==

         "]], InsetBox[
        StyleBox[
         RowBox[{
          RowBox[{"\[Sigma]", " ", "=", "62.87"}], "\[IndentingNewLine]", 
          RowBox[{"\[Mu]", " ", "=", " ", "107.3765"}]}],
         Background->GrayLevel[
          1.]], {14.518017100977204`, 186.8264291087894}, {Left, Baseline},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      ImagePadding->{{14.738125, 2.168125}, {11.98405, 1.086686}},
      Method->{},
      PlotRange->{{-5.3125, 260.3125}, {-5.312499988233164, 
       260.31249942342504`}},
      PlotRangeClipping->True,
      PlotRangePadding->Automatic], 
     GraphicsBox[{
       {RGBColor[0.24720000000000014`, 0.24, 0.6], 
        {RGBColor[1, 0, 0], Opacity[0.2], RectangleBox[{-0.5, 0}, {0.5, 0.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{0.5, 0}, {1.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{1.5, 0}, {2.5, 0.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{2.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{3.5, 0}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{4.5, 0}, {5.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{5.5, 0}, {6.5, 2.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{6.5, 0}, {7.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{7.5, 0}, {8.5, 3.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{8.5, 0}, {9.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], RectangleBox[{9.5, 0}, {10.5, 4.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{10.5, 0}, {11.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{11.5, 0}, {12.5, 5.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{12.5, 0}, {13.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{13.5, 0}, {14.5, 6.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{14.5, 0}, {15.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{15.5, 0}, {16.5, 7.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{16.5, 0}, {17.5, 8.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{17.5, 0}, {18.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{18.5, 0}, {19.5, 9.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{19.5, 0}, {20.5, 10.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{20.5, 0}, {21.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{21.5, 0}, {22.5, 11.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{22.5, 0}, {23.5, 12.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{23.5, 0}, {24.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{24.5, 0}, {25.5, 13.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{25.5, 0}, {26.5, 14.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{26.5, 0}, {27.5, 15.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{27.5, 0}, {28.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{28.5, 0}, {29.5, 16.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{29.5, 0}, {30.5, 17.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{30.5, 0}, {31.5, 18.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{31.5, 0}, {32.5, 19.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{32.5, 0}, {33.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{33.5, 0}, {34.5, 20.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{34.5, 0}, {35.5, 21.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{35.5, 0}, {36.5, 22.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{36.5, 0}, {37.5, 23.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{37.5, 0}, {38.5, 24.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{38.5, 0}, {39.5, 25.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{39.5, 0}, {40.5, 26.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{40.5, 0}, {41.5, 27.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{41.5, 0}, {42.5, 28.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{42.5, 0}, {43.5, 29.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{43.5, 0}, {44.5, 30.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{44.5, 0}, {45.5, 31.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{45.5, 0}, {46.5, 32.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{46.5, 0}, {47.5, 33.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{47.5, 0}, {48.5, 34.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{48.5, 0}, {49.5, 35.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{49.5, 0}, {50.5, 36.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{50.5, 0}, {51.5, 37.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{51.5, 0}, {52.5, 38.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{52.5, 0}, {53.5, 39.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{53.5, 0}, {54.5, 40.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{54.5, 0}, {55.5, 41.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{55.5, 0}, {56.5, 42.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{56.5, 0}, {57.5, 43.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{57.5, 0}, {58.5, 44.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{58.5, 0}, {59.5, 45.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{59.5, 0}, {60.5, 46.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{60.5, 0}, {61.5, 47.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{61.5, 0}, {62.5, 48.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{62.5, 0}, {63.5, 49.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{63.5, 0}, {64.5, 50.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{64.5, 0}, {65.5, 51.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{65.5, 0}, {66.5, 52.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{66.5, 0}, {67.5, 53.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{67.5, 0}, {68.5, 54.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{68.5, 0}, {69.5, 55.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{69.5, 0}, {70.5, 56.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{70.5, 0}, {71.5, 57.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{71.5, 0}, {72.5, 58.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{72.5, 0}, {73.5, 59.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{73.5, 0}, {74.5, 60.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{74.5, 0}, {75.5, 61.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{75.5, 0}, {76.5, 62.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{76.5, 0}, {77.5, 63.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{77.5, 0}, {78.5, 64.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{78.5, 0}, {79.5, 65.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{79.5, 0}, {80.5, 66.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{80.5, 0}, {81.5, 67.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{81.5, 0}, {82.5, 68.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{82.5, 0}, {83.5, 69.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{83.5, 0}, {84.5, 70.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{84.5, 0}, {85.5, 71.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{85.5, 0}, {86.5, 72.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{86.5, 0}, {87.5, 73.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{87.5, 0}, {88.5, 74.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{88.5, 0}, {89.5, 75.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{89.5, 0}, {90.5, 76.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{90.5, 0}, {91.5, 77.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{91.5, 0}, {92.5, 78.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{92.5, 0}, {93.5, 79.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{93.5, 0}, {94.5, 80.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{94.5, 0}, {95.5, 81.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{95.5, 0}, {96.5, 82.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{96.5, 0}, {97.5, 83.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{97.5, 0}, {98.5, 84.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{98.5, 0}, {99.5, 85.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{99.5, 0}, {100.5, 86.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{100.5, 0}, {101.5, 87.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{101.5, 0}, {102.5, 88.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{102.5, 0}, {103.5, 89.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{103.5, 0}, {104.5, 90.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{104.5, 0}, {105.5, 91.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{105.5, 0}, {106.5, 92.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{106.5, 0}, {107.5, 93.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{107.5, 0}, {108.5, 94.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{108.5, 0}, {109.5, 95.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{109.5, 0}, {110.5, 96.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{110.5, 0}, {111.5, 97.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{111.5, 0}, {112.5, 98.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{112.5, 0}, {113.5, 99.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{113.5, 0}, {114.5, 100.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{114.5, 0}, {115.5, 101.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{115.5, 0}, {116.5, 102.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{116.5, 0}, {117.5, 103.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{117.5, 0}, {118.5, 104.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{118.5, 0}, {119.5, 105.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{119.5, 0}, {120.5, 106.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{120.5, 0}, {121.5, 107.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{121.5, 0}, {122.5, 108.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{122.5, 0}, {123.5, 109.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{123.5, 0}, {124.5, 110.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{124.5, 0}, {125.5, 111.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{125.5, 0}, {126.5, 112.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{126.5, 0}, {127.5, 113.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{127.5, 0}, {128.5, 114.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{128.5, 0}, {129.5, 115.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{129.5, 0}, {130.5, 116.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{130.5, 0}, {131.5, 117.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{131.5, 0}, {132.5, 118.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{132.5, 0}, {133.5, 119.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{133.5, 0}, {134.5, 120.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{134.5, 0}, {135.5, 121.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{135.5, 0}, {136.5, 122.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{136.5, 0}, {137.5, 123.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{137.5, 0}, {138.5, 124.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{138.5, 0}, {139.5, 125.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{139.5, 0}, {140.5, 126.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{140.5, 0}, {141.5, 127.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{141.5, 0}, {142.5, 128.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{142.5, 0}, {143.5, 129.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{143.5, 0}, {144.5, 130.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{144.5, 0}, {145.5, 131.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{145.5, 0}, {146.5, 132.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{146.5, 0}, {147.5, 133.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{147.5, 0}, {148.5, 134.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{148.5, 0}, {149.5, 135.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{149.5, 0}, {150.5, 136.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{150.5, 0}, {151.5, 137.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{151.5, 0}, {152.5, 138.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{152.5, 0}, {153.5, 139.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{153.5, 0}, {154.5, 140.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{154.5, 0}, {155.5, 141.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{155.5, 0}, {156.5, 142.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{156.5, 0}, {157.5, 143.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{157.5, 0}, {158.5, 144.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{158.5, 0}, {159.5, 145.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{159.5, 0}, {160.5, 146.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{160.5, 0}, {161.5, 147.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{161.5, 0}, {162.5, 148.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{162.5, 0}, {163.5, 149.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{163.5, 0}, {164.5, 150.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{164.5, 0}, {165.5, 151.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{165.5, 0}, {166.5, 152.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{166.5, 0}, {167.5, 153.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{167.5, 0}, {168.5, 154.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{168.5, 0}, {169.5, 155.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{169.5, 0}, {170.5, 156.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{170.5, 0}, {171.5, 157.}]}, 
        {RGBColor[0, 0, 1], Opacity[0.2], 
         RectangleBox[{171.5, 0}, {172.5, 158.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{172.5, 0}, {173.5, 159.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{173.5, 0}, {174.5, 160.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{174.5, 0}, {175.5, 161.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{175.5, 0}, {176.5, 162.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{176.5, 0}, {177.5, 163.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{177.5, 0}, {178.5, 164.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{178.5, 0}, {179.5, 165.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{179.5, 0}, {180.5, 165.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{180.5, 0}, {181.5, 166.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{181.5, 0}, {182.5, 167.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{182.5, 0}, {183.5, 168.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{183.5, 0}, {184.5, 169.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{184.5, 0}, {185.5, 170.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{185.5, 0}, {186.5, 170.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{186.5, 0}, {187.5, 171.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{187.5, 0}, {188.5, 172.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{188.5, 0}, {189.5, 173.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{189.5, 0}, {190.5, 173.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{190.5, 0}, {191.5, 174.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{191.5, 0}, {192.5, 175.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{192.5, 0}, {193.5, 175.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{193.5, 0}, {194.5, 176.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{194.5, 0}, {195.5, 177.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{195.5, 0}, {196.5, 177.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{196.5, 0}, {197.5, 178.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{197.5, 0}, {198.5, 179.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{198.5, 0}, {199.5, 179.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{199.5, 0}, {200.5, 180.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{200.5, 0}, {201.5, 180.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{201.5, 0}, {202.5, 181.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{202.5, 0}, {203.5, 182.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{203.5, 0}, {204.5, 182.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{204.5, 0}, {205.5, 183.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{205.5, 0}, {206.5, 183.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{206.5, 0}, {207.5, 184.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{207.5, 0}, {208.5, 184.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{208.5, 0}, {209.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{209.5, 0}, {210.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{210.5, 0}, {211.5, 185.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{211.5, 0}, {212.5, 186.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{212.5, 0}, {213.5, 186.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{213.5, 0}, {214.5, 187.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{214.5, 0}, {215.5, 187.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{215.5, 0}, {216.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{216.5, 0}, {217.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{217.5, 0}, {218.5, 188.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{218.5, 0}, {219.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{219.5, 0}, {220.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{220.5, 0}, {221.5, 189.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{221.5, 0}, {222.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{222.5, 0}, {223.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{223.5, 0}, {224.5, 190.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{224.5, 0}, {225.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{225.5, 0}, {226.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{226.5, 0}, {227.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{227.5, 0}, {228.5, 191.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{228.5, 0}, {229.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{229.5, 0}, {230.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{230.5, 0}, {231.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{231.5, 0}, {232.5, 192.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{232.5, 0}, {233.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{233.5, 0}, {234.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{234.5, 0}, {235.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{235.5, 0}, {236.5, 193.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{236.5, 0}, {237.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{237.5, 0}, {238.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{238.5, 0}, {239.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{239.5, 0}, {240.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{240.5, 0}, {241.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{241.5, 0}, {242.5, 194.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{242.5, 0}, {243.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{243.5, 0}, {244.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{244.5, 0}, {245.5, 195.}]}, 
        {RGBColor[0, 1, 0], Opacity[0.2], 
         RectangleBox[{245.5, 0}, {246.5, 195.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{246.5, 0}, {247.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{247.5, 0}, {248.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{248.5, 0}, {249.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{249.5, 0}, {250.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{250.5, 0}, {251.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{251.5, 0}, {252.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{252.5, 0}, {253.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{253.5, 0}, {254.5, 196.}]}, 
        {RGBColor[1, 0, 0], Opacity[0.2], 
         RectangleBox[{254.5, 0}, {255.5, 0.}]}}, 
       {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, LineBox[CompressedData["
1:eJyF00kKJUUUheFrM3DgIBEREZEo+960762w7Pussu/D0rLXyiXEEnIJsYTc
gbGEXEIsIYcOFepPRIjzbsDj8kFOzjm8MxcvX7h0jf37rjK72q78rrz2l/3v
tbOn/bfja2PfO99d7/gGYePe5PgW4eu4tzk+Izxw73B8l/CN3Hsc3yd8M/cB
xw8J38p95LTzKBzwo8K348ccPy58J35C+G78pOOnhO/FTwvfj59x/Kzwg/g5
4Yfx88L0nF9w/KIwO+SXhNkhnxVmhxiF2aE6ji8Ls1NVZqd4TpidqjI7xVeE
2akqs1N8VZidqjI7xdeE2akqs1N8XZidqjI7xDf6zrgKGzvEN/vOuArbOb5/
q++Mq7CxQ3y774yrsLFDfKfvjKuwsUN8t++Mq7CxQ3yv74yrsLFDfL/vjKuw
sUP8oO+Mq7CxQ5j6zjgJGzsU4YybsLFDON93xknY2KEIZ9yEjR3Chb4zTsLG
DkU44yZs7BA+7DvjJGz0WIQjbsIZh4/6rjgJGz0W4YibcMbh474rTsJGj0U4
4iaccfik74qTsNFjEY64CWccPu274iRs9FiEI27CGYfP+q44CRs9FuGIm3DG
4fO+K07CRo9FOOImnHH4ou+Kk7DRYxGOuAlnHL7su+IkbPRYhCNuwhmHr/qu
OAkbPRbhiJtwxuHrvitOwkaPRTjiJpxx+KbvipOw0WMRjrgJZxy+7bviJGz0
WIQjbsIZD6nvikdho8dJOOJZOONFuOJV2OhxE454F854+K7vikdho8dJOOJZ
OONFuOJV2MixCQe8C0c8XOw74VE440m44Fm44kW44VXYyLEJB7wLRzx833fC
o3DGk3DBs3DFi3DDq7CRYxMOeBeOePih74RH4Ywn4YJn4YoX4YZXYSPHJhzw
LhzxcKnvhEfhjCfhgmfhihfhhldhI8cmHPAuHPHwY98Jj8IZT8IFz44X4YpX
4XbkFTZy7sIBDz/1HfHoeBJOeBbOeBEueHW8Cdcjr3A78v582qOw0eMkHPDs
eBGOeBVOeHO8C2c8/HLao3A58grXI6/jRbgdeR1vwsbOu+Ph174DHh1Pjmfh
iBfHq3DCm+NdOB95fzvt0fEkXI68jhfHq3A98jreHQ+/992OvI4nx7PjRdj4
n66ON8e74+GPvgMeHU+OZ8eLcDzyOt4c746HP097dDwJpyOv48Xx6ngTzkde
x8Pl0x4dT45nx4vj1fEmfLz9P/8DnZTpqQ==
         "],
         VertexColors->{{
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 0, 1], 
            RGBColor[0, 0, 1]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[0, 1, 0], 
            RGBColor[0, 1, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}, {
            RGBColor[1, 0, 0], 
            RGBColor[1, 0, 0]}}], {}, {{}, {}}}, InsetBox[
        StyleBox[
         RowBox[{
          RowBox[{"\[Sigma]", " ", "=", "62.87"}], "\[IndentingNewLine]", 
          RowBox[{"\[Mu]", " ", "=", " ", "107.3765"}]}],
         Background->GrayLevel[
          1.]], {14.442284103007452`, 149.5380546658239}, {Left, Baseline},
        Alignment->{Left, Top}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->NCache[{
         Rational[-1, 2], 0}, {-0.5, 0}],
      ImagePadding->{{14.73187, 1.86161}, {11.980184, 4.958779}},
      Method->{"MessagesHead" -> DiscretePlot},
      PlotRange->{{-5.833333333333334, 
       260.8333333333333}, {-4.083333333333334, 200.08333333333334`}},
      PlotRangePadding->Automatic]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.596587769090661*^9, 3.5965877974648933`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.596585242363347*^9, 3.596585282836747*^9}, {
  3.596587802715292*^9, 3.596587804540588*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relationship to the Normal Distribution", "Subtitle",
 CellChangeTimes->{{3.5794367036024733`*^9, 3.579436727571885*^9}}],

Cell["\<\
We want to specify \[Mu], \[Sigma], sMin, sMax, dMin, dMax for the space as \
these are the parameters which can be statistically found.
From these parameters we want to find g and c for the adjustable distribution \
above.
First we find a relationship to a gaussian on the axis.\
\>", "Text",
 CellChangeTimes->{{3.579615359539703*^9, 3.5796154898567467`*^9}, {
  3.579615542368929*^9, 3.57961556687551*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Mu]", ",", "\[Sigma]", ",", " ", "g", ",", "c", ",", " ", "sMin", ",", 
    " ", "sMax", ",", " ", "dMin", ",", " ", "dMax"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xScale", " ", "=", "  ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[Mu]", " ", "-", " ", "sMin"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", " ", 
       FractionBox[
        RowBox[{"sMax", " ", "-", " ", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anyliticalErf", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], " ", ",", 
          RowBox[{"xScale", " ", "t"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"sMin", " ", "/", " ", "xScale"}], ",", 
         RowBox[{"x", " ", "/", " ", "xScale"}]}], "}"}]}], "]"}], "]"}], "+",
     " ", "dMin"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"anyliticalErf", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.579612808874107*^9, 3.57961283656678*^9}, {
   3.579612866766815*^9, 3.57961292892238*^9}, {3.579613120983549*^9, 
   3.579613127107245*^9}, {3.579613192792808*^9, 3.579613220733472*^9}, {
   3.579613383948349*^9, 3.579613393138307*^9}, {3.579613435809895*^9, 
   3.579613436257834*^9}, {3.579614195707424*^9, 3.5796142092961197`*^9}, 
   3.579615265280521*^9}],

Cell["Comparing to the adjustable distribution", "Text",
 CellChangeTimes->{{3.579615626655409*^9, 3.579615645593257*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Mu]", ",", "\[Sigma]", ",", " ", "g", ",", "c", ",", " ", "sMin", ",", 
    " ", "sMax", ",", " ", "dMin", ",", " ", "dMax"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nErf", "[", "x", "]"}], " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"c", "-", "x"}], ")"}]}], 
       RowBox[{"sMax", "-", "sMin"}]], "]"}], "\[Rule]", 
     RowBox[{"-", " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "c"}], ")"}]}], 
        RowBox[{"sMax", "-", "sMin"}]], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "0", "]"}], "]"}], "[", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Together", "[", 
     RowBox[{
      RowBox[{"%", "[", 
       RowBox[{"[", "0", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"%", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5793285543913403`*^9, 3.5793285582133465`*^9}, {
   3.5793286607835274`*^9, 3.5793287132942195`*^9}, {3.5793290326891804`*^9, 
   3.57932903799319*^9}, {3.5794372362391376`*^9, 3.5794372375760307`*^9}, 
   3.579437267825659*^9, 3.5796156978205748`*^9}],

Cell["\<\
We can see the relationship of the average to c and the standard deviation to \
g.\
\>", "Text",
 CellChangeTimes->{{3.5796156753175507`*^9, 3.5796157540800133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", " ", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", ".2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sMax", " ", "=", " ", "8"}], ";", " ", 
  RowBox[{"sMin", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dMin", " ", "=", " ", "0"}], ";", " ", 
   RowBox[{"dMax", "=", " ", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", " ", "=", " ", "\[Mu]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{"g", ",", "c", ",", "sMin", ",", "sMax", ",", "dMin", ",", "dMax"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"anyliticalErf", "[", "x", "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
     " ", 
     RowBox[{"nErf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "sMin", ",", " ", "sMax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sMin", ",", " ", "sMax"}], "}"}], ",", "Automatic"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.579544248906919*^9, 3.579544265968104*^9}, {
   3.579612136629003*^9, 3.57961215293229*^9}, {3.579612320924114*^9, 
   3.57961232190724*^9}, 3.579612989242916*^9, {3.579614951134364*^9, 
   3.579614972707122*^9}, 3.579615033551256*^9, {3.579615079107306*^9, 
   3.5796150829765244`*^9}, {3.5796151302075653`*^9, 3.5796151331242657`*^9}, 
   3.579615209056306*^9, {3.5796157946478577`*^9, 3.5796157999108257`*^9}}],

Cell[BoxData["g"], "Input",
 CellChangeTimes->{3.5796167283663597`*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"g", " ", "=", "  ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sMax", "-", "sMin"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sqrt", "[", "2", "]"}], " ", "\[Sigma]"}], ")"}]}]}], 
          " ", ";", 
          RowBox[{"setUprErf", "[", " ", 
           RowBox[{
           "g", ",", "\[Mu]", ",", "sMin", ",", "sMax", ",", "dMin", ",", 
            "dMax"}], "]"}]}], "]"}], ";", 
        RowBox[{"nErf", "[", "x", "]"}]}], ",", 
       RowBox[{"anyliticalErf", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dMax", "-", "dMin"}], ")"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Green", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"TraditionalForm", "/@", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"iErf", "[", "a", "]"}]}], "}"}]}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMax"}], "}"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMin"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMin"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMin", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "255"}], ",", "255", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "128"}], "}"}], ",", "sMin", ",", "sMax", ",", 
     "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "0.5"}], "}"}], ",", "0.0", ",", "10.0", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.570522147143224*^9, 3.57052221968115*^9}, {
   3.570538574902136*^9, 3.5705386601838493`*^9}, {3.570538767663076*^9, 
   3.5705387681179333`*^9}, {3.570550129075527*^9, 3.570550130242475*^9}, {
   3.5753647639942513`*^9, 3.575364781030279*^9}, {3.579616402317727*^9, 
   3.579616473936882*^9}, {3.579616504968951*^9, 3.5796165222486057`*^9}, {
   3.57961658983447*^9, 3.579616626675791*^9}, 3.579616753480706*^9, 
   3.579616835124354*^9, {3.579617175303306*^9, 3.5796172025993156`*^9}, {
   3.579617293492734*^9, 3.5796173666681337`*^9}, {3.579682359057933*^9, 
   3.579682386574044*^9}, {3.5796824168995037`*^9, 3.579682417707286*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximations to the Erf", "Subtitle",
 CellChangeTimes->{{3.570014005109153*^9, 3.570014022807774*^9}}],

Cell["\<\
A good approximation is found using continued fractions and the following \
numbers\
\>", "Text",
 CellChangeTimes->{{3.570014216011128*^9, 3.570014245013715*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Rationalize", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Rationalize", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Precision", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "12"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Rationalize", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.570015552069454*^9, 3.570015556556696*^9}, {
  3.570094983497621*^9, 3.5700950372582197`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Rat", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Precision", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "12"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "=", "0.254829592"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a1", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "=", "0.284496736"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A2", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a2", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", "=", "1.421413741"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A3", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a3", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a4", "=", "1.453152027"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A4", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a4", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a5", "=", "1.061405429"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A5", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a5", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.3275911"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"p", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.569331075740561*^9, 3.569331084244378*^9}, {
   3.569664625713059*^9, 3.569664633717559*^9}, {3.5696647662117777`*^9, 
   3.5696648716712503`*^9}, {3.569932855006598*^9, 3.569932866126595*^9}, {
   3.569932902400099*^9, 3.569932943754175*^9}, {3.569933303755221*^9, 
   3.569933310273031*^9}, {3.569933356054901*^9, 3.5699334554677143`*^9}, {
   3.570003927529598*^9, 3.570003953968948*^9}, {3.570014048842863*^9, 
   3.5700140521373053`*^9}, {3.570015273035675*^9, 3.5700153185701447`*^9}, {
   3.5700154505530767`*^9, 3.570015500040707*^9}, {3.570015609743568*^9, 
   3.570015650404758*^9}, 3.5700228668584127`*^9}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Precision\>\"", ",", "\"\<A1\>\"", ",", "\"\<A2\>\"", ",", 
      "\"\<A3\>\"", ",", "\"\<A4\>\"", ",", "\"\<A5\>\"", ",", "\"\<P\>\""}], 
     "}"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pre", "=", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "prec"}], ")"}]}]}], ";", 
        RowBox[{"{", 
         RowBox[{"pre", ",", 
          RowBox[{"A1", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"A2", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"A3", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"A4", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"A5", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"P", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"prec", ",", "1", ",", "12"}], "}"}]}], "]"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570003741779357*^9, 3.570003871617214*^9}, {
  3.5700040968693943`*^9, 3.570004143649362*^9}, {3.570015668918866*^9, 
  3.570015679918401*^9}}],

Cell["The functional Approximation is formed thus", "Text",
 CellChangeTimes->{{3.570014417720578*^9, 3.5700144372501307`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "t", ",", "tt", ",", "erfP", ",", " ", "erfH", ",", "erfA", ",", "error"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "[", 
   RowBox[{"x_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"P", "[", "opt", "]"}], " ", "x"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"b_", "/;", 
     RowBox[{"Not", "[", 
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "b", "]"}], "\[Equal]", "Rule"}], "]"}], "]"}]}],
     ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"b", "/", 
   RowBox[{"(", 
    RowBox[{"b", "+", 
     RowBox[{"a", "*", 
      RowBox[{"P", "[", "opt", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfP", "[", 
   RowBox[{"a_", ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"A5", "[", "opt", "]"}], "*", 
               RowBox[{"t", "[", 
                RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "-", 
              RowBox[{"A4", "[", "opt", "]"}]}], ")"}], "*", 
            RowBox[{"t", "[", 
             RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], ")"}], "+", 
          RowBox[{"A3", "[", "opt", "]"}]}], ")"}], "*", 
        RowBox[{"t", "[", 
         RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "-", 
       RowBox[{"A2", "[", "opt", "]"}]}], ")"}], "*", 
     RowBox[{"t", "[", 
      RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "+", 
    RowBox[{"A1", "[", "opt", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfH", "[", 
   RowBox[{"a_", ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"erfP", "[", 
     RowBox[{"a", ",", "b", ",", "opt"}], "]"}], "*", 
    RowBox[{"t", "[", 
     RowBox[{"a", ",", "b", ",", "opt"}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "*", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "/", 
       RowBox[{"b", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"Times", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"b_", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "b", ",", "opt"}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "/", "b"}], "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "b"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"a", "/", "b"}], "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox["a_",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "1", ",", "opt"}], "]"}], ",", 
       RowBox[{"a", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "1"}], "]"}]}], ",", 
       RowBox[{"a", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox["a_",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "b", ",", "opt"}], "]"}], ",", 
       RowBox[{"a", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "b"}], "]"}]}], ",", 
       RowBox[{"a", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"error", "[", 
    RowBox[{
     TagBox[
      StyleBox["a_",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm], ",", "opt___Rule"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"erfA", "[", 
     RowBox[{"a", ",", "opt"}], "]"}], "-", 
    RowBox[{"Erf", "[", "a", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.567954387984118*^9, 3.567954486196499*^9}, {
   3.567954541964328*^9, 3.567954551827251*^9}, {3.567954585259798*^9, 
   3.567954593129197*^9}, {3.5679547142804193`*^9, 3.567954744500011*^9}, {
   3.5679548048673487`*^9, 3.567954824045288*^9}, {3.567954910063135*^9, 
   3.5679549851871233`*^9}, 3.567955022402462*^9, {3.567955263579754*^9, 
   3.567955306469591*^9}, {3.5679608192926197`*^9, 3.567960888799561*^9}, {
   3.56914588259057*^9, 3.5691459986501904`*^9}, {3.5691460731425123`*^9, 
   3.569146098641284*^9}, {3.569174304755027*^9, 3.569174305692025*^9}, 
   3.569330203766574*^9, {3.569330456121298*^9, 3.569330479254656*^9}, {
   3.5693305099097767`*^9, 3.569330537648653*^9}, {3.569330903254122*^9, 
   3.569330903660243*^9}, {3.5693310597013083`*^9, 3.569331080543128*^9}, {
   3.5693312419746933`*^9, 3.569331246005768*^9}, {3.5696653017115097`*^9, 
   3.569665320749776*^9}, 3.5696653648086863`*^9, {3.569666142887783*^9, 
   3.569666160834526*^9}, {3.569666904854218*^9, 3.56966694716637*^9}, 
   3.5700144412517557`*^9, {3.570015153394107*^9, 3.5700151710085*^9}, {
   3.5700157173346443`*^9, 3.570015720426663*^9}, {3.5700159522835617`*^9, 
   3.570015972250021*^9}, {3.570021814183116*^9, 3.570021815846281*^9}, {
   3.570022050992342*^9, 3.570022071742342*^9}, {3.570022126847982*^9, 
   3.570022193805861*^9}, {3.5700222480275993`*^9, 3.570022268612879*^9}, 
   3.5700237293661957`*^9, {3.570023837075289*^9, 3.570023886898385*^9}, {
   3.5700239452006617`*^9, 3.570023957199198*^9}, {3.570023999209383*^9, 
   3.5700240058474894`*^9}, {3.570024065590289*^9, 3.5700240766370287`*^9}, 
   3.5700241143154583`*^9, {3.570024202396468*^9, 3.570024216827064*^9}, {
   3.5700248834815617`*^9, 3.5700248886881*^9}, {3.5700250488026114`*^9, 
   3.570025062485299*^9}, {3.5700253260623293`*^9, 3.570025345956655*^9}, {
   3.570025428618198*^9, 3.570025429314171*^9}, {3.570025489607601*^9, 
   3.570025594383959*^9}, {3.570025627750514*^9, 3.570025705398485*^9}, {
   3.570025835810117*^9, 3.5700258385927896`*^9}, {3.5700258690253077`*^9, 
   3.5700258875696297`*^9}, {3.570026036059374*^9, 3.5700260427953176`*^9}, {
   3.5700288542440147`*^9, 3.5700288705483103`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"erfA", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Precision", " ", "\[Rule]", " ", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "prec"}], ")"}]}]}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"error", "[", 
          RowBox[{
           RowBox[{"x", "/", "1"}], ",", 
           RowBox[{"Precision", " ", "\[Rule]", " ", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}]}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"prec", ",", "0", ",", "12", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5691470095018253`*^9, 3.5691471003714733`*^9}, {
   3.569147279402801*^9, 3.569147342540053*^9}, {3.569147384538507*^9, 
   3.569147527907358*^9}, {3.569148134792432*^9, 3.569148151791751*^9}, {
   3.569157125468733*^9, 3.569157198407667*^9}, {3.5691575629067783`*^9, 
   3.569157563436335*^9}, {3.569157620491919*^9, 3.5691576329634123`*^9}, {
   3.569163285844842*^9, 3.5691632862886257`*^9}, {3.569163599627386*^9, 
   3.569163630542634*^9}, {3.56916434917693*^9, 3.569164359775202*^9}, {
   3.569177791235414*^9, 3.569177793528985*^9}, {3.5691779526266813`*^9, 
   3.569177954095496*^9}, {3.569178004372439*^9, 3.569178099175508*^9}, {
   3.569180601152913*^9, 3.5691806014335747`*^9}, {3.569180785872301*^9, 
   3.569180804075626*^9}, {3.5691810179593973`*^9, 3.569181075616506*^9}, 
   3.569181116882955*^9, {3.5691812647692413`*^9, 3.569181265403607*^9}, {
   3.5692243919171867`*^9, 3.569224411629545*^9}, {3.569225063945229*^9, 
   3.569225073373672*^9}, {3.5692254619042387`*^9, 3.569225472129133*^9}, {
   3.569225509167453*^9, 3.5692255418166027`*^9}, {3.569226421344121*^9, 
   3.569226423399824*^9}, {3.569232518717724*^9, 3.569232523442524*^9}, {
   3.569605727408783*^9, 3.5696057377892733`*^9}, {3.5696068792028093`*^9, 
   3.5696068797048893`*^9}, {3.569607637793084*^9, 3.5696076402322607`*^9}, {
   3.5696078060834084`*^9, 3.569607875868195*^9}, {3.569607924452837*^9, 
   3.5696079799124937`*^9}, {3.569608111895574*^9, 3.569608139092156*^9}, {
   3.5696083792410803`*^9, 3.569608419869338*^9}, {3.569608554509397*^9, 
   3.569608572530209*^9}, {3.569659360186203*^9, 3.569659366428006*^9}, {
   3.5696595693087*^9, 3.569659573669738*^9}, {3.5696597806883307`*^9, 
   3.569659867758747*^9}, {3.569659960691774*^9, 3.569659961082645*^9}, {
   3.569660031276078*^9, 3.569660105491976*^9}, {3.56966037680221*^9, 
   3.569660381257656*^9}, {3.569660610052566*^9, 3.5696606111166573`*^9}, {
   3.569660650399435*^9, 3.569660663878697*^9}, {3.570024484902439*^9, 
   3.5700245021879*^9}, {3.570024569795611*^9, 3.570024823754938*^9}, {
   3.570024999670397*^9, 3.5700250044049873`*^9}, {3.570025903453356*^9, 
   3.570025904051749*^9}, {3.570025976189642*^9, 3.5700259960824537`*^9}, {
   3.570026059064749*^9, 3.5700260617836113`*^9}, {3.5700279395296097`*^9, 
   3.570027941245701*^9}}],

Cell[CellGroupData[{

Cell["Distribution Function", "Section",
 CellChangeTimes->{{3.5700261267565937`*^9, 3.570026132435273*^9}}],

Cell[BoxData[
 RowBox[{"rErf", "[", 
  RowBox[{"x", ",", " ", "g", ",", "c", ",", "0", ",", "255", ",", "0", ",", 
   RowBox[{"2", "^", "16"}], ",", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"erfA", "[", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"-", "2"}]}]}]}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570028670005496*^9, 3.570028673100251*^9}, {
  3.5700287177154903`*^9, 3.5700287243308*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Floor", "[", 
          RowBox[{"irErf", "[", 
           RowBox[{
           "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "0", 
            ",", 
            RowBox[{"2", "^", "dMaxBits"}], ",", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "b"}], "}"}], ",", 
              RowBox[{"erfA", "[", 
               RowBox[{"a", ",", "b", ",", 
                RowBox[{"Precision", "\[Rule]", 
                 RowBox[{"10", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "precision"}], ")"}]}]}]}], "]"}]}], "]"}]}], 
           "]"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"TraditionalForm", "/@", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"2", "^", "dMaxBits"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", 
         RowBox[{"sMax", "-", "sMin", "+", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"sMin", ",", 
                RowBox[{"2", "^", "dMaxBits"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sMax", ",", 
                RowBox[{"2", "^", "dMaxBits"}]}], "}"}]}], "}"}], "]"}], ",", 
           " ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"sMin", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sMax", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rErf", "[", 
           RowBox[{
           "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "0", 
            ",", 
            RowBox[{"2", "^", "dMaxBits"}], ",", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "b"}], "}"}], ",", 
              RowBox[{"erfA", "[", 
               RowBox[{"a", ",", "b", ",", 
                RowBox[{"Precision", "\[Rule]", 
                 RowBox[{"10", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "precision"}], ")"}]}]}]}], "]"}]}], "]"}]}], 
           "]"}], " ", "-", " ", 
          RowBox[{"rErf", "[", 
           RowBox[{
           "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", "0", 
            ",", 
            RowBox[{"2", "^", "dMaxBits"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", "\"\<Error\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", 
         RowBox[{"sMax", "-", "sMin", "+", "1"}]}]}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"precision", ",", "12"}], "}"}], ",", "1", ",", "12", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMaxBits", ",", "16"}], "}"}], ",", "1", ",", "64", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sMax", "+", "sMin"}], ")"}], "/", "2"}]}], "}"}], ",", 
     "sMin", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "1"}], "}"}], ",", "1", ",", "10", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5691470095018253`*^9, 3.5691471003714733`*^9}, {
   3.569147279402801*^9, 3.569147342540053*^9}, {3.569147384538507*^9, 
   3.569147527907358*^9}, {3.569148134792432*^9, 3.569148151791751*^9}, {
   3.569157125468733*^9, 3.569157198407667*^9}, {3.5691575629067783`*^9, 
   3.569157563436335*^9}, {3.569157620491919*^9, 3.5691576329634123`*^9}, {
   3.569163285844842*^9, 3.5691632862886257`*^9}, {3.569163599627386*^9, 
   3.569163630542634*^9}, {3.56916434917693*^9, 3.569164359775202*^9}, {
   3.569177791235414*^9, 3.569177793528985*^9}, {3.5691779526266813`*^9, 
   3.569177954095496*^9}, {3.569178004372439*^9, 3.569178099175508*^9}, {
   3.569180601152913*^9, 3.5691806014335747`*^9}, {3.569180785872301*^9, 
   3.569180804075626*^9}, {3.5691810179593973`*^9, 3.569181075616506*^9}, 
   3.569181116882955*^9, {3.5691812647692413`*^9, 3.569181265403607*^9}, {
   3.5692243919171867`*^9, 3.569224411629545*^9}, {3.569225063945229*^9, 
   3.569225073373672*^9}, {3.5692254619042387`*^9, 3.569225472129133*^9}, {
   3.569225509167453*^9, 3.5692255418166027`*^9}, {3.569226421344121*^9, 
   3.569226423399824*^9}, {3.569232518717724*^9, 3.569232523442524*^9}, {
   3.5700124392230797`*^9, 3.570012439604431*^9}, {3.570028117291822*^9, 
   3.570028241533956*^9}, {3.570028372961295*^9, 3.570028401830307*^9}, {
   3.570028459710037*^9, 3.570028568068797*^9}, 3.570028601851141*^9, {
   3.570029015120131*^9, 3.570029025039267*^9}, {3.5700294085186987`*^9, 
   3.5700294275243607`*^9}, {3.570030526971298*^9, 3.570030615460878*^9}, {
   3.5700306522748957`*^9, 3.570030738310751*^9}, 3.570032098884804*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "t", ",", "tt", ",", "erfP", ",", " ", "erfH", ",", "erfA", ",", "error"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"it", "[", 
   RowBox[{"a_", ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"b", "/", 
   RowBox[{"(", 
    RowBox[{"b", "+", 
     RowBox[{"a", "*", 
      RowBox[{"P", "[", "opt", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfP", "[", 
   RowBox[{"a_", ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"A5", "[", "opt", "]"}], "*", 
               RowBox[{"t", "[", 
                RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "-", 
              RowBox[{"A4", "[", "opt", "]"}]}], ")"}], "*", 
            RowBox[{"t", "[", 
             RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], ")"}], "+", 
          RowBox[{"A3", "[", "opt", "]"}]}], ")"}], "*", 
        RowBox[{"t", "[", 
         RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "-", 
       RowBox[{"A2", "[", "opt", "]"}]}], ")"}], "*", 
     RowBox[{"t", "[", 
      RowBox[{"a", ",", "b", ",", "opt"}], "]"}]}], "+", 
    RowBox[{"A1", "[", "opt", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfH", "[", 
   RowBox[{"a_", ",", "b_", ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"erfP", "[", 
     RowBox[{"a", ",", "b", ",", "opt"}], "]"}], "*", 
    RowBox[{"t", "[", 
     RowBox[{"a", ",", "b", ",", "opt"}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "*", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "/", 
       RowBox[{"b", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"Times", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"b_", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "b", ",", "opt"}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "/", "b"}], "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "b"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"a", "/", "b"}], "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox["a_",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "1", ",", "opt"}], "]"}], ",", 
       RowBox[{"a", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "1"}], "]"}]}], ",", 
       RowBox[{"a", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfA", "[", 
   RowBox[{
    StyleBox["a_",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", 
    RowBox[{"b_", "/;", 
     RowBox[{"b", "\[GreaterEqual]", "0"}]}], ",", "opt___Rule"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfH", "[", 
        RowBox[{"a", ",", "b", ",", "opt"}], "]"}], ",", 
       RowBox[{"a", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfH", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "b"}], "]"}]}], ",", 
       RowBox[{"a", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"error", "[", 
    RowBox[{
     TagBox[
      StyleBox["a_",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm], ",", "opt___Rule"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"erfA", "[", 
     RowBox[{"a", ",", "opt"}], "]"}], "-", 
    RowBox[{"Erf", "[", "a", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.567954387984118*^9, 3.567954486196499*^9}, {
   3.567954541964328*^9, 3.567954551827251*^9}, {3.567954585259798*^9, 
   3.567954593129197*^9}, {3.5679547142804193`*^9, 3.567954744500011*^9}, {
   3.5679548048673487`*^9, 3.567954824045288*^9}, {3.567954910063135*^9, 
   3.5679549851871233`*^9}, 3.567955022402462*^9, {3.567955263579754*^9, 
   3.567955306469591*^9}, {3.5679608192926197`*^9, 3.567960888799561*^9}, {
   3.56914588259057*^9, 3.5691459986501904`*^9}, {3.5691460731425123`*^9, 
   3.569146098641284*^9}, {3.569174304755027*^9, 3.569174305692025*^9}, 
   3.569330203766574*^9, {3.569330456121298*^9, 3.569330479254656*^9}, {
   3.5693305099097767`*^9, 3.569330537648653*^9}, {3.569330903254122*^9, 
   3.569330903660243*^9}, {3.5693310597013083`*^9, 3.569331080543128*^9}, {
   3.5693312419746933`*^9, 3.569331246005768*^9}, {3.5696653017115097`*^9, 
   3.569665320749776*^9}, 3.5696653648086863`*^9, {3.569666142887783*^9, 
   3.569666160834526*^9}, {3.569666904854218*^9, 3.56966694716637*^9}, 
   3.5700144412517557`*^9, {3.570015153394107*^9, 3.5700151710085*^9}, {
   3.5700157173346443`*^9, 3.570015720426663*^9}, {3.5700159522835617`*^9, 
   3.570015972250021*^9}, {3.570021814183116*^9, 3.570021815846281*^9}, {
   3.570022050992342*^9, 3.570022071742342*^9}, {3.570022126847982*^9, 
   3.570022193805861*^9}, {3.5700222480275993`*^9, 3.570022268612879*^9}, 
   3.5700237293661957`*^9, {3.570023837075289*^9, 3.570023886898385*^9}, {
   3.5700239452006617`*^9, 3.570023957199198*^9}, {3.570023999209383*^9, 
   3.5700240058474894`*^9}, {3.570024065590289*^9, 3.5700240766370287`*^9}, 
   3.5700241143154583`*^9, {3.570024202396468*^9, 3.570024216827064*^9}, {
   3.5700248834815617`*^9, 3.5700248886881*^9}, {3.5700250488026114`*^9, 
   3.570025062485299*^9}, {3.5700253260623293`*^9, 3.570025345956655*^9}, {
   3.570025428618198*^9, 3.570025429314171*^9}, {3.570025489607601*^9, 
   3.570025594383959*^9}, {3.570025627750514*^9, 3.570025705398485*^9}, {
   3.570025835810117*^9, 3.5700258385927896`*^9}, {3.5700258690253077`*^9, 
   3.5700258875696297`*^9}, {3.570026036059374*^9, 3.5700260427953176`*^9}, {
   3.5700288542440147`*^9, 3.5700288705483103`*^9}, {3.570032200961035*^9, 
   3.5700322166059027`*^9}, {3.570106185465391*^9, 3.57010618856807*^9}, {
   3.570106685097187*^9, 3.5701066924330177`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"erfH", ",", "erfHs", ",", "yRange"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfH", "[", "a_", "]"}], ":=", 
  RowBox[{"yRange", "-", 
   RowBox[{"yRange", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"aa5", " ", 
                 RowBox[{"tt", "[", "a", "]"}]}], "-", "aa4"}], ")"}], " ", 
              RowBox[{"tt", "[", "a", "]"}]}], ")"}], "+", "aa3"}], ")"}], 
          " ", 
          RowBox[{"tt", "[", "a", "]"}]}], "-", "aa2"}], ")"}], " ", 
       RowBox[{"tt", "[", "a", "]"}]}], "+", "aa1"}], ")"}], " ", 
    RowBox[{"tt", "[", "a", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfHs", "[", "a_", "]"}], ":=", 
  RowBox[{"yRange", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"aa5", " ", 
                 RowBox[{"yRange", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "16"}], ")"}]}], " ", 
                 RowBox[{"tt", "[", "a", "]"}]}], "-", 
                RowBox[{"aa4", " ", 
                 RowBox[{"yRange", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "16"}], ")"}]}]}]}], ")"}], " ", 
              RowBox[{"yRange", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "16"}], ")"}]}], " ", 
              RowBox[{"tt", "[", "a", "]"}]}], ")"}], "+", 
            RowBox[{"aa3", " ", 
             RowBox[{"yRange", "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "8"}], ")"}]}]}]}], " ", ")"}], " ", 
          RowBox[{"yRange", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "8"}], ")"}]}], " ", 
          RowBox[{"tt", "[", "a", "]"}]}], "-", 
         RowBox[{"aa2", " ", 
          RowBox[{"yRange", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}]}]}], ")"}], " ", 
       RowBox[{"yRange", "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "4"}], ")"}]}], " ", 
       RowBox[{"tt", "[", "a", "]"}]}], "+", 
      RowBox[{"aa1", " ", 
       RowBox[{"yRange", "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}]}]}], ")"}], " ", 
    RowBox[{"yRange", "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}], 
    RowBox[{"tt", "[", "a", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.570040938978887*^9, 3.570041086109893*^9}, {
  3.570041158140832*^9, 3.5700411983000603`*^9}, {3.57004123452396*^9, 
  3.570041263745513*^9}}],

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"erfHs", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"erfH", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.570041096246312*^9, 3.57004113913942*^9}, {
  3.5700412918575363`*^9, 3.570041299662443*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"erfH", "[", "a_", "]"}], ":=", 
   RowBox[{"yRange", "-", 
    RowBox[{"yRange", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"aa5", " ", 
                  RowBox[{"it", "[", "a", "]"}]}], "-", "aa4"}], ")"}], " ", 
               RowBox[{"it", "[", "a", "]"}]}], ")"}], "+", "aa3"}], ")"}], 
           " ", 
           RowBox[{"it", "[", "a", "]"}]}], "-", "aa2"}], ")"}], " ", 
        RowBox[{"it", "[", "a", "]"}]}], "+", "aa1"}], ")"}], " ", 
     RowBox[{"it", "[", "a", "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "1"}], " ", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "/", 
        RowBox[{"xRange", "^", "2"}]}]}], "]"}]}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"erfH", "[", "a_", "]"}], ":=", 
    RowBox[{"yRange", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", " ", 
                 RowBox[{
                  RowBox[{"it", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"aa5N", "  ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "16"}], ")"}]}]}], ",", "aa5D"}], "]"}],
                   "-", 
                  RowBox[{"aa4", " ", 
                   RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "16"}], ")"}]}]}]}], ")"}], " ", 
                RowBox[{"yRange", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "16"}], ")"}]}], " ", 
                RowBox[{"it", "[", "a", "]"}]}], ")"}], "+", 
              RowBox[{"aa3", " ", 
               RowBox[{"yRange", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "8"}], ")"}]}]}]}], " ", ")"}], " ", 
            RowBox[{"yRange", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "8"}], ")"}]}], " ", 
            RowBox[{"it", "[", "a", "]"}]}], "-", 
           RowBox[{"aa2", " ", 
            RowBox[{"yRange", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}]}], ")"}], " ", 
         RowBox[{"yRange", "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], " ", 
         RowBox[{"it", "[", "a", "]"}]}], "+", 
        RowBox[{"aa1", " ", 
         RowBox[{"yRange", "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}]}]}], ")"}], " ", 
      RowBox[{"yRange", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}], 
      RowBox[{"it", "[", "a", "]"}]}]}]}], ";"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "setUprErf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUprErf", "[", " ", 
   RowBox[{
   "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_", ",", "yMax_", 
    ",", "prec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "aa5", ",", "aa4", ",", "aa3", ",", "aa2", ",", "aa1", ",", "ppD", ",", 
      "ppN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{
      "yRange", ",", "xRange", ",", " ", "erfN", ",", "erfD", ",", " ", "it", 
       ",", "erfH", ",", "rErf"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"yRange", " ", "=", " ", 
      RowBox[{"yMax", "-", "yMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xRange", " ", "=", " ", 
      RowBox[{"xMax", "-", "xMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"erfN", " ", "=", " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"g", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"erfD", " ", "=", " ", 
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "c"}], "+", "xMax"}], ")"}], "/", "xRange"}]}], 
        "]"}], "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"g", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"it", "[", 
           RowBox[{"a_", ",", "n_", ",", "d_"}], "]"}], ":=", " ", 
          RowBox[{"n", " ", "ppD", " ", 
           RowBox[{"xRange", "/", 
            RowBox[{"(", 
             RowBox[{"d", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ppD", " ", "xRange"}], "+", 
                RowBox[{"a", " ", "ppN"}]}], ")"}]}], ")"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"erfH", "[", "a_", "]"}], ":=", 
          RowBox[{"yRange", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"it", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"aa4D", " ", "aa5N", "  ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "16"}], ")"}]}]}], ",", "aa5D"}], "]"}],
                     "-", 
                    RowBox[{"aa4N", " ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "16"}], ")"}]}]}]}], ")"}], "  ", 
                    RowBox[{"it", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"aa3D", " ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "16"}], ")"}]}]}], ",", "aa4D"}], 
                    "]"}]}], ")"}], "+", 
                    RowBox[{"aa3N", " ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "8"}], ")"}]}]}]}], " ", ")"}], "  ", 
                  RowBox[{"it", "[", 
                   RowBox[{"a", ",", " ", 
                    RowBox[{"aa2D", " ", 
                    RowBox[{"yRange", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "8"}], ")"}]}]}], ",", " ", "aa3D"}], 
                   "]"}]}], "-", 
                 RowBox[{"aa2N", " ", 
                  RowBox[{"yRange", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}]}], ")"}], "  ", 
               RowBox[{"it", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"aa1D", " ", 
                  RowBox[{"yRange", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ",", "aa2D"}], 
                "]"}]}], "+", 
              RowBox[{"aa1N", " ", 
               RowBox[{"yRange", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}]}]}], ")"}], 
            RowBox[{"it", "[", 
             RowBox[{"a", ",", " ", 
              RowBox[{"yRange", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], ",", "aa1D"}], "]"}]}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErf", "[", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{
            RowBox[{"(", "   ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Sign", "[", 
                 RowBox[{"x", "-", "c"}], "]"}], "  ", 
                RowBox[{"erfH", "[", 
                 RowBox[{"grad", " ", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"x", "-", "const"}], "]"}]}], "]"}]}], " ", "+", 
               " ", 
               RowBox[{"yRange", " ", "erfN"}]}], ")"}], ")"}], "/", " ", 
            "erfD"}]}]}], ";"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ppN", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"P", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"ppD", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"P", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa1", "\[Rule]", 
          RowBox[{"A1", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"aa2", "\[Rule]", 
          RowBox[{"A2", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"aa3", "\[Rule]", 
          RowBox[{"A3", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"aa4", "\[Rule]", 
          RowBox[{"A4", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"aa5", "\[Rule]", 
          RowBox[{"A5", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"aa1N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"A1", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa2N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"A2", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa3N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"A3", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa4N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"A4", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa5N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"A5", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"aa1D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"A1", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa2D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"A2", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa3D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"A3", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa4D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"A4", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"aa5D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"A5", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"const", " ", "\[Rule]", " ", "c"}], ",", 
         RowBox[{"grad", " ", "\[Rule]", " ", "g"}]}], "}"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.57003228012648*^9, 3.570032336120207*^9}, {
   3.57003253148232*^9, 3.57003256718784*^9}, {3.57003280961154*^9, 
   3.570032832492728*^9}, {3.570032901580803*^9, 3.570032933076577*^9}, {
   3.570032966185156*^9, 3.5700330837983437`*^9}, {3.570033130536457*^9, 
   3.5700331477496357`*^9}, {3.5700332087343597`*^9, 3.57003321996568*^9}, {
   3.5700333130586023`*^9, 3.570033327553337*^9}, {3.570033433694633*^9, 
   3.570033468516816*^9}, {3.570035920640025*^9, 3.57003599423876*^9}, 
   3.570036133626069*^9, {3.570037779070929*^9, 3.5700378073542957`*^9}, {
   3.570038102604189*^9, 3.5700381723397923`*^9}, {3.570038275691358*^9, 
   3.570038290440669*^9}, {3.57003832314312*^9, 3.570038323255533*^9}, {
   3.570038671512047*^9, 3.570038791186894*^9}, {3.570038869625057*^9, 
   3.5700388746818047`*^9}, {3.5700389279681463`*^9, 
   3.5700390844988813`*^9}, {3.570039132241568*^9, 3.570039148889515*^9}, {
   3.570039195920781*^9, 3.570039307277523*^9}, {3.57003934039638*^9, 
   3.570039365003529*^9}, {3.5700395913276777`*^9, 3.570039622181141*^9}, {
   3.57003966608486*^9, 3.5700397086924*^9}, 3.5700398325589933`*^9, {
   3.570040081118514*^9, 3.570040107308853*^9}, {3.570040370967059*^9, 
   3.570040388958068*^9}, {3.570040444743874*^9, 3.570040464774212*^9}, {
   3.570040512948209*^9, 3.570040565851844*^9}, 3.570040871071178*^9, {
   3.5700413573434143`*^9, 3.5700414121751957`*^9}, {3.570041446093754*^9, 
   3.570041459713107*^9}, {3.570041851744532*^9, 3.57004194876369*^9}, {
   3.570042049422327*^9, 3.570042072396523*^9}, {3.570042190665895*^9, 
   3.57004220458107*^9}, {3.5700422590508423`*^9, 3.570042379106318*^9}, {
   3.570042436732237*^9, 3.570042440262703*^9}, {3.570042477085856*^9, 
   3.570042493524295*^9}, {3.570043101824265*^9, 3.570043107652712*^9}, {
   3.570044427925334*^9, 3.570044455595524*^9}, {3.570044518385771*^9, 
   3.570044519762212*^9}, {3.5700447023337507`*^9, 3.5700448531069193`*^9}, {
   3.570044928567856*^9, 3.5700449857655363`*^9}, {3.5700466825104856`*^9, 
   3.570046687249654*^9}, {3.570090836977518*^9, 3.570090841672826*^9}, {
   3.5700944955606203`*^9, 3.570094498149605*^9}}],

Cell[BoxData[
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{
  "2", ",", "128", ",", "0", ",", "255", ",", "0", ",", "128", ",", "0.001"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.570033280576673*^9, 3.57003330657465*^9}, {
   3.570045069528812*^9, 3.570045077208572*^9}, 3.5700452443416*^9, 
   3.570045278323248*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rErf", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570040412045538*^9, 3.5700404161805353`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"it", "[", 
    RowBox[{"2", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{"x", "-", "128"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570033335593235*^9, 3.5700333766950006`*^9}, {
  3.570039644929181*^9, 3.570039645024293*^9}, {3.570040141171678*^9, 
  3.57004014270854*^9}, {3.570040309521985*^9, 3.570040318182303*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Difficult to round so", "Subtitle",
 CellChangeTimes->{{3.570094598139406*^9, 3.5700946735746403`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
    "a1", " ", "-", " ", "a2", " ", "+", " ", "a3", " ", "-", " ", "a4", " ", 
     "+", " ", "a5"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C1", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"c1", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", " ", "=", " ", 
   RowBox[{"p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "*", "a1"}], " ", "-", " ", 
      RowBox[{"3", "*", "a2"}], " ", "+", " ", 
      RowBox[{"2", "*", "a3"}], " ", "-", " ", "a4"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C2", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"c2", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", "*", "a1"}], " ", "-", " ", 
      RowBox[{"3", "*", "a2"}], " ", "+", " ", "a3"}], ")"}], "*", 
    RowBox[{"p", "^", "2"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C3", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"c3", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c4", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "*", "a1"}], " ", "-", " ", "a2"}], ")"}], "*", 
    RowBox[{"p", "^", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C4", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"c4", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c5", " ", "=", " ", 
   RowBox[{"a1", "*", 
    RowBox[{"p", "^", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C5", "[", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"c5", ",", 
     RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.569331903245982*^9, 3.569332026925955*^9}, {
   3.569332099122348*^9, 3.569332122731699*^9}, 3.569332155000289*^9, {
   3.569332599055818*^9, 3.5693326046994467`*^9}, {3.5693328322509813`*^9, 
   3.5693328738145027`*^9}, {3.569332963831873*^9, 3.5693329723668747`*^9}, {
   3.5693330477635803`*^9, 3.569333129952269*^9}, {3.5693331951997766`*^9, 
   3.5693332903092613`*^9}, {3.569333327002228*^9, 3.569333346459755*^9}, {
   3.569604606233362*^9, 3.569604606895369*^9}, {3.569608719835438*^9, 
   3.569608774486961*^9}, {3.5696089780834503`*^9, 3.5696089786257353`*^9}, {
   3.569657855729267*^9, 3.5696578939896193`*^9}, {3.5696580367074623`*^9, 
   3.569658141770515*^9}, {3.569660494012246*^9, 3.569660494762825*^9}, {
   3.5696642692121897`*^9, 3.5696642695783854`*^9}, {3.569932875039722*^9, 
   3.569932887975206*^9}, {3.56993295219481*^9, 3.569932966298489*^9}, {
   3.569933005786672*^9, 3.569933124080367*^9}, 3.570004780625547*^9, {
   3.5700951365460577`*^9, 3.570095182983076*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Precision\>\"", ",", "\"\<C1\>\"", ",", "\"\<C2\>\"", ",", 
      "\"\<C3\>\"", ",", "\"\<C4\>\"", ",", "\"\<C5\>\"", ",", "\"\<P\>\""}], 
     "}"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pre", "=", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "prec"}], ")"}]}]}], ";", 
        RowBox[{"{", 
         RowBox[{"pre", ",", 
          RowBox[{"C1", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"C2", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"C3", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"C4", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"C5", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}], ",", 
          RowBox[{"P", "[", 
           RowBox[{"Precision", "\[Rule]", "pre"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"prec", ",", "1", ",", "12"}], "}"}]}], "]"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570003741779357*^9, 3.570003871617214*^9}, {
   3.5700040968693943`*^9, 3.570004143649362*^9}, {3.570015668918866*^9, 
   3.570015679918401*^9}, 3.5700952728840227`*^9, {3.5700953814303427`*^9, 
   3.57009539763801*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"t", ",", "erfPC", ",", " ", "erfHC", ",", "erfA", ",", "error"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], " ", "x"}]}],
     ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
  RowBox[{"b", "/", 
   RowBox[{"(", 
    RowBox[{"b", "+", 
     RowBox[{"a", "*", 
      RowBox[{"P", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfPC", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"C1", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], " ", "*", 
      RowBox[{"b", "^", "4"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"C2", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], "a", "*", 
      RowBox[{"b", "^", "3"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"C3", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], "*", 
      RowBox[{"a", "^", "2"}], "*", 
      RowBox[{"b", "^", "2"}]}], "+", " ", 
     RowBox[{
      RowBox[{"C4", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], "*", 
      RowBox[{"a", "^", "3"}], "*", "b"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"C5", "[", 
       RowBox[{"Precision", "\[Rule]", 
        RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}], "*", 
      RowBox[{"a", "^", "4"}]}]}], ")"}], "/", "\n", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", " ", "+", " ", 
      RowBox[{"a", "*", 
       RowBox[{"P", "[", 
        RowBox[{"Precision", "\[Rule]", 
         RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}]}], ")"}], 
    "^", "4"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfHC", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"erfPC", "[", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"Precision", "\[Rule]", 
       RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], "]"}], "*", 
    RowBox[{"t", "[", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"Precision", "\[Rule]", 
       RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "*", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "/", 
       RowBox[{"b", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfC", "[", 
   RowBox[{
    StyleBox["a_",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True], ",", 
    RowBox[{"b_", "/;", 
     RowBox[{"b", "\[GreaterEqual]", "0"}]}], ",", 
    RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"erfHC", "[", 
        RowBox[{"a", ",", "b", ",", 
         RowBox[{"Precision", "\[Rule]", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], "]"}], ",", 
       RowBox[{"a", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"erfHC", "[", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "b", ",", 
          RowBox[{"Precision", "\[Rule]", 
           RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"a", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"error", "[", 
    RowBox[{
     TagBox[
      StyleBox["a_",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm], ",", 
     RowBox[{"OptionsPattern", "[", "Rat", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"erfC", "[", 
     RowBox[{"a", ",", "1", ",", 
      RowBox[{"Precision", "\[Rule]", 
       RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], "]"}], "-", 
    RowBox[{"Erf", "[", "a", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5693321066899977`*^9, 3.569332119116696*^9}, 
   3.569332150804599*^9, {3.5693322480465727`*^9, 3.569332297342484*^9}, {
   3.569332340756776*^9, 3.569332390244362*^9}, {3.5693325123536987`*^9, 
   3.5693325243840446`*^9}, {3.569333060404193*^9, 3.5693330606662273`*^9}, {
   3.5693333552373037`*^9, 3.569333379952935*^9}, {3.569604086248927*^9, 
   3.569604092254404*^9}, {3.5696041917543573`*^9, 3.569604203195603*^9}, {
   3.569604302722146*^9, 3.569604334166944*^9}, {3.569604364921151*^9, 
   3.569604387599523*^9}, {3.569606341276003*^9, 3.569606413309211*^9}, {
   3.569609115968154*^9, 3.5696091170938597`*^9}, {3.569609148010236*^9, 
   3.56960915254029*^9}, {3.5700108604076767`*^9, 3.570010952434375*^9}, {
   3.570010995900055*^9, 3.5700110106367702`*^9}, 3.570011046744576*^9, {
   3.5700110831710176`*^9, 3.570011137474102*^9}, {3.570095560553651*^9, 
   3.57009557977501*^9}, {3.570105670919911*^9, 3.570105697411189*^9}, {
   3.570105737579247*^9, 3.570105802524622*^9}, {3.570105882400382*^9, 
   3.570105904849041*^9}, {3.570106102601121*^9, 3.570106103664743*^9}, {
   3.5701062003150883`*^9, 3.5701062476042547`*^9}, {3.570106300924605*^9, 
   3.570106301485515*^9}, {3.570106827539897*^9, 3.570106884656077*^9}, 
   3.57010696685607*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"erfC", "[", 
         RowBox[{"x", ",", "1", ",", 
          RowBox[{"Precision", " ", "\[Rule]", " ", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "prec"}], ")"}]}]}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"error", "[", 
          RowBox[{
           RowBox[{"x", "/", "1"}], ",", 
           RowBox[{"Precision", " ", "\[Rule]", " ", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}]}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"prec", ",", "1", ",", "12", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5691470095018253`*^9, 3.5691471003714733`*^9}, {
   3.569147279402801*^9, 3.569147342540053*^9}, {3.569147384538507*^9, 
   3.569147527907358*^9}, {3.569148134792432*^9, 3.569148151791751*^9}, {
   3.569157125468733*^9, 3.569157198407667*^9}, {3.5691575629067783`*^9, 
   3.569157563436335*^9}, {3.569157620491919*^9, 3.5691576329634123`*^9}, {
   3.569163285844842*^9, 3.5691632862886257`*^9}, {3.569163599627386*^9, 
   3.569163630542634*^9}, {3.56916434917693*^9, 3.569164359775202*^9}, {
   3.569177791235414*^9, 3.569177793528985*^9}, {3.5691779526266813`*^9, 
   3.569177954095496*^9}, {3.569178004372439*^9, 3.569178099175508*^9}, {
   3.569180601152913*^9, 3.5691806014335747`*^9}, {3.569180785872301*^9, 
   3.569180804075626*^9}, {3.5691810179593973`*^9, 3.569181075616506*^9}, 
   3.569181116882955*^9, {3.5691812647692413`*^9, 3.569181265403607*^9}, {
   3.5692243919171867`*^9, 3.569224411629545*^9}, {3.569225063945229*^9, 
   3.569225073373672*^9}, {3.5692254619042387`*^9, 3.569225472129133*^9}, {
   3.569225509167453*^9, 3.5692255418166027`*^9}, {3.569226421344121*^9, 
   3.569226423399824*^9}, {3.569232518717724*^9, 3.569232523442524*^9}, {
   3.569605727408783*^9, 3.5696057377892733`*^9}, {3.5696068792028093`*^9, 
   3.5696068797048893`*^9}, {3.569607637793084*^9, 3.5696076402322607`*^9}, {
   3.5696078060834084`*^9, 3.569607875868195*^9}, {3.569607924452837*^9, 
   3.5696079799124937`*^9}, {3.569608111895574*^9, 3.569608139092156*^9}, {
   3.5696083792410803`*^9, 3.569608419869338*^9}, {3.569608554509397*^9, 
   3.569608572530209*^9}, {3.569659360186203*^9, 3.569659366428006*^9}, {
   3.5696595693087*^9, 3.569659573669738*^9}, {3.5696597806883307`*^9, 
   3.569659867758747*^9}, {3.569659960691774*^9, 3.569659961082645*^9}, {
   3.569660031276078*^9, 3.569660105491976*^9}, {3.56966037680221*^9, 
   3.569660381257656*^9}, {3.569660610052566*^9, 3.5696606111166573`*^9}, {
   3.569660650399435*^9, 3.569660663878697*^9}, {3.570024484902439*^9, 
   3.5700245021879*^9}, {3.570024569795611*^9, 3.570024823754938*^9}, {
   3.570024999670397*^9, 3.5700250044049873`*^9}, {3.570025903453356*^9, 
   3.570025904051749*^9}, {3.570025976189642*^9, 3.5700259960824537`*^9}, {
   3.570026059064749*^9, 3.5700260617836113`*^9}, {3.5700279395296097`*^9, 
   3.570027941245701*^9}, {3.570106164562955*^9, 3.570106171733115*^9}, {
   3.570106908455203*^9, 3.570106929797411*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "setUprErf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUprErf", "[", " ", 
   RowBox[{
   "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_", ",", "yMax_", 
    ",", "prec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cc5", ",", "cc4", ",", "cc3", ",", "cc2", ",", "cc1", ",", "ppD", ",", 
      "ppN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{
      "yRange", ",", "xRange", ",", " ", "erfN", ",", "erfD", ",", " ", "it", 
       ",", "erfH", ",", "rErf", ",", "erfHCa"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yRange", " ", "=", " ", 
      RowBox[{"yMax", "-", "yMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xRange", " ", "=", " ", 
      RowBox[{"xMax", "-", "xMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"erfN", " ", "=", " ", 
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Erf", "[", 
          RowBox[{"g", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", "yRange"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"erfD", " ", "=", "  ", 
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"Erf", "[", 
           RowBox[{"g", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "c"}], "+", "xMax"}], ")"}], "/", "xRange"}]}], 
           "]"}], "+", 
          RowBox[{"Erf", "[", 
           RowBox[{"g", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", "yRange"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"erfHC", "[", 
           RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
          RowBox[{"1", "-", 
           RowBox[{"b", " ", "ppD", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"cc1", "  ", 
               RowBox[{"b", "^", "4"}]}], " ", "+", "  ", 
              RowBox[{"cc2", " ", "a", " ", 
               RowBox[{"b", "^", "3"}]}], " ", "+", "  ", 
              RowBox[{"cc3", "  ", 
               RowBox[{"a", "^", "2"}], " ", 
               RowBox[{"b", "^", "2"}]}], "+", "  ", 
              RowBox[{"cc4", "  ", 
               RowBox[{"a", "^", "3"}], " ", "b"}], " ", "+", "  ", 
              RowBox[{"cc5", "  ", 
               RowBox[{"a", "^", "4"}]}]}], ")"}], " ", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "1"}], " ", 
               RowBox[{
                RowBox[{"a", "^", "2"}], "/", 
                RowBox[{"b", "^", "2"}]}]}], "]"}], "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ppD", " ", "b"}], " ", "+", " ", 
                RowBox[{"a", " ", "ppN"}]}], " ", ")"}], "^", "5"}]}]}]}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"erfHCs", "[", "a_", "]"}], ":=", 
          RowBox[{"1", "-", 
           RowBox[{"xxRange", " ", 
            RowBox[{"ppD", "^", "5"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"cc1", "  ", 
               RowBox[{"xxRange", "^", "4"}]}], " ", "+", "  ", 
              RowBox[{"cc2", " ", "a", " ", 
               RowBox[{"xxRange", "^", "3"}]}], " ", "+", "  ", 
              RowBox[{"cc3", "  ", 
               RowBox[{"a", "^", "2"}], " ", 
               RowBox[{"xxRange", "^", "2"}]}], "+", "  ", 
              RowBox[{"cc4", "  ", 
               RowBox[{"a", "^", "3"}], " ", "xxRange"}], " ", "+", "  ", 
              RowBox[{"cc5", "  ", 
               RowBox[{"a", "^", "4"}]}]}], ")"}], " ", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "1"}], " ", 
               RowBox[{
                RowBox[{"a", "^", "2"}], "/", 
                RowBox[{"xxRange", "^", "2"}]}]}], "]"}], "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ppD", " ", "xxRange"}], " ", "+", " ", 
                RowBox[{"a", " ", "ppN"}]}], " ", ")"}], "^", "5"}]}]}]}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"erfHCa", "[", "a_", "]"}], ":=", 
          RowBox[{"1", "-", 
           RowBox[{"xxRange", " ", 
            RowBox[{"ppD", "^", "5"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"cc1", "  ", 
               RowBox[{"xxRange", "^", "4"}]}], " ", "+", "  ", 
              RowBox[{"cc2", " ", "a", " ", 
               RowBox[{"xxRange", "^", "3"}]}], " ", "+", "  ", 
              RowBox[{"cc3", "  ", 
               RowBox[{"a", "^", "2"}], " ", 
               RowBox[{"xxRange", "^", "2"}]}], "+", "  ", 
              RowBox[{"cc4", "  ", 
               RowBox[{"a", "^", "3"}], " ", "xxRange"}], " ", "+", "  ", 
              RowBox[{"cc5", "  ", 
               RowBox[{"a", "^", "4"}]}]}], ")"}], " ", 
            RowBox[{"exp", "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ppD", " ", "xxRange"}], " ", "+", " ", 
                RowBox[{"a", " ", "ppN"}]}], " ", ")"}], "^", "5"}]}]}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErf", "[", "  ", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sign", "[", 
                  RowBox[{"x", "-", "const"}], "]"}], "   ", 
                 RowBox[{"erfHCs", "[", 
                  RowBox[{"grad", " ", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"x", "-", "const"}], "]"}]}], "]"}]}], " ", "+", 
                "  ", "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfA", "[", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sign", "[", 
                  RowBox[{"x", "-", "const"}], "]"}], "   ", 
                 RowBox[{"erfHCa", "[", 
                  RowBox[{"grad", " ", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"x", "-", "const"}], "]"}]}], "]"}]}], " ", "+", 
                "  ", "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfPos", "[", "  ", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"erfHCs", "[", 
                 RowBox[{"grad", " ", "x"}], "]"}], " ", "+", "  ", "erfNN"}],
                ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfAPos", "[", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"erfHCa", "[", 
                 RowBox[{"grad", " ", "x"}], "]"}], " ", "+", "  ", "erfNN"}],
                ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfNeg", "[", "  ", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{"erfHCs", "[", 
                  RowBox[{"grad", " ", "x"}], "]"}]}], " ", "+", "  ", 
                "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfANeg", "[", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", "   ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{"erfHCa", "[", 
                  RowBox[{"grad", " ", "x"}], "]"}]}], " ", "+", "  ", 
                "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";"}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"exp", " ", "->", 
          RowBox[{"Normal", "[", 
           RowBox[{"Series", "[", " ", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "1"}], " ", 
               RowBox[{
                RowBox[{"a$", "^", "2"}], "/", 
                RowBox[{"xRange", "^", "2"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"a$", ",", "0", ",", 
               RowBox[{"16", 
                RowBox[{"AntiSeries", "[", 
                 RowBox[{"yRange", ",", "xRange"}], "]"}]}]}], "}"}]}], "]"}],
            "]"}]}], ",", 
         RowBox[{"ppN", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"P", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"ppD", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"P", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc1", "\[Rule]", 
          RowBox[{"C1", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"cc2", "\[Rule]", 
          RowBox[{"C2", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"cc3", "\[Rule]", 
          RowBox[{"C3", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"cc4", "\[Rule]", 
          RowBox[{"C4", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         RowBox[{"cc5", "\[Rule]", 
          RowBox[{"C5", "[", 
           RowBox[{"Precision", "\[Rule]", "prec"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cc1N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"C1", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc2N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"C2", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc3N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"C3", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc4N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"C4", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc5N", "\[Rule]", 
          RowBox[{"Numerator", "[", 
           RowBox[{"C5", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"cc1D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"C1", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc2D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"C2", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc3D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"C3", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc4D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"C4", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"cc5D", "\[Rule]", 
          RowBox[{"Denominator", "[", 
           RowBox[{"C5", "[", 
            RowBox[{"Precision", "\[Rule]", "prec"}], "]"}], "]"}]}], ",", 
         RowBox[{"const", " ", "\[Rule]", " ", "c"}], ",", 
         RowBox[{"grad", " ", "\[Rule]", " ", "g"}], ",", 
         RowBox[{"erfNN", " ", "\[Rule]", "erfN"}], ",", 
         RowBox[{"erfDD", "\[Rule]", "erfD"}], ",", 
         RowBox[{"yyRange", " ", "->", " ", 
          RowBox[{"yMax", "-", "yMin"}]}], ",", " ", 
         RowBox[{"xxRange", "->", 
          RowBox[{"xMax", "-", "xMin"}]}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"erfSE", ",", "rErfSE", ",", "rErfSEH"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{
         RowBox[{"erfSE", "[", "a_", "]"}], ":=", "fun"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"fun", "->", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"Apart", "[", 
              RowBox[{"erfHCs", "[", "a", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{
         RowBox[{"rErfSEPos", "[", "a_", "]"}], ":=", "fun"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"fun", "->", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"Apart", "[", 
              RowBox[{"rErfPos", "[", "a", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{
         RowBox[{"rErfSENeg", "[", "a_", "]"}], ":=", "fun"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"fun", "->", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"Apart", "[", 
              RowBox[{"rErfNeg", "[", "a", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rErfSE", "[", "a_", "]"}], "=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rErfSEPos", "[", 
            RowBox[{"a", "-", "c"}], "]"}], ",", 
           RowBox[{"a", "\[GreaterEqual]", " ", "c"}]}], "}"}], ",", 
         RowBox[{"{", "  ", 
          RowBox[{
           RowBox[{"rErfSENeg", "[", 
            RowBox[{"c", "-", "a"}], "]"}], ",", 
           RowBox[{"a", "<", " ", "c"}]}], "}"}]}], "}"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.57003228012648*^9, 3.570032336120207*^9}, {
   3.57003253148232*^9, 3.57003256718784*^9}, {3.57003280961154*^9, 
   3.570032832492728*^9}, {3.570032901580803*^9, 3.570032933076577*^9}, {
   3.570032966185156*^9, 3.5700330837983437`*^9}, {3.570033130536457*^9, 
   3.5700331477496357`*^9}, {3.5700332087343597`*^9, 3.57003321996568*^9}, {
   3.5700333130586023`*^9, 3.570033327553337*^9}, {3.570033433694633*^9, 
   3.570033468516816*^9}, {3.570035920640025*^9, 3.57003599423876*^9}, 
   3.570036133626069*^9, {3.570037779070929*^9, 3.5700378073542957`*^9}, {
   3.570038102604189*^9, 3.5700381723397923`*^9}, {3.570038275691358*^9, 
   3.570038290440669*^9}, {3.57003832314312*^9, 3.570038323255533*^9}, {
   3.570038671512047*^9, 3.570038791186894*^9}, {3.570038869625057*^9, 
   3.5700388746818047`*^9}, {3.5700389279681463`*^9, 
   3.5700390844988813`*^9}, {3.570039132241568*^9, 3.570039148889515*^9}, {
   3.570039195920781*^9, 3.570039307277523*^9}, {3.57003934039638*^9, 
   3.570039365003529*^9}, {3.5700395913276777`*^9, 3.570039622181141*^9}, {
   3.57003966608486*^9, 3.5700397086924*^9}, 3.5700398325589933`*^9, {
   3.570040081118514*^9, 3.570040107308853*^9}, {3.570040370967059*^9, 
   3.570040388958068*^9}, {3.570040444743874*^9, 3.570040464774212*^9}, {
   3.570040512948209*^9, 3.570040565851844*^9}, 3.570040871071178*^9, {
   3.5700413573434143`*^9, 3.5700414121751957`*^9}, {3.570041446093754*^9, 
   3.570041459713107*^9}, {3.570041851744532*^9, 3.57004194876369*^9}, {
   3.570042049422327*^9, 3.570042072396523*^9}, {3.570042190665895*^9, 
   3.57004220458107*^9}, {3.5700422590508423`*^9, 3.570042379106318*^9}, {
   3.570042436732237*^9, 3.570042440262703*^9}, {3.570042477085856*^9, 
   3.570042493524295*^9}, {3.570043101824265*^9, 3.570043107652712*^9}, {
   3.570044427925334*^9, 3.570044455595524*^9}, {3.570044518385771*^9, 
   3.570044519762212*^9}, {3.5700447023337507`*^9, 3.5700448531069193`*^9}, {
   3.570044928567856*^9, 3.5700449857655363`*^9}, {3.5700466825104856`*^9, 
   3.570046687249654*^9}, {3.570090836977518*^9, 3.570090841672826*^9}, {
   3.5700944955606203`*^9, 3.570094498149605*^9}, {3.570107766142322*^9, 
   3.570107778499236*^9}, {3.570107819478167*^9, 3.5701078438256187`*^9}, {
   3.570110028348733*^9, 3.570110032951089*^9}, {3.570110066852873*^9, 
   3.570110139323936*^9}, {3.57011023649969*^9, 3.570110249953717*^9}, {
   3.570111608855895*^9, 3.570111693850877*^9}, {3.570111772273143*^9, 
   3.570111805602332*^9}, {3.5701118581109753`*^9, 3.5701119057552834`*^9}, 
   3.570111950257955*^9, {3.570113820660871*^9, 3.570113843726355*^9}, {
   3.5701139021107197`*^9, 3.57011393233253*^9}, {3.5701140350728283`*^9, 
   3.570114044777429*^9}, {3.570114221238063*^9, 3.5701142227988873`*^9}, 
   3.570114293793108*^9, {3.5701143347551327`*^9, 3.5701143399871483`*^9}, {
   3.57011437836333*^9, 3.57011439532572*^9}, {3.570114449508503*^9, 
   3.570114554997657*^9}, {3.5701145859106092`*^9, 3.5701145924530983`*^9}, {
   3.570114664751753*^9, 3.570114672539975*^9}, {3.570115083374523*^9, 
   3.5701150910204687`*^9}, {3.570115133771728*^9, 3.570115134410604*^9}, {
   3.570115624362628*^9, 3.570115754928274*^9}, {3.570115887128294*^9, 
   3.570115915668722*^9}, {3.5701160240875397`*^9, 3.570116057327841*^9}, {
   3.5701167613039637`*^9, 3.570116761808303*^9}, {3.570120108129221*^9, 
   3.570120116256198*^9}, {3.570120421372403*^9, 3.5701204605090322`*^9}, {
   3.570120592563738*^9, 3.5701206059641542`*^9}, 3.570120702777342*^9, 
   3.570120758532803*^9, {3.570120813635392*^9, 3.570120816250907*^9}, {
   3.570123601400551*^9, 3.57012363908077*^9}, {3.570123685942594*^9, 
   3.570123699974717*^9}, 3.57012374091923*^9, {3.570173979937302*^9, 
   3.570174019305991*^9}, {3.5701747385251217`*^9, 3.570174743493474*^9}, 
   3.5701748029228163`*^9, 3.570174836180851*^9, {3.5701763248303337`*^9, 
   3.570176325459524*^9}, {3.570177922699794*^9, 3.570177923408345*^9}, {
   3.570177961060697*^9, 3.570178015497933*^9}, {3.5701789283218412`*^9, 
   3.570178929694269*^9}, {3.5701795248824*^9, 3.5701796041020317`*^9}, {
   3.570180030927218*^9, 3.5701800315435743`*^9}, {3.5701800818230886`*^9, 
   3.5701801307792387`*^9}, {3.570180216378581*^9, 3.570180219208572*^9}, {
   3.570180328724595*^9, 3.5701803534675093`*^9}, {3.570181203682508*^9, 
   3.5701812559310226`*^9}, {3.570181474006078*^9, 3.570181548579378*^9}, {
   3.570181580409479*^9, 3.570181587617815*^9}, {3.570181675702883*^9, 
   3.5701817084317408`*^9}}],

Cell[BoxData["erfD"], "Input"],

Cell[BoxData[
 RowBox[{"rErfPos", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.570190258675716*^9, 3.570190259659252*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"coeffs", "=", 
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{"rErfSEPos", "[", "a", "]"}], ",", "a"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"N", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.570187557297022*^9, 3.5701875704779654`*^9}, {
  3.5701876027421103`*^9, 3.5701876278364763`*^9}, {3.570187853456731*^9, 
  3.570187917365922*^9}, {3.570187955244982*^9, 3.5701879603964453`*^9}}],

Cell[BoxData[
 RowBox[{"coeffsRootA", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Rationalize", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"coeffs", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "^", 
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"N", "[", 
       RowBox[{"1", "/", 
        RowBox[{"xRange", "^", "2"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "3", ",", 
      RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.570187965169788*^9, 3.570188054002092*^9}, {
  3.57018821771277*^9, 3.570188234662784*^9}, {3.570188281158062*^9, 
  3.570188330532926*^9}, {3.5701884570736*^9, 3.570188480279772*^9}, {
  3.570190434192606*^9, 3.570190456137569*^9}}],

Cell[BoxData[
 RowBox[{"rErfSE", "[", "a", "]"}]], "Input",
 CellChangeTimes->{3.570180316761137*^9}],

Cell[BoxData[
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{
  "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", "128", ",", "0.001"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.570116815055108*^9, 3.5701168155898952`*^9}}],

Cell[BoxData[
 RowBox[{"aErf", "[", 
  RowBox[{
  "x", ",", " ", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", 
   "128"}], "]"}]], "Input",
 CellChangeTimes->{{3.570181904466422*^9, 3.570181904689328*^9}, {
  3.570183301497829*^9, 3.570183306304364*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"rErf", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"rErfSE", "[", "x", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"aErf", "[", 
         RowBox[{
         "x", ",", " ", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", 
          "128"}], "]"}], "]"}], "-", 
       RowBox[{"N", "[", 
        RowBox[{"rErfSE", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570116374174871*^9, 3.5701163791826277`*^9}, 
   3.570116442420089*^9, 3.5701168042813797`*^9, {3.5701739340347147`*^9, 
   3.570173937124034*^9}, {3.570174034590221*^9, 3.570174046710438*^9}, {
   3.570178055809702*^9, 3.570178095666646*^9}, {3.5701833177150583`*^9, 
   3.5701833283916616`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rErf", "[", 
    RowBox[{
    "x_", ",", " ", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_",
      ",", "yMax_", ",", 
     RowBox[{"erf_:", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"Erf", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"yMin", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yMax", "-", "yMin"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"erf", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], ",", 
              RowBox[{"x", "\[GreaterEqual]", "c"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"erf", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"g", " ", 
                   RowBox[{"(", 
                    RowBox[{"c", "-", "x"}], ")"}]}], ")"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ",", 
              RowBox[{"x", "<", "c"}]}], "}"}]}], "}"}], "]"}], "+", 
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}], ")"}], 
     "/", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"erf", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "c"}], "+", "xMax"}], ")"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], "+", 
       RowBox[{"erf", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.570176325497401*^9, 3.5701763258164186`*^9}}],

Cell[CellGroupData[{

Cell["Series Expansion", "Section",
 CellChangeTimes->{{3.5701908161682987`*^9, 3.570190821244463*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Erf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Erf", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Erf", "[", 
    RowBox[{"a", "/", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Erf", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5700122784851933`*^9, 3.570012344788007*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"aErf", "[", 
      RowBox[{
      "x_", ",", " ", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", 
       "yMin_", ",", "yMax_", ",", 
       RowBox[{"erf_:", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", 
          RowBox[{"Erf", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}]}], "]"}], ":=", 
     RowBox[{"yMin", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yMax", "-", "yMin"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"erf", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], ",", 
                RowBox[{"x", "\[GreaterEqual]", "c"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"erf", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"g", "*", 
                    RowBox[{"(", 
                    RowBox[{"c", "-", "x"}], ")"}]}], ")"}], ",", 
                   RowBox[{"(", 
                    RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ",", 
                RowBox[{"x", "<", "c"}]}], "}"}]}], "}"}], "]"}], "+", 
           RowBox[{"erf", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "*", 
               RowBox[{"(", 
                RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}], ")"}],
        "/", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "c"}], "+", "xMax"}], ")"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], "+", 
         RowBox[{"erf", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "*", 
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}]}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.569231798384149*^9, 3.569231842385067*^9}, 
   3.5692323012032623`*^9, 3.569232390376411*^9, {3.5696056312234364`*^9, 
   3.569605666790227*^9}, {3.569606608774123*^9, 3.569606671995515*^9}, {
   3.5696067495639143`*^9, 3.569606793729053*^9}, {3.569658522090856*^9, 
   3.5696585325697927`*^9}, {3.569658570466051*^9, 3.569658596288782*^9}, {
   3.5696588974031343`*^9, 3.569658933006098*^9}, {3.5696589902807913`*^9, 
   3.5696591062031813`*^9}, {3.569659305497343*^9, 3.56965930674369*^9}, {
   3.570012272921792*^9, 3.570012273857708*^9}, 3.570012365015205*^9, 
   3.570012535409162*^9, 3.570013831762528*^9, 3.5701818353400717`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "setUprErf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUprErf", "[", " ", 
   RowBox[{
   "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_", ",", "yMax_", 
    ",", "prec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "const", " ", ",", "grad", " ", ",", "erfNN", " ", ",", "erfDD", ",", 
      "yyRange", ",", " ", "xxRange"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{
      "yRange", ",", "xRange", ",", " ", "erfN", ",", "erfD", ",", "rErfPos", 
       ",", "rErfNeg", ",", "coeffs", ",", "coeffsRoot", ",", "coeffsRootA"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"yRange", " ", "=", " ", 
      RowBox[{"yMax", "-", "yMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xRange", " ", "=", " ", 
      RowBox[{"xMax", "-", "xMin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"erfN", " ", "=", " ", 
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Erf", "[", 
          RowBox[{"g", " ", 
           RowBox[{
            RowBox[{"(", "   ", 
             RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", "yRange"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"erfD", " ", "=", " ", 
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"Erf", "[", 
           RowBox[{"g", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "c"}], "+", "xMax"}], ")"}], "/", "xRange"}]}], 
           "]"}], "+", 
          RowBox[{"Erf", "[", 
           RowBox[{"g", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", "xMin"}], ")"}], "/", "xRange"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", "yRange"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"rErfPos", "[", "  ", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{"(", "    ", 
               RowBox[{
                RowBox[{"Erf", "[", 
                 RowBox[{"grad", " ", 
                  RowBox[{"x", "/", "xxRange"}]}], "]"}], " ", "+", "  ", 
                "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rErfNeg", "[", "  ", "x_", "]"}], ":=", 
          RowBox[{"yMin", "+", 
           RowBox[{"yyRange", 
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{"Erf", "[", 
                  RowBox[{"grad", " ", 
                   RowBox[{"x", "/", "xxRange"}]}], "]"}]}], " ", "+", "  ", 
                "erfNN"}], ")"}], ")"}], "/", " ", "erfDD"}]}]}]}], ";"}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"const", " ", "\[Rule]", " ", "c"}], ",", 
         RowBox[{"grad", " ", "\[Rule]", " ", "g"}], ",", 
         RowBox[{"erfNN", " ", "\[Rule]", "erfN"}], ",", 
         RowBox[{"erfDD", "\[Rule]", "erfD"}], ",", 
         RowBox[{"yyRange", " ", "->", " ", 
          RowBox[{"yMax", "-", "yMin"}]}], ",", " ", 
         RowBox[{"xxRange", "->", 
          RowBox[{"xMax", "-", "xMin"}]}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"rErfSEPos", ",", "rErfSENeg", ",", "rErfSE"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{
         RowBox[{"rErfSEPos", "[", "a_", "]"}], ":=", "fun"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"fun", "->", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"Apart", "[", 
              RowBox[{"rErfPos", "[", "a", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "20"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{
         RowBox[{"rErfSENeg", "[", "a_", "]"}], ":=", "fun"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"fun", "->", 
         RowBox[{"Normal", "[", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"Apart", "[", 
              RowBox[{"rErfNeg", "[", "a", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "20"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rErfSE", "[", "a_", "]"}], "=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rErfSEPos", "[", 
            RowBox[{"a", "-", "c"}], "]"}], ",", 
           RowBox[{"a", "\[GreaterEqual]", " ", "c"}]}], "}"}], ",", 
         RowBox[{"{", "  ", 
          RowBox[{
           RowBox[{"rErfSENeg", "[", 
            RowBox[{"c", "-", "a"}], "]"}], ",", 
           RowBox[{"a", "<", " ", "c"}]}], "}"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"coeffs", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"rErfSEPos", "[", "a", "]"}], ",", "a"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"coeffsRoot", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pow", " ", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"2", "n"}], "-", "3"}], "]"}]}], ";", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"coeffs", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "pow"}], ")"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"coeffsRootA", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"coeffsRoot", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"1", "/", 
            RowBox[{"xRange", "^", "2"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}]}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{
  "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", "128", ",", "0.001"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"rErfSE", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.57003228012648*^9, 3.570032336120207*^9}, {
   3.57003253148232*^9, 3.57003256718784*^9}, {3.57003280961154*^9, 
   3.570032832492728*^9}, {3.570032901580803*^9, 3.570032933076577*^9}, {
   3.570032966185156*^9, 3.5700330837983437`*^9}, {3.570033130536457*^9, 
   3.5700331477496357`*^9}, {3.5700332087343597`*^9, 3.57003321996568*^9}, {
   3.5700333130586023`*^9, 3.570033327553337*^9}, {3.570033433694633*^9, 
   3.570033468516816*^9}, {3.570035920640025*^9, 3.57003599423876*^9}, 
   3.570036133626069*^9, {3.570037779070929*^9, 3.5700378073542957`*^9}, {
   3.570038102604189*^9, 3.5700381723397923`*^9}, {3.570038275691358*^9, 
   3.570038290440669*^9}, {3.57003832314312*^9, 3.570038323255533*^9}, {
   3.570038671512047*^9, 3.570038791186894*^9}, {3.570038869625057*^9, 
   3.5700388746818047`*^9}, {3.5700389279681463`*^9, 
   3.5700390844988813`*^9}, {3.570039132241568*^9, 3.570039148889515*^9}, {
   3.570039195920781*^9, 3.570039307277523*^9}, {3.57003934039638*^9, 
   3.570039365003529*^9}, {3.5700395913276777`*^9, 3.570039622181141*^9}, {
   3.57003966608486*^9, 3.5700397086924*^9}, 3.5700398325589933`*^9, {
   3.570040081118514*^9, 3.570040107308853*^9}, {3.570040370967059*^9, 
   3.570040388958068*^9}, {3.570040444743874*^9, 3.570040464774212*^9}, {
   3.570040512948209*^9, 3.570040565851844*^9}, 3.570040871071178*^9, {
   3.5700413573434143`*^9, 3.5700414121751957`*^9}, {3.570041446093754*^9, 
   3.570041459713107*^9}, {3.570041851744532*^9, 3.57004194876369*^9}, {
   3.570042049422327*^9, 3.570042072396523*^9}, {3.570042190665895*^9, 
   3.57004220458107*^9}, {3.5700422590508423`*^9, 3.570042379106318*^9}, {
   3.570042436732237*^9, 3.570042440262703*^9}, {3.570042477085856*^9, 
   3.570042493524295*^9}, {3.570043101824265*^9, 3.570043107652712*^9}, {
   3.570044427925334*^9, 3.570044455595524*^9}, {3.570044518385771*^9, 
   3.570044519762212*^9}, {3.5700447023337507`*^9, 3.5700448531069193`*^9}, {
   3.570044928567856*^9, 3.5700449857655363`*^9}, {3.5700466825104856`*^9, 
   3.570046687249654*^9}, {3.570090836977518*^9, 3.570090841672826*^9}, {
   3.5700944955606203`*^9, 3.570094498149605*^9}, {3.570107766142322*^9, 
   3.570107778499236*^9}, {3.570107819478167*^9, 3.5701078438256187`*^9}, {
   3.570110028348733*^9, 3.570110032951089*^9}, {3.570110066852873*^9, 
   3.570110139323936*^9}, {3.57011023649969*^9, 3.570110249953717*^9}, {
   3.570111608855895*^9, 3.570111693850877*^9}, {3.570111772273143*^9, 
   3.570111805602332*^9}, {3.5701118581109753`*^9, 3.5701119057552834`*^9}, 
   3.570111950257955*^9, {3.570113820660871*^9, 3.570113843726355*^9}, {
   3.5701139021107197`*^9, 3.57011393233253*^9}, {3.5701140350728283`*^9, 
   3.570114044777429*^9}, {3.570114221238063*^9, 3.5701142227988873`*^9}, 
   3.570114293793108*^9, {3.5701143347551327`*^9, 3.5701143399871483`*^9}, {
   3.57011437836333*^9, 3.57011439532572*^9}, {3.570114449508503*^9, 
   3.570114554997657*^9}, {3.5701145859106092`*^9, 3.5701145924530983`*^9}, {
   3.570114664751753*^9, 3.570114672539975*^9}, {3.570115083374523*^9, 
   3.5701150910204687`*^9}, {3.570115133771728*^9, 3.570115134410604*^9}, {
   3.570115624362628*^9, 3.570115754928274*^9}, {3.570115887128294*^9, 
   3.570115915668722*^9}, {3.5701160240875397`*^9, 3.570116057327841*^9}, {
   3.5701167613039637`*^9, 3.570116761808303*^9}, {3.570120108129221*^9, 
   3.570120116256198*^9}, {3.570120421372403*^9, 3.5701204605090322`*^9}, {
   3.570120592563738*^9, 3.5701206059641542`*^9}, 3.570120702777342*^9, 
   3.570120758532803*^9, {3.570120813635392*^9, 3.570120816250907*^9}, {
   3.570123601400551*^9, 3.57012363908077*^9}, {3.570123685942594*^9, 
   3.570123699974717*^9}, 3.57012374091923*^9, {3.570173979937302*^9, 
   3.570174019305991*^9}, {3.5701747385251217`*^9, 3.570174743493474*^9}, 
   3.5701748029228163`*^9, 3.570174836180851*^9, {3.5701763248303337`*^9, 
   3.570176325459524*^9}, {3.570177922699794*^9, 3.570177923408345*^9}, {
   3.570177961060697*^9, 3.570178015497933*^9}, {3.5701789283218412`*^9, 
   3.570178929694269*^9}, {3.5701795248824*^9, 3.5701796041020317`*^9}, {
   3.570180030927218*^9, 3.5701800315435743`*^9}, {3.5701800818230886`*^9, 
   3.5701801307792387`*^9}, {3.570180216378581*^9, 3.570180219208572*^9}, {
   3.570180328724595*^9, 3.5701803534675093`*^9}, {3.570181203682508*^9, 
   3.5701812559310226`*^9}, {3.570181474006078*^9, 3.570181548579378*^9}, {
   3.570181580409479*^9, 3.570181587617815*^9}, {3.570181675702883*^9, 
   3.5701817084317408`*^9}, {3.570190932051408*^9, 3.570190934478036*^9}, {
   3.570191004404914*^9, 3.5701910483976593`*^9}, {3.57019109265695*^9, 
   3.570191127758451*^9}, {3.570191162663953*^9, 3.570191225492407*^9}, {
   3.5701912591082172`*^9, 3.570191275573546*^9}, {3.570191318623749*^9, 
   3.570191330580752*^9}, {3.5701913624620247`*^9, 3.570191377264319*^9}, 
   3.5701914463653*^9, {3.57019168453515*^9, 3.570191703240449*^9}, {
   3.57019176027472*^9, 3.570191763756727*^9}, {3.5701919646881437`*^9, 
   3.570191968110077*^9}, {3.570192874073763*^9, 3.5701929348888903`*^9}, {
   3.570193123828959*^9, 3.5701931364753*^9}, {3.5701932472250423`*^9, 
   3.570193252904129*^9}, {3.570193318383355*^9, 3.570193339726054*^9}, {
   3.570193384462296*^9, 3.57019347097399*^9}, {3.57019366809424*^9, 
   3.570193674022333*^9}, {3.570193730497095*^9, 3.570193747688775*^9}, {
   3.5701938228819437`*^9, 3.5701938243240623`*^9}, {3.570265987224671*^9, 
   3.570265987623352*^9}}],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"funP", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/", "a"}], "]"}]], "Input",
 CellChangeTimes->{
  3.570194476264491*^9, {3.5701945813637533`*^9, 3.5701945827148952`*^9}, {
   3.570194630408403*^9, 3.570194643279894*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rErfSEPos", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsTemp", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{"rErfSEPos", "[", "a", "]"}], ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scalar", " ", "=", " ", 
   RowBox[{"coeffsTemp", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffs", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"coeffsTemp", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"Length", "[", "coeffsTemp", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsSign", "=", 
   RowBox[{"Sign", "[", "coeffs", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsAbs", "=", 
   RowBox[{"Abs", "[", "coeffs", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsRoot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"coeffsAbs", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "n"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "coeffsAbs", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsRootA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{"N", "[", "#", "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", 
          RowBox[{"yRange", "^", "4"}]}], "]"}]}], "]"}], "&"}], ",", 
     "coeffsRoot"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffsError", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"coeffsRootA", " ", "-", " ", "coeffsRoot"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
   "coeffs", ",", "coeffsRoot", ",", "coeffsRootA", ",", "coeffsError"}], 
   "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.570277181237287*^9, 3.570277231163114*^9}, 
   3.5702772921810913`*^9, {3.570277341105654*^9, 3.5702773609681187`*^9}, {
   3.57027747687776*^9, 3.5702774825923843`*^9}, {3.570277662103492*^9, 
   3.570277704923544*^9}, {3.570277782243792*^9, 3.570277910982849*^9}, {
   3.570277995269814*^9, 3.570278025125251*^9}, {3.57027806765244*^9, 
   3.570278085609433*^9}, {3.570278142528397*^9, 3.570278221787524*^9}, {
   3.570278272704206*^9, 3.570278285044486*^9}, {3.570278338331524*^9, 
   3.570278362525714*^9}, {3.5702783976927843`*^9, 3.570278405035872*^9}, {
   3.570278845842821*^9, 3.570278882841983*^9}, 3.570352740145492*^9, 
   3.570354245746303*^9}],

Cell[BoxData["coeffsTemp"], "Input",
 CellChangeTimes->{{3.5703541827833967`*^9, 3.570354227957855*^9}}],

Cell[BoxData[
 RowBox[{"rErfSEPos", "[", "a", "]"}]], "Input",
 CellChangeTimes->{3.5703541153510017`*^9}],

Cell[BoxData[{
 RowBox[{"x", " ", "coeffsRootA", " ", 
  "coeffsSign"}], "\[IndentingNewLine]", 
 RowBox[{"Piecewise", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"erf", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], ",", 
      RowBox[{"x", "\[GreaterEqual]", "c"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"erf", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"c", "-", "x"}], ")"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"x", "<", "c"}]}], "}"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcPos", "[", "x_", "]"}], ":=", 
  RowBox[{"scalar", " ", "+", 
   RowBox[{"Plus", "@@", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "^", 
        RowBox[{"(", 
         RowBox[{"First", "[", "#2", "]"}], ")"}]}], "&"}], ",", 
      RowBox[{"x", " ", "coeffsRoot", " ", "coeffsSign"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcNeg", "[", "x_", "]"}], ":=", 
  RowBox[{"scalar", " ", "-", 
   RowBox[{"Plus", "@@", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "^", 
        RowBox[{"(", 
         RowBox[{"First", "[", "#2", "]"}], ")"}]}], "&"}], ",", 
      RowBox[{"x", " ", "coeffsRoot", " ", "coeffsSign"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"funcPos", "[", 
        RowBox[{"x", "-", "128"}], "]"}], ",", 
       RowBox[{"x", "\[GreaterEqual]", "128"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"funcNeg", "[", 
        RowBox[{"128", "-", "x"}], "]"}], ",", 
       RowBox[{"x", "<", "128"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"func", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"N", "[", 
          RowBox[{"func", "[", "x", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{"N", "[", 
          RowBox[{"aErf", "[", 
           RowBox[{
           "x", ",", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", 
            "128"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"aErf", "[", 
          RowBox[{
          "x", ",", " ", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",",
            "128"}], "]"}], "]"}], "-", 
        RowBox[{"N", "[", 
         RowBox[{"func", "[", "x", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.570352974928794*^9, 3.570352975129005*^9}, {
   3.5703532130302353`*^9, 3.570353296514598*^9}, {3.570353369884489*^9, 
   3.5703533735223017`*^9}, {3.5703534232678833`*^9, 3.570353466409532*^9}, {
   3.570353516207468*^9, 3.5703535322361317`*^9}, {3.570353836950212*^9, 
   3.570353843257221*^9}, {3.570353884342046*^9, 3.5703538851788063`*^9}, {
   3.570354019044435*^9, 3.5703540195561867`*^9}, {3.570354050540552*^9, 
   3.5703540625620127`*^9}, {3.570354099603188*^9, 3.570354099817832*^9}, 
   3.5703547117493467`*^9, {3.5703561050221577`*^9, 3.570356233462648*^9}, {
   3.570357079456852*^9, 3.5703571214972677`*^9}, {3.570360991062442*^9, 
   3.570361026155003*^9}, {3.570361069153037*^9, 3.5703610883812838`*^9}, {
   3.570361173258144*^9, 3.570361177599485*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"func", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"rErfSEPos", "[", "x", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "128"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"rErfSEPos", "[", "x", "]"}], "]"}], "-", 
       RowBox[{"N", "[", 
        RowBox[{"func", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570354755089581*^9, 3.570354785886671*^9}, {
  3.570354946940731*^9, 3.570354947859817*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"num", "^", "n"}], " ", "\[LessEqual]", " ", "max"}], ",", "n", 
   ",", "Integers"}], "]"}]], "Input",
 CellChangeTimes->{{3.5702795456743517`*^9, 3.570279593261034*^9}, {
  3.570279649757277*^9, 3.5702796514657993`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "255"}], ";", " ", 
  RowBox[{"num", " ", "=", " ", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{"N", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Log", "[", "max", "]"}], "/", 
       RowBox[{"Log", "[", "num", "]"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"num", "^", "n"}], "\[IndentingNewLine]", 
 RowBox[{"num", "^", 
  RowBox[{"(", 
   RowBox[{"n", "+", "1"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.5702797894717083`*^9, 3.570279807447085*^9}, {
  3.5702799983531218`*^9, 3.5702800961886683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerPower", "[", 
   RowBox[{"xMax_", ",", "num_", ",", "den_", ",", "pow_", ",", "max_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"maxNumPow", " ", "=", " ", 
      RowBox[{"Floor", "[", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Log", "[", "max", "]"}], "/", 
         RowBox[{"Log", "[", 
          RowBox[{"num", " ", "xMax"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxDenPow", " ", "=", " ", 
      RowBox[{"Floor", "[", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Log", "[", "max", "]"}], "/", 
         RowBox[{"Log", "[", "den", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"divisionsPerMultiplication", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"num", " ", "xMax"}], "]"}], "/", 
         RowBox[{"Log", "[", "max", "]"}]}], "]"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5702789829705067`*^9, 3.5702790024751387`*^9}, {
   3.570279056938467*^9, 3.570279114819364*^9}, {3.570279240295883*^9, 
   3.5702792456537533`*^9}, {3.570280233653274*^9, 3.57028026751394*^9}, {
   3.570280620055081*^9, 3.5702806208801117`*^9}, {3.570280675360038*^9, 
   3.570280678911892*^9}, 3.570281044851449*^9, {3.5702811898075733`*^9, 
   3.57028120115984*^9}, {3.5702893584193573`*^9, 3.570289413617549*^9}, {
   3.570345684578714*^9, 3.5703457483315887`*^9}, {3.570347424886094*^9, 
   3.570347432637638*^9}, {3.570347676937949*^9, 3.57034768630378*^9}, {
   3.57034771906559*^9, 3.570347722831367*^9}, {3.570347896566805*^9, 
   3.570347906760227*^9}}],

Cell[BoxData["coeffsFRootA"], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"funF", "[", "a_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fun", ",", "funP", ",", "funR"}], "}"}], ",", 
      RowBox[{
       RowBox[{"fun", " ", "=", " ", 
        RowBox[{"rErfSEPos", "[", "a", "]"}]}], ";", 
       RowBox[{"funP", " ", "=", " ", 
        RowBox[{"Collect", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"fun", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"rErfSEPos", "[", "a", "]"}], "]"}]}], "}"}]}], "]"}], 
          ",", " ", 
          RowBox[{"Pi", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"funR", " ", "=", " ", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"funP", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", "a"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fun", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"funP", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "funR"}]}]}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.570193948816738*^9, 3.570194034774387*^9}, {
   3.5701941030860167`*^9, 3.57019425041835*^9}, {3.570194325583997*^9, 
   3.570194444812015*^9}, {3.570194653906258*^9, 3.570194661046472*^9}, {
   3.570194694663107*^9, 3.570194696326276*^9}, 3.570265932879135*^9, 
   3.570265999023423*^9, {3.570274180092391*^9, 3.570274192419958*^9}, 
   3.570276198475602*^9, {3.57027625675746*^9, 3.570276266619841*^9}, {
   3.5702763134577312`*^9, 3.570276330746357*^9}}],

Cell[BoxData[
 RowBox[{"Definition", "[", "funF", "]"}]], "Input",
 CellChangeTimes->{
  3.570276303945074*^9, {3.570276343984457*^9, 3.570276355982201*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fun", " ", "=", " ", 
   RowBox[{"rErfSEPos", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funP", " ", "=", " ", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"fun", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"rErfSEPos", "[", "a", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     " ", 
     RowBox[{"Pi", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funR", " ", "=", " ", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"funP", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fun", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "+", 
  RowBox[{"a", " ", 
   RowBox[{"funP", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", "funR"}]}]}], "Input",
 CellChangeTimes->{{3.570193948816738*^9, 3.570194034774387*^9}, {
  3.5701941030860167`*^9, 3.57019425041835*^9}, {3.570194325583997*^9, 
  3.570194444812015*^9}, {3.570194653906258*^9, 3.570194661046472*^9}, {
  3.570194694663107*^9, 3.570194696326276*^9}}],

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{"Pi", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"N", "[", 
    RowBox[{"yRange", "^", 
     RowBox[{"-", "4"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5702121593224907`*^9, 3.5702121826550913`*^9}, {
   3.5702122722323837`*^9, 3.5702122751190443`*^9}, {3.570213443114335*^9, 
   3.570213450721367*^9}, {3.57021348282611*^9, 3.570213483073227*^9}, 
   3.570213788258706*^9, {3.57021451603854*^9, 3.570214525013341*^9}}],

Cell[BoxData[
 RowBox[{"coeffs", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5701963676198187`*^9, 3.570196372631587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unevaluated", "[", 
   RowBox[{
    RowBox[{"pow", " ", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", ">", "1"}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "3"}], "]"}]}], ",", "1", ",", "1"}], 
      "]"}]}], ";", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"coeffs", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "^", "pow"}], "]"}]}], "]"}], "/.", 
  " ", 
  RowBox[{"n", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.570196177312834*^9, 3.57019618758333*^9}, {
  3.570196219682877*^9, 3.570196228087932*^9}, {3.570196328315184*^9, 
  3.5701963611808987`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"coeffsF", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"CoefficientList", "[", 
       RowBox[{"funR", ",", "a"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coeffsFPower", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pow", " ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"1", "/", 
           RowBox[{"Abs", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ",", "1", ",", "1"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "coeffsF", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coeffsFRoot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pow", " ", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", ">", "1"}], ",", 
           RowBox[{"1", "/", 
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "1"}], "]"}]}], ",", "1", ",", "1"}], "]"}]}], 
        ";", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"coeffsF", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "^", "pow"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "coeffsF", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coeffsFRootA", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Rationalize", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"coeffsFRoot", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", 
           RowBox[{"xRange", "^", "2"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "coeffsF", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CoeffsFRoot", "[", "x_", "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coeffsFRootA", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coeffsFRootA", "[", 
             RowBox[{"[", "n", "]"}], "]"}], " ", "x"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{"Length", "[", "coeffsFRootA", "]"}]}], "}"}]}], "]"}]}],
         "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CoeffsF", "[", "x_", "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coeffsFRootA", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"coeffsFRootA", "[", 
               RowBox[{"[", "n", "]"}], "]"}], " ", "x"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{"Length", "[", "coeffsFRootA", "]"}]}], "}"}]}], "]"}]}],
         "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coeffsFError", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{"coeffsFRootA", " ", "-", " ", "coeffsFRoot"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{"{", 
     RowBox[{
     "coeffsF", ",", "coeffsFPower", ",", "coeffsFRoot", ",", "coeffsFRootA", 
      ",", "coeffsFError"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.570194735320616*^9, 3.5701947965327463`*^9}, {
   3.570194839013315*^9, 3.5701948588352547`*^9}, {3.570195228629273*^9, 
   3.570195338991239*^9}, {3.570195531347622*^9, 3.570195625439394*^9}, {
   3.57019567425646*^9, 3.570195676870923*^9}, {3.570195790951741*^9, 
   3.570195800819901*^9}, {3.570196095964912*^9, 3.5701961189714327`*^9}, {
   3.5701961592419024`*^9, 3.570196159499899*^9}, {3.5701962472661543`*^9, 
   3.5701962568822947`*^9}, {3.5701962977601643`*^9, 3.570196302310873*^9}, {
   3.570196385982398*^9, 3.5701963924536963`*^9}, {3.570199145640032*^9, 
   3.570199154615744*^9}, {3.570199333275648*^9, 3.5701993369214897`*^9}, {
   3.570200363772093*^9, 3.570200392609169*^9}, {3.5702004396086903`*^9, 
   3.570200453592354*^9}, {3.570200531827013*^9, 3.570200572445567*^9}, {
   3.570204036637726*^9, 3.570204037172359*^9}, {3.57020407194092*^9, 
   3.570204084539617*^9}, {3.5702049912676888`*^9, 3.570205004495706*^9}, {
   3.5702050361094847`*^9, 3.570205046533989*^9}, {3.57020758036526*^9, 
   3.5702075815146227`*^9}, {3.5702076188285913`*^9, 3.5702076240199213`*^9}, 
   3.570208504745152*^9, {3.57021101423013*^9, 3.570211023909507*^9}, 
   3.570211078748341*^9, {3.570211207887083*^9, 3.5702112299294786`*^9}, 
   3.570211267073924*^9, {3.570211316512096*^9, 3.570211319480802*^9}, {
   3.5702116162692413`*^9, 3.570211621754895*^9}, {3.570211674391036*^9, 
   3.570211674990695*^9}, {3.5702117142028522`*^9, 3.5702117214877872`*^9}}],

Cell[BoxData[
 RowBox[{"FactorInteger", "[", 
  RowBox[{"Denominator", "[", "coeffsFRootA", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5702174209082193`*^9, 3.570217470497878*^9}, 
   3.570217721535961*^9}],

Cell[BoxData[{
 RowBox[{"CoeffsFRoot", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CoeffsF", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.570211286177272*^9, 3.570211304959552*^9}, {
  3.5702117450551233`*^9, 3.5702117460282993`*^9}, {3.5702173892167053`*^9, 
  3.570217393671167*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.570204401344676*^9, 3.570204409107826*^9}, {
  3.570204771231989*^9, 3.5702047730167713`*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox["\[Pi]"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"co", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"coeffsFRootA", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"coeffsFRootA", "[", 
          RowBox[{"[", "n", "]"}], "]"}], " ", "x"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "2", ",", 
          RowBox[{"Length", "[", "coeffsFRootA", "]"}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Definition", "[", "co", "]"}]}], "Input",
 CellChangeTimes->{{3.5702047383820047`*^9, 3.570204746963107*^9}, {
  3.570204892709815*^9, 3.570204913351552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RoundedPolynomialApproxFunR", "[", 
   RowBox[{"x_", ",", "coeffs_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prods", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coeffs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coeffs", "[", 
             RowBox[{"[", "n", "]"}], "]"}], " ", "x"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fun", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"funP", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "funR"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.570204286674616*^9, 3.570204347541012*^9}, {
  3.570204383500637*^9, 3.570204386665964*^9}, {3.570204479087717*^9, 
  3.570204485566394*^9}, {3.5702045335497847`*^9, 3.570204541485985*^9}, {
  3.570204593948956*^9, 3.5702047195072327`*^9}}],

Cell[BoxData[{"funR", "\[IndentingNewLine]", "coeffsFA"}], "Input",
 CellChangeTimes->{{3.570203966036414*^9, 3.570203966756403*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"coeffsFRootA", "[", 
        RowBox[{"[", "n", "]"}], "]"}], " ", "a"}], ")"}], "^", "n"}], " ", 
    "/", "a"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "[", "coeffsFRootA", "]"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.5701996331690702`*^9, 3.57019965176784*^9}, {
  3.570199735117621*^9, 3.5701998355457563`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"coeffsFRoot", "\[IndentingNewLine]", "coeffsFRootA"}]}]], "Input",
 CellChangeTimes->{{3.570196034118136*^9, 3.5701960446764593`*^9}}],

Cell[BoxData[{"coeffsF", "\[IndentingNewLine]", "coeffsFA"}], "Input",
 CellChangeTimes->{{3.570195450100025*^9, 3.5701954612114763`*^9}, {
  3.5701958338195677`*^9, 3.570195839721365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"rErfSEPos", "[", "a", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"rErfSEPos", "[", "a", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    " ", 
    RowBox[{"Pi", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.57019428052112*^9, 3.570194301763216*^9}}],

Cell[BoxData[
 RowBox[{"setUprErf", "[", " ", 
  RowBox[{
  "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", "128", ",", "0.001"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.570033280576673*^9, 3.57003330657465*^9}, {
   3.570045069528812*^9, 3.570045077208572*^9}, 3.5700452443416*^9, 
   3.570045278323248*^9, 3.570191874796315*^9}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"coeffs", ",", "coeffsRoot", ",", "coeffsRootA"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570193556002795*^9, 3.570193570034403*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"aErf", "[", 
          RowBox[{
          "x", ",", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", 
           "128"}], "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"rErfSE", "[", "x", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"aErf", "[", 
         RowBox[{
         "x", ",", " ", "3", ",", "128", ",", "0", ",", "255", ",", "0", ",", 
          "128"}], "]"}], "]"}], "-", 
       RowBox[{"N", "[", 
        RowBox[{"rErfSE", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570191538197768*^9, 3.57019153867626*^9}, {
  3.570191859053623*^9, 3.5701918785166883`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"aErf", "[", 
     RowBox[{
     "x", ",", "2", ",", "128", ",", "0", ",", "255", ",", "0", ",", "128"}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57019183315371*^9, 3.570191853558899*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"rErfSE", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5701915622922277`*^9, 3.5701915924996567`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximation of the Exponential Term", "Subtitle",
 CellChangeTimes->{{3.570117861056491*^9, 3.570117882666913*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AntiFactorial", "[", "xx_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"x", "=", "xx"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"x", ">", "i"}], ",", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"x", "/", "i"}]}], ";", 
        RowBox[{"i", "++"}]}]}], "]"}], ";", " ", "i"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5701184632041397`*^9, 3.5701185189259443`*^9}, {
  3.5701215463399267`*^9, 3.570121550226112*^9}}],

Cell[BoxData[
 RowBox[{"Series", "[", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", "a"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", 
     RowBox[{"AntiFactorial", "[", "255", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570117277037958*^9, 3.570117288828207*^9}, {
  3.570117371734211*^9, 3.570117391521209*^9}, {3.57011799087037*^9, 
  3.5701180247588377`*^9}, {3.570118557982877*^9, 3.570118564165391*^9}}],

Cell["\<\
Need terms up to 1/yRange so use AntiFactorial to get the series limit. \
However b is the xRange and xRange>yRange.
The term on the bottom is n!b^2n so we solve yRange < n! b^2n\
\>", "Text",
 CellChangeTimes->{{3.570117890088406*^9, 3.5701179014866657`*^9}, {
   3.570118602416708*^9, 3.57011861915911*^9}, 3.570118652935815*^9, {
   3.570120905495295*^9, 3.570120924943325*^9}, {3.5701209669128323`*^9, 
   3.570121048219756*^9}, {3.5701210945765*^9, 3.5701210952048492`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AntiSeries", "[", 
   RowBox[{"xx_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"x", "=", "xx"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Factorial", "[", "i", "]"}], " ", 
           RowBox[{"b", "^", 
            RowBox[{"(", 
             RowBox[{"2", " ", "i"}], ")"}]}]}], ")"}]}], ">", "1"}], ",", 
       RowBox[{"i", "++"}]}], "]"}], ";", " ", "i"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.570121106496668*^9, 3.5701211079677753`*^9}, {
  3.570121141760346*^9, 3.57012115591047*^9}, {3.5701215565716133`*^9, 
  3.570121603041761*^9}, {3.570121642099389*^9, 3.5701216564098463`*^9}}],

Cell[BoxData[
 RowBox[{"Series", "[", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "1"}], " ", 
     RowBox[{
      RowBox[{"a", "^", "2"}], "/", 
      RowBox[{"2", "^", "2"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", " ", 
     RowBox[{"2", 
      RowBox[{"AntiSeries", "[", 
       RowBox[{"255", ",", "2"}], "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570118570817543*^9, 3.570118583015476*^9}, {
   3.5701212047632227`*^9, 3.570121215698875*^9}, 3.570121630582801*^9, 
   3.570123488984017*^9, 3.5701763259160767`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Expand", "[", 
   RowBox[{"1", "-", 
    RowBox[{"b", " ", "ppD", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"cc1", "  ", 
        RowBox[{"b", "^", "4"}]}], " ", "+", "  ", 
       RowBox[{"cc2", " ", "a", " ", 
        RowBox[{"b", "^", "3"}]}], " ", "+", "  ", 
       RowBox[{"cc3", "  ", 
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"b", "^", "2"}]}], "+", "  ", 
       RowBox[{"cc4", "  ", 
        RowBox[{"a", "^", "3"}], " ", "b"}], " ", "+", "  ", 
       RowBox[{"cc5", "  ", 
        RowBox[{"a", "^", "4"}]}]}], ")"}], " ", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", " ", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "1"}], " ", 
           RowBox[{
            RowBox[{"a", "^", "2"}], "/", 
            RowBox[{"b", "^", "2"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", 
           RowBox[{"2", " ", 
            RowBox[{"AntiFactorial", "[", "255", "]"}]}]}], "}"}]}], "]"}], 
       "]"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ppD", " ", "b"}], " ", "+", " ", 
         RowBox[{"a", " ", "ppN"}]}], " ", ")"}], "^", "5"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.570118722379429*^9, 3.570118803874061*^9}, {
  3.570119309842589*^9, 3.570119378926653*^9}, {3.570120386562652*^9, 
  3.5701203886641293`*^9}, {3.5701763260170393`*^9, 3.57017632654847*^9}}],

Cell[BoxData["erfN"], "Input",
 CellChangeTimes->{{3.570115303968816*^9, 3.570115305789173*^9}}],

Cell[BoxData[
 RowBox[{"1", "/", "255"}]], "Input",
 CellChangeTimes->{{3.5701154339457207`*^9, 3.570115434859684*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1", "255"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"255", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Rationalize", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"Erf", "[", 
        FractionBox["256", "255"], "]"}], "]"}], ",", 
      RowBox[{"N", "[", 
       RowBox[{"1", "/", "255"}], "]"}]}], "]"}], "-", 
    RowBox[{"N", "[", 
     RowBox[{"Erf", "[", 
      FractionBox["256", "255"], "]"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.570115317688757*^9, 3.570115350551632*^9}, {
  3.570115447144731*^9, 3.570115497350354*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"rErf", "[", "128", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5701161995362587`*^9, 3.570116205087747*^9}, {
  3.5701163900626173`*^9, 3.57011639270315*^9}, {3.570116841953959*^9, 
  3.57011684257662*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"erfHCa", "[", "255", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.570120254669846*^9, 3.5701202738142977`*^9}, {
  3.5701741453818283`*^9, 3.570174145874908*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", " ", 
    SuperscriptBox["255", "4"]}], ",", 
   FractionBox[
    RowBox[{"25", "  ", 
     SuperscriptBox["255", "3"]}], "49"], ",", 
   FractionBox[
    RowBox[{"7", "  ", 
     SuperscriptBox["255", "2"]}], "31"], ",", 
   FractionBox[
    RowBox[{" ", "255"}], "38"], ",", 
   FractionBox["1", "340"]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.5701168971405*^9, 3.570116958052127*^9}, {
  3.5701170873451767`*^9, 3.5701170903535624`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "1"}], " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", 
       RowBox[{"255", "^", "2"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "255"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57011715366192*^9, 3.5701171621384783`*^9}, 
   3.570176326649123*^9}],

Cell[CellGroupData[{

Cell["Plots", "Section"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Erf", "[", 
      RowBox[{"x", "/", "1.0"}], "]"}], "-", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"TraditionalForm", "/@", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5691443165269537`*^9, 3.569144316798628*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Erf", "[", 
      RowBox[{"x", "/", "1.2"}], "]"}], ",", "x", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"TraditionalForm", "/@", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.569143136420065*^9, {3.569143201584484*^9, 3.5691433575564613`*^9}, {
   3.56914341069915*^9, 3.569143414625723*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"TraditionalForm", "/@", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"\[CapitalPhi]", "[", "x", "]"}], "]"}]}], "}"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", ".5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", ".5"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.567949375822734*^9, 3.5679493765584803`*^9}, {
  3.567951668103477*^9, 3.567951678979494*^9}}],

Cell[BoxData[{
 RowBox[{"g", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{
         RowBox[{"2", " ", "x"}], "-", "1"}], "]"}], "/", " ", 
       RowBox[{"Erf", "[", "1", "]"}]}], "+", "1"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"TraditionalForm", "/@", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Erf", "[", "x", "]"}], "/", 
        RowBox[{"Erf", "[", "1", "]"}]}]}], "}"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.569143047541247*^9, 3.5691430604743643`*^9}, {
   3.569149598912683*^9, 3.5691496506258507`*^9}, 3.569149689317782*^9, {
   3.56914974985049*^9, 3.569149751601981*^9}, {3.569149828952613*^9, 
   3.5691498302798557`*^9}, {3.569151090680769*^9, 3.569151102358551*^9}, {
   3.5691511524950323`*^9, 3.569151180445228*^9}, {3.569151373979424*^9, 
   3.569151424040742*^9}, {3.56915189360389*^9, 3.569151900501137*^9}, {
   3.56915749225239*^9, 3.569157500058535*^9}, {3.569182958316854*^9, 
   3.569183041444934*^9}, {3.5691839654944363`*^9, 3.56918400788463*^9}, {
   3.569184045925447*^9, 3.5691840739065332`*^9}, {3.569184118390272*^9, 
   3.569184135224701*^9}, {3.56918434370516*^9, 3.569184456608015*^9}, {
   3.569184523628186*^9, 3.56918462350659*^9}, {3.569184656863488*^9, 
   3.569184679313428*^9}, {3.569184754197136*^9, 3.569184763317956*^9}, {
   3.569218345187293*^9, 3.569218360869699*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Approximations", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], "\[LessEqual]", "2.2"}], ",", 
    RowBox[{".1", " ", "x", 
     RowBox[{"(", 
      RowBox[{"4.4", "-", "x"}], ")"}]}], ",", 
    RowBox[{"2.2", "<", 
     RowBox[{"Abs", "[", "x", "]"}], "<", "2.6"}], ",", ".49", ",", 
    RowBox[{"x", "\[GreaterEqual]", "2.6"}], ",", ".5"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"2", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}]}], "+", 
        RowBox[{"16", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"x", "^", "2"}]}], 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"7", "+", 
           RowBox[{
            RowBox[{"Pi", "/", "4"}], " ", 
            RowBox[{"x", "^", "2"}]}]}], ")"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "/", "30"}]}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"3", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "-", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{".196854", "x"}], "+", 
       RowBox[{".115195", 
        RowBox[{"x", "^", "2"}]}], "+", 
       RowBox[{".000343654", 
        RowBox[{"x", "^", "3"}]}], "+", 
       RowBox[{".019527", 
        RowBox[{"x", "^", "4"}]}]}], ")"}], "^", "4"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"4", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "-", 
   FractionBox[
    RowBox[{"13.5806", "+", 
     RowBox[{"2.7115", "x"}], "+", 
     RowBox[{".523073", 
      RowBox[{"x", "^", "2"}]}]}], 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3.00596", "+", "x"}], ")"}], "^", "3"}]}]]}]}], "\n", 
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"5", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "-", 
   FractionBox[
    RowBox[{".266784", 
     RowBox[{"(", 
      RowBox[{"23.1544", "+", "x"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"15.2105", "+", 
       RowBox[{"3.63895", "x"}], "+", 
       RowBox[{"x", "^", "2"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3.70247", "+", "x"}], ")"}], "^", "4"}]}]]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"2", ",", "x"}], "]"}], "//", "TraditionalForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Phi", "[", 
   RowBox[{"2", ",", "x"}], "]"}], "-", 
  RowBox[{"Phi", "[", 
   RowBox[{"2", ",", 
    RowBox[{"-", "x"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Phi", "[", 
      RowBox[{"2", ",", "x"}], "]"}], "-", 
     RowBox[{"Phi", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.001", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$DisplayFunction", "=", "Identity"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsArray", "[", "\[IndentingNewLine]", 
     RowBox[{"Partition", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Phi", "[", "x", "]"}], "-", 
            RowBox[{"Phi", "[", 
             RowBox[{"n", ",", "x"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"TraditionalForm", "/@", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"\[CapitalPhi]", "[", "x", "]"}], "-", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[CapitalPhi]", ",", "n"}], "]"}], "[", "x", 
                 "]"}]}]}], "}"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "5"}], "}"}]}], "]"}], ",", "3", ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$DisplayFunction", "=", "Identity"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsArray", "[", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Phi", "[", "x", "]"}], "-", 
            RowBox[{"Phi", "[", 
             RowBox[{"n", ",", "x"}], "]"}]}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Sequence", "@@", "#"}]}], "}"}], "]"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"TraditionalForm", "/@", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"\[CapitalPhi]", "[", "x", "]"}], "-", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[CapitalPhi]", ",", "n"}], "]"}], "[", "x", 
                 "]"}]}]}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], "&"}], 
        "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "10"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["First Quartile", "Section"],

Cell[CellGroupData[{

Cell["1/4", "Subsection"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox["t", 
         SqrtBox["2"]], "]"}], "+", "1"}], ")"}]}], "\[Equal]", 
    FractionBox["1", "4"]}], ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox["t", 
         SqrtBox["2"]], "]"}], "+", "1"}], ")"}]}], "\[Equal]", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox["t", 
          SqrtBox["2"]], "]"}], "+", "1"}], ")"}]}], "\[Equal]", 
     FractionBox["1", "4"]}], "&&", 
    RowBox[{
     RowBox[{"-", "1"}], "<", "t", "<", "0"}]}], ",", "t", ",", "Reals"}], 
  "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr1", "=", 
   RowBox[{"Root", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Erf", "[", 
          FractionBox["#1", 
           SqrtBox["2"]], "]"}]}]}], "&"}], ",", 
      RowBox[{
      "-", "0.6744897501960817432022270145412998175939784590407714589584`30.\
102999566398122"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expr2", "=", 
   RowBox[{
    SqrtBox["2"], 
    RowBox[{"InverseErf", "[", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], "]"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"FullSimplify", "/@", 
  RowBox[{"{", 
   RowBox[{"expr1", ",", "expr2", ",", 
    RowBox[{"expr1", "-", "expr2"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", 
   RowBox[{"expr1", ",", "expr2"}], "}"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3/4", "Subsection"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox["t", 
         SqrtBox["2"]], "]"}], "+", "1"}], ")"}]}], "\[Equal]", 
    FractionBox["3", "4"]}], ",", "t"}], "]"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Series Expansion", "Section"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "ser"}], "-", "1"}], ")"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{"\[Pi]", "/", "2"}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "2"}], "]"}]}], "]"}]], "Input",
 Evaluator->"dalembert 5.0"],

Cell[CellGroupData[{

Cell["V4.x", "Subsection"],

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["V5.2", "Subsection",
 Evaluator->"dalembert 5.0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}], "//", 
   "Simplify"}], "//", "TraditionalForm"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["V6", "Subsection",
 Evaluator->"dalembert 5.0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Infinity]", ",", "10"}], "}"}]}], "]"}], "//", 
   "Simplify"}], "//", "TraditionalForm"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Approx", "Section",
 CellChangeTimes->{{3.570014277395825*^9, 3.570014278480958*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "y", ",", "a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "p"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569330221881308*^9, 3.569330230883397*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"prec_:", "pre"}], "]"}], ":=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"a1", ",", "pre"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569932707413866*^9, 3.569932726783333*^9}, {
  3.569932821219254*^9, 3.5699328388499937`*^9}}],

Cell[BoxData[
 RowBox[{"A1", "[", "]"}]], "Input",
 CellChangeTimes->{{3.569932744746133*^9, 3.569932748522822*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a1", "=", "0.254829592"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A1", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"a1", ",", "prec"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a2", "=", "0.284496736"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A2", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"a2", ",", "prec"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a3", "=", "1.421413741"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A3", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"a3", ",", "prec"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a4", "=", "1.453152027"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A4", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"a4", ",", "prec"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a5", "=", "1.061405429"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A5", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"a5", ",", "prec"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "0.3275911"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"prec_:", "pre"}], "]"}], ":=", 
     RowBox[{"Rationalize", "[", 
      RowBox[{"p", ",", "prec"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.569331075740561*^9, 3.569331084244378*^9}, {
   3.569664625713059*^9, 3.569664633717559*^9}, {3.5696647662117777`*^9, 
   3.5696648716712503`*^9}, {3.569932855006598*^9, 3.569932866126595*^9}, {
   3.569932902400099*^9, 3.569932943754175*^9}, {3.569933303755221*^9, 
   3.569933310273031*^9}, {3.569933356054901*^9, 3.5699334554677143`*^9}, {
   3.570003927529598*^9, 3.570003953968948*^9}, {3.570014048842863*^9, 
   3.5700140521373053`*^9}, {3.5700147118656054`*^9, 3.5700147238485003`*^9}, 
   3.570015084079674*^9}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Precision\>\"", ",", "\"\<A1\>\"", ",", "\"\<A2\>\"", ",", 
      "\"\<A3\>\"", ",", "\"\<A4\>\"", ",", "\"\<A5\>\"", ",", "\"\<P\>\""}], 
     "}"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pre", "=", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "prec"}], ")"}]}]}], ";", 
        RowBox[{"{", 
         RowBox[{"pre", ",", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"A1", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"A2", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"A2", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"A3", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"A3", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"A4", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"A4", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"A5", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"A5", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "prec"}], ")"}]}], "]"}], "-", 
           RowBox[{"P", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "prec"}], "-", "1"}], ")"}]}], "]"}]}]}], "}"}]}],
        ",", 
       RowBox[{"{", 
        RowBox[{"prec", ",", "1", ",", "12"}], "}"}]}], "]"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570003741779357*^9, 3.570003871617214*^9}, {
  3.5700040968693943`*^9, 3.570004143649362*^9}, {3.570006817017178*^9, 
  3.5700069172363377`*^9}}],

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A1", "[", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "pre"}], ")"}]}], "]"}], "-", 
    RowBox[{"A1", "[", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "pre"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"pre", ",", "1", ",", "13"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A1", "[", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "pre"}], ")"}]}], "]"}], "-", 
    RowBox[{"A1", "[", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "pre"}], "-", "1"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"pre", ",", "3", ",", "13"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.569934573684319*^9, 3.569934582738657*^9}, {
   3.5699347308267384`*^9, 3.5699347738933887`*^9}, 3.569934838168528*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "pre"}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pre", ",", "1", ",", "13"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.569934448187758*^9, 3.569934479045909*^9}}],

Cell[BoxData["prec"], "Input",
 CellChangeTimes->{{3.569933342238894*^9, 3.569933343193375*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "[", "x_", "]"}], ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"P", " ", "x"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"b", "/", 
     RowBox[{"(", 
      RowBox[{"b", "+", 
       RowBox[{"a", " ", "P"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"erfP", "[", "x__", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A5", " ", 
                 RowBox[{"t", "[", "x", "]"}]}], "-", "A4"}], ")"}], " ", 
              RowBox[{"t", "[", "x", "]"}]}], ")"}], "+", "A3"}], ")"}], " ", 
          
          RowBox[{"t", "[", "x", "]"}]}], "-", "A2"}], ")"}], " ", 
       RowBox[{"t", "[", "x", "]"}]}], "+", "A1"}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"erfH", "[", 
     RowBox[{"a_", ",", "b___"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"erfP", "[", 
       RowBox[{"a", ",", "b"}], "]"}], " ", 
      RowBox[{"t", "[", 
       RowBox[{"a", ",", "b"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "1"}], " ", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "/", 
         RowBox[{"b", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"erfA", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"erfH", "[", "x", "]"}], ",", 
         RowBox[{"x", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"erfH", "[", 
           RowBox[{"-", "x"}], "]"}]}], ",", 
         RowBox[{"x", "<", "0"}]}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"error", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"erfA", "[", "x", "]"}], "-", 
      RowBox[{"Erf", "[", "x", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.567954387984118*^9, 3.567954486196499*^9}, {
   3.567954541964328*^9, 3.567954551827251*^9}, {3.567954585259798*^9, 
   3.567954593129197*^9}, {3.5679547142804193`*^9, 3.567954744500011*^9}, {
   3.5679548048673487`*^9, 3.567954824045288*^9}, {3.567954910063135*^9, 
   3.5679549851871233`*^9}, 3.567955022402462*^9, {3.567955263579754*^9, 
   3.567955306469591*^9}, {3.5679608192926197`*^9, 3.567960888799561*^9}, {
   3.56914588259057*^9, 3.5691459986501904`*^9}, {3.5691460731425123`*^9, 
   3.569146098641284*^9}, {3.569174304755027*^9, 3.569174305692025*^9}, 
   3.569330203766574*^9, {3.569330456121298*^9, 3.569330479254656*^9}, {
   3.5693305099097767`*^9, 3.569330537648653*^9}, {3.569330903254122*^9, 
   3.569330903660243*^9}, {3.5693310597013083`*^9, 3.569331080543128*^9}, {
   3.5693312419746933`*^9, 3.569331246005768*^9}, {3.5696653017115097`*^9, 
   3.569665320749776*^9}, 3.5696653648086863`*^9, {3.569666142887783*^9, 
   3.569666160834526*^9}, {3.569666904854218*^9, 3.56966694716637*^9}, {
   3.570176326905896*^9, 3.570176327365631*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Numerator", "[", 
     RowBox[{"Together", "[", 
      RowBox[{"erfP", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}], "]"}], ",", "b", ",", 
    "Simplify"}], "]"}], "/", " ", 
  RowBox[{"Denominator", "[", 
   RowBox[{"Together", "[", 
    RowBox[{"erfP", "[", 
     RowBox[{"a", "/", "b"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.569331288851713*^9, 3.569331294705748*^9}, {
  3.569331336194291*^9, 3.569331336832597*^9}, {3.569331415088374*^9, 
  3.569331424254219*^9}, {3.569331686353283*^9, 3.569331700238411*^9}, {
  3.569331782120624*^9, 3.569331827123159*^9}, {3.569331886689311*^9, 
  3.569331892831421*^9}, {3.569935082308016*^9, 3.569935083489635*^9}},
 NumberMarks->False],

Cell["\<\
((A1 - A2 + A3 - A4 + A5) b^4 + a (4 A1 - 3 A2 + 2 A3 - A4) b^3 P + a^2 (6 A1 \
- 3 A2 + A3) b^2 P^2 + a^3 (4 A1 - A2) b P^3 + a^4 A1 P^4)/
 (b + a P)^4\
\>", "Input",
 CellChangeTimes->{{3.5701763274209757`*^9, 3.570176337230669*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Erf", "[", "x", "]"}], ",", 
        RowBox[{"erfRA", "[", 
         RowBox[{"x", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Erf", "[", "x", "]"}], "-", 
       RowBox[{"erfRA", "[", 
        RowBox[{"x", ",", "1"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569605847052644*^9, 3.569605907836451*^9}, {
  3.569605939787944*^9, 3.5696059450663757`*^9}, {3.569606036859088*^9, 
  3.569606052264347*^9}, {3.569606277627879*^9, 3.569606278954959*^9}, {
  3.569606443266597*^9, 3.569606456974106*^9}, {3.5696065142790127`*^9, 
  3.5696065467783737`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.569606158613736*^9, 3.569606161220974*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Floor", "[", 
          RowBox[{"rErf", "[", 
           RowBox[{
           "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", 
            "dMin", ",", 
            RowBox[{"2", "^", "dMax"}], ",", "erfHC"}], "]"}], "]"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"TraditionalForm", "/@", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"dMin", ",", " ", 
             RowBox[{"2", "^", "dMax"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"sMax", "-", "sMin", "+", "1"}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"sMin", ",", 
                RowBox[{
                 RowBox[{"2", "^", "dMax"}], "-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sMax", ",", 
                RowBox[{
                 RowBox[{"2", "^", "dMax"}], "-", "1"}]}], "}"}]}], "}"}], 
            "]"}], ",", " ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"sMin", ",", "dMin"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sMax", ",", "dMin"}], "}"}]}], "}"}], "]"}]}], 
          "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"rErf", "[", 
            RowBox[{
            "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", 
             "dMin", ",", 
             RowBox[{"2", "^", "dMax"}], ",", "erfHC"}], "]"}], "]"}], "-", 
          RowBox[{"Floor", "[", 
           RowBox[{"nErf", "[", 
            RowBox[{
            "x", ",", " ", "g", ",", "c", ",", "sMin", ",", "sMax", ",", 
             "dMin", ",", 
             RowBox[{"2", "^", "dMax"}], ",", "Erf"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Red", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"TraditionalForm", "/@", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "sMax"}], "}"}], ",", "Automatic"}], "}"}]}],
         ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"sMax", "-", "sMin", "+", "1"}], ")"}]}]}]}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"dMin", ",", "0", ",", "255", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMax", ",", "8"}], "}"}], ",", "1", ",", "64", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sMax", "+", "sMin"}], ")"}], "/", "2"}]}], "}"}], ",", 
     "sMin", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "1"}], "}"}], ",", "1", ",", "10", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5691470095018253`*^9, 3.5691471003714733`*^9}, {
   3.569147279402801*^9, 3.569147342540053*^9}, {3.569147384538507*^9, 
   3.569147527907358*^9}, {3.569148134792432*^9, 3.569148151791751*^9}, {
   3.569157125468733*^9, 3.569157198407667*^9}, {3.5691575629067783`*^9, 
   3.569157563436335*^9}, {3.569157620491919*^9, 3.5691576329634123`*^9}, {
   3.569163285844842*^9, 3.5691632862886257`*^9}, {3.569163599627386*^9, 
   3.569163630542634*^9}, {3.56916434917693*^9, 3.569164359775202*^9}, {
   3.569177791235414*^9, 3.569177793528985*^9}, {3.5691779526266813`*^9, 
   3.569177954095496*^9}, {3.569178004372439*^9, 3.569178099175508*^9}, {
   3.569180601152913*^9, 3.5691806014335747`*^9}, {3.569180785872301*^9, 
   3.569180804075626*^9}, {3.5691810179593973`*^9, 3.569181075616506*^9}, 
   3.569181116882955*^9, {3.5691812647692413`*^9, 3.569181265403607*^9}, {
   3.5692243919171867`*^9, 3.569224411629545*^9}, {3.569225063945229*^9, 
   3.569225073373672*^9}, {3.5692254619042387`*^9, 3.569225472129133*^9}, {
   3.569225509167453*^9, 3.5692255418166027`*^9}, {3.569226421344121*^9, 
   3.569226423399824*^9}, {3.569232518717724*^9, 3.569232523442524*^9}, {
   3.569605727408783*^9, 3.5696057377892733`*^9}, {3.5696068792028093`*^9, 
   3.5696068797048893`*^9}, {3.569607637793084*^9, 3.5696076402322607`*^9}, {
   3.5696078060834084`*^9, 3.569607875868195*^9}, {3.569607924452837*^9, 
   3.5696079799124937`*^9}, {3.569608111895574*^9, 3.569608139092156*^9}, {
   3.5696083792410803`*^9, 3.569608419869338*^9}, {3.569608554509397*^9, 
   3.569608572530209*^9}, {3.569659360186203*^9, 3.569659366428006*^9}, {
   3.5696595693087*^9, 3.569659573669738*^9}, {3.5696597806883307`*^9, 
   3.569659867758747*^9}, {3.569659960691774*^9, 3.569659961082645*^9}, {
   3.569660031276078*^9, 3.569660105491976*^9}, {3.56966037680221*^9, 
   3.569660381257656*^9}, {3.569660610052566*^9, 3.5696606111166573`*^9}, {
   3.569660650399435*^9, 3.569660663878697*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nErf", "[", 
   RowBox[{
   "x_", ",", " ", "g_", ",", "c_", ",", "xMin_", ",", "xMax_", ",", "yMin_", 
    ",", "yMax_"}], "]"}], ":=", 
  RowBox[{"yMin", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "yMax"}], "+", "yMin"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"erfHC", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "c"}], "+", "x"}], ")"}]}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], "+", 
        RowBox[{"erfHC", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"c", "-", "xMin"}], ")"}]}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], ")"}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"erfHC", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"c", "-", "xMax"}], ")"}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}], "+", 
      RowBox[{"erfHC", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "c"}], "+", "xMin"}], ")"}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"xMax", "-", "xMin"}], ")"}]}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5693336739412613`*^9, 3.569333701665388*^9}, {
  3.57017633837132*^9, 3.570176338632201*^9}}],

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{
   RowBox[{"-", "1"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "/", "b"}], ")"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.56932969756666*^9, 3.56932969932767*^9}, {
   3.5693297618103037`*^9, 3.5693297738077497`*^9}, 3.570176338728063*^9}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"scaleCast", "[", 
   RowBox[{
   "sMin", ",", " ", "dMin", ",", " ", "dMax", ",", "sMin", ",", "sMax", ",", 
    "c", ",", "g"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.56916512744835*^9, 3.569165147867179*^9}}],

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"2", " ", "g", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sMin", "-", "c", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sMax", " ", "+", "sMin"}], ")"}], "/", "2"}]}], ")"}], "/", 
     
     RowBox[{"(", 
      RowBox[{"sMax", " ", "-", " ", "sMin"}], ")"}]}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"g", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", 
      RowBox[{"c", "/", 
       RowBox[{"(", 
        RowBox[{"sMax", "-", "sMin"}], ")"}]}]}]}], ")"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.5691656664111433`*^9, 3.569165726819384*^9}, {
  3.569165780796686*^9, 3.569165782348167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaleCast", "[", 
   RowBox[{
   "x_", ",", "dMin_", ",", "dMax_", ",", "sMin_", ",", "sMax_", ",", "c_", 
    ",", "g_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dMax", " ", "-", " ", "dMin"}], ")"}], "/", "2"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"2", " ", "g", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "c", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sMax", " ", "+", "sMin"}], ")"}], "/", "2"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"sMax", " ", "-", " ", "sMin"}], ")"}]}]}], "]"}], "/", 
       RowBox[{"Erf", "[", 
        RowBox[{"g", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"c", "/", 
             RowBox[{"(", 
              RowBox[{"sMax", "-", "sMin"}], ")"}]}]}]}], ")"}]}], "]"}]}], 
      "+", "1"}], ")"}]}], "+", "dMin"}]}]], "Input",
 CellChangeTimes->{{3.5691467760136757`*^9, 3.569146912710949*^9}, {
   3.56914834361172*^9, 3.569148348176406*^9}, {3.569148402370335*^9, 
   3.5691484029378967`*^9}, {3.5691521204135103`*^9, 3.569152170074836*^9}, {
   3.569157003558002*^9, 3.569157049939374*^9}, {3.569157174995224*^9, 
   3.569157178613009*^9}, {3.569158159017837*^9, 3.569158159568138*^9}, {
   3.56915841037132*^9, 3.569158410866954*^9}, {3.569159093755887*^9, 
   3.569159113964383*^9}, {3.569163862850696*^9, 3.569163902439473*^9}, {
   3.5691651647810583`*^9, 3.569165169495236*^9}, {3.569165326232638*^9, 
   3.569165330933551*^9}, {3.569165419473144*^9, 3.569165435507145*^9}, 
   3.569165987701473*^9, 3.569166037182056*^9, {3.569166070948927*^9, 
   3.569166072147819*^9}, {3.569170634401342*^9, 3.5691706496506987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaleCast", "[", 
   RowBox[{
   "x_", ",", "dMin_", ",", "dMax_", ",", "sMin_", ",", "sMax_", ",", "c_", 
    ",", "g_"}], "]"}], ":=", " ", 
  RowBox[{"Floor", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dMax", " ", "-", " ", "dMin"}], ")"}], "/", "2"}], ")"}], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"erfA", "[", 
         RowBox[{"2", " ", "g", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "c", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"sMax", " ", "+", "sMin"}], ")"}], "/", "2"}]}], ")"}],
            "/", 
           RowBox[{"(", 
            RowBox[{"sMax", " ", "-", " ", "sMin"}], ")"}]}]}], "]"}], "/", 
        RowBox[{"erfA", "[", "g", "]"}]}], "+", "1"}], ")"}]}], "+", "dMin"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5691467760136757`*^9, 3.569146912710949*^9}, {
   3.56914834361172*^9, 3.569148348176406*^9}, {3.569148402370335*^9, 
   3.5691484029378967`*^9}, {3.5691521204135103`*^9, 3.569152170074836*^9}, {
   3.569157003558002*^9, 3.569157049939374*^9}, {3.569157174995224*^9, 
   3.569157178613009*^9}, {3.569158159017837*^9, 3.569158159568138*^9}, {
   3.56915841037132*^9, 3.569158410866954*^9}, {3.569159093755887*^9, 
   3.569159113964383*^9}, 3.569162709882473*^9, {3.56917072528201*^9, 
   3.5691707268460217`*^9}, 3.569170836449738*^9, {3.56917771229076*^9, 
   3.569177716506463*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tx", "[", "x_", "]"}], ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"pp", " ", "x"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Together", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"tx", "[", 
         RowBox[{"2", " ", "g", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "c", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"sMax", " ", "+", "sMin"}], ")"}], "/", "2"}]}], ")"}],
            "/", 
           RowBox[{"(", 
            RowBox[{"sMax", "  ", "-", "sMin"}], ")"}]}]}], "]"}], "]"}], 
       "]"}], "]"}], ",", "g"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.569173167614607*^9, 3.569173202970783*^9}, {
   3.569173243233974*^9, 3.569173245481236*^9}, {3.5691736946473207`*^9, 
   3.569173695195286*^9}, {3.569173863571061*^9, 3.5691738640431004`*^9}, {
   3.569174064754038*^9, 3.56917407107926*^9}, 3.569174152036683*^9, {
   3.5691742292490797`*^9, 3.569174249734844*^9}, {3.569174321968515*^9, 
   3.5691743247119102`*^9}, {3.569176834855462*^9, 3.5691768373111963`*^9}, {
   3.569176916513513*^9, 3.5691769466483192`*^9}, 3.5691769915987177`*^9, {
   3.5691770378565283`*^9, 3.56917706345791*^9}, {3.569177212885191*^9, 
   3.569177233489612*^9}}],

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  FractionBox["1.`", 
   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
    FractionBox[
     RowBox[{"0.3275911`", " ", "g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2.`", " ", "c"}], "+", "sMax", "+", "sMin", "-", 
        RowBox[{"2.`", " ", "x"}]}], ")"}]}], 
     RowBox[{"sMax", "-", 
      RowBox[{"1.`", " ", "sMin"}]}]]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scaleCast", "[", 
       RowBox[{
       "x", ",", " ", "dMin", ",", " ", "dMax", ",", "sMin", ",", "sMax", ",",
         "c", ",", "g"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"TraditionalForm", "/@", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sMin", ",", "sMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dMin", ",", " ", "dMax"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"sMax", "-", "sMin", "+", "1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMax"}], "}"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMin"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMin"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"dMin", ",", "0", ",", "255", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sMax", ",", "255"}], "}"}], ",", "1", ",", "255", ",", "1", 
     ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "sMin", ",", "sMax", ",", "1", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "1"}], "}"}], ",", "0", ",", "4", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5691470095018253`*^9, 3.5691471003714733`*^9}, {
   3.569147279402801*^9, 3.569147342540053*^9}, {3.569147384538507*^9, 
   3.569147527907358*^9}, {3.569148134792432*^9, 3.569148151791751*^9}, {
   3.569157125468733*^9, 3.569157198407667*^9}, {3.5691575629067783`*^9, 
   3.569157563436335*^9}, {3.569157620491919*^9, 3.5691576329634123`*^9}, {
   3.569163285844842*^9, 3.5691632862886257`*^9}, {3.569163599627386*^9, 
   3.569163630542634*^9}, {3.56916434917693*^9, 3.569164359775202*^9}, {
   3.569177791235414*^9, 3.569177793528985*^9}, {3.5691779526266813`*^9, 
   3.569177954095496*^9}, {3.569178004372439*^9, 3.569178099175508*^9}, {
   3.569180601152913*^9, 3.5691806014335747`*^9}, {3.569180785872301*^9, 
   3.569180804075626*^9}, {3.5691810179593973`*^9, 3.569181075616506*^9}, 
   3.569181116882955*^9, {3.5691812647692413`*^9, 3.569181265403607*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scaleCast", "[", 
       RowBox[{
       "x", ",", " ", "dMin", ",", " ", "dMax", ",", "sMin", ",", "sMax", ",",
         "c", ",", "g"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "sMin", ",", "sMax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"TraditionalForm", "/@", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{".02", ",", ".02"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMax"}], "}"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sMin", ",", "dMin"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sMax", ",", "dMin"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"dMin", ",", "0", ",", "255", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"dMax", ",", "1", ",", "255", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMin", ",", "0", ",", "255", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sMax", ",", "1", ",", "255", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "sMin", ",", "sMax", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "1"}], "}"}], ",", "0", ",", "2", ",", 
     RowBox[{
      RowBox[{"ValueThumbSlider", "[", "##", "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.569157901364993*^9}],

Cell[BoxData[
 RowBox[{"Erf", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.569146181026312*^9, 3.569146182885111*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Erf", "[", "2", "]"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"erfA", "[", "x", "]"}], ",", 
     RowBox[{"Erf", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"TraditionalForm", "/@", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"\[CapitalPhi]", "[", "x", "]"}]}], "}"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5691453278716097`*^9, 3.5691453502576714`*^9}, {
  3.569145440545329*^9, 3.5691454658099413`*^9}, {3.569145501871805*^9, 
  3.569145505915186*^9}, {3.5691460126117887`*^9, 3.569146021411909*^9}, {
  3.5691461450874977`*^9, 3.569146145533082*^9}}],

Cell[BoxData[
 RowBox[{"1.0", "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a5", " ", 
                RowBox[{"t", "[", "x", "]"}]}], "+", "a4"}], ")"}], " ", 
             RowBox[{"t", "[", "x", "]"}]}], ")"}], "+", "a3"}], ")"}], " ", 
         RowBox[{"t", "[", "x", "]"}]}], "+", "a2"}], ")"}], " ", 
      RowBox[{"t", "[", "x", "]"}]}], "+", "a1"}], ")"}], " ", 
   RowBox[{"t", "[", "x", "]"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "1"}], " ", 
     RowBox[{"x", "^", "2"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.570176338882938*^9, 3.5701763393004093`*^9}}],

Cell["\<\
Expand[yp[x]]
   FullSimplify[%]\
\>", "Input",
 CellChangeTimes->{{3.567958419304178*^9, 3.567958440594934*^9}, {
  3.567958878767035*^9, 3.567958883234556*^9}, {3.567958949184235*^9, 
  3.567958954470297*^9}, {3.567959037562134*^9, 3.567959048020603*^9}, {
  3.567959151218368*^9, 3.567959176304921*^9}, {3.56796091155977*^9, 
  3.567960936243832*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "1.06141", " ", ")"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.", "+", 
      RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", 
    "5"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "1.45315", " ", ")"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.", "+", 
      RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", 
    "4"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", "1.42141", " ", ")"}]}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.", "+", 
      RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", 
    "3"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "0.284497", " ", ")"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.", "+", 
      RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", 
    "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "0.25483", " ", ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"1.", "+", 
     RowBox[{"0.327591", " ", "x"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.567961375425015*^9, 3.567961459925865*^9}, {
  3.567961566041752*^9, 3.5679615806304502`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "[", "x", "]"}], ",", 
     RowBox[{"p2", "[", "x", "]"}], ",", 
     RowBox[{"p3", "[", "x", "]"}], ",", 
     RowBox[{"p4", "[", "x", "]"}], ",", 
     RowBox[{"p5", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567961486519021*^9, 3.567961506110978*^9}, {
  3.5691450068859797`*^9, 3.569145010012992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"1.", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.06141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "5"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"1.", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.06141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "5"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.45315", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "4"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"1.", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.06141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "5"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.45315", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "4"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.42141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "3"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"1.", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.06141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "5"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.45315", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "4"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.42141", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "3"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.284497", " ", 
        RowBox[{"E", "^", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", "+", 
         RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "2"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1.", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.06141", " ", 
       RowBox[{"E", "^", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", 
        RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "5"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.45315", " ", 
       RowBox[{"E", "^", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", 
        RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "4"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.42141", " ", 
       RowBox[{"E", "^", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", 
        RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "3"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.284497", " ", 
       RowBox[{"E", "^", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", 
        RowBox[{"0.327591", " ", "x"}]}], ")"}], "^", "2"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.25483", " ", 
       RowBox[{"E", "^", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1.", "+", 
       RowBox[{"0.327591", " ", "x"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.567961100101438*^9, 3.567961133238268*^9}, {
  3.567961175682919*^9, 3.5679612150522127`*^9}, {3.567961248007948*^9, 
  3.567961261337686*^9}}],

Cell[BoxData[
 RowBox[{"erfI", "=", 
  RowBox[{"InverseFunction", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.", " ", "-", " ", "\n", "  ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.", " ", 
         RowBox[{"(", 
          RowBox[{"0.254829592", " ", "+", " ", "\n", "     ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1.", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.284496736"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.", " ", 
                   RowBox[{"(", 
                    RowBox[{"1.421413741", " ", "+", " ", "\n", "           ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.453152027"}], " ", "+", " ", 
                    RowBox[{"1.061405429", "/", 
                    RowBox[{"(", 
                    RowBox[{"1.", " ", "+", " ", 
                    RowBox[{"0.3275911", " ", "#"}]}], ")"}]}]}], ")"}]}], 
                    ")"}], "/", "\n", "            ", 
                    RowBox[{"(", 
                    RowBox[{"1.", " ", "+", " ", 
                    RowBox[{"0.3275911", " ", "#"}]}], ")"}]}]}], ")"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1.", " ", "+", " ", 
                   RowBox[{"0.3275911", " ", "#"}]}], ")"}]}]}], ")"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"1.", " ", "+", " ", 
              RowBox[{"0.3275911", " ", "#"}]}], ")"}]}]}], ")"}]}], ")"}], 
       "/", "\n", "   ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"#", "^", "2"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"1.", " ", "+", " ", 
           RowBox[{"0.3275911", " ", "#"}]}], ")"}]}], ")"}]}]}], ")"}], 
    "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.567958456851431*^9, 3.56795852904449*^9}, {
  3.570176339449174*^9, 3.570176340045803*^9}}],

Cell[BoxData[
 RowBox[{"InverseFunction", "[", "y", "]"}]], "Input",
 CellChangeTimes->{{3.56795816717459*^9, 3.5679582012674913`*^9}, {
  3.567958278568509*^9, 3.5679582855830193`*^9}}],

Cell[BoxData[
 RowBox[{"y", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.5679548302999773`*^9, 3.56795483323195*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"error", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567958665120288*^9, 3.5679586960555677`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567954749417623*^9, 3.567954778725648*^9}, 
   3.5679548380172853`*^9, {3.567955045917263*^9, 3.5679550540506268`*^9}, {
   3.567958706694249*^9, 3.567958708690009*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"#", "include"}], "<", "cmath", ">", 
  RowBox[{"double", " ", "erf", 
   RowBox[{"(", 
    RowBox[{"double", " ", "x"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"//", 
            RowBox[{"constants", " ", "double", " ", "a1"}]}], "=", 
           "0.254829592"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"double", " ", "a2"}], "=", 
           RowBox[{"-", "0.284496736"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"double", " ", "a3"}], "=", "1.421413741"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"double", " ", "a4"}], "=", 
           RowBox[{"-", "1.453152027"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"double", " ", "a5"}], "=", "1.061405429"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"double", " ", "p"}], "=", "0.3275911"}], ";"}], "//", 
         RowBox[{
         "Save", " ", "the", " ", "sign", " ", "of", " ", "x", " ", "int", 
          " ", "sign"}]}], "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"if", " ", 
         RowBox[{"(", 
          RowBox[{"x", "<", "0"}], ")"}], " ", "sign"}], "=", 
        RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"fabs", 
         RowBox[{"(", "x", ")"}]}]}], ";"}], "//", 
      RowBox[{
       RowBox[{"A", "&"}], "S", " ", "formula", " ", "7.1", ".26", " ", 
       "double", " ", "t"}]}], "=", 
     RowBox[{"1.0", "/", 
      RowBox[{"(", 
       RowBox[{"1.0", "+", 
        RowBox[{"p", " ", "x"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"double", " ", "y"}], "=", 
     RowBox[{"1.0", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a5", " ", "t"}], "+", "a4"}], ")"}], " ", "t"}], 
                ")"}], "+", "a3"}], ")"}], " ", "t"}], "+", "a2"}], ")"}], 
          " ", "t"}], "+", "a1"}], ")"}], " ", "t", " ", "exp", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x"}], " ", "x"}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"return", " ", "sign", " ", "y"}], ";"}], "}"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"void", " ", "testErf", 
  RowBox[{"(", ")"}]}], "\n", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"//", 
         RowBox[{
         "Select", " ", "a", " ", "few", " ", "input", " ", "values", " ", 
          "double", " ", 
          RowBox[{"x", "[", "]"}]}]}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "1"}], ",", "0.0", ",", "0.5", ",", "2.1"}], "}"}]}], 
       ";"}], "//", 
      RowBox[{"Output", " ", "computed", " ", "by", " ", "Mathematica"}]}], "//",
      "y"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Erf", "[", "x", "]"}], " ", "double", " ", 
      RowBox[{"y", "[", "]"}]}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.999977909503"}], ",", 
       RowBox[{"-", "0.842700792950"}], ",", "0.0", ",", "0.520499877813", 
       ",", "0.997020533344"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"int", " ", "numTests"}], "=", 
    RowBox[{"sizeof", 
     RowBox[{
      RowBox[{"(", "x", ")"}], "/", "sizeof"}], 
     RowBox[{"(", "double", ")"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"double", " ", "maxError"}], "=", "0.0"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"for", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"int", " ", "i"}], "=", "0"}], ";", 
      RowBox[{"i", "<", "numTests"}], ";", 
      RowBox[{"++", "i"}]}], ")"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"double", " ", "error"}], "=", 
       RowBox[{"fabs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", "[", "i", "]"}], "-", 
          RowBox[{"erf", 
           RowBox[{"(", 
            RowBox[{"x", "[", "i", "]"}], ")"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"if", " ", 
        RowBox[{"(", 
         RowBox[{"error", ">", "maxError"}], ")"}], " ", "maxError"}], "=", 
       "error"}], ";"}], "}"}], " ", 
    RowBox[{"std", "::", "cout"}], " ", 
    RowBox[{"<<", "\"\<Maximum error: \>\""}], " ", 
    RowBox[{"<<", "maxError"}], " ", 
    RowBox[{"<<", "\"\<\\n\>\""}]}], ";"}], "}"}]}], "Input",
 CellChangeTimes->{{3.567954324301688*^9, 3.5679543243032217`*^9}, {
  3.5701763401669407`*^9, 3.570176340715238*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1260, 756},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 315, 8, 46, "Input"],
Cell[CellGroupData[{
Cell[740, 25, 91, 1, 64, "Section"],
Cell[834, 28, 5080, 120, 250, "Input",
 InitializationCell->True],
Cell[5917, 150, 2018, 58, 80, "Input",
 InitializationCell->True],
Cell[7938, 210, 1906, 56, 80, "Input",
 InitializationCell->True],
Cell[9847, 268, 2039, 57, 80, "Input",
 InitializationCell->True],
Cell[11889, 327, 1705, 53, 80, "Input",
 InitializationCell->True],
Cell[13597, 382, 1910, 56, 80, "Input",
 InitializationCell->True],
Cell[15510, 440, 10163, 241, 556, "Input",
 InitializationCell->True],
Cell[25676, 683, 6438, 170, 411, "Input"],
Cell[CellGroupData[{
Cell[32139, 857, 552, 14, 46, "Input"],
Cell[32694, 873, 682, 22, 48, "Output"]
}, Open  ]],
Cell[33391, 898, 41086, 908, 1206, "Input",
 InitializationCell->True],
Cell[74480, 1808, 1024, 35, 75, "Input"],
Cell[75507, 1845, 1399, 43, 46, "Input"],
Cell[76909, 1890, 921, 29, 74, "Input"],
Cell[77833, 1921, 3200, 79, 172, "Input"],
Cell[81036, 2002, 1036, 31, 73, "Input"],
Cell[82075, 2035, 1449, 43, 79, "Input",
 InitializationCell->True],
Cell[83527, 2080, 380, 10, 28, "Input"],
Cell[83910, 2092, 1023, 25, 46, "Input",
 InitializationCell->True],
Cell[84936, 2119, 9650, 234, 335, "Input"],
Cell[94589, 2355, 124, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[94738, 2361, 700, 21, 28, "Input"],
Cell[95441, 2384, 1053, 28, 28, "Output"]
}, Open  ]],
Cell[96509, 2415, 1366, 40, 46, "Input"],
Cell[97878, 2457, 961, 26, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98876, 2488, 45, 0, 92, "Title"],
Cell[98924, 2490, 155, 3, 30, "Text"],
Cell[99082, 2495, 191, 3, 28, "Input"],
Cell[99276, 2500, 203, 5, 28, "Input"],
Cell[99482, 2507, 180, 2, 30, "Text"],
Cell[99665, 2511, 1044, 32, 28, "Input"],
Cell[100712, 2545, 1145, 37, 49, "Input"],
Cell[101860, 2584, 1094, 32, 28, "Input"],
Cell[102957, 2618, 616, 10, 50, "Text"],
Cell[103576, 2630, 995, 26, 46, "Input"],
Cell[104574, 2658, 264, 5, 30, "Text"],
Cell[104841, 2665, 204, 5, 28, "Input"],
Cell[105048, 2672, 363, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[105436, 2686, 3717, 108, 216, "Input"],
Cell[109156, 2796, 2066, 72, 120, "Output"],
Cell[111225, 2870, 2212, 77, 112, "Output"],
Cell[113440, 2949, 2284, 78, 104, "Output"],
Cell[115727, 3029, 2134, 73, 112, "Output"]
}, Open  ]],
Cell[117876, 3105, 118, 1, 30, "Text"],
Cell[117997, 3108, 174, 3, 28, "Input"],
Cell[118174, 3113, 169, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[118368, 3120, 1568, 39, 114, "Input"],
Cell[119939, 3161, 31383, 560, 620, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151359, 3726, 29, 0, 64, "Section"],
Cell[151391, 3728, 348, 11, 54, "Input"],
Cell[151742, 3741, 321, 9, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152100, 3755, 219, 2, 51, "Subtitle"],
Cell[152322, 3759, 131, 1, 30, "Text"],
Cell[152456, 3762, 918, 21, 72, "Input"],
Cell[153377, 3785, 132, 1, 30, "Text"],
Cell[153512, 3788, 1484, 38, 63, "Input"],
Cell[154999, 3828, 268, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[155292, 3838, 1957, 54, 80, "Input"],
Cell[157252, 3894, 24319, 429, 443, "Output"]
}, Open  ]],
Cell[181586, 4326, 132, 2, 30, "Text"],
Cell[181721, 4330, 276, 4, 28, "Input"],
Cell[182000, 4336, 100, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[182125, 4341, 157, 3, 28, "Input"],
Cell[182285, 4346, 76, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182398, 4352, 643, 14, 28, "Input"],
Cell[183044, 4368, 1999, 60, 73, "Output"]
}, Open  ]],
Cell[185058, 4431, 241, 4, 30, "Text"],
Cell[185302, 4437, 443, 12, 63, "Input",
 InitializationCell->True],
Cell[185748, 4451, 3378, 85, 97, "Input",
 InitializationCell->True],
Cell[189129, 4538, 285, 7, 46, "Input"],
Cell[189417, 4547, 2449, 66, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191903, 4618, 133, 2, 51, "Subtitle"],
Cell[192039, 4622, 481, 8, 30, "Text"],
Cell[192523, 4632, 694, 19, 46, "Input"],
Cell[193220, 4653, 1267, 30, 46, "Input"],
Cell[194490, 4685, 123, 1, 30, "Text"],
Cell[194616, 4688, 550, 13, 46, "Input"],
Cell[195169, 4703, 180, 4, 30, "Text"],
Cell[195352, 4709, 1071, 31, 42, "Input"],
Cell[196426, 4742, 768, 17, 46, "Input"],
Cell[CellGroupData[{
Cell[197219, 4763, 3113, 77, 114, "Input"],
Cell[200335, 4842, 25358, 445, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225730, 5292, 95, 1, 44, "Subsection"],
Cell[225828, 5295, 529, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[226382, 5309, 386, 10, 28, "Input"],
Cell[226771, 5321, 148, 4, 48, "Output"]
}, Open  ]],
Cell[226934, 5328, 280, 7, 28, "Input"],
Cell[227217, 5337, 1551, 41, 97, "Input"],
Cell[228771, 5380, 110, 1, 30, "Text"],
Cell[228884, 5383, 796, 23, 42, "Input"],
Cell[CellGroupData[{
Cell[229705, 5410, 397, 11, 28, "Input"],
Cell[230105, 5423, 1923, 59, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232065, 5487, 112, 1, 35, "Subsubsection"],
Cell[232180, 5490, 233, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[232438, 5497, 493, 11, 28, "Input"],
Cell[232934, 5510, 517, 17, 53, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233500, 5533, 217, 3, 35, "Subsubsection"],
Cell[233720, 5538, 111, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[233856, 5543, 227, 5, 28, "Input"],
Cell[234086, 5550, 799, 26, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234922, 5581, 93, 1, 28, "Input"],
Cell[235018, 5584, 96, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235151, 5590, 241, 5, 28, "Input"],
Cell[235395, 5597, 1718, 60, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237150, 5662, 10886, 287, 369, "Input"],
Cell[248039, 5951, 53615, 1007, 655, "Output"]
}, Open  ]],
Cell[301669, 6961, 380, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[302074, 6971, 256, 6, 28, "Input"],
Cell[302333, 6979, 138, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302508, 6986, 1887, 50, 63, "Input"],
Cell[304398, 7038, 267, 4, 28, "Output"],
Cell[304668, 7044, 268, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304973, 7053, 404, 11, 28, "Input"],
Cell[305380, 7066, 917, 29, 69, "Output"]
}, Open  ]],
Cell[306312, 7098, 70, 1, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306431, 7105, 119, 1, 44, "Subsection"],
Cell[306553, 7108, 332, 6, 30, "Text"],
Cell[306888, 7116, 307, 6, 30, "Text"],
Cell[307198, 7124, 171, 4, 28, "Input"],
Cell[307372, 7130, 2095, 46, 80, "Input"],
Cell[309470, 7178, 527, 16, 50, "Input"],
Cell[310000, 7196, 235, 5, 30, "Text"],
Cell[310238, 7203, 1182, 35, 50, "Input"],
Cell[311423, 7240, 4376, 116, 182, "Input"],
Cell[315802, 7358, 852, 22, 46, "Input"],
Cell[316657, 7382, 1557, 44, 79, "Input"],
Cell[CellGroupData[{
Cell[318239, 7430, 890, 17, 46, "Input"],
Cell[319132, 7449, 1142, 34, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320311, 7488, 68, 1, 28, "Input"],
Cell[320382, 7491, 425, 13, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320844, 7509, 11889, 271, 471, "Input"],
Cell[332736, 7782, 31483, 580, 694, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364256, 8367, 164, 2, 35, "Subsubsection"],
Cell[364423, 8371, 2161, 74, 109, "Output"],
Cell[366587, 8447, 2309, 79, 101, "Output"],
Cell[368899, 8528, 2381, 80, 93, "Output"],
Cell[371283, 8610, 2230, 75, 101, "Output"],
Cell[373516, 8687, 2491, 64, 148, "Input"],
Cell[376010, 8753, 7243, 184, 305, "Input"],
Cell[383256, 8939, 49770, 1127, 1676, "Input"],
Cell[433029, 10068, 3053, 80, 165, "Input"],
Cell[436085, 10150, 18256, 407, 488, "Input"],
Cell[CellGroupData[{
Cell[454366, 10561, 604, 16, 46, "Input"],
Cell[454973, 10579, 92993, 1835, 861, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548003, 12419, 66, 1, 28, "Input"],
Cell[548072, 12422, 92746, 1831, 683, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640855, 14258, 166, 3, 28, "Input"],
Cell[641024, 14263, 1572, 43, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642633, 14311, 1995, 54, 80, "Input"],
Cell[644631, 14367, 78555, 2613, 949, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723223, 16985, 7735, 188, 216, "Input"],
Cell[730961, 17175, 38001, 714, 692, "Output"],
Cell[768965, 17891, 102201, 2101, 147, "Output"]
}, Open  ]],
Cell[871181, 19995, 1256, 37, 80, "Input"],
Cell[CellGroupData[{
Cell[872462, 20036, 215, 4, 28, "Input"],
Cell[872680, 20042, 960, 30, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[873701, 20079, 107, 1, 44, "Subsection"],
Cell[873811, 20082, 548, 14, 46, "Input"],
Cell[874362, 20098, 863, 23, 28, "Input"],
Cell[CellGroupData[{
Cell[875250, 20125, 192, 3, 28, "Input"],
Cell[875445, 20130, 28449, 691, 795, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[903931, 20826, 1230, 32, 125, "Input"],
Cell[905164, 20860, 408, 7, 28, "Output"],
Cell[905575, 20869, 408, 7, 28, "Output"],
Cell[905986, 20878, 464, 8, 28, "Output"],
Cell[906453, 20888, 481, 9, 28, "Output"],
Cell[906937, 20899, 3168, 76, 65, "Output"],
Cell[910108, 20977, 744, 17, 28, "Output"],
Cell[910855, 20996, 5467, 158, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[916359, 21159, 370, 10, 28, "Input"],
Cell[916732, 21171, 113271, 2233, 3041, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030040, 23409, 2481, 58, 131, "Input"],
Cell[1032524, 23469, 163111, 3790, 607, "Output"]
}, Open  ]],
Cell[1195650, 27262, 2153, 50, 97, "Input"],
Cell[1197806, 27314, 51735, 1229, 135, "Input"],
Cell[1249544, 28545, 307, 4, 28, "Input"],
Cell[1249854, 28551, 2056, 49, 97, "Input"],
Cell[1251913, 28602, 67519, 1486, 135, "Input"],
Cell[1319435, 30090, 141, 2, 28, "Input"],
Cell[1319579, 30094, 2104, 49, 97, "Input"],
Cell[1321686, 30145, 49309, 1178, 135, "Input"],
Cell[1370998, 31325, 141, 2, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371188, 31333, 127, 1, 51, "Subtitle"],
Cell[1371318, 31336, 419, 8, 68, "Text"],
Cell[1371740, 31346, 1919, 50, 128, "Input"],
Cell[1373662, 31398, 122, 1, 30, "Text"],
Cell[1373787, 31401, 1699, 49, 101, "Input"],
Cell[1375489, 31452, 176, 4, 30, "Text"],
Cell[1375668, 31458, 2051, 53, 182, "Input"],
Cell[1377722, 31513, 71, 1, 28, "Input"],
Cell[1377796, 31516, 4476, 118, 182, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382309, 31639, 111, 1, 51, "Subtitle"],
Cell[1382423, 31642, 173, 4, 30, "Text"],
Cell[1382599, 31648, 527, 14, 63, "Input"],
Cell[1383129, 31664, 2894, 76, 233, "Input"],
Cell[1386026, 31742, 1404, 36, 63, "Input"],
Cell[1387433, 31780, 127, 1, 30, "Text"],
Cell[1387563, 31783, 7252, 193, 182, "Input"],
Cell[1394818, 31978, 3768, 72, 80, "Input"],
Cell[CellGroupData[{
Cell[1398611, 32054, 108, 1, 64, "Section"],
Cell[1398722, 32057, 569, 14, 28, "Input"],
Cell[1399294, 32073, 7110, 169, 216, "Input"],
Cell[1406407, 32244, 7043, 182, 165, "Input"],
Cell[1413453, 32428, 2878, 81, 114, "Input"],
Cell[1416334, 32511, 304, 6, 46, "Input"],
Cell[1416641, 32519, 979, 30, 28, "Input"],
Cell[1417623, 32551, 2078, 57, 97, "Input"],
Cell[1419704, 32610, 10885, 243, 403, "Input"],
Cell[1430592, 32855, 317, 7, 28, "Input"],
Cell[1430912, 32864, 291, 7, 28, "Input"],
Cell[1431206, 32873, 519, 12, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1431774, 32891, 109, 1, 51, "Subtitle"],
Cell[1431886, 32894, 3470, 88, 199, "Input"],
Cell[1435359, 32984, 1481, 37, 63, "Input"],
Cell[1436843, 33023, 5961, 154, 233, "Input"],
Cell[1442807, 33179, 3874, 73, 80, "Input"],
Cell[1446684, 33254, 20330, 453, 675, "Input"],
Cell[1467017, 33709, 30, 0, 28, "Input"],
Cell[1467050, 33711, 126, 2, 28, "Input"],
Cell[1467179, 33715, 493, 11, 63, "Input"],
Cell[1467675, 33728, 885, 23, 28, "Input"],
Cell[1468563, 33753, 101, 2, 28, "Input"],
Cell[1468667, 33757, 224, 5, 28, "Input"],
Cell[1468894, 33764, 263, 6, 28, "Input"],
Cell[1469160, 33772, 1274, 33, 46, "Input"],
Cell[1470437, 33807, 2646, 78, 80, "Input"],
Cell[CellGroupData[{
Cell[1473108, 33889, 103, 1, 64, "Section"],
Cell[1473214, 33892, 416, 11, 63, "Input"],
Cell[1473633, 33905, 3456, 88, 114, "Input"],
Cell[1477092, 33995, 12893, 269, 420, "Input"],
Cell[1489988, 34266, 284, 7, 28, "Input"],
Cell[1490275, 34275, 2755, 72, 199, "Input"],
Cell[1493033, 34349, 104, 1, 28, "Input"],
Cell[1493140, 34352, 106, 2, 28, "Input"],
Cell[1493249, 34356, 4253, 115, 148, "Input"],
Cell[1497505, 34473, 963, 27, 46, "Input"],
Cell[1498471, 34502, 295, 7, 28, "Input"],
Cell[1498769, 34511, 669, 18, 80, "Input"],
Cell[1499441, 34531, 1871, 42, 131, "Input"],
Cell[1501315, 34575, 38, 0, 28, "Input"],
Cell[1501356, 34577, 1838, 46, 97, "Input"],
Cell[1503197, 34625, 157, 3, 28, "Input"],
Cell[1503357, 34630, 1244, 36, 80, "Input"],
Cell[1504604, 34668, 555, 13, 28, "Input"],
Cell[1505162, 34683, 150, 3, 28, "Input"],
Cell[1505315, 34688, 710, 21, 28, "Input"],
Cell[1506028, 34711, 5329, 131, 165, "Input"],
Cell[1511360, 34844, 209, 4, 28, "Input"],
Cell[1511572, 34850, 297, 5, 46, "Input"],
Cell[1511872, 34857, 175, 3, 28, "Input"],
Cell[1512050, 34862, 91, 3, 39, "Input"],
Cell[1512144, 34867, 753, 20, 46, "Input"],
Cell[1512900, 34889, 1284, 33, 80, "Input"],
Cell[1514187, 34924, 133, 1, 46, "Input"],
Cell[1514323, 34927, 492, 15, 28, "Input"],
Cell[1514818, 34944, 192, 3, 63, "Input"],
Cell[1515013, 34949, 189, 2, 46, "Input"],
Cell[1515205, 34953, 548, 17, 28, "Input"],
Cell[1515756, 34972, 339, 7, 28, "Input"],
Cell[1516098, 34981, 212, 5, 28, "Input"],
Cell[1516313, 34988, 1180, 33, 46, "Input"],
Cell[1517496, 35023, 418, 11, 28, "Input"],
Cell[1517917, 35036, 331, 8, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1518297, 35050, 123, 1, 51, "Subtitle"],
Cell[1518423, 35053, 608, 18, 28, "Input"],
Cell[1519034, 35073, 453, 10, 28, "Input"],
Cell[1519490, 35085, 489, 8, 49, "Text"],
Cell[1519982, 35095, 871, 24, 28, "Input"],
Cell[1520856, 35121, 590, 16, 28, "Input"],
Cell[1521449, 35139, 1517, 41, 80, "Input"],
Cell[1522969, 35182, 96, 1, 28, "Input"],
Cell[1523068, 35185, 119, 2, 28, "Input"],
Cell[1523190, 35189, 98, 3, 49, "Input"],
Cell[1523291, 35194, 547, 16, 49, "Input"],
Cell[1523841, 35212, 253, 5, 28, "Input"],
Cell[1524097, 35219, 208, 4, 28, "Input"],
Cell[1524308, 35225, 554, 16, 71, "Input"],
Cell[1524865, 35243, 478, 14, 28, "Input"],
Cell[CellGroupData[{
Cell[1525368, 35261, 24, 0, 64, "Section"],
Cell[1525395, 35263, 582, 17, 28, "Input"],
Cell[1525980, 35282, 775, 22, 28, "Input"],
Cell[1526758, 35306, 1239, 36, 46, "Input"],
Cell[1528000, 35344, 2445, 61, 63, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1530482, 35410, 33, 0, 50, "Section"],
Cell[1530518, 35412, 3004, 100, 146, "Input"],
Cell[1533525, 35514, 118, 3, 28, "Input"],
Cell[1533646, 35519, 177, 6, 28, "Input"],
Cell[1533826, 35527, 300, 9, 28, "Input"],
Cell[1534129, 35538, 1451, 36, 131, "Input"],
Cell[1535583, 35576, 1596, 42, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1537216, 35623, 33, 0, 50, "Section"],
Cell[CellGroupData[{
Cell[1537274, 35627, 25, 0, 44, "Subsection"],
Cell[1537302, 35629, 323, 11, 55, "Input"],
Cell[1537628, 35642, 375, 13, 55, "Input"],
Cell[1538006, 35657, 431, 15, 55, "Input"],
Cell[1538440, 35674, 622, 21, 93, "Input"],
Cell[1539065, 35697, 159, 4, 28, "Input"],
Cell[1539227, 35703, 113, 3, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1539377, 35711, 25, 0, 44, "Subsection"],
Cell[1539405, 35713, 323, 11, 55, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1539777, 35730, 35, 0, 50, "Section"],
Cell[1539815, 35732, 326, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[1540166, 35747, 26, 0, 44, "Subsection"],
Cell[1540195, 35749, 193, 5, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1540425, 35759, 55, 1, 44, "Subsection"],
Cell[1540483, 35762, 275, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1540795, 35775, 53, 1, 44, "Subsection"],
Cell[1540851, 35778, 275, 8, 28, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1541175, 35792, 91, 1, 50, "Section"],
Cell[1541269, 35795, 208, 5, 28, "Input"],
Cell[1541480, 35802, 309, 8, 28, "Input"],
Cell[1541792, 35812, 116, 2, 28, "Input"],
Cell[1541911, 35816, 2318, 58, 233, "Input"],
Cell[1544232, 35876, 2973, 85, 63, "Input"],
Cell[1547208, 35963, 1029, 32, 46, "Input"],
Cell[1548240, 35997, 364, 10, 28, "Input"],
Cell[1548607, 36009, 96, 1, 28, "Input"],
Cell[1548706, 36012, 3404, 89, 148, "Input"],
Cell[1552113, 36103, 846, 19, 46, "Input"],
Cell[1552962, 36124, 245, 5, 44, "Input"],
Cell[1553210, 36131, 1011, 28, 28, "Input"],
Cell[1554224, 36161, 92, 1, 28, "Input"],
Cell[1554319, 36164, 7164, 167, 199, "Input"],
Cell[1561486, 36333, 1710, 54, 63, "Input"],
Cell[1563199, 36389, 313, 8, 28, "Input"],
Cell[1563515, 36399, 270, 6, 28, "Input"],
Cell[1563788, 36407, 764, 24, 46, "Input"],
Cell[1564555, 36433, 1887, 45, 46, "Input"],
Cell[1566445, 36480, 1518, 37, 46, "Input"],
Cell[1567966, 36519, 1447, 34, 63, "Input"],
Cell[1569416, 36555, 426, 12, 60, "Input"],
Cell[1569845, 36569, 3887, 94, 131, "Input"],
Cell[1573735, 36665, 2548, 69, 131, "Input"],
Cell[1576286, 36736, 122, 2, 28, "Input"],
Cell[1576411, 36740, 105, 3, 28, "Input"],
Cell[1576519, 36745, 866, 22, 28, "Input"],
Cell[1577388, 36769, 827, 25, 28, "Input"],
Cell[1578218, 36796, 364, 8, 44, "Input"],
Cell[1578585, 36806, 1377, 46, 97, "Input"],
Cell[1579965, 36854, 516, 14, 28, "Input"],
Cell[1580484, 36870, 5623, 186, 216, "Input"],
Cell[1586110, 37058, 2128, 54, 114, "Input"],
Cell[1588241, 37114, 186, 3, 28, "Input"],
Cell[1588430, 37119, 121, 2, 28, "Input"],
Cell[1588554, 37123, 261, 7, 28, "Input"],
Cell[1588818, 37132, 381, 9, 28, "Input"],
Cell[1589202, 37143, 5031, 144, 369, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

